diff --git a/node_modules/@libp2p/daemon-client/dist/index.min.js b/node_modules/@libp2p/daemon-client/dist/index.min.js
index 7aa56da..82ec293 100644
--- a/node_modules/@libp2p/daemon-client/dist/index.min.js
+++ b/node_modules/@libp2p/daemon-client/dist/index.min.js
@@ -1,7 +1,30 @@
 (function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.Libp2PDaemonClient = factory()}(typeof self !== 'undefined' ? self : this, function () {
-"use strict";var Libp2PDaemonClient=(()=>{var Zi=Object.create;var ce=Object.defineProperty;var qi=Object.getOwnPropertyDescriptor;var ji=Object.getOwnPropertyNames;var to=Object.getPrototypeOf,eo=Object.prototype.hasOwnProperty;var $=(r=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(r,{get:(t,e)=>(typeof require<"u"?require:t)[e]}):r)(function(r){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+r+'" is not supported')});var xt=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports),H=(r,t)=>{for(var e in t)ce(r,e,{get:t[e],enumerable:!0})},wn=(r,t,e,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of ji(t))!eo.call(r,n)&&n!==e&&ce(r,n,{get:()=>t[n],enumerable:!(i=qi(t,n))||i.enumerable});return r};var kt=(r,t,e)=>(e=r!=null?Zi(to(r)):{},wn(t||!r||!r.__esModule?ce(e,"default",{value:r,enumerable:!0}):e,r)),ro=r=>wn(ce({},"__esModule",{value:!0}),r);var Xn=xt((lu,Yn)=>{var $t=1e3,zt=$t*60,Ht=zt*60,Rt=Ht*24,Is=Rt*7,As=Rt*365.25;Yn.exports=function(r,t){t=t||{};var e=typeof r;if(e==="string"&&r.length>0)return Cs(r);if(e==="number"&&isFinite(r))return t.long?vs(r):Ts(r);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(r))};function Cs(r){if(r=String(r),!(r.length>100)){var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(r);if(t){var e=parseFloat(t[1]),i=(t[2]||"ms").toLowerCase();switch(i){case"years":case"year":case"yrs":case"yr":case"y":return e*As;case"weeks":case"week":case"w":return e*Is;case"days":case"day":case"d":return e*Rt;case"hours":case"hour":case"hrs":case"hr":case"h":return e*Ht;case"minutes":case"minute":case"mins":case"min":case"m":return e*zt;case"seconds":case"second":case"secs":case"sec":case"s":return e*$t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return e;default:return}}}}function Ts(r){var t=Math.abs(r);return t>=Rt?Math.round(r/Rt)+"d":t>=Ht?Math.round(r/Ht)+"h":t>=zt?Math.round(r/zt)+"m":t>=$t?Math.round(r/$t)+"s":r+"ms"}function vs(r){var t=Math.abs(r);return t>=Rt?Te(r,t,Rt,"day"):t>=Ht?Te(r,t,Ht,"hour"):t>=zt?Te(r,t,zt,"minute"):t>=$t?Te(r,t,$t,"second"):r+" ms"}function Te(r,t,e,i){var n=t>=e*1.5;return Math.round(r/e)+" "+i+(n?"s":"")}});var Br=xt((du,Jn)=>{function Ss(r){e.debug=e,e.default=e,e.coerce=a,e.disable=o,e.enable=n,e.enabled=s,e.humanize=Xn(),e.destroy=g,Object.keys(r).forEach(u=>{e[u]=r[u]}),e.names=[],e.skips=[],e.formatters={};function t(u){let l=0;for(let m=0;m<u.length;m++)l=(l<<5)-l+u.charCodeAt(m),l|=0;return e.colors[Math.abs(l)%e.colors.length]}e.selectColor=t;function e(u){let l,m=null,y,p;function w(...I){if(!w.enabled)return;let E=w,C=Number(new Date),X=C-(l||C);E.diff=X,E.prev=l,E.curr=C,l=C,I[0]=e.coerce(I[0]),typeof I[0]!="string"&&I.unshift("%O");let O=0;I[0]=I[0].replace(/%([a-zA-Z%])/g,(J,z)=>{if(J==="%%")return"%";O++;let Q=e.formatters[z];if(typeof Q=="function"){let Ot=I[O];J=Q.call(E,Ot),I.splice(O,1),O--}return J}),e.formatArgs.call(E,I),(E.log||e.log).apply(E,I)}return w.namespace=u,w.useColors=e.useColors(),w.color=e.selectColor(u),w.extend=i,w.destroy=e.destroy,Object.defineProperty(w,"enabled",{enumerable:!0,configurable:!1,get:()=>m!==null?m:(y!==e.namespaces&&(y=e.namespaces,p=e.enabled(u)),p),set:I=>{m=I}}),typeof e.init=="function"&&e.init(w),w}function i(u,l){let m=e(this.namespace+(typeof l>"u"?":":l)+u);return m.log=this.log,m}function n(u){e.save(u),e.namespaces=u,e.names=[],e.skips=[];let l,m=(typeof u=="string"?u:"").split(/[\s,]+/),y=m.length;for(l=0;l<y;l++)m[l]&&(u=m[l].replace(/\*/g,".*?"),u[0]==="-"?e.skips.push(new RegExp("^"+u.slice(1)+"$")):e.names.push(new RegExp("^"+u+"$")))}function o(){let u=[...e.names.map(c),...e.skips.map(c).map(l=>"-"+l)].join(",");return e.enable(""),u}function s(u){if(u[u.length-1]==="*")return!0;let l,m;for(l=0,m=e.skips.length;l<m;l++)if(e.skips[l].test(u))return!1;for(l=0,m=e.names.length;l<m;l++)if(e.names[l].test(u))return!0;return!1}function c(u){return u.toString().substring(2,u.toString().length-2).replace(/\.\*\?$/,"*")}function a(u){return u instanceof Error?u.stack||u.message:u}function g(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return e.enable(e.load()),e}Jn.exports=Ss});var Qn=xt((W,ve)=>{W.formatArgs=Ds;W.save=Ls;W.load=Ns;W.useColors=Rs;W.storage=_s();W.destroy=(()=>{let r=!1;return()=>{r||(r=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})();W.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function Rs(){if(typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs))return!0;if(typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let r;return typeof document<"u"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent&&(r=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(r[1],10)>=31||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function Ds(r){if(r[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+r[0]+(this.useColors?"%c ":" ")+"+"+ve.exports.humanize(this.diff),!this.useColors)return;let t="color: "+this.color;r.splice(1,0,t,"color: inherit");let e=0,i=0;r[0].replace(/%[a-zA-Z%]/g,n=>{n!=="%%"&&(e++,n==="%c"&&(i=e))}),r.splice(i,0,t)}W.log=console.debug||console.log||(()=>{});function Ls(r){try{r?W.storage.setItem("debug",r):W.storage.removeItem("debug")}catch{}}function Ns(){let r;try{r=W.storage.getItem("debug")}catch{}return!r&&typeof process<"u"&&"env"in process&&(r=process.env.DEBUG),r}function _s(){try{return localStorage}catch{}}ve.exports=Br()(W);var{formatters:Ps}=ve.exports;Ps.j=function(r){try{return JSON.stringify(r)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}});var qn=xt((fu,Zn)=>{"use strict";Zn.exports=(r,t)=>{t=t||process.argv;let e=r.startsWith("-")?"":r.length===1?"-":"--",i=t.indexOf(e+r),n=t.indexOf("--");return i!==-1&&(n===-1?!0:i<n)}});var ti=xt((hu,jn)=>{"use strict";var Os=$("os"),st=qn(),V=process.env,Kt;st("no-color")||st("no-colors")||st("color=false")?Kt=!1:(st("color")||st("colors")||st("color=true")||st("color=always"))&&(Kt=!0);"FORCE_COLOR"in V&&(Kt=V.FORCE_COLOR.length===0||parseInt(V.FORCE_COLOR,10)!==0);function ks(r){return r===0?!1:{level:r,hasBasic:!0,has256:r>=2,has16m:r>=3}}function Us(r){if(Kt===!1)return 0;if(st("color=16m")||st("color=full")||st("color=truecolor"))return 3;if(st("color=256"))return 2;if(r&&!r.isTTY&&Kt!==!0)return 0;let t=Kt?1:0;if(process.platform==="win32"){let e=Os.release().split(".");return Number(process.versions.node.split(".")[0])>=8&&Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in V)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI"].some(e=>e in V)||V.CI_NAME==="codeship"?1:t;if("TEAMCITY_VERSION"in V)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(V.TEAMCITY_VERSION)?1:0;if(V.COLORTERM==="truecolor")return 3;if("TERM_PROGRAM"in V){let e=parseInt((V.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(V.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(V.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(V.TERM)||"COLORTERM"in V?1:(V.TERM==="dumb",t)}function Mr(r){let t=Us(r);return ks(t)}jn.exports={supportsColor:Mr,stdout:Mr(process.stdout),stderr:Mr(process.stderr)}});var ri=xt((_,Re)=>{var Fs=$("tty"),Se=$("util");_.init=Hs;_.log=Gs;_.formatArgs=Ms;_.save=$s;_.load=zs;_.useColors=Bs;_.destroy=Se.deprecate(()=>{},"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");_.colors=[6,2,3,4,5,1];try{let r=ti();r&&(r.stderr||r).level>=2&&(_.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch{}_.inspectOpts=Object.keys(process.env).filter(r=>/^debug_/i.test(r)).reduce((r,t)=>{let e=t.substring(6).toLowerCase().replace(/_([a-z])/g,(n,o)=>o.toUpperCase()),i=process.env[t];return/^(yes|on|true|enabled)$/i.test(i)?i=!0:/^(no|off|false|disabled)$/i.test(i)?i=!1:i==="null"?i=null:i=Number(i),r[e]=i,r},{});function Bs(){return"colors"in _.inspectOpts?!!_.inspectOpts.colors:Fs.isatty(process.stderr.fd)}function Ms(r){let{namespace:t,useColors:e}=this;if(e){let i=this.color,n="\x1B[3"+(i<8?i:"8;5;"+i),o=`  ${n};1m${t} \x1B[0m`;r[0]=o+r[0].split(`
+"use strict";var Libp2PDaemonClient=(()=>{var fc=Object.create;var or=Object.defineProperty;var dc=Object.getOwnPropertyDescriptor;var hc=Object.getOwnPropertyNames;var pc=Object.getPrototypeOf,mc=Object.prototype.hasOwnProperty;var Z=(r=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(r,{get:(t,e)=>(typeof require<"u"?require:t)[e]}):r)(function(r){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+r+'" is not supported')});var lt=(r,t)=>{for(var e in t)or(r,e,{get:t[e],enumerable:!0})},ci=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of hc(t))!mc.call(r,o)&&o!==e&&or(r,o,{get:()=>t[o],enumerable:!(n=dc(t,o))||n.enumerable});return r};var pt=(r,t,e)=>(e=r!=null?fc(pc(r)):{},ci(t||!r||!r.__esModule?or(e,"default",{value:r,enumerable:!0}):e,r)),gc=r=>ci(or({},"__esModule",{value:!0}),r);var vl={};lt(vl,{OperationFailedError:()=>O,createClient:()=>El});var bn=Z("node:buffer");function ce(r){return new Uint8Array(r.buffer,r.byteOffset,r.byteLength)}function Rt(r=0){return ce(bn.Buffer.alloc(r))}function xt(r=0){return ce(bn.Buffer.allocUnsafe(r))}var yc=Math.pow(2,7),bc=Math.pow(2,14),wc=Math.pow(2,21),wn=Math.pow(2,28),xn=Math.pow(2,35),En=Math.pow(2,42),vn=Math.pow(2,49),N=128,ot=127;function it(r){if(r<yc)return 1;if(r<bc)return 2;if(r<wc)return 3;if(r<wn)return 4;if(r<xn)return 5;if(r<En)return 6;if(r<vn)return 7;if(Number.MAX_SAFE_INTEGER!=null&&r>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function In(r,t,e=0){switch(it(r)){case 8:t[e++]=r&255|N,r/=128;case 7:t[e++]=r&255|N,r/=128;case 6:t[e++]=r&255|N,r/=128;case 5:t[e++]=r&255|N,r/=128;case 4:t[e++]=r&255|N,r>>>=7;case 3:t[e++]=r&255|N,r>>>=7;case 2:t[e++]=r&255|N,r>>>=7;case 1:{t[e++]=r&255,r>>>=7;break}default:throw new Error("unreachable")}return t}function xc(r,t,e=0){switch(it(r)){case 8:t.set(e++,r&255|N),r/=128;case 7:t.set(e++,r&255|N),r/=128;case 6:t.set(e++,r&255|N),r/=128;case 5:t.set(e++,r&255|N),r/=128;case 4:t.set(e++,r&255|N),r>>>=7;case 3:t.set(e++,r&255|N),r>>>=7;case 2:t.set(e++,r&255|N),r>>>=7;case 1:{t.set(e++,r&255),r>>>=7;break}default:throw new Error("unreachable")}return t}function Sn(r,t){let e=r[t],n=0;if(n+=e&ot,e<N||(e=r[t+1],n+=(e&ot)<<7,e<N)||(e=r[t+2],n+=(e&ot)<<14,e<N)||(e=r[t+3],n+=(e&ot)<<21,e<N)||(e=r[t+4],n+=(e&ot)*wn,e<N)||(e=r[t+5],n+=(e&ot)*xn,e<N)||(e=r[t+6],n+=(e&ot)*En,e<N)||(e=r[t+7],n+=(e&ot)*vn,e<N))return n;throw new RangeError("Could not decode varint")}function Ec(r,t){let e=r.get(t),n=0;if(n+=e&ot,e<N||(e=r.get(t+1),n+=(e&ot)<<7,e<N)||(e=r.get(t+2),n+=(e&ot)<<14,e<N)||(e=r.get(t+3),n+=(e&ot)<<21,e<N)||(e=r.get(t+4),n+=(e&ot)*wn,e<N)||(e=r.get(t+5),n+=(e&ot)*xn,e<N)||(e=r.get(t+6),n+=(e&ot)*En,e<N)||(e=r.get(t+7),n+=(e&ot)*vn,e<N))return n;throw new RangeError("Could not decode varint")}function qt(r,t,e=0){return t==null&&(t=xt(it(r))),t instanceof Uint8Array?In(r,t,e):xc(r,t,e)}function Ut(r,t=0){return r instanceof Uint8Array?Sn(r,t):Ec(r,t)}var Tn=new Float32Array([-0]),Wt=new Uint8Array(Tn.buffer);function ai(r,t,e){Tn[0]=r,t[e]=Wt[0],t[e+1]=Wt[1],t[e+2]=Wt[2],t[e+3]=Wt[3]}function ui(r,t){return Wt[0]=r[t],Wt[1]=r[t+1],Wt[2]=r[t+2],Wt[3]=r[t+3],Tn[0]}var Ln=new Float64Array([-0]),st=new Uint8Array(Ln.buffer);function li(r,t,e){Ln[0]=r,t[e]=st[0],t[e+1]=st[1],t[e+2]=st[2],t[e+3]=st[3],t[e+4]=st[4],t[e+5]=st[5],t[e+6]=st[6],t[e+7]=st[7]}function fi(r,t){return st[0]=r[t],st[1]=r[t+1],st[2]=r[t+2],st[3]=r[t+3],st[4]=r[t+4],st[5]=r[t+5],st[6]=r[t+6],st[7]=r[t+7],Ln[0]}var vc=BigInt(Number.MAX_SAFE_INTEGER),Ic=BigInt(Number.MIN_SAFE_INTEGER),mt=class r{lo;hi;constructor(t,e){this.lo=t|0,this.hi=e|0}toNumber(t=!1){if(!t&&this.hi>>>31>0){let e=~this.lo+1>>>0,n=~this.hi>>>0;return e===0&&(n=n+1>>>0),-(e+n*4294967296)}return this.lo+this.hi*4294967296}toBigInt(t=!1){if(t)return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n);if(this.hi>>>31){let e=~this.lo+1>>>0,n=~this.hi>>>0;return e===0&&(n=n+1>>>0),-(BigInt(e)+(BigInt(n)<<32n))}return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n)}toString(t=!1){return this.toBigInt(t).toString()}zzEncode(){let t=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^t)>>>0,this.lo=(this.lo<<1^t)>>>0,this}zzDecode(){let t=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^t)>>>0,this.hi=(this.hi>>>1^t)>>>0,this}length(){let t=this.lo,e=(this.lo>>>28|this.hi<<4)>>>0,n=this.hi>>>24;return n===0?e===0?t<16384?t<128?1:2:t<2097152?3:4:e<16384?e<128?5:6:e<2097152?7:8:n<128?9:10}static fromBigInt(t){if(t===0n)return ae;if(t<vc&&t>Ic)return this.fromNumber(Number(t));let e=t<0n;e&&(t=-t);let n=t>>32n,o=t-(n<<32n);return e&&(n=~n|0n,o=~o|0n,++o>di&&(o=0n,++n>di&&(n=0n))),new r(Number(o),Number(n))}static fromNumber(t){if(t===0)return ae;let e=t<0;e&&(t=-t);let n=t>>>0,o=(t-n)/4294967296>>>0;return e&&(o=~o>>>0,n=~n>>>0,++n>4294967295&&(n=0,++o>4294967295&&(o=0))),new r(n,o)}static from(t){return typeof t=="number"?r.fromNumber(t):typeof t=="bigint"?r.fromBigInt(t):typeof t=="string"?r.fromBigInt(BigInt(t)):t.low!=null||t.high!=null?new r(t.low>>>0,t.high>>>0):ae}},ae=new mt(0,0);ae.toBigInt=function(){return 0n};ae.zzEncode=ae.zzDecode=function(){return this};ae.length=function(){return 1};var di=4294967296n;function hi(r){let t=0,e=0;for(let n=0;n<r.length;++n)e=r.charCodeAt(n),e<128?t+=1:e<2048?t+=2:(e&64512)===55296&&(r.charCodeAt(n+1)&64512)===56320?(++n,t+=4):t+=3;return t}function pi(r,t,e){if(e-t<1)return"";let o,i=[],s=0,c;for(;t<e;)c=r[t++],c<128?i[s++]=c:c>191&&c<224?i[s++]=(c&31)<<6|r[t++]&63:c>239&&c<365?(c=((c&7)<<18|(r[t++]&63)<<12|(r[t++]&63)<<6|r[t++]&63)-65536,i[s++]=55296+(c>>10),i[s++]=56320+(c&1023)):i[s++]=(c&15)<<12|(r[t++]&63)<<6|r[t++]&63,s>8191&&((o??(o=[])).push(String.fromCharCode.apply(String,i)),s=0);return o!=null?(s>0&&o.push(String.fromCharCode.apply(String,i.slice(0,s))),o.join("")):String.fromCharCode.apply(String,i.slice(0,s))}function Bn(r,t,e){let n=e,o,i;for(let s=0;s<r.length;++s)o=r.charCodeAt(s),o<128?t[e++]=o:o<2048?(t[e++]=o>>6|192,t[e++]=o&63|128):(o&64512)===55296&&((i=r.charCodeAt(s+1))&64512)===56320?(o=65536+((o&1023)<<10)+(i&1023),++s,t[e++]=o>>18|240,t[e++]=o>>12&63|128,t[e++]=o>>6&63|128,t[e++]=o&63|128):(t[e++]=o>>12|224,t[e++]=o>>6&63|128,t[e++]=o&63|128);return e-n}function Lt(r,t){return RangeError(`index out of range: ${r.pos} + ${t??1} > ${r.len}`)}function ir(r,t){return(r[t-4]|r[t-3]<<8|r[t-2]<<16|r[t-1]<<24)>>>0}var Cn=class{buf;pos;len;_slice=Uint8Array.prototype.subarray;constructor(t){this.buf=t,this.pos=0,this.len=t.length}uint32(){let t=4294967295;if(t=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(t=(t|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(t=(t|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(t=(t|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(t=(t|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return t;if((this.pos+=5)>this.len)throw this.pos=this.len,Lt(this,10);return t}int32(){return this.uint32()|0}sint32(){let t=this.uint32();return t>>>1^-(t&1)|0}bool(){return this.uint32()!==0}fixed32(){if(this.pos+4>this.len)throw Lt(this,4);return ir(this.buf,this.pos+=4)}sfixed32(){if(this.pos+4>this.len)throw Lt(this,4);return ir(this.buf,this.pos+=4)|0}float(){if(this.pos+4>this.len)throw Lt(this,4);let t=ui(this.buf,this.pos);return this.pos+=4,t}double(){if(this.pos+8>this.len)throw Lt(this,4);let t=fi(this.buf,this.pos);return this.pos+=8,t}bytes(){let t=this.uint32(),e=this.pos,n=this.pos+t;if(n>this.len)throw Lt(this,t);return this.pos+=t,e===n?new Uint8Array(0):this.buf.subarray(e,n)}string(){let t=this.bytes();return pi(t,0,t.length)}skip(t){if(typeof t=="number"){if(this.pos+t>this.len)throw Lt(this,t);this.pos+=t}else do if(this.pos>=this.len)throw Lt(this);while(this.buf[this.pos++]&128);return this}skipType(t){switch(t){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(t=this.uint32()&7)!==4;)this.skipType(t);break;case 5:this.skip(4);break;default:throw Error(`invalid wire type ${t} at offset ${this.pos}`)}return this}readLongVarint(){let t=new mt(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t;if(t.lo=(t.lo|(this.buf[this.pos]&127)<<28)>>>0,t.hi=(t.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return t;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw Lt(this);if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t}return t.lo=(t.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,t}if(this.len-this.pos>4){for(;e<5;++e)if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}else for(;e<5;++e){if(this.pos>=this.len)throw Lt(this);if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}throw Error("invalid varint encoding")}readFixed64(){if(this.pos+8>this.len)throw Lt(this,8);let t=ir(this.buf,this.pos+=4),e=ir(this.buf,this.pos+=4);return new mt(t,e)}int64(){return this.readLongVarint().toBigInt()}int64Number(){return this.readLongVarint().toNumber()}int64String(){return this.readLongVarint().toString()}uint64(){return this.readLongVarint().toBigInt(!0)}uint64Number(){let t=Sn(this.buf,this.pos);return this.pos+=it(t),t}uint64String(){return this.readLongVarint().toString(!0)}sint64(){return this.readLongVarint().zzDecode().toBigInt()}sint64Number(){return this.readLongVarint().zzDecode().toNumber()}sint64String(){return this.readLongVarint().zzDecode().toString()}fixed64(){return this.readFixed64().toBigInt()}fixed64Number(){return this.readFixed64().toNumber()}fixed64String(){return this.readFixed64().toString()}sfixed64(){return this.readFixed64().toBigInt()}sfixed64Number(){return this.readFixed64().toNumber()}sfixed64String(){return this.readFixed64().toString()}};function Pn(r){return new Cn(r instanceof Uint8Array?r:r.subarray())}function K(r,t,e){let n=Pn(r);return t.decode(n,void 0,e)}var Ri=Z("node:buffer");var Rn={};lt(Rn,{base10:()=>Cc});var Ul=new Uint8Array(0);function gi(r,t){if(r===t)return!0;if(r.byteLength!==t.byteLength)return!1;for(let e=0;e<r.byteLength;e++)if(r[e]!==t[e])return!1;return!0}function Et(r){if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")}function yi(r){return new TextEncoder().encode(r)}function bi(r){return new TextDecoder().decode(r)}function Sc(r,t){if(r.length>=255)throw new TypeError("Alphabet too long");for(var e=new Uint8Array(256),n=0;n<e.length;n++)e[n]=255;for(var o=0;o<r.length;o++){var i=r.charAt(o),s=i.charCodeAt(0);if(e[s]!==255)throw new TypeError(i+" is ambiguous");e[s]=o}var c=r.length,a=r.charAt(0),d=Math.log(c)/Math.log(256),l=Math.log(256)/Math.log(c);function u(h){if(h instanceof Uint8Array||(ArrayBuffer.isView(h)?h=new Uint8Array(h.buffer,h.byteOffset,h.byteLength):Array.isArray(h)&&(h=Uint8Array.from(h))),!(h instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(h.length===0)return"";for(var f=0,p=0,m=0,w=h.length;m!==w&&h[m]===0;)m++,f++;for(var S=(w-m)*l+1>>>0,C=new Uint8Array(S);m!==w;){for(var B=h[m],E=0,I=S-1;(B!==0||E<p)&&I!==-1;I--,E++)B+=256*C[I]>>>0,C[I]=B%c>>>0,B=B/c>>>0;if(B!==0)throw new Error("Non-zero carry");p=E,m++}for(var T=S-p;T!==S&&C[T]===0;)T++;for(var Q=a.repeat(f);T<S;++T)Q+=r.charAt(C[T]);return Q}function g(h){if(typeof h!="string")throw new TypeError("Expected String");if(h.length===0)return new Uint8Array;var f=0;if(h[f]!==" "){for(var p=0,m=0;h[f]===a;)p++,f++;for(var w=(h.length-f)*d+1>>>0,S=new Uint8Array(w);h[f];){var C=e[h.charCodeAt(f)];if(C===255)return;for(var B=0,E=w-1;(C!==0||B<m)&&E!==-1;E--,B++)C+=c*S[E]>>>0,S[E]=C%256>>>0,C=C/256>>>0;if(C!==0)throw new Error("Non-zero carry");m=B,f++}if(h[f]!==" "){for(var I=w-m;I!==w&&S[I]===0;)I++;for(var T=new Uint8Array(p+(w-I)),Q=p;I!==w;)T[Q++]=S[I++];return T}}}function y(h){var f=g(h);if(f)return f;throw new Error(`Non-${t} character`)}return{encode:u,decodeUnsafe:g,decode:y}}var Ac=Sc,Tc=Ac,xi=Tc;var Nn=class{name;prefix;baseEncode;constructor(t,e,n){this.name=t,this.prefix=e,this.baseEncode=n}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},kn=class{name;prefix;baseDecode;prefixCodePoint;constructor(t,e,n){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=n}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return Ei(this,t)}},Dn=class{decoders;constructor(t){this.decoders=t}or(t){return Ei(this,t)}decode(t){let e=t[0],n=this.decoders[e];if(n!=null)return n.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function Ei(r,t){return new Dn({...r.decoders??{[r.prefix]:r},...t.decoders??{[t.prefix]:t}})}var On=class{name;prefix;baseEncode;baseDecode;encoder;decoder;constructor(t,e,n,o){this.name=t,this.prefix=e,this.baseEncode=n,this.baseDecode=o,this.encoder=new Nn(t,e,n),this.decoder=new kn(t,e,o)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};function ve({name:r,prefix:t,encode:e,decode:n}){return new On(r,t,e,n)}function Yt({name:r,prefix:t,alphabet:e}){let{encode:n,decode:o}=xi(e,r);return ve({prefix:t,name:r,encode:n,decode:i=>Et(o(i))})}function Lc(r,t,e,n){let o={};for(let l=0;l<t.length;++l)o[t[l]]=l;let i=r.length;for(;r[i-1]==="=";)--i;let s=new Uint8Array(i*e/8|0),c=0,a=0,d=0;for(let l=0;l<i;++l){let u=o[r[l]];if(u===void 0)throw new SyntaxError(`Non-${n} character`);a=a<<e|u,c+=e,c>=8&&(c-=8,s[d++]=255&a>>c)}if(c>=e||255&a<<8-c)throw new SyntaxError("Unexpected end of data");return s}function Bc(r,t,e){let n=t[t.length-1]==="=",o=(1<<e)-1,i="",s=0,c=0;for(let a=0;a<r.length;++a)for(c=c<<8|r[a],s+=8;s>e;)s-=e,i+=t[o&c>>s];if(s!==0&&(i+=t[o&c<<e-s]),n)for(;i.length*e&7;)i+="=";return i}function z({name:r,prefix:t,bitsPerChar:e,alphabet:n}){return ve({prefix:t,name:r,encode(o){return Bc(o,n,e)},decode(o){return Lc(o,n,e,r)}})}var Cc=Yt({prefix:"9",name:"base10",alphabet:"0123456789"});var Un={};lt(Un,{base16:()=>Pc,base16upper:()=>Nc});var Pc=z({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),Nc=z({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var _n={};lt(_n,{base2:()=>kc});var kc=z({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var Mn={};lt(Mn,{base256emoji:()=>_c});var vi=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),Dc=vi.reduce((r,t,e)=>(r[e]=t,r),[]),Oc=vi.reduce((r,t,e)=>(r[t.codePointAt(0)]=e,r),[]);function Rc(r){return r.reduce((t,e)=>(t+=Dc[e],t),"")}function Uc(r){let t=[];for(let e of r){let n=Oc[e.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${e}`);t.push(n)}return new Uint8Array(t)}var _c=ve({prefix:"\u{1F680}",name:"base256emoji",encode:Rc,decode:Uc});var Kn={};lt(Kn,{base32:()=>Bt,base32hex:()=>Vc,base32hexpad:()=>Gc,base32hexpadupper:()=>zc,base32hexupper:()=>Fc,base32pad:()=>Kc,base32padupper:()=>$c,base32upper:()=>Mc,base32z:()=>Hc});var Bt=z({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),Mc=z({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),Kc=z({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),$c=z({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),Vc=z({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),Fc=z({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),Gc=z({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),zc=z({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),Hc=z({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var $n={};lt($n,{base36:()=>qc,base36upper:()=>Wc});var qc=Yt({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),Wc=Yt({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var Vn={};lt(Vn,{base58btc:()=>$,base58flickr:()=>Yc});var $=Yt({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),Yc=Yt({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var Gn={};lt(Gn,{base64:()=>Fn,base64pad:()=>Zc,base64url:()=>Xc,base64urlpad:()=>Jc});var Fn=z({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),Zc=z({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),Xc=z({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),Jc=z({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var zn={};lt(zn,{base8:()=>Qc});var Qc=z({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var Hn={};lt(Hn,{identity:()=>jc});var jc=ve({prefix:"\0",name:"identity",encode:r=>bi(r),decode:r=>yi(r)});var Ql=new TextEncoder,jl=new TextDecoder;var Wn={};lt(Wn,{identity:()=>_t});var ra=Ai,Ii=128,na=127,oa=~na,ia=Math.pow(2,31);function Ai(r,t,e){t=t||[],e=e||0;for(var n=e;r>=ia;)t[e++]=r&255|Ii,r/=128;for(;r&oa;)t[e++]=r&255|Ii,r>>>=7;return t[e]=r|0,Ai.bytes=e-n+1,t}var sa=qn,ca=128,Si=127;function qn(r,n){var e=0,n=n||0,o=0,i=n,s,c=r.length;do{if(i>=c)throw qn.bytes=0,new RangeError("Could not decode varint");s=r[i++],e+=o<28?(s&Si)<<o:(s&Si)*Math.pow(2,o),o+=7}while(s>=ca);return qn.bytes=i-n,e}var aa=Math.pow(2,7),ua=Math.pow(2,14),la=Math.pow(2,21),fa=Math.pow(2,28),da=Math.pow(2,35),ha=Math.pow(2,42),pa=Math.pow(2,49),ma=Math.pow(2,56),ga=Math.pow(2,63),ya=function(r){return r<aa?1:r<ua?2:r<la?3:r<fa?4:r<da?5:r<ha?6:r<pa?7:r<ma?8:r<ga?9:10},ba={encode:ra,decode:sa,encodingLength:ya},wa=ba,$e=wa;function Ve(r,t=0){return[$e.decode(r,t),$e.decode.bytes]}function Ie(r,t,e=0){return $e.encode(r,t,e),t}function Se(r){return $e.encodingLength(r)}function ue(r,t){let e=t.byteLength,n=Se(r),o=n+Se(e),i=new Uint8Array(o+e);return Ie(r,i,0),Ie(e,i,n),i.set(t,o),new Ae(r,e,t,i)}function ft(r){let t=Et(r),[e,n]=Ve(t),[o,i]=Ve(t.subarray(n)),s=t.subarray(n+i);if(s.byteLength!==o)throw new Error("Incorrect length");return new Ae(e,o,s,t)}function Ti(r,t){if(r===t)return!0;{let e=t;return r.code===e.code&&r.size===e.size&&e.bytes instanceof Uint8Array&&gi(r.bytes,e.bytes)}}var Ae=class{code;size;digest;bytes;constructor(t,e,n,o){this.code=t,this.size=e,this.digest=n,this.bytes=o}};var Li=0,xa="identity",Bi=Et;function Ea(r){return ue(Li,Bi(r))}var _t={code:Li,name:xa,encode:Bi,digest:Ea};var Qn={};lt(Qn,{sha256:()=>Jn,sha512:()=>va});var Xn=pt(Z("crypto"),1);function Zn({name:r,code:t,encode:e}){return new Yn(r,t,e)}var Yn=class{name;code;encode;constructor(t,e,n){this.name=t,this.code=e,this.encode=n}digest(t){if(t instanceof Uint8Array){let e=this.encode(t);return e instanceof Uint8Array?ue(this.code,e):e.then(n=>ue(this.code,n))}else throw Error("Unknown type, must be binary type")}};var Jn=Zn({name:"sha2-256",code:18,encode:r=>Et(Xn.default.createHash("sha256").update(r).digest())}),va=Zn({name:"sha2-512",code:19,encode:r=>Et(Xn.default.createHash("sha512").update(r).digest())});function Pi(r,t){let{bytes:e,version:n}=r;switch(n){case 0:return Sa(e,jn(r),t??$.encoder);default:return Aa(e,jn(r),t??Bt.encoder)}}var Ni=new WeakMap;function jn(r){let t=Ni.get(r);if(t==null){let e=new Map;return Ni.set(r,e),e}return t}var tt=class r{code;version;multihash;bytes;"/";constructor(t,e,n,o){this.code=e,this.version=t,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{let{code:t,multihash:e}=this;if(t!==Fe)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(e.code!==Ta)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return r.createV0(e)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{let{code:t,digest:e}=this.multihash,n=ue(t,e);return r.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(t){return r.equals(this,t)}static equals(t,e){let n=e;return n!=null&&t.code===n.code&&t.version===n.version&&Ti(t.multihash,n.multihash)}toString(t){return Pi(this,t)}toJSON(){return{"/":Pi(this)}}link(){return this}[Symbol.toStringTag]="CID";[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(t){if(t==null)return null;let e=t;if(e instanceof r)return e;if(e["/"]!=null&&e["/"]===e.bytes||e.asCID===e){let{version:n,code:o,multihash:i,bytes:s}=e;return new r(n,o,i,s??ki(n,o,i.bytes))}else if(e[La]===!0){let{version:n,multihash:o,code:i}=e,s=ft(o);return r.create(n,i,s)}else return null}static create(t,e,n){if(typeof e!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(t){case 0:{if(e!==Fe)throw new Error(`Version 0 CID must use dag-pb (code: ${Fe}) block encoding`);return new r(t,e,n,n.bytes)}case 1:{let o=ki(t,e,n.bytes);return new r(t,e,n,o)}default:throw new Error("Invalid version")}}static createV0(t){return r.create(0,Fe,t)}static createV1(t,e){return r.create(1,t,e)}static decode(t){let[e,n]=r.decodeFirst(t);if(n.length!==0)throw new Error("Incorrect length");return e}static decodeFirst(t){let e=r.inspectBytes(t),n=e.size-e.multihashSize,o=Et(t.subarray(n,n+e.multihashSize));if(o.byteLength!==e.multihashSize)throw new Error("Incorrect length");let i=o.subarray(e.multihashSize-e.digestSize),s=new Ae(e.multihashCode,e.digestSize,i,o);return[e.version===0?r.createV0(s):r.createV1(e.codec,s),t.subarray(e.size)]}static inspectBytes(t){let e=0,n=()=>{let[u,g]=Ve(t.subarray(e));return e+=g,u},o=n(),i=Fe;if(o===18?(o=0,e=0):i=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);let s=e,c=n(),a=n(),d=e+a,l=d-s;return{version:o,codec:i,multihashCode:c,digestSize:a,multihashSize:l,size:d}}static parse(t,e){let[n,o]=Ia(t,e),i=r.decode(o);if(i.version===0&&t[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return jn(i).set(n,t),i}};function Ia(r,t){switch(r[0]){case"Q":{let e=t??$;return[$.prefix,e.decode(`${$.prefix}${r}`)]}case $.prefix:{let e=t??$;return[$.prefix,e.decode(r)]}case Bt.prefix:{let e=t??Bt;return[Bt.prefix,e.decode(r)]}default:{if(t==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[r[0],t.decode(r)]}}}function Sa(r,t,e){let{prefix:n}=e;if(n!==$.prefix)throw Error(`Cannot string encode V0 in ${e.name} encoding`);let o=t.get(n);if(o==null){let i=e.encode(r).slice(1);return t.set(n,i),i}else return o}function Aa(r,t,e){let{prefix:n}=e,o=t.get(n);if(o==null){let i=e.encode(r);return t.set(n,i),i}else return o}var Fe=112,Ta=18;function ki(r,t,e){let n=Se(r),o=n+Se(t),i=new Uint8Array(o+e.byteLength);return Ie(r,i,0),Ie(t,i,n),i.set(e,o),i}var La=Symbol.for("@ipld/js-cid/CID");var Ge={...Hn,..._n,...zn,...Rn,...Un,...Kn,...$n,...Vn,...Gn,...Mn},vf={...Qn,...Wn};function Oi(r,t,e,n){return{name:r,prefix:t,encoder:{name:r,prefix:t,encode:e},decoder:{decode:n}}}var Di=Oi("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),to=Oi("ascii","a",r=>{let t="a";for(let e=0;e<r.length;e++)t+=String.fromCharCode(r[e]);return t},r=>{r=r.substring(1);let t=xt(r.length);for(let e=0;e<r.length;e++)t[e]=r.charCodeAt(e);return t}),Ba={utf8:Di,"utf-8":Di,hex:Ge.base16,latin1:to,ascii:to,binary:to,...Ge},cr=Ba;function Zt(r,t="utf8"){let e=cr[t];if(e==null)throw new Error(`Unsupported encoding "${t}"`);return t==="utf8"||t==="utf-8"?ce(Ri.Buffer.from(r,"utf-8")):e.decoder.decode(`${e.prefix}${r}`)}function eo(r){let t=r??8192,e=t>>>1,n,o=t;return function(s){if(s<1||s>e)return xt(s);o+s>t&&(n=xt(t),o=0);let c=n.subarray(o,o+=s);return o&7&&(o=(o|7)+1),c}}var le=class{fn;len;next;val;constructor(t,e,n){this.fn=t,this.len=e,this.next=void 0,this.val=n}};function ro(){}var oo=class{head;tail;len;next;constructor(t){this.head=t.head,this.tail=t.tail,this.len=t.len,this.next=t.states}},Ca=eo();function Pa(r){return globalThis.Buffer!=null?xt(r):Ca(r)}var He=class{len;head;tail;states;constructor(){this.len=0,this.head=new le(ro,0,0),this.tail=this.head,this.states=null}_push(t,e,n){return this.tail=this.tail.next=new le(t,e,n),this.len+=e,this}uint32(t){return this.len+=(this.tail=this.tail.next=new io((t=t>>>0)<128?1:t<16384?2:t<2097152?3:t<268435456?4:5,t)).len,this}int32(t){return t<0?this._push(ar,10,mt.fromNumber(t)):this.uint32(t)}sint32(t){return this.uint32((t<<1^t>>31)>>>0)}uint64(t){let e=mt.fromBigInt(t);return this._push(ar,e.length(),e)}uint64Number(t){return this._push(In,it(t),t)}uint64String(t){return this.uint64(BigInt(t))}int64(t){return this.uint64(t)}int64Number(t){return this.uint64Number(t)}int64String(t){return this.uint64String(t)}sint64(t){let e=mt.fromBigInt(t).zzEncode();return this._push(ar,e.length(),e)}sint64Number(t){let e=mt.fromNumber(t).zzEncode();return this._push(ar,e.length(),e)}sint64String(t){return this.sint64(BigInt(t))}bool(t){return this._push(no,1,t?1:0)}fixed32(t){return this._push(ze,4,t>>>0)}sfixed32(t){return this.fixed32(t)}fixed64(t){let e=mt.fromBigInt(t);return this._push(ze,4,e.lo)._push(ze,4,e.hi)}fixed64Number(t){let e=mt.fromNumber(t);return this._push(ze,4,e.lo)._push(ze,4,e.hi)}fixed64String(t){return this.fixed64(BigInt(t))}sfixed64(t){return this.fixed64(t)}sfixed64Number(t){return this.fixed64Number(t)}sfixed64String(t){return this.fixed64String(t)}float(t){return this._push(ai,4,t)}double(t){return this._push(li,8,t)}bytes(t){let e=t.length>>>0;return e===0?this._push(no,1,0):this.uint32(e)._push(ka,e,t)}string(t){let e=hi(t);return e!==0?this.uint32(e)._push(Bn,e,t):this._push(no,1,0)}fork(){return this.states=new oo(this),this.head=this.tail=new le(ro,0,0),this.len=0,this}reset(){return this.states!=null?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new le(ro,0,0),this.len=0),this}ldelim(){let t=this.head,e=this.tail,n=this.len;return this.reset().uint32(n),n!==0&&(this.tail.next=t.next,this.tail=e,this.len+=n),this}finish(){let t=this.head.next,e=Pa(this.len),n=0;for(;t!=null;)t.fn(t.val,e,n),n+=t.len,t=t.next;return e}};function no(r,t,e){t[e]=r&255}function Na(r,t,e){for(;r>127;)t[e++]=r&127|128,r>>>=7;t[e]=r}var io=class extends le{next;constructor(t,e){super(Na,t,e),this.next=void 0}};function ar(r,t,e){for(;r.hi!==0;)t[e++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)t[e++]=r.lo&127|128,r.lo=r.lo>>>7;t[e++]=r.lo}function ze(r,t,e){t[e]=r&255,t[e+1]=r>>>8&255,t[e+2]=r>>>16&255,t[e+3]=r>>>24}function ka(r,t,e){t.set(r,e)}globalThis.Buffer!=null&&(He.prototype.bytes=function(r){let t=r.length>>>0;return this.uint32(t),t>0&&this._push(Da,t,r),this},He.prototype.string=function(r){let t=globalThis.Buffer.byteLength(r);return this.uint32(t),t>0&&this._push(Oa,t,r),this});function Da(r,t,e){t.set(r,e)}function Oa(r,t,e){r.length<40?Bn(r,t,e):t.utf8Write!=null?t.utf8Write(r,e):t.set(Zt(r),e)}function so(){return new He}function V(r,t){let e=so();return t.encode(r,e,{lengthDelimited:!1}),e.finish()}var Te;(function(r){r[r.VARINT=0]="VARINT",r[r.BIT64=1]="BIT64",r[r.LENGTH_DELIMITED=2]="LENGTH_DELIMITED",r[r.START_GROUP=3]="START_GROUP",r[r.END_GROUP=4]="END_GROUP",r[r.BIT32=5]="BIT32"})(Te||(Te={}));function ur(r,t,e,n){return{name:r,type:t,encode:e,decode:n}}function Ct(r){function t(o){if(r[o.toString()]==null)throw new Error("Invalid enum value");return r[o]}let e=function(i,s){let c=t(i);s.int32(c)},n=function(i){let s=i.int32();return t(s)};return ur("enum",Te.VARINT,e,n)}function F(r,t){return ur("message",Te.LENGTH_DELIMITED,r,t)}var H;(function(r){let t;(function(o){o.IDENTIFY="IDENTIFY",o.CONNECT="CONNECT",o.STREAM_OPEN="STREAM_OPEN",o.STREAM_HANDLER="STREAM_HANDLER",o.DHT="DHT",o.LIST_PEERS="LIST_PEERS",o.CONNMANAGER="CONNMANAGER",o.DISCONNECT="DISCONNECT",o.PUBSUB="PUBSUB",o.PEERSTORE="PEERSTORE"})(t=r.Type||(r.Type={}));let e;(function(o){o[o.IDENTIFY=0]="IDENTIFY",o[o.CONNECT=1]="CONNECT",o[o.STREAM_OPEN=2]="STREAM_OPEN",o[o.STREAM_HANDLER=3]="STREAM_HANDLER",o[o.DHT=4]="DHT",o[o.LIST_PEERS=5]="LIST_PEERS",o[o.CONNMANAGER=6]="CONNMANAGER",o[o.DISCONNECT=7]="DISCONNECT",o[o.PUBSUB=8]="PUBSUB",o[o.PEERSTORE=9]="PEERSTORE"})(e||(e={})),function(o){o.codec=()=>Ct(e)}(t=r.Type||(r.Type={}));let n;r.codec=()=>(n==null&&(n=F((o,i,s={})=>{s.lengthDelimited!==!1&&i.fork(),o.type!=null&&(i.uint32(8),r.Type.codec().encode(o.type,i)),o.connect!=null&&(i.uint32(18),fr.codec().encode(o.connect,i)),o.streamOpen!=null&&(i.uint32(26),dr.codec().encode(o.streamOpen,i)),o.streamHandler!=null&&(i.uint32(34),hr.codec().encode(o.streamHandler,i)),o.dht!=null&&(i.uint32(42),vt.codec().encode(o.dht,i)),o.connManager!=null&&(i.uint32(50),mr.codec().encode(o.connManager,i)),o.disconnect!=null&&(i.uint32(58),gr.codec().encode(o.disconnect,i)),o.pubsub!=null&&(i.uint32(66),Mt.codec().encode(o.pubsub,i)),o.peerStore!=null&&(i.uint32(74),wr.codec().encode(o.peerStore,i)),s.lengthDelimited!==!1&&i.ldelim()},(o,i)=>{let s={},c=i==null?o.len:o.pos+i;for(;o.pos<c;){let a=o.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(o);break;case 2:s.connect=fr.codec().decode(o,o.uint32());break;case 3:s.streamOpen=dr.codec().decode(o,o.uint32());break;case 4:s.streamHandler=hr.codec().decode(o,o.uint32());break;case 5:s.dht=vt.codec().decode(o,o.uint32());break;case 6:s.connManager=mr.codec().decode(o,o.uint32());break;case 7:s.disconnect=gr.codec().decode(o,o.uint32());break;case 8:s.pubsub=Mt.codec().decode(o,o.uint32());break;case 9:s.peerStore=wr.codec().decode(o,o.uint32());break;default:o.skipType(a&7);break}}return s})),n),r.encode=o=>V(o,r.codec()),r.decode=o=>K(o,r.codec())})(H||(H={}));var P;(function(r){let t;(function(o){o.OK="OK",o.ERROR="ERROR"})(t=r.Type||(r.Type={}));let e;(function(o){o[o.OK=0]="OK",o[o.ERROR=1]="ERROR"})(e||(e={})),function(o){o.codec=()=>Ct(e)}(t=r.Type||(r.Type={}));let n;r.codec=()=>(n==null&&(n=F((o,i,s={})=>{if(s.lengthDelimited!==!1&&i.fork(),o.type!=null&&(i.uint32(8),r.Type.codec().encode(o.type,i)),o.error!=null&&(i.uint32(18),pr.codec().encode(o.error,i)),o.streamInfo!=null&&(i.uint32(26),Le.codec().encode(o.streamInfo,i)),o.identify!=null&&(i.uint32(34),lr.codec().encode(o.identify,i)),o.dht!=null&&(i.uint32(42),Pt.codec().encode(o.dht,i)),o.peers!=null)for(let c of o.peers)i.uint32(50),Xt.codec().encode(c,i);o.pubsub!=null&&(i.uint32(58),br.codec().encode(o.pubsub,i)),o.peerStore!=null&&(i.uint32(66),xr.codec().encode(o.peerStore,i)),s.lengthDelimited!==!1&&i.ldelim()},(o,i)=>{let s={peers:[]},c=i==null?o.len:o.pos+i;for(;o.pos<c;){let a=o.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(o);break;case 2:s.error=pr.codec().decode(o,o.uint32());break;case 3:s.streamInfo=Le.codec().decode(o,o.uint32());break;case 4:s.identify=lr.codec().decode(o,o.uint32());break;case 5:s.dht=Pt.codec().decode(o,o.uint32());break;case 6:s.peers.push(Xt.codec().decode(o,o.uint32()));break;case 7:s.pubsub=br.codec().decode(o,o.uint32());break;case 8:s.peerStore=xr.codec().decode(o,o.uint32());break;default:o.skipType(a&7);break}}return s})),n),r.encode=o=>V(o,r.codec()),r.decode=o=>K(o,r.codec())})(P||(P={}));var lr;(function(r){let t;r.codec=()=>(t==null&&(t=F((e,n,o={})=>{if(o.lengthDelimited!==!1&&n.fork(),e.id!=null&&e.id.byteLength>0&&(n.uint32(10),n.bytes(e.id)),e.addrs!=null)for(let i of e.addrs)n.uint32(18),n.bytes(i);o.lengthDelimited!==!1&&n.ldelim()},(e,n)=>{let o={id:new Uint8Array(0),addrs:[]},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let s=e.uint32();switch(s>>>3){case 1:o.id=e.bytes();break;case 2:o.addrs.push(e.bytes());break;default:e.skipType(s&7);break}}return o})),t),r.encode=e=>V(e,r.codec()),r.decode=e=>K(e,r.codec())})(lr||(lr={}));var fr;(function(r){let t;r.codec=()=>(t==null&&(t=F((e,n,o={})=>{if(o.lengthDelimited!==!1&&n.fork(),e.peer!=null&&e.peer.byteLength>0&&(n.uint32(10),n.bytes(e.peer)),e.addrs!=null)for(let i of e.addrs)n.uint32(18),n.bytes(i);e.timeout!=null&&(n.uint32(24),n.int64(e.timeout)),o.lengthDelimited!==!1&&n.ldelim()},(e,n)=>{let o={peer:new Uint8Array(0),addrs:[]},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let s=e.uint32();switch(s>>>3){case 1:o.peer=e.bytes();break;case 2:o.addrs.push(e.bytes());break;case 3:o.timeout=e.int64();break;default:e.skipType(s&7);break}}return o})),t),r.encode=e=>V(e,r.codec()),r.decode=e=>K(e,r.codec())})(fr||(fr={}));var dr;(function(r){let t;r.codec=()=>(t==null&&(t=F((e,n,o={})=>{if(o.lengthDelimited!==!1&&n.fork(),e.peer!=null&&e.peer.byteLength>0&&(n.uint32(10),n.bytes(e.peer)),e.proto!=null)for(let i of e.proto)n.uint32(18),n.string(i);e.timeout!=null&&(n.uint32(24),n.int64(e.timeout)),o.lengthDelimited!==!1&&n.ldelim()},(e,n)=>{let o={peer:new Uint8Array(0),proto:[]},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let s=e.uint32();switch(s>>>3){case 1:o.peer=e.bytes();break;case 2:o.proto.push(e.string());break;case 3:o.timeout=e.int64();break;default:e.skipType(s&7);break}}return o})),t),r.encode=e=>V(e,r.codec()),r.decode=e=>K(e,r.codec())})(dr||(dr={}));var hr;(function(r){let t;r.codec=()=>(t==null&&(t=F((e,n,o={})=>{if(o.lengthDelimited!==!1&&n.fork(),e.addr!=null&&e.addr.byteLength>0&&(n.uint32(10),n.bytes(e.addr)),e.proto!=null)for(let i of e.proto)n.uint32(18),n.string(i);o.lengthDelimited!==!1&&n.ldelim()},(e,n)=>{let o={addr:new Uint8Array(0),proto:[]},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let s=e.uint32();switch(s>>>3){case 1:o.addr=e.bytes();break;case 2:o.proto.push(e.string());break;default:e.skipType(s&7);break}}return o})),t),r.encode=e=>V(e,r.codec()),r.decode=e=>K(e,r.codec())})(hr||(hr={}));var pr;(function(r){let t;r.codec=()=>(t==null&&(t=F((e,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),e.msg!=null&&e.msg!==""&&(n.uint32(10),n.string(e.msg)),o.lengthDelimited!==!1&&n.ldelim()},(e,n)=>{let o={msg:""},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let s=e.uint32();switch(s>>>3){case 1:o.msg=e.string();break;default:e.skipType(s&7);break}}return o})),t),r.encode=e=>V(e,r.codec()),r.decode=e=>K(e,r.codec())})(pr||(pr={}));var Le;(function(r){let t;r.codec=()=>(t==null&&(t=F((e,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),e.peer!=null&&e.peer.byteLength>0&&(n.uint32(10),n.bytes(e.peer)),e.addr!=null&&e.addr.byteLength>0&&(n.uint32(18),n.bytes(e.addr)),e.proto!=null&&e.proto!==""&&(n.uint32(26),n.string(e.proto)),o.lengthDelimited!==!1&&n.ldelim()},(e,n)=>{let o={peer:new Uint8Array(0),addr:new Uint8Array(0),proto:""},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let s=e.uint32();switch(s>>>3){case 1:o.peer=e.bytes();break;case 2:o.addr=e.bytes();break;case 3:o.proto=e.string();break;default:e.skipType(s&7);break}}return o})),t),r.encode=e=>V(e,r.codec()),r.decode=e=>K(e,r.codec())})(Le||(Le={}));var vt;(function(r){let t;(function(o){o.FIND_PEER="FIND_PEER",o.FIND_PEERS_CONNECTED_TO_PEER="FIND_PEERS_CONNECTED_TO_PEER",o.FIND_PROVIDERS="FIND_PROVIDERS",o.GET_CLOSEST_PEERS="GET_CLOSEST_PEERS",o.GET_PUBLIC_KEY="GET_PUBLIC_KEY",o.GET_VALUE="GET_VALUE",o.SEARCH_VALUE="SEARCH_VALUE",o.PUT_VALUE="PUT_VALUE",o.PROVIDE="PROVIDE"})(t=r.Type||(r.Type={}));let e;(function(o){o[o.FIND_PEER=0]="FIND_PEER",o[o.FIND_PEERS_CONNECTED_TO_PEER=1]="FIND_PEERS_CONNECTED_TO_PEER",o[o.FIND_PROVIDERS=2]="FIND_PROVIDERS",o[o.GET_CLOSEST_PEERS=3]="GET_CLOSEST_PEERS",o[o.GET_PUBLIC_KEY=4]="GET_PUBLIC_KEY",o[o.GET_VALUE=5]="GET_VALUE",o[o.SEARCH_VALUE=6]="SEARCH_VALUE",o[o.PUT_VALUE=7]="PUT_VALUE",o[o.PROVIDE=8]="PROVIDE"})(e||(e={})),function(o){o.codec=()=>Ct(e)}(t=r.Type||(r.Type={}));let n;r.codec=()=>(n==null&&(n=F((o,i,s={})=>{s.lengthDelimited!==!1&&i.fork(),o.type!=null&&(i.uint32(8),r.Type.codec().encode(o.type,i)),o.peer!=null&&(i.uint32(18),i.bytes(o.peer)),o.cid!=null&&(i.uint32(26),i.bytes(o.cid)),o.key!=null&&(i.uint32(34),i.bytes(o.key)),o.value!=null&&(i.uint32(42),i.bytes(o.value)),o.count!=null&&(i.uint32(48),i.int32(o.count)),o.timeout!=null&&(i.uint32(56),i.int64(o.timeout)),s.lengthDelimited!==!1&&i.ldelim()},(o,i)=>{let s={},c=i==null?o.len:o.pos+i;for(;o.pos<c;){let a=o.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(o);break;case 2:s.peer=o.bytes();break;case 3:s.cid=o.bytes();break;case 4:s.key=o.bytes();break;case 5:s.value=o.bytes();break;case 6:s.count=o.int32();break;case 7:s.timeout=o.int64();break;default:o.skipType(a&7);break}}return s})),n),r.encode=o=>V(o,r.codec()),r.decode=o=>K(o,r.codec())})(vt||(vt={}));var Pt;(function(r){let t;(function(o){o.BEGIN="BEGIN",o.VALUE="VALUE",o.END="END"})(t=r.Type||(r.Type={}));let e;(function(o){o[o.BEGIN=0]="BEGIN",o[o.VALUE=1]="VALUE",o[o.END=2]="END"})(e||(e={})),function(o){o.codec=()=>Ct(e)}(t=r.Type||(r.Type={}));let n;r.codec=()=>(n==null&&(n=F((o,i,s={})=>{s.lengthDelimited!==!1&&i.fork(),o.type!=null&&(i.uint32(8),r.Type.codec().encode(o.type,i)),o.peer!=null&&(i.uint32(18),Xt.codec().encode(o.peer,i)),o.value!=null&&(i.uint32(26),i.bytes(o.value)),s.lengthDelimited!==!1&&i.ldelim()},(o,i)=>{let s={},c=i==null?o.len:o.pos+i;for(;o.pos<c;){let a=o.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(o);break;case 2:s.peer=Xt.codec().decode(o,o.uint32());break;case 3:s.value=o.bytes();break;default:o.skipType(a&7);break}}return s})),n),r.encode=o=>V(o,r.codec()),r.decode=o=>K(o,r.codec())})(Pt||(Pt={}));var Xt;(function(r){let t;r.codec=()=>(t==null&&(t=F((e,n,o={})=>{if(o.lengthDelimited!==!1&&n.fork(),e.id!=null&&e.id.byteLength>0&&(n.uint32(10),n.bytes(e.id)),e.addrs!=null)for(let i of e.addrs)n.uint32(18),n.bytes(i);o.lengthDelimited!==!1&&n.ldelim()},(e,n)=>{let o={id:new Uint8Array(0),addrs:[]},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let s=e.uint32();switch(s>>>3){case 1:o.id=e.bytes();break;case 2:o.addrs.push(e.bytes());break;default:e.skipType(s&7);break}}return o})),t),r.encode=e=>V(e,r.codec()),r.decode=e=>K(e,r.codec())})(Xt||(Xt={}));var mr;(function(r){let t;(function(o){o.TAG_PEER="TAG_PEER",o.UNTAG_PEER="UNTAG_PEER",o.TRIM="TRIM"})(t=r.Type||(r.Type={}));let e;(function(o){o[o.TAG_PEER=0]="TAG_PEER",o[o.UNTAG_PEER=1]="UNTAG_PEER",o[o.TRIM=2]="TRIM"})(e||(e={})),function(o){o.codec=()=>Ct(e)}(t=r.Type||(r.Type={}));let n;r.codec=()=>(n==null&&(n=F((o,i,s={})=>{s.lengthDelimited!==!1&&i.fork(),o.type!=null&&(i.uint32(8),r.Type.codec().encode(o.type,i)),o.peer!=null&&(i.uint32(18),i.bytes(o.peer)),o.tag!=null&&(i.uint32(26),i.string(o.tag)),o.weight!=null&&(i.uint32(32),i.int64(o.weight)),s.lengthDelimited!==!1&&i.ldelim()},(o,i)=>{let s={},c=i==null?o.len:o.pos+i;for(;o.pos<c;){let a=o.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(o);break;case 2:s.peer=o.bytes();break;case 3:s.tag=o.string();break;case 4:s.weight=o.int64();break;default:o.skipType(a&7);break}}return s})),n),r.encode=o=>V(o,r.codec()),r.decode=o=>K(o,r.codec())})(mr||(mr={}));var gr;(function(r){let t;r.codec=()=>(t==null&&(t=F((e,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),e.peer!=null&&e.peer.byteLength>0&&(n.uint32(10),n.bytes(e.peer)),o.lengthDelimited!==!1&&n.ldelim()},(e,n)=>{let o={peer:new Uint8Array(0)},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let s=e.uint32();switch(s>>>3){case 1:o.peer=e.bytes();break;default:e.skipType(s&7);break}}return o})),t),r.encode=e=>V(e,r.codec()),r.decode=e=>K(e,r.codec())})(gr||(gr={}));var Mt;(function(r){let t;(function(o){o.GET_TOPICS="GET_TOPICS",o.LIST_PEERS="LIST_PEERS",o.PUBLISH="PUBLISH",o.SUBSCRIBE="SUBSCRIBE"})(t=r.Type||(r.Type={}));let e;(function(o){o[o.GET_TOPICS=0]="GET_TOPICS",o[o.LIST_PEERS=1]="LIST_PEERS",o[o.PUBLISH=2]="PUBLISH",o[o.SUBSCRIBE=3]="SUBSCRIBE"})(e||(e={})),function(o){o.codec=()=>Ct(e)}(t=r.Type||(r.Type={}));let n;r.codec=()=>(n==null&&(n=F((o,i,s={})=>{s.lengthDelimited!==!1&&i.fork(),o.type!=null&&(i.uint32(8),r.Type.codec().encode(o.type,i)),o.topic!=null&&(i.uint32(18),i.string(o.topic)),o.data!=null&&(i.uint32(26),i.bytes(o.data)),s.lengthDelimited!==!1&&i.ldelim()},(o,i)=>{let s={},c=i==null?o.len:o.pos+i;for(;o.pos<c;){let a=o.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(o);break;case 2:s.topic=o.string();break;case 3:s.data=o.bytes();break;default:o.skipType(a&7);break}}return s})),n),r.encode=o=>V(o,r.codec()),r.decode=o=>K(o,r.codec())})(Mt||(Mt={}));var yr;(function(r){let t;r.codec=()=>(t==null&&(t=F((e,n,o={})=>{if(o.lengthDelimited!==!1&&n.fork(),e.from!=null&&(n.uint32(10),n.bytes(e.from)),e.data!=null&&(n.uint32(18),n.bytes(e.data)),e.seqno!=null&&(n.uint32(26),n.bytes(e.seqno)),e.topicIDs!=null)for(let i of e.topicIDs)n.uint32(34),n.string(i);e.signature!=null&&(n.uint32(42),n.bytes(e.signature)),e.key!=null&&(n.uint32(50),n.bytes(e.key)),o.lengthDelimited!==!1&&n.ldelim()},(e,n)=>{let o={topicIDs:[]},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let s=e.uint32();switch(s>>>3){case 1:o.from=e.bytes();break;case 2:o.data=e.bytes();break;case 3:o.seqno=e.bytes();break;case 4:o.topicIDs.push(e.string());break;case 5:o.signature=e.bytes();break;case 6:o.key=e.bytes();break;default:e.skipType(s&7);break}}return o})),t),r.encode=e=>V(e,r.codec()),r.decode=e=>K(e,r.codec())})(yr||(yr={}));var br;(function(r){let t;r.codec=()=>(t==null&&(t=F((e,n,o={})=>{if(o.lengthDelimited!==!1&&n.fork(),e.topics!=null)for(let i of e.topics)n.uint32(10),n.string(i);if(e.peerIDs!=null)for(let i of e.peerIDs)n.uint32(18),n.bytes(i);o.lengthDelimited!==!1&&n.ldelim()},(e,n)=>{let o={topics:[],peerIDs:[]},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let s=e.uint32();switch(s>>>3){case 1:o.topics.push(e.string());break;case 2:o.peerIDs.push(e.bytes());break;default:e.skipType(s&7);break}}return o})),t),r.encode=e=>V(e,r.codec()),r.decode=e=>K(e,r.codec())})(br||(br={}));var wr;(function(r){let t;(function(o){o.UNSPECIFIED="UNSPECIFIED",o.GET_PROTOCOLS="GET_PROTOCOLS",o.GET_PEER_INFO="GET_PEER_INFO"})(t=r.Type||(r.Type={}));let e;(function(o){o[o.UNSPECIFIED=0]="UNSPECIFIED",o[o.GET_PROTOCOLS=1]="GET_PROTOCOLS",o[o.GET_PEER_INFO=2]="GET_PEER_INFO"})(e||(e={})),function(o){o.codec=()=>Ct(e)}(t=r.Type||(r.Type={}));let n;r.codec=()=>(n==null&&(n=F((o,i,s={})=>{if(s.lengthDelimited!==!1&&i.fork(),o.type!=null&&(i.uint32(8),r.Type.codec().encode(o.type,i)),o.id!=null&&(i.uint32(18),i.bytes(o.id)),o.protos!=null)for(let c of o.protos)i.uint32(26),i.string(c);s.lengthDelimited!==!1&&i.ldelim()},(o,i)=>{let s={protos:[]},c=i==null?o.len:o.pos+i;for(;o.pos<c;){let a=o.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(o);break;case 2:s.id=o.bytes();break;case 3:s.protos.push(o.string());break;default:o.skipType(a&7);break}}return s})),n),r.encode=o=>V(o,r.codec()),r.decode=o=>K(o,r.codec())})(wr||(wr={}));var xr;(function(r){let t;r.codec=()=>(t==null&&(t=F((e,n,o={})=>{if(o.lengthDelimited!==!1&&n.fork(),e.peer!=null&&(n.uint32(10),Xt.codec().encode(e.peer,n)),e.protos!=null)for(let i of e.protos)n.uint32(18),n.string(i);o.lengthDelimited!==!1&&n.ldelim()},(e,n)=>{let o={protos:[]},i=n==null?e.len:e.pos+n;for(;e.pos<i;){let s=e.uint32();switch(s>>>3){case 1:o.peer=Xt.codec().decode(e,e.uint32());break;case 2:o.protos.push(e.string());break;default:e.skipType(s&7);break}}return o})),t),r.encode=e=>V(e,r.codec()),r.decode=e=>K(e,r.codec())})(xr||(xr={}));var Mi=pt(Z("node:tty"),1),Tr=pt(Z("node:util"),1);function Ra(r,t){try{if(typeof r=="string"&&r.length>0)return Ua(r);if(typeof r=="number"&&isFinite(r))return t?.long?Ma(r):_a(r);throw new Error("Value is not a string or number.")}catch(e){let n=Ka(e)?`${e.message}. value=${JSON.stringify(r)}`:"An unknown error has occured.";throw new Error(n)}}function Ua(r){if(r=String(r),r.length>100)throw new Error("Value exceeds the maximum length of 100 characters.");let t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(r);if(!t)return NaN;let e=parseFloat(t[1]),n=(t[2]||"ms").toLowerCase();switch(n){case"years":case"year":case"yrs":case"yr":case"y":return e*315576e5;case"weeks":case"week":case"w":return e*6048e5;case"days":case"day":case"d":return e*864e5;case"hours":case"hour":case"hrs":case"hr":case"h":return e*36e5;case"minutes":case"minute":case"mins":case"min":case"m":return e*6e4;case"seconds":case"second":case"secs":case"sec":case"s":return e*1e3;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return e;default:throw new Error(`The unit ${n} was matched, but no matching case exists.`)}}var vr=Ra;function _a(r){let t=Math.abs(r);return t>=864e5?`${Math.round(r/864e5)}d`:t>=36e5?`${Math.round(r/36e5)}h`:t>=6e4?`${Math.round(r/6e4)}m`:t>=1e3?`${Math.round(r/1e3)}s`:`${r}ms`}function Ma(r){let t=Math.abs(r);return t>=864e5?Er(r,t,864e5,"day"):t>=36e5?Er(r,t,36e5,"hour"):t>=6e4?Er(r,t,6e4,"minute"):t>=1e3?Er(r,t,1e3,"second"):`${r} ms`}function Er(r,t,e,n){let o=t>=e*1.5;return`${Math.round(r/e)} ${n}${o?"s":""}`}function Ka(r){return typeof r=="object"&&r!==null&&"message"in r}var Sr=pt(Z("node:process"),1),_i=pt(Z("node:os"),1),co=pt(Z("node:tty"),1);function It(r,t=globalThis.Deno?globalThis.Deno.args:Sr.default.argv){let e=r.startsWith("-")?"":r.length===1?"-":"--",n=t.indexOf(e+r),o=t.indexOf("--");return n!==-1&&(o===-1||n<o)}var{env:G}=Sr.default,Ir;It("no-color")||It("no-colors")||It("color=false")||It("color=never")?Ir=0:(It("color")||It("colors")||It("color=true")||It("color=always"))&&(Ir=1);function $a(){if("FORCE_COLOR"in G)return G.FORCE_COLOR==="true"?1:G.FORCE_COLOR==="false"?0:G.FORCE_COLOR.length===0?1:Math.min(Number.parseInt(G.FORCE_COLOR,10),3)}function Va(r){return r===0?!1:{level:r,hasBasic:!0,has256:r>=2,has16m:r>=3}}function Fa(r,{streamIsTTY:t,sniffFlags:e=!0}={}){let n=$a();n!==void 0&&(Ir=n);let o=e?Ir:n;if(o===0)return 0;if(e){if(It("color=16m")||It("color=full")||It("color=truecolor"))return 3;if(It("color=256"))return 2}if("TF_BUILD"in G&&"AGENT_NAME"in G)return 1;if(r&&!t&&o===void 0)return 0;let i=o||0;if(G.TERM==="dumb")return i;if(Sr.default.platform==="win32"){let s=_i.default.release().split(".");return Number(s[0])>=10&&Number(s[2])>=10586?Number(s[2])>=14931?3:2:1}if("CI"in G)return"GITHUB_ACTIONS"in G||"GITEA_ACTIONS"in G?3:["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","BUILDKITE","DRONE"].some(s=>s in G)||G.CI_NAME==="codeship"?1:i;if("TEAMCITY_VERSION"in G)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(G.TEAMCITY_VERSION)?1:0;if(G.COLORTERM==="truecolor"||G.TERM==="xterm-kitty")return 3;if("TERM_PROGRAM"in G){let s=Number.parseInt((G.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(G.TERM_PROGRAM){case"iTerm.app":return s>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(G.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(G.TERM)||"COLORTERM"in G?1:i}function Ui(r,t={}){let e=Fa(r,{streamIsTTY:r&&r.isTTY,...t});return Va(e)}var Ga={stdout:Ui({isTTY:co.default.isatty(1)}),stderr:Ui({isTTY:co.default.isatty(2)})},Ar=Ga;function ao(r){e.debug=e,e.default=e,e.coerce=a,e.disable=i,e.enable=o,e.enabled=s,e.humanize=vr,e.destroy=d,Object.keys(r).forEach(l=>{e[l]=r[l]}),e.names=[],e.skips=[],e.formatters={};function t(l){let u=0;for(let g=0;g<l.length;g++)u=(u<<5)-u+l.charCodeAt(g),u|=0;return e.colors[Math.abs(u)%e.colors.length]}e.selectColor=t;function e(l){let u,g=null,y,h;function f(...p){if(!f.enabled)return;let m=f,w=Number(new Date),S=w-(u||w);m.diff=S,m.prev=u,m.curr=w,u=w,p[0]=e.coerce(p[0]),typeof p[0]!="string"&&p.unshift("%O");let C=0;p[0]=p[0].replace(/%([a-zA-Z%])/g,(E,I)=>{if(E==="%%")return"%";C++;let T=e.formatters[I];if(typeof T=="function"){let Q=p[C];E=T.call(m,Q),p.splice(C,1),C--}return E}),e.formatArgs.call(m,p),(m.log||e.log).apply(m,p)}return f.namespace=l,f.useColors=e.useColors(),f.color=e.selectColor(l),f.extend=n,f.destroy=e.destroy,Object.defineProperty(f,"enabled",{enumerable:!0,configurable:!1,get:()=>g!==null?g:(y!==e.namespaces&&(y=e.namespaces,h=e.enabled(l)),h),set:p=>{g=p}}),typeof e.init=="function"&&e.init(f),f}function n(l,u){let g=e(this.namespace+(typeof u>"u"?":":u)+l);return g.log=this.log,g}function o(l){e.save(l),e.namespaces=l,e.names=[],e.skips=[];let u,g=(typeof l=="string"?l:"").split(/[\s,]+/),y=g.length;for(u=0;u<y;u++)g[u]&&(l=g[u].replace(/\*/g,".*?"),l[0]==="-"?e.skips.push(new RegExp("^"+l.substr(1)+"$")):e.names.push(new RegExp("^"+l+"$")))}function i(){let l=[...e.names.map(c),...e.skips.map(c).map(u=>"-"+u)].join(",");return e.enable(""),l}function s(l){if(l[l.length-1]==="*")return!0;let u,g;for(u=0,g=e.skips.length;u<g;u++)if(e.skips[u].test(l))return!1;for(u=0,g=e.names.length;u<g;u++)if(e.names[u].test(l))return!0;return!1}function c(l){return l.toString().substring(2,l.toString().length-2).replace(/\.\*\?$/,"*")}function a(l){return l instanceof Error?l.stack??l.message:l}function d(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return e.setupFormatters(e.formatters),e.enable(e.load()),e}var Ki=[6,2,3,4,5,1];Ar.stderr!==!1&&(Ar.stderr??Ar).level>=2&&(Ki=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221]);var Be=Object.keys(process.env).filter(r=>/^debug_/i.test(r)).reduce((r,t)=>{let e=t.substring(6).toLowerCase().replace(/_([a-z])/g,(o,i)=>i.toUpperCase()),n=process.env[t];return/^(yes|on|true|enabled)$/i.test(n)?n=!0:/^(no|off|false|disabled)$/i.test(n)?n=!1:n==="null"?n=null:n=Number(n),r[e]=n,r},{});function za(){return"colors"in Be?!!Be.colors:Mi.default.isatty(process.stderr.fd)}function Ha(r){let{namespace:t,useColors:e}=this;if(e!=null){let n=this.color,o="\x1B[3"+(n<8?n:"8;5;"+n),i=`  ${o};1m${t} \x1B[0m`;r[0]=i+r[0].split(`
 `).join(`
-`+o),r.push(n+"m+"+Re.exports.humanize(this.diff)+"\x1B[0m")}else r[0]=Vs()+t+" "+r[0]}function Vs(){return _.inspectOpts.hideDate?"":new Date().toISOString()+" "}function Gs(...r){return process.stderr.write(Se.formatWithOptions(_.inspectOpts,...r)+`
-`)}function $s(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function zs(){return process.env.DEBUG}function Hs(r){r.inspectOpts={};let t=Object.keys(_.inspectOpts);for(let e=0;e<t.length;e++)r.inspectOpts[t[e]]=_.inspectOpts[t[e]]}Re.exports=Br()(_);var{formatters:ei}=Re.exports;ei.o=function(r){return this.inspectOpts.colors=this.useColors,Se.inspect(r,this.inspectOpts).split(`
-`).map(t=>t.trim()).join(" ")};ei.O=function(r){return this.inspectOpts.colors=this.useColors,Se.inspect(r,this.inspectOpts)}});var ni=xt((pu,Vr)=>{typeof process>"u"||process.type==="renderer"||process.browser===!0||process.__nwjs?Vr.exports=Qn():Vr.exports=ri()});var _c={};H(_c,{createClient:()=>Nc});var Qe=$("node:buffer");function It(r){return new Uint8Array(r.buffer,r.byteOffset,r.byteLength)}function at(r=0){return It(Qe.Buffer.alloc(r))}function Z(r=0){return It(Qe.Buffer.allocUnsafe(r))}var no=Math.pow(2,7),io=Math.pow(2,14),oo=Math.pow(2,21),Ze=Math.pow(2,28),qe=Math.pow(2,35),je=Math.pow(2,42),tr=Math.pow(2,49),x=128,F=127;function B(r){if(r<no)return 1;if(r<io)return 2;if(r<oo)return 3;if(r<Ze)return 4;if(r<qe)return 5;if(r<je)return 6;if(r<tr)return 7;if(Number.MAX_SAFE_INTEGER!=null&&r>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function er(r,t,e=0){switch(B(r)){case 8:t[e++]=r&255|x,r/=128;case 7:t[e++]=r&255|x,r/=128;case 6:t[e++]=r&255|x,r/=128;case 5:t[e++]=r&255|x,r/=128;case 4:t[e++]=r&255|x,r>>>=7;case 3:t[e++]=r&255|x,r>>>=7;case 2:t[e++]=r&255|x,r>>>=7;case 1:{t[e++]=r&255,r>>>=7;break}default:throw new Error("unreachable")}return t}function so(r,t,e=0){switch(B(r)){case 8:t.set(e++,r&255|x),r/=128;case 7:t.set(e++,r&255|x),r/=128;case 6:t.set(e++,r&255|x),r/=128;case 5:t.set(e++,r&255|x),r/=128;case 4:t.set(e++,r&255|x),r>>>=7;case 3:t.set(e++,r&255|x),r>>>=7;case 2:t.set(e++,r&255|x),r>>>=7;case 1:{t.set(e++,r&255),r>>>=7;break}default:throw new Error("unreachable")}return t}function rr(r,t){let e=r[t],i=0;if(i+=e&F,e<x||(e=r[t+1],i+=(e&F)<<7,e<x)||(e=r[t+2],i+=(e&F)<<14,e<x)||(e=r[t+3],i+=(e&F)<<21,e<x)||(e=r[t+4],i+=(e&F)*Ze,e<x)||(e=r[t+5],i+=(e&F)*qe,e<x)||(e=r[t+6],i+=(e&F)*je,e<x)||(e=r[t+7],i+=(e&F)*tr,e<x))return i;throw new RangeError("Could not decode varint")}function co(r,t){let e=r.get(t),i=0;if(i+=e&F,e<x||(e=r.get(t+1),i+=(e&F)<<7,e<x)||(e=r.get(t+2),i+=(e&F)<<14,e<x)||(e=r.get(t+3),i+=(e&F)<<21,e<x)||(e=r.get(t+4),i+=(e&F)*Ze,e<x)||(e=r.get(t+5),i+=(e&F)*qe,e<x)||(e=r.get(t+6),i+=(e&F)*je,e<x)||(e=r.get(t+7),i+=(e&F)*tr,e<x))return i;throw new RangeError("Could not decode varint")}function ht(r,t,e=0){return t==null&&(t=Z(B(r))),t instanceof Uint8Array?er(r,t,e):so(r,t,e)}function ut(r,t=0){return r instanceof Uint8Array?rr(r,t):co(r,t)}var ir=new Float32Array([-0]),pt=new Uint8Array(ir.buffer);function bn(r,t,e){ir[0]=r,t[e]=pt[0],t[e+1]=pt[1],t[e+2]=pt[2],t[e+3]=pt[3]}function En(r,t){return pt[0]=r[t],pt[1]=r[t+1],pt[2]=r[t+2],pt[3]=r[t+3],ir[0]}var or=new Float64Array([-0]),M=new Uint8Array(or.buffer);function xn(r,t,e){or[0]=r,t[e]=M[0],t[e+1]=M[1],t[e+2]=M[2],t[e+3]=M[3],t[e+4]=M[4],t[e+5]=M[5],t[e+6]=M[6],t[e+7]=M[7]}function In(r,t){return M[0]=r[t],M[1]=r[t+1],M[2]=r[t+2],M[3]=r[t+3],M[4]=r[t+4],M[5]=r[t+5],M[6]=r[t+6],M[7]=r[t+7],or[0]}var ao=BigInt(Number.MAX_SAFE_INTEGER),uo=BigInt(Number.MIN_SAFE_INTEGER),K=class r{lo;hi;constructor(t,e){this.lo=t|0,this.hi=e|0}toNumber(t=!1){if(!t&&this.hi>>>31>0){let e=~this.lo+1>>>0,i=~this.hi>>>0;return e===0&&(i=i+1>>>0),-(e+i*4294967296)}return this.lo+this.hi*4294967296}toBigInt(t=!1){if(t)return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n);if(this.hi>>>31){let e=~this.lo+1>>>0,i=~this.hi>>>0;return e===0&&(i=i+1>>>0),-(BigInt(e)+(BigInt(i)<<32n))}return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n)}toString(t=!1){return this.toBigInt(t).toString()}zzEncode(){let t=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^t)>>>0,this.lo=(this.lo<<1^t)>>>0,this}zzDecode(){let t=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^t)>>>0,this.hi=(this.hi>>>1^t)>>>0,this}length(){let t=this.lo,e=(this.lo>>>28|this.hi<<4)>>>0,i=this.hi>>>24;return i===0?e===0?t<16384?t<128?1:2:t<2097152?3:4:e<16384?e<128?5:6:e<2097152?7:8:i<128?9:10}static fromBigInt(t){if(t===0n)return At;if(t<ao&&t>uo)return this.fromNumber(Number(t));let e=t<0n;e&&(t=-t);let i=t>>32n,n=t-(i<<32n);return e&&(i=~i|0n,n=~n|0n,++n>An&&(n=0n,++i>An&&(i=0n))),new r(Number(n),Number(i))}static fromNumber(t){if(t===0)return At;let e=t<0;e&&(t=-t);let i=t>>>0,n=(t-i)/4294967296>>>0;return e&&(n=~n>>>0,i=~i>>>0,++i>4294967295&&(i=0,++n>4294967295&&(n=0))),new r(i,n)}static from(t){return typeof t=="number"?r.fromNumber(t):typeof t=="bigint"?r.fromBigInt(t):typeof t=="string"?r.fromBigInt(BigInt(t)):t.low!=null||t.high!=null?new r(t.low>>>0,t.high>>>0):At}},At=new K(0,0);At.toBigInt=function(){return 0n};At.zzEncode=At.zzDecode=function(){return this};At.length=function(){return 1};var An=4294967296n;function Cn(r){let t=0,e=0;for(let i=0;i<r.length;++i)e=r.charCodeAt(i),e<128?t+=1:e<2048?t+=2:(e&64512)===55296&&(r.charCodeAt(i+1)&64512)===56320?(++i,t+=4):t+=3;return t}function Tn(r,t,e){if(e-t<1)return"";let n,o=[],s=0,c;for(;t<e;)c=r[t++],c<128?o[s++]=c:c>191&&c<224?o[s++]=(c&31)<<6|r[t++]&63:c>239&&c<365?(c=((c&7)<<18|(r[t++]&63)<<12|(r[t++]&63)<<6|r[t++]&63)-65536,o[s++]=55296+(c>>10),o[s++]=56320+(c&1023)):o[s++]=(c&15)<<12|(r[t++]&63)<<6|r[t++]&63,s>8191&&((n??(n=[])).push(String.fromCharCode.apply(String,o)),s=0);return n!=null?(s>0&&n.push(String.fromCharCode.apply(String,o.slice(0,s))),n.join("")):String.fromCharCode.apply(String,o.slice(0,s))}function sr(r,t,e){let i=e,n,o;for(let s=0;s<r.length;++s)n=r.charCodeAt(s),n<128?t[e++]=n:n<2048?(t[e++]=n>>6|192,t[e++]=n&63|128):(n&64512)===55296&&((o=r.charCodeAt(s+1))&64512)===56320?(n=65536+((n&1023)<<10)+(o&1023),++s,t[e++]=n>>18|240,t[e++]=n>>12&63|128,t[e++]=n>>6&63|128,t[e++]=n&63|128):(t[e++]=n>>12|224,t[e++]=n>>6&63|128,t[e++]=n&63|128);return e-i}function nt(r,t){return RangeError(`index out of range: ${r.pos} + ${t??1} > ${r.len}`)}function ae(r,t){return(r[t-4]|r[t-3]<<8|r[t-2]<<16|r[t-1]<<24)>>>0}var cr=class{buf;pos;len;_slice=Uint8Array.prototype.subarray;constructor(t){this.buf=t,this.pos=0,this.len=t.length}uint32(){let t=4294967295;if(t=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(t=(t|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(t=(t|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(t=(t|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(t=(t|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return t;if((this.pos+=5)>this.len)throw this.pos=this.len,nt(this,10);return t}int32(){return this.uint32()|0}sint32(){let t=this.uint32();return t>>>1^-(t&1)|0}bool(){return this.uint32()!==0}fixed32(){if(this.pos+4>this.len)throw nt(this,4);return ae(this.buf,this.pos+=4)}sfixed32(){if(this.pos+4>this.len)throw nt(this,4);return ae(this.buf,this.pos+=4)|0}float(){if(this.pos+4>this.len)throw nt(this,4);let t=En(this.buf,this.pos);return this.pos+=4,t}double(){if(this.pos+8>this.len)throw nt(this,4);let t=In(this.buf,this.pos);return this.pos+=8,t}bytes(){let t=this.uint32(),e=this.pos,i=this.pos+t;if(i>this.len)throw nt(this,t);return this.pos+=t,e===i?new Uint8Array(0):this.buf.subarray(e,i)}string(){let t=this.bytes();return Tn(t,0,t.length)}skip(t){if(typeof t=="number"){if(this.pos+t>this.len)throw nt(this,t);this.pos+=t}else do if(this.pos>=this.len)throw nt(this);while(this.buf[this.pos++]&128);return this}skipType(t){switch(t){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(t=this.uint32()&7)!==4;)this.skipType(t);break;case 5:this.skip(4);break;default:throw Error(`invalid wire type ${t} at offset ${this.pos}`)}return this}readLongVarint(){let t=new K(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t;if(t.lo=(t.lo|(this.buf[this.pos]&127)<<28)>>>0,t.hi=(t.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return t;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw nt(this);if(t.lo=(t.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return t}return t.lo=(t.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,t}if(this.len-this.pos>4){for(;e<5;++e)if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}else for(;e<5;++e){if(this.pos>=this.len)throw nt(this);if(t.hi=(t.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return t}throw Error("invalid varint encoding")}readFixed64(){if(this.pos+8>this.len)throw nt(this,8);let t=ae(this.buf,this.pos+=4),e=ae(this.buf,this.pos+=4);return new K(t,e)}int64(){return this.readLongVarint().toBigInt()}int64Number(){return this.readLongVarint().toNumber()}int64String(){return this.readLongVarint().toString()}uint64(){return this.readLongVarint().toBigInt(!0)}uint64Number(){let t=rr(this.buf,this.pos);return this.pos+=B(t),t}uint64String(){return this.readLongVarint().toString(!0)}sint64(){return this.readLongVarint().zzDecode().toBigInt()}sint64Number(){return this.readLongVarint().zzDecode().toNumber()}sint64String(){return this.readLongVarint().zzDecode().toString()}fixed64(){return this.readFixed64().toBigInt()}fixed64Number(){return this.readFixed64().toNumber()}fixed64String(){return this.readFixed64().toString()}sfixed64(){return this.readFixed64().toBigInt()}sfixed64Number(){return this.readFixed64().toNumber()}sfixed64String(){return this.readFixed64().toString()}};function ar(r){return new cr(r instanceof Uint8Array?r:r.subarray())}function R(r,t,e){let i=ar(r);return t.decode(i,void 0,e)}var Wn=$("node:buffer");var hr={};H(hr,{base10:()=>go});var Wc=new Uint8Array(0);function Sn(r,t){if(r===t)return!0;if(r.byteLength!==t.byteLength)return!1;for(let e=0;e<r.byteLength;e++)if(r[e]!==t[e])return!1;return!0}function q(r){if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")}function Rn(r){return new TextEncoder().encode(r)}function Dn(r){return new TextDecoder().decode(r)}function lo(r,t){if(r.length>=255)throw new TypeError("Alphabet too long");for(var e=new Uint8Array(256),i=0;i<e.length;i++)e[i]=255;for(var n=0;n<r.length;n++){var o=r.charAt(n),s=o.charCodeAt(0);if(e[s]!==255)throw new TypeError(o+" is ambiguous");e[s]=n}var c=r.length,a=r.charAt(0),g=Math.log(c)/Math.log(256),u=Math.log(256)/Math.log(c);function l(p){if(p instanceof Uint8Array||(ArrayBuffer.isView(p)?p=new Uint8Array(p.buffer,p.byteOffset,p.byteLength):Array.isArray(p)&&(p=Uint8Array.from(p))),!(p instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(p.length===0)return"";for(var w=0,I=0,E=0,C=p.length;E!==C&&p[E]===0;)E++,w++;for(var X=(C-E)*u+1>>>0,O=new Uint8Array(X);E!==C;){for(var rt=p[E],J=0,z=X-1;(rt!==0||J<I)&&z!==-1;z--,J++)rt+=256*O[z]>>>0,O[z]=rt%c>>>0,rt=rt/c>>>0;if(rt!==0)throw new Error("Non-zero carry");I=J,E++}for(var Q=X-I;Q!==X&&O[Q]===0;)Q++;for(var Ot=a.repeat(w);Q<X;++Q)Ot+=r.charAt(O[Q]);return Ot}function m(p){if(typeof p!="string")throw new TypeError("Expected String");if(p.length===0)return new Uint8Array;var w=0;if(p[w]!==" "){for(var I=0,E=0;p[w]===a;)I++,w++;for(var C=(p.length-w)*g+1>>>0,X=new Uint8Array(C);p[w];){var O=e[p.charCodeAt(w)];if(O===255)return;for(var rt=0,J=C-1;(O!==0||rt<E)&&J!==-1;J--,rt++)O+=c*X[J]>>>0,X[J]=O%256>>>0,O=O/256>>>0;if(O!==0)throw new Error("Non-zero carry");E=rt,w++}if(p[w]!==" "){for(var z=C-E;z!==C&&X[z]===0;)z++;for(var Q=new Uint8Array(I+(C-z)),Ot=I;z!==C;)Q[Ot++]=X[z++];return Q}}}function y(p){var w=m(p);if(w)return w;throw new Error(`Non-${t} character`)}return{encode:l,decodeUnsafe:m,decode:y}}var fo=lo,ho=fo,Nn=ho;var ur=class{name;prefix;baseEncode;constructor(t,e,i){this.name=t,this.prefix=e,this.baseEncode=i}encode(t){if(t instanceof Uint8Array)return`${this.prefix}${this.baseEncode(t)}`;throw Error("Unknown type, must be binary type")}},lr=class{name;prefix;baseDecode;prefixCodePoint;constructor(t,e,i){if(this.name=t,this.prefix=e,e.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=e.codePointAt(0),this.baseDecode=i}decode(t){if(typeof t=="string"){if(t.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(t)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(t.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(t){return _n(this,t)}},dr=class{decoders;constructor(t){this.decoders=t}or(t){return _n(this,t)}decode(t){let e=t[0],i=this.decoders[e];if(i!=null)return i.decode(t);throw RangeError(`Unable to decode multibase string ${JSON.stringify(t)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function _n(r,t){return new dr({...r.decoders??{[r.prefix]:r},...t.decoders??{[t.prefix]:t}})}var fr=class{name;prefix;baseEncode;baseDecode;encoder;decoder;constructor(t,e,i,n){this.name=t,this.prefix=e,this.baseEncode=i,this.baseDecode=n,this.encoder=new ur(t,e,i),this.decoder=new lr(t,e,n)}encode(t){return this.encoder.encode(t)}decode(t){return this.decoder.decode(t)}};function Ut({name:r,prefix:t,encode:e,decode:i}){return new fr(r,t,e,i)}function mt({name:r,prefix:t,alphabet:e}){let{encode:i,decode:n}=Nn(e,r);return Ut({prefix:t,name:r,encode:i,decode:o=>q(n(o))})}function po(r,t,e,i){let n={};for(let u=0;u<t.length;++u)n[t[u]]=u;let o=r.length;for(;r[o-1]==="=";)--o;let s=new Uint8Array(o*e/8|0),c=0,a=0,g=0;for(let u=0;u<o;++u){let l=n[r[u]];if(l===void 0)throw new SyntaxError(`Non-${i} character`);a=a<<e|l,c+=e,c>=8&&(c-=8,s[g++]=255&a>>c)}if(c>=e||255&a<<8-c)throw new SyntaxError("Unexpected end of data");return s}function mo(r,t,e){let i=t[t.length-1]==="=",n=(1<<e)-1,o="",s=0,c=0;for(let a=0;a<r.length;++a)for(c=c<<8|r[a],s+=8;s>e;)s-=e,o+=t[n&c>>s];if(s!==0&&(o+=t[n&c<<e-s]),i)for(;o.length*e&7;)o+="=";return o}function T({name:r,prefix:t,bitsPerChar:e,alphabet:i}){return Ut({prefix:t,name:r,encode(n){return mo(n,i,e)},decode(n){return po(n,i,e,r)}})}var go=mt({prefix:"9",name:"base10",alphabet:"0123456789"});var pr={};H(pr,{base16:()=>yo,base16upper:()=>wo});var yo=T({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),wo=T({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var mr={};H(mr,{base2:()=>bo});var bo=T({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var gr={};H(gr,{base256emoji:()=>Co});var Pn=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),Eo=Pn.reduce((r,t,e)=>(r[e]=t,r),[]),xo=Pn.reduce((r,t,e)=>(r[t.codePointAt(0)]=e,r),[]);function Io(r){return r.reduce((t,e)=>(t+=Eo[e],t),"")}function Ao(r){let t=[];for(let e of r){let i=xo[e.codePointAt(0)];if(i===void 0)throw new Error(`Non-base256emoji character: ${e}`);t.push(i)}return new Uint8Array(t)}var Co=Ut({prefix:"\u{1F680}",name:"base256emoji",encode:Io,decode:Ao});var yr={};H(yr,{base32:()=>it,base32hex:()=>Ro,base32hexpad:()=>Lo,base32hexpadupper:()=>No,base32hexupper:()=>Do,base32pad:()=>vo,base32padupper:()=>So,base32upper:()=>To,base32z:()=>_o});var it=T({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),To=T({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),vo=T({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),So=T({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),Ro=T({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),Do=T({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),Lo=T({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),No=T({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),_o=T({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var wr={};H(wr,{base36:()=>Po,base36upper:()=>Oo});var Po=mt({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),Oo=mt({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var br={};H(br,{base58btc:()=>N,base58flickr:()=>ko});var N=mt({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),ko=mt({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var xr={};H(xr,{base64:()=>Er,base64pad:()=>Uo,base64url:()=>Fo,base64urlpad:()=>Bo});var Er=T({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),Uo=T({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),Fo=T({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),Bo=T({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var Ir={};H(Ir,{base8:()=>Mo});var Mo=T({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var Ar={};H(Ar,{identity:()=>Vo});var Vo=Ut({prefix:"\0",name:"identity",encode:r=>Dn(r),decode:r=>Rn(r)});var aa=new TextEncoder,ua=new TextDecoder;var Tr={};H(Tr,{identity:()=>qt});var zo=Un,On=128,Ho=127,Ko=~Ho,Wo=Math.pow(2,31);function Un(r,t,e){t=t||[],e=e||0;for(var i=e;r>=Wo;)t[e++]=r&255|On,r/=128;for(;r&Ko;)t[e++]=r&255|On,r>>>=7;return t[e]=r|0,Un.bytes=e-i+1,t}var Yo=Cr,Xo=128,kn=127;function Cr(r,i){var e=0,i=i||0,n=0,o=i,s,c=r.length;do{if(o>=c)throw Cr.bytes=0,new RangeError("Could not decode varint");s=r[o++],e+=n<28?(s&kn)<<n:(s&kn)*Math.pow(2,n),n+=7}while(s>=Xo);return Cr.bytes=o-i,e}var Jo=Math.pow(2,7),Qo=Math.pow(2,14),Zo=Math.pow(2,21),qo=Math.pow(2,28),jo=Math.pow(2,35),ts=Math.pow(2,42),es=Math.pow(2,49),rs=Math.pow(2,56),ns=Math.pow(2,63),is=function(r){return r<Jo?1:r<Qo?2:r<Zo?3:r<qo?4:r<jo?5:r<ts?6:r<es?7:r<rs?8:r<ns?9:10},os={encode:zo,decode:Yo,encodingLength:is},ss=os,Qt=ss;function Zt(r,t=0){return[Qt.decode(r,t),Qt.decode.bytes]}function Ft(r,t,e=0){return Qt.encode(r,t,e),t}function Bt(r){return Qt.encodingLength(r)}function gt(r,t){let e=t.byteLength,i=Bt(r),n=i+Bt(e),o=new Uint8Array(n+e);return Ft(r,o,0),Ft(e,o,i),o.set(t,n),new Mt(r,e,t,o)}function Ct(r){let t=q(r),[e,i]=Zt(t),[n,o]=Zt(t.subarray(i)),s=t.subarray(i+o);if(s.byteLength!==n)throw new Error("Incorrect length");return new Mt(e,n,s,t)}function Fn(r,t){if(r===t)return!0;{let e=t;return r.code===e.code&&r.size===e.size&&e.bytes instanceof Uint8Array&&Sn(r.bytes,e.bytes)}}var Mt=class{code;size;digest;bytes;constructor(t,e,i,n){this.code=t,this.size=e,this.digest=i,this.bytes=n}};var Bn=0,cs="identity",Mn=q;function as(r){return gt(Bn,Mn(r))}var qt={code:Bn,name:cs,encode:Mn,digest:as};var Dr={};H(Dr,{sha256:()=>le,sha512:()=>us});var Rr=kt($("crypto"),1);function Sr({name:r,code:t,encode:e}){return new vr(r,t,e)}var vr=class{name;code;encode;constructor(t,e,i){this.name=t,this.code=e,this.encode=i}digest(t){if(t instanceof Uint8Array){let e=this.encode(t);return e instanceof Uint8Array?gt(this.code,e):e.then(i=>gt(this.code,i))}else throw Error("Unknown type, must be binary type")}};var le=Sr({name:"sha2-256",code:18,encode:r=>q(Rr.default.createHash("sha256").update(r).digest())}),us=Sr({name:"sha2-512",code:19,encode:r=>q(Rr.default.createHash("sha512").update(r).digest())});function Gn(r,t){let{bytes:e,version:i}=r;switch(i){case 0:return ds(e,Lr(r),t??N.encoder);default:return fs(e,Lr(r),t??it.encoder)}}var $n=new WeakMap;function Lr(r){let t=$n.get(r);if(t==null){let e=new Map;return $n.set(r,e),e}return t}var G=class r{code;version;multihash;bytes;"/";constructor(t,e,i,n){this.code=e,this.version=t,this.multihash=i,this.bytes=n,this["/"]=n}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{let{code:t,multihash:e}=this;if(t!==jt)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(e.code!==hs)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return r.createV0(e)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{let{code:t,digest:e}=this.multihash,i=gt(t,e);return r.createV1(this.code,i)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(t){return r.equals(this,t)}static equals(t,e){let i=e;return i!=null&&t.code===i.code&&t.version===i.version&&Fn(t.multihash,i.multihash)}toString(t){return Gn(this,t)}toJSON(){return{"/":Gn(this)}}link(){return this}[Symbol.toStringTag]="CID";[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(t){if(t==null)return null;let e=t;if(e instanceof r)return e;if(e["/"]!=null&&e["/"]===e.bytes||e.asCID===e){let{version:i,code:n,multihash:o,bytes:s}=e;return new r(i,n,o,s??zn(i,n,o.bytes))}else if(e[ps]===!0){let{version:i,multihash:n,code:o}=e,s=Ct(n);return r.create(i,o,s)}else return null}static create(t,e,i){if(typeof e!="number")throw new Error("String codecs are no longer supported");if(!(i.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(t){case 0:{if(e!==jt)throw new Error(`Version 0 CID must use dag-pb (code: ${jt}) block encoding`);return new r(t,e,i,i.bytes)}case 1:{let n=zn(t,e,i.bytes);return new r(t,e,i,n)}default:throw new Error("Invalid version")}}static createV0(t){return r.create(0,jt,t)}static createV1(t,e){return r.create(1,t,e)}static decode(t){let[e,i]=r.decodeFirst(t);if(i.length!==0)throw new Error("Incorrect length");return e}static decodeFirst(t){let e=r.inspectBytes(t),i=e.size-e.multihashSize,n=q(t.subarray(i,i+e.multihashSize));if(n.byteLength!==e.multihashSize)throw new Error("Incorrect length");let o=n.subarray(e.multihashSize-e.digestSize),s=new Mt(e.multihashCode,e.digestSize,o,n);return[e.version===0?r.createV0(s):r.createV1(e.codec,s),t.subarray(e.size)]}static inspectBytes(t){let e=0,i=()=>{let[l,m]=Zt(t.subarray(e));return e+=m,l},n=i(),o=jt;if(n===18?(n=0,e=0):o=i(),n!==0&&n!==1)throw new RangeError(`Invalid CID version ${n}`);let s=e,c=i(),a=i(),g=e+a,u=g-s;return{version:n,codec:o,multihashCode:c,digestSize:a,multihashSize:u,size:g}}static parse(t,e){let[i,n]=ls(t,e),o=r.decode(n);if(o.version===0&&t[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return Lr(o).set(i,t),o}};function ls(r,t){switch(r[0]){case"Q":{let e=t??N;return[N.prefix,e.decode(`${N.prefix}${r}`)]}case N.prefix:{let e=t??N;return[N.prefix,e.decode(r)]}case it.prefix:{let e=t??it;return[it.prefix,e.decode(r)]}default:{if(t==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[r[0],t.decode(r)]}}}function ds(r,t,e){let{prefix:i}=e;if(i!==N.prefix)throw Error(`Cannot string encode V0 in ${e.name} encoding`);let n=t.get(i);if(n==null){let o=e.encode(r).slice(1);return t.set(i,o),o}else return n}function fs(r,t,e){let{prefix:i}=e,n=t.get(i);if(n==null){let o=e.encode(r);return t.set(i,o),o}else return n}var jt=112,hs=18;function zn(r,t,e){let i=Bt(r),n=i+Bt(t),o=new Uint8Array(n+e.byteLength);return Ft(r,o,0),Ft(t,o,i),o.set(e,n),o}var ps=Symbol.for("@ipld/js-cid/CID");var yt={...Ar,...mr,...Ir,...hr,...pr,...yr,...wr,...br,...xr,...gr},Na={...Dr,...Tr};function Kn(r,t,e,i){return{name:r,prefix:t,encoder:{name:r,prefix:t,encode:e},decoder:{decode:i}}}var Hn=Kn("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),Nr=Kn("ascii","a",r=>{let t="a";for(let e=0;e<r.length;e++)t+=String.fromCharCode(r[e]);return t},r=>{r=r.substring(1);let t=Z(r.length);for(let e=0;e<r.length;e++)t[e]=r.charCodeAt(e);return t}),ms={utf8:Hn,"utf-8":Hn,hex:yt.base16,latin1:Nr,ascii:Nr,binary:Nr,...yt},de=ms;function vt(r,t="utf8"){let e=de[t];if(e==null)throw new Error(`Unsupported encoding "${t}"`);return t==="utf8"||t==="utf-8"?It(Wn.Buffer.from(r,"utf-8")):e.decoder.decode(`${e.prefix}${r}`)}function _r(r){let t=r??8192,e=t>>>1,i,n=t;return function(s){if(s<1||s>e)return Z(s);n+s>t&&(i=Z(t),n=0);let c=i.subarray(n,n+=s);return n&7&&(n=(n|7)+1),c}}var St=class{fn;len;next;val;constructor(t,e,i){this.fn=t,this.len=e,this.next=void 0,this.val=i}};function Pr(){}var kr=class{head;tail;len;next;constructor(t){this.head=t.head,this.tail=t.tail,this.len=t.len,this.next=t.states}},gs=_r();function ys(r){return globalThis.Buffer!=null?Z(r):gs(r)}var ee=class{len;head;tail;states;constructor(){this.len=0,this.head=new St(Pr,0,0),this.tail=this.head,this.states=null}_push(t,e,i){return this.tail=this.tail.next=new St(t,e,i),this.len+=e,this}uint32(t){return this.len+=(this.tail=this.tail.next=new Ur((t=t>>>0)<128?1:t<16384?2:t<2097152?3:t<268435456?4:5,t)).len,this}int32(t){return t<0?this._push(fe,10,K.fromNumber(t)):this.uint32(t)}sint32(t){return this.uint32((t<<1^t>>31)>>>0)}uint64(t){let e=K.fromBigInt(t);return this._push(fe,e.length(),e)}uint64Number(t){return this._push(er,B(t),t)}uint64String(t){return this.uint64(BigInt(t))}int64(t){return this.uint64(t)}int64Number(t){return this.uint64Number(t)}int64String(t){return this.uint64String(t)}sint64(t){let e=K.fromBigInt(t).zzEncode();return this._push(fe,e.length(),e)}sint64Number(t){let e=K.fromNumber(t).zzEncode();return this._push(fe,e.length(),e)}sint64String(t){return this.sint64(BigInt(t))}bool(t){return this._push(Or,1,t?1:0)}fixed32(t){return this._push(te,4,t>>>0)}sfixed32(t){return this.fixed32(t)}fixed64(t){let e=K.fromBigInt(t);return this._push(te,4,e.lo)._push(te,4,e.hi)}fixed64Number(t){let e=K.fromNumber(t);return this._push(te,4,e.lo)._push(te,4,e.hi)}fixed64String(t){return this.fixed64(BigInt(t))}sfixed64(t){return this.fixed64(t)}sfixed64Number(t){return this.fixed64Number(t)}sfixed64String(t){return this.fixed64String(t)}float(t){return this._push(bn,4,t)}double(t){return this._push(xn,8,t)}bytes(t){let e=t.length>>>0;return e===0?this._push(Or,1,0):this.uint32(e)._push(bs,e,t)}string(t){let e=Cn(t);return e!==0?this.uint32(e)._push(sr,e,t):this._push(Or,1,0)}fork(){return this.states=new kr(this),this.head=this.tail=new St(Pr,0,0),this.len=0,this}reset(){return this.states!=null?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new St(Pr,0,0),this.len=0),this}ldelim(){let t=this.head,e=this.tail,i=this.len;return this.reset().uint32(i),i!==0&&(this.tail.next=t.next,this.tail=e,this.len+=i),this}finish(){let t=this.head.next,e=ys(this.len),i=0;for(;t!=null;)t.fn(t.val,e,i),i+=t.len,t=t.next;return e}};function Or(r,t,e){t[e]=r&255}function ws(r,t,e){for(;r>127;)t[e++]=r&127|128,r>>>=7;t[e]=r}var Ur=class extends St{next;constructor(t,e){super(ws,t,e),this.next=void 0}};function fe(r,t,e){for(;r.hi!==0;)t[e++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)t[e++]=r.lo&127|128,r.lo=r.lo>>>7;t[e++]=r.lo}function te(r,t,e){t[e]=r&255,t[e+1]=r>>>8&255,t[e+2]=r>>>16&255,t[e+3]=r>>>24}function bs(r,t,e){t.set(r,e)}globalThis.Buffer!=null&&(ee.prototype.bytes=function(r){let t=r.length>>>0;return this.uint32(t),t>0&&this._push(Es,t,r),this},ee.prototype.string=function(r){let t=globalThis.Buffer.byteLength(r);return this.uint32(t),t>0&&this._push(xs,t,r),this});function Es(r,t,e){t.set(r,e)}function xs(r,t,e){r.length<40?sr(r,t,e):t.utf8Write!=null?t.utf8Write(r,e):t.set(vt(r),e)}function Fr(){return new ee}function D(r,t){let e=Fr();return t.encode(r,e,{lengthDelimited:!1}),e.finish()}var Vt;(function(r){r[r.VARINT=0]="VARINT",r[r.BIT64=1]="BIT64",r[r.LENGTH_DELIMITED=2]="LENGTH_DELIMITED",r[r.START_GROUP=3]="START_GROUP",r[r.END_GROUP=4]="END_GROUP",r[r.BIT32=5]="BIT32"})(Vt||(Vt={}));function he(r,t,e,i){return{name:r,type:t,encode:e,decode:i}}function lt(r){function t(n){if(r[n.toString()]==null)throw new Error("Invalid enum value");return r[n]}let e=function(o,s){let c=t(o);s.int32(c)},i=function(o){let s=o.int32();return t(s)};return he("enum",Vt.VARINT,e,i)}function L(r,t){return he("message",Vt.LENGTH_DELIMITED,r,t)}var v;(function(r){let t;(function(n){n.IDENTIFY="IDENTIFY",n.CONNECT="CONNECT",n.STREAM_OPEN="STREAM_OPEN",n.STREAM_HANDLER="STREAM_HANDLER",n.DHT="DHT",n.LIST_PEERS="LIST_PEERS",n.CONNMANAGER="CONNMANAGER",n.DISCONNECT="DISCONNECT",n.PUBSUB="PUBSUB",n.PEERSTORE="PEERSTORE"})(t=r.Type||(r.Type={}));let e;(function(n){n[n.IDENTIFY=0]="IDENTIFY",n[n.CONNECT=1]="CONNECT",n[n.STREAM_OPEN=2]="STREAM_OPEN",n[n.STREAM_HANDLER=3]="STREAM_HANDLER",n[n.DHT=4]="DHT",n[n.LIST_PEERS=5]="LIST_PEERS",n[n.CONNMANAGER=6]="CONNMANAGER",n[n.DISCONNECT=7]="DISCONNECT",n[n.PUBSUB=8]="PUBSUB",n[n.PEERSTORE=9]="PEERSTORE"})(e||(e={})),function(n){n.codec=()=>lt(e)}(t=r.Type||(r.Type={}));let i;r.codec=()=>(i==null&&(i=L((n,o,s={})=>{s.lengthDelimited!==!1&&o.fork(),n.type!=null&&(o.uint32(8),r.Type.codec().encode(n.type,o)),n.connect!=null&&(o.uint32(18),me.codec().encode(n.connect,o)),n.streamOpen!=null&&(o.uint32(26),ge.codec().encode(n.streamOpen,o)),n.streamHandler!=null&&(o.uint32(34),ye.codec().encode(n.streamHandler,o)),n.dht!=null&&(o.uint32(42),j.codec().encode(n.dht,o)),n.connManager!=null&&(o.uint32(50),be.codec().encode(n.connManager,o)),n.disconnect!=null&&(o.uint32(58),Ee.codec().encode(n.disconnect,o)),n.pubsub!=null&&(o.uint32(66),dt.codec().encode(n.pubsub,o)),n.peerStore!=null&&(o.uint32(74),Ae.codec().encode(n.peerStore,o)),s.lengthDelimited!==!1&&o.ldelim()},(n,o)=>{let s={},c=o==null?n.len:n.pos+o;for(;n.pos<c;){let a=n.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(n);break;case 2:s.connect=me.codec().decode(n,n.uint32());break;case 3:s.streamOpen=ge.codec().decode(n,n.uint32());break;case 4:s.streamHandler=ye.codec().decode(n,n.uint32());break;case 5:s.dht=j.codec().decode(n,n.uint32());break;case 6:s.connManager=be.codec().decode(n,n.uint32());break;case 7:s.disconnect=Ee.codec().decode(n,n.uint32());break;case 8:s.pubsub=dt.codec().decode(n,n.uint32());break;case 9:s.peerStore=Ae.codec().decode(n,n.uint32());break;default:n.skipType(a&7);break}}return s})),i),r.encode=n=>D(n,r.codec()),r.decode=n=>R(n,r.codec())})(v||(v={}));var b;(function(r){let t;(function(n){n.OK="OK",n.ERROR="ERROR"})(t=r.Type||(r.Type={}));let e;(function(n){n[n.OK=0]="OK",n[n.ERROR=1]="ERROR"})(e||(e={})),function(n){n.codec=()=>lt(e)}(t=r.Type||(r.Type={}));let i;r.codec=()=>(i==null&&(i=L((n,o,s={})=>{if(s.lengthDelimited!==!1&&o.fork(),n.type!=null&&(o.uint32(8),r.Type.codec().encode(n.type,o)),n.error!=null&&(o.uint32(18),we.codec().encode(n.error,o)),n.streamInfo!=null&&(o.uint32(26),Gt.codec().encode(n.streamInfo,o)),n.identify!=null&&(o.uint32(34),pe.codec().encode(n.identify,o)),n.dht!=null&&(o.uint32(42),ot.codec().encode(n.dht,o)),n.peers!=null)for(let c of n.peers)o.uint32(50),wt.codec().encode(c,o);n.pubsub!=null&&(o.uint32(58),Ie.codec().encode(n.pubsub,o)),n.peerStore!=null&&(o.uint32(66),Ce.codec().encode(n.peerStore,o)),s.lengthDelimited!==!1&&o.ldelim()},(n,o)=>{let s={peers:[]},c=o==null?n.len:n.pos+o;for(;n.pos<c;){let a=n.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(n);break;case 2:s.error=we.codec().decode(n,n.uint32());break;case 3:s.streamInfo=Gt.codec().decode(n,n.uint32());break;case 4:s.identify=pe.codec().decode(n,n.uint32());break;case 5:s.dht=ot.codec().decode(n,n.uint32());break;case 6:s.peers.push(wt.codec().decode(n,n.uint32()));break;case 7:s.pubsub=Ie.codec().decode(n,n.uint32());break;case 8:s.peerStore=Ce.codec().decode(n,n.uint32());break;default:n.skipType(a&7);break}}return s})),i),r.encode=n=>D(n,r.codec()),r.decode=n=>R(n,r.codec())})(b||(b={}));var pe;(function(r){let t;r.codec=()=>(t==null&&(t=L((e,i,n={})=>{if(n.lengthDelimited!==!1&&i.fork(),e.id!=null&&e.id.byteLength>0&&(i.uint32(10),i.bytes(e.id)),e.addrs!=null)for(let o of e.addrs)i.uint32(18),i.bytes(o);n.lengthDelimited!==!1&&i.ldelim()},(e,i)=>{let n={id:new Uint8Array(0),addrs:[]},o=i==null?e.len:e.pos+i;for(;e.pos<o;){let s=e.uint32();switch(s>>>3){case 1:n.id=e.bytes();break;case 2:n.addrs.push(e.bytes());break;default:e.skipType(s&7);break}}return n})),t),r.encode=e=>D(e,r.codec()),r.decode=e=>R(e,r.codec())})(pe||(pe={}));var me;(function(r){let t;r.codec=()=>(t==null&&(t=L((e,i,n={})=>{if(n.lengthDelimited!==!1&&i.fork(),e.peer!=null&&e.peer.byteLength>0&&(i.uint32(10),i.bytes(e.peer)),e.addrs!=null)for(let o of e.addrs)i.uint32(18),i.bytes(o);e.timeout!=null&&(i.uint32(24),i.int64(e.timeout)),n.lengthDelimited!==!1&&i.ldelim()},(e,i)=>{let n={peer:new Uint8Array(0),addrs:[]},o=i==null?e.len:e.pos+i;for(;e.pos<o;){let s=e.uint32();switch(s>>>3){case 1:n.peer=e.bytes();break;case 2:n.addrs.push(e.bytes());break;case 3:n.timeout=e.int64();break;default:e.skipType(s&7);break}}return n})),t),r.encode=e=>D(e,r.codec()),r.decode=e=>R(e,r.codec())})(me||(me={}));var ge;(function(r){let t;r.codec=()=>(t==null&&(t=L((e,i,n={})=>{if(n.lengthDelimited!==!1&&i.fork(),e.peer!=null&&e.peer.byteLength>0&&(i.uint32(10),i.bytes(e.peer)),e.proto!=null)for(let o of e.proto)i.uint32(18),i.string(o);e.timeout!=null&&(i.uint32(24),i.int64(e.timeout)),n.lengthDelimited!==!1&&i.ldelim()},(e,i)=>{let n={peer:new Uint8Array(0),proto:[]},o=i==null?e.len:e.pos+i;for(;e.pos<o;){let s=e.uint32();switch(s>>>3){case 1:n.peer=e.bytes();break;case 2:n.proto.push(e.string());break;case 3:n.timeout=e.int64();break;default:e.skipType(s&7);break}}return n})),t),r.encode=e=>D(e,r.codec()),r.decode=e=>R(e,r.codec())})(ge||(ge={}));var ye;(function(r){let t;r.codec=()=>(t==null&&(t=L((e,i,n={})=>{if(n.lengthDelimited!==!1&&i.fork(),e.addr!=null&&e.addr.byteLength>0&&(i.uint32(10),i.bytes(e.addr)),e.proto!=null)for(let o of e.proto)i.uint32(18),i.string(o);n.lengthDelimited!==!1&&i.ldelim()},(e,i)=>{let n={addr:new Uint8Array(0),proto:[]},o=i==null?e.len:e.pos+i;for(;e.pos<o;){let s=e.uint32();switch(s>>>3){case 1:n.addr=e.bytes();break;case 2:n.proto.push(e.string());break;default:e.skipType(s&7);break}}return n})),t),r.encode=e=>D(e,r.codec()),r.decode=e=>R(e,r.codec())})(ye||(ye={}));var we;(function(r){let t;r.codec=()=>(t==null&&(t=L((e,i,n={})=>{n.lengthDelimited!==!1&&i.fork(),e.msg!=null&&e.msg!==""&&(i.uint32(10),i.string(e.msg)),n.lengthDelimited!==!1&&i.ldelim()},(e,i)=>{let n={msg:""},o=i==null?e.len:e.pos+i;for(;e.pos<o;){let s=e.uint32();switch(s>>>3){case 1:n.msg=e.string();break;default:e.skipType(s&7);break}}return n})),t),r.encode=e=>D(e,r.codec()),r.decode=e=>R(e,r.codec())})(we||(we={}));var Gt;(function(r){let t;r.codec=()=>(t==null&&(t=L((e,i,n={})=>{n.lengthDelimited!==!1&&i.fork(),e.peer!=null&&e.peer.byteLength>0&&(i.uint32(10),i.bytes(e.peer)),e.addr!=null&&e.addr.byteLength>0&&(i.uint32(18),i.bytes(e.addr)),e.proto!=null&&e.proto!==""&&(i.uint32(26),i.string(e.proto)),n.lengthDelimited!==!1&&i.ldelim()},(e,i)=>{let n={peer:new Uint8Array(0),addr:new Uint8Array(0),proto:""},o=i==null?e.len:e.pos+i;for(;e.pos<o;){let s=e.uint32();switch(s>>>3){case 1:n.peer=e.bytes();break;case 2:n.addr=e.bytes();break;case 3:n.proto=e.string();break;default:e.skipType(s&7);break}}return n})),t),r.encode=e=>D(e,r.codec()),r.decode=e=>R(e,r.codec())})(Gt||(Gt={}));var j;(function(r){let t;(function(n){n.FIND_PEER="FIND_PEER",n.FIND_PEERS_CONNECTED_TO_PEER="FIND_PEERS_CONNECTED_TO_PEER",n.FIND_PROVIDERS="FIND_PROVIDERS",n.GET_CLOSEST_PEERS="GET_CLOSEST_PEERS",n.GET_PUBLIC_KEY="GET_PUBLIC_KEY",n.GET_VALUE="GET_VALUE",n.SEARCH_VALUE="SEARCH_VALUE",n.PUT_VALUE="PUT_VALUE",n.PROVIDE="PROVIDE"})(t=r.Type||(r.Type={}));let e;(function(n){n[n.FIND_PEER=0]="FIND_PEER",n[n.FIND_PEERS_CONNECTED_TO_PEER=1]="FIND_PEERS_CONNECTED_TO_PEER",n[n.FIND_PROVIDERS=2]="FIND_PROVIDERS",n[n.GET_CLOSEST_PEERS=3]="GET_CLOSEST_PEERS",n[n.GET_PUBLIC_KEY=4]="GET_PUBLIC_KEY",n[n.GET_VALUE=5]="GET_VALUE",n[n.SEARCH_VALUE=6]="SEARCH_VALUE",n[n.PUT_VALUE=7]="PUT_VALUE",n[n.PROVIDE=8]="PROVIDE"})(e||(e={})),function(n){n.codec=()=>lt(e)}(t=r.Type||(r.Type={}));let i;r.codec=()=>(i==null&&(i=L((n,o,s={})=>{s.lengthDelimited!==!1&&o.fork(),n.type!=null&&(o.uint32(8),r.Type.codec().encode(n.type,o)),n.peer!=null&&(o.uint32(18),o.bytes(n.peer)),n.cid!=null&&(o.uint32(26),o.bytes(n.cid)),n.key!=null&&(o.uint32(34),o.bytes(n.key)),n.value!=null&&(o.uint32(42),o.bytes(n.value)),n.count!=null&&(o.uint32(48),o.int32(n.count)),n.timeout!=null&&(o.uint32(56),o.int64(n.timeout)),s.lengthDelimited!==!1&&o.ldelim()},(n,o)=>{let s={},c=o==null?n.len:n.pos+o;for(;n.pos<c;){let a=n.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(n);break;case 2:s.peer=n.bytes();break;case 3:s.cid=n.bytes();break;case 4:s.key=n.bytes();break;case 5:s.value=n.bytes();break;case 6:s.count=n.int32();break;case 7:s.timeout=n.int64();break;default:n.skipType(a&7);break}}return s})),i),r.encode=n=>D(n,r.codec()),r.decode=n=>R(n,r.codec())})(j||(j={}));var ot;(function(r){let t;(function(n){n.BEGIN="BEGIN",n.VALUE="VALUE",n.END="END"})(t=r.Type||(r.Type={}));let e;(function(n){n[n.BEGIN=0]="BEGIN",n[n.VALUE=1]="VALUE",n[n.END=2]="END"})(e||(e={})),function(n){n.codec=()=>lt(e)}(t=r.Type||(r.Type={}));let i;r.codec=()=>(i==null&&(i=L((n,o,s={})=>{s.lengthDelimited!==!1&&o.fork(),n.type!=null&&(o.uint32(8),r.Type.codec().encode(n.type,o)),n.peer!=null&&(o.uint32(18),wt.codec().encode(n.peer,o)),n.value!=null&&(o.uint32(26),o.bytes(n.value)),s.lengthDelimited!==!1&&o.ldelim()},(n,o)=>{let s={},c=o==null?n.len:n.pos+o;for(;n.pos<c;){let a=n.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(n);break;case 2:s.peer=wt.codec().decode(n,n.uint32());break;case 3:s.value=n.bytes();break;default:n.skipType(a&7);break}}return s})),i),r.encode=n=>D(n,r.codec()),r.decode=n=>R(n,r.codec())})(ot||(ot={}));var wt;(function(r){let t;r.codec=()=>(t==null&&(t=L((e,i,n={})=>{if(n.lengthDelimited!==!1&&i.fork(),e.id!=null&&e.id.byteLength>0&&(i.uint32(10),i.bytes(e.id)),e.addrs!=null)for(let o of e.addrs)i.uint32(18),i.bytes(o);n.lengthDelimited!==!1&&i.ldelim()},(e,i)=>{let n={id:new Uint8Array(0),addrs:[]},o=i==null?e.len:e.pos+i;for(;e.pos<o;){let s=e.uint32();switch(s>>>3){case 1:n.id=e.bytes();break;case 2:n.addrs.push(e.bytes());break;default:e.skipType(s&7);break}}return n})),t),r.encode=e=>D(e,r.codec()),r.decode=e=>R(e,r.codec())})(wt||(wt={}));var be;(function(r){let t;(function(n){n.TAG_PEER="TAG_PEER",n.UNTAG_PEER="UNTAG_PEER",n.TRIM="TRIM"})(t=r.Type||(r.Type={}));let e;(function(n){n[n.TAG_PEER=0]="TAG_PEER",n[n.UNTAG_PEER=1]="UNTAG_PEER",n[n.TRIM=2]="TRIM"})(e||(e={})),function(n){n.codec=()=>lt(e)}(t=r.Type||(r.Type={}));let i;r.codec=()=>(i==null&&(i=L((n,o,s={})=>{s.lengthDelimited!==!1&&o.fork(),n.type!=null&&(o.uint32(8),r.Type.codec().encode(n.type,o)),n.peer!=null&&(o.uint32(18),o.bytes(n.peer)),n.tag!=null&&(o.uint32(26),o.string(n.tag)),n.weight!=null&&(o.uint32(32),o.int64(n.weight)),s.lengthDelimited!==!1&&o.ldelim()},(n,o)=>{let s={},c=o==null?n.len:n.pos+o;for(;n.pos<c;){let a=n.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(n);break;case 2:s.peer=n.bytes();break;case 3:s.tag=n.string();break;case 4:s.weight=n.int64();break;default:n.skipType(a&7);break}}return s})),i),r.encode=n=>D(n,r.codec()),r.decode=n=>R(n,r.codec())})(be||(be={}));var Ee;(function(r){let t;r.codec=()=>(t==null&&(t=L((e,i,n={})=>{n.lengthDelimited!==!1&&i.fork(),e.peer!=null&&e.peer.byteLength>0&&(i.uint32(10),i.bytes(e.peer)),n.lengthDelimited!==!1&&i.ldelim()},(e,i)=>{let n={peer:new Uint8Array(0)},o=i==null?e.len:e.pos+i;for(;e.pos<o;){let s=e.uint32();switch(s>>>3){case 1:n.peer=e.bytes();break;default:e.skipType(s&7);break}}return n})),t),r.encode=e=>D(e,r.codec()),r.decode=e=>R(e,r.codec())})(Ee||(Ee={}));var dt;(function(r){let t;(function(n){n.GET_TOPICS="GET_TOPICS",n.LIST_PEERS="LIST_PEERS",n.PUBLISH="PUBLISH",n.SUBSCRIBE="SUBSCRIBE"})(t=r.Type||(r.Type={}));let e;(function(n){n[n.GET_TOPICS=0]="GET_TOPICS",n[n.LIST_PEERS=1]="LIST_PEERS",n[n.PUBLISH=2]="PUBLISH",n[n.SUBSCRIBE=3]="SUBSCRIBE"})(e||(e={})),function(n){n.codec=()=>lt(e)}(t=r.Type||(r.Type={}));let i;r.codec=()=>(i==null&&(i=L((n,o,s={})=>{s.lengthDelimited!==!1&&o.fork(),n.type!=null&&(o.uint32(8),r.Type.codec().encode(n.type,o)),n.topic!=null&&(o.uint32(18),o.string(n.topic)),n.data!=null&&(o.uint32(26),o.bytes(n.data)),s.lengthDelimited!==!1&&o.ldelim()},(n,o)=>{let s={},c=o==null?n.len:n.pos+o;for(;n.pos<c;){let a=n.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(n);break;case 2:s.topic=n.string();break;case 3:s.data=n.bytes();break;default:n.skipType(a&7);break}}return s})),i),r.encode=n=>D(n,r.codec()),r.decode=n=>R(n,r.codec())})(dt||(dt={}));var xe;(function(r){let t;r.codec=()=>(t==null&&(t=L((e,i,n={})=>{if(n.lengthDelimited!==!1&&i.fork(),e.from!=null&&(i.uint32(10),i.bytes(e.from)),e.data!=null&&(i.uint32(18),i.bytes(e.data)),e.seqno!=null&&(i.uint32(26),i.bytes(e.seqno)),e.topicIDs!=null)for(let o of e.topicIDs)i.uint32(34),i.string(o);e.signature!=null&&(i.uint32(42),i.bytes(e.signature)),e.key!=null&&(i.uint32(50),i.bytes(e.key)),n.lengthDelimited!==!1&&i.ldelim()},(e,i)=>{let n={topicIDs:[]},o=i==null?e.len:e.pos+i;for(;e.pos<o;){let s=e.uint32();switch(s>>>3){case 1:n.from=e.bytes();break;case 2:n.data=e.bytes();break;case 3:n.seqno=e.bytes();break;case 4:n.topicIDs.push(e.string());break;case 5:n.signature=e.bytes();break;case 6:n.key=e.bytes();break;default:e.skipType(s&7);break}}return n})),t),r.encode=e=>D(e,r.codec()),r.decode=e=>R(e,r.codec())})(xe||(xe={}));var Ie;(function(r){let t;r.codec=()=>(t==null&&(t=L((e,i,n={})=>{if(n.lengthDelimited!==!1&&i.fork(),e.topics!=null)for(let o of e.topics)i.uint32(10),i.string(o);if(e.peerIDs!=null)for(let o of e.peerIDs)i.uint32(18),i.bytes(o);n.lengthDelimited!==!1&&i.ldelim()},(e,i)=>{let n={topics:[],peerIDs:[]},o=i==null?e.len:e.pos+i;for(;e.pos<o;){let s=e.uint32();switch(s>>>3){case 1:n.topics.push(e.string());break;case 2:n.peerIDs.push(e.bytes());break;default:e.skipType(s&7);break}}return n})),t),r.encode=e=>D(e,r.codec()),r.decode=e=>R(e,r.codec())})(Ie||(Ie={}));var Ae;(function(r){let t;(function(n){n.UNSPECIFIED="UNSPECIFIED",n.GET_PROTOCOLS="GET_PROTOCOLS",n.GET_PEER_INFO="GET_PEER_INFO"})(t=r.Type||(r.Type={}));let e;(function(n){n[n.UNSPECIFIED=0]="UNSPECIFIED",n[n.GET_PROTOCOLS=1]="GET_PROTOCOLS",n[n.GET_PEER_INFO=2]="GET_PEER_INFO"})(e||(e={})),function(n){n.codec=()=>lt(e)}(t=r.Type||(r.Type={}));let i;r.codec=()=>(i==null&&(i=L((n,o,s={})=>{if(s.lengthDelimited!==!1&&o.fork(),n.type!=null&&(o.uint32(8),r.Type.codec().encode(n.type,o)),n.id!=null&&(o.uint32(18),o.bytes(n.id)),n.protos!=null)for(let c of n.protos)o.uint32(26),o.string(c);s.lengthDelimited!==!1&&o.ldelim()},(n,o)=>{let s={protos:[]},c=o==null?n.len:n.pos+o;for(;n.pos<c;){let a=n.uint32();switch(a>>>3){case 1:s.type=r.Type.codec().decode(n);break;case 2:s.id=n.bytes();break;case 3:s.protos.push(n.string());break;default:n.skipType(a&7);break}}return s})),i),r.encode=n=>D(n,r.codec()),r.decode=n=>R(n,r.codec())})(Ae||(Ae={}));var Ce;(function(r){let t;r.codec=()=>(t==null&&(t=L((e,i,n={})=>{if(n.lengthDelimited!==!1&&i.fork(),e.peer!=null&&(i.uint32(10),wt.codec().encode(e.peer,i)),e.protos!=null)for(let o of e.protos)i.uint32(18),i.string(o);n.lengthDelimited!==!1&&i.ldelim()},(e,i)=>{let n={protos:[]},o=i==null?e.len:e.pos+i;for(;e.pos<o;){let s=e.uint32();switch(s>>>3){case 1:n.peer=wt.codec().decode(e,e.uint32());break;case 2:n.protos.push(e.string());break;default:e.skipType(s&7);break}}return n})),t),r.encode=e=>D(e,r.codec()),r.decode=e=>R(e,r.codec())})(Ce||(Ce={}));var Y=kt(ni(),1);Y.default.formatters.b=r=>r==null?"undefined":N.baseEncode(r);Y.default.formatters.t=r=>r==null?"undefined":it.baseEncode(r);Y.default.formatters.m=r=>r==null?"undefined":Er.baseEncode(r);Y.default.formatters.p=r=>r==null?"undefined":r.toString();Y.default.formatters.c=r=>r==null?"undefined":r.toString();Y.default.formatters.k=r=>r==null?"undefined":r.toString();Y.default.formatters.a=r=>r==null?"undefined":r.toString();function Ks(r){let t=()=>{};return t.enabled=!1,t.color="",t.diff=0,t.log=()=>{},t.namespace=r,t.destroy=()=>!0,t.extend=()=>t,t}function ii(){return{forComponent(r){return Dt(r)}}}function Dt(r){let t=Ks(`${r}:trace`);return Y.default.enabled(`${r}:trace`)&&Y.default.names.map(e=>e.toString()).find(e=>e.includes(":trace"))!=null&&(t=(0,Y.default)(`${r}:trace`)),Object.assign((0,Y.default)(r),{error:(0,Y.default)(`${r}:error`),trace:t})}function Wt(){let r={};return r.promise=new Promise((t,e)=>{r.resolve=t,r.reject=e}),r}var De=class extends Error{type;code;constructor(t,e){super(t??"The operation was aborted"),this.type="aborted",this.name="AbortError",this.code=e??"ABORT_ERR"}};async function oi(r,t,e){if(t==null)return r;if(t.aborted)return Promise.reject(new De(e?.errorMessage,e?.errorCode));let i,n=new De(e?.errorMessage,e?.errorCode);try{return await Promise.race([r,new Promise((o,s)=>{i=()=>{s(n)},t.addEventListener("abort",i)})])}finally{i!=null&&t.removeEventListener("abort",i)}}var Gr=class{readNext;haveNext;ended;nextResult;constructor(){this.ended=!1,this.readNext=Wt(),this.haveNext=Wt()}[Symbol.asyncIterator](){return this}async next(){if(this.nextResult==null&&await this.haveNext.promise,this.nextResult==null)throw new Error("HaveNext promise resolved but nextResult was undefined");let t=this.nextResult;return this.nextResult=void 0,this.readNext.resolve(),this.readNext=Wt(),t}async throw(t){return this.ended=!0,t!=null&&(this.haveNext.promise.catch(()=>{}),this.haveNext.reject(t)),{done:!0,value:void 0}}async return(){let t={done:!0,value:void 0};return await this._push(void 0),t}async push(t,e){await this._push(t,e)}async end(t,e){t!=null?await this.throw(t):await this._push(void 0,e)}async _push(t,e){if(t!=null&&this.ended)throw new Error("Cannot push value onto an ended pushable");for(;this.nextResult!=null;)await this.readNext.promise;t!=null?this.nextResult={done:!1,value:t}:(this.ended=!0,this.nextResult={done:!0,value:void 0}),this.haveNext.resolve(),this.haveNext=Wt(),await oi(this.readNext.promise,e?.signal,e)}};function si(){return new Gr}var ci=$("node:buffer");function tt(r,t){return It(ci.Buffer.concat(r,t))}function Lt(r,t){if(r===t)return!0;if(r.byteLength!==t.byteLength)return!1;for(let e=0;e<r.byteLength;e++)if(r[e]!==t[e])return!1;return!0}var ui=Symbol.for("@achingbrain/uint8arraylist");function ai(r,t){if(t==null||t<0)throw new RangeError("index is out of bounds");let e=0;for(let i of r){let n=e+i.byteLength;if(t<n)return{buf:i,index:t-e};e=n}throw new RangeError("index is out of bounds")}function Le(r){return!!r?.[ui]}var ft=class r{bufs;length;[ui]=!0;constructor(...t){this.bufs=[],this.length=0,t.length>0&&this.appendAll(t)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...t){this.appendAll(t)}appendAll(t){let e=0;for(let i of t)if(i instanceof Uint8Array)e+=i.byteLength,this.bufs.push(i);else if(Le(i))e+=i.byteLength,this.bufs.push(...i.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}prepend(...t){this.prependAll(t)}prependAll(t){let e=0;for(let i of t.reverse())if(i instanceof Uint8Array)e+=i.byteLength,this.bufs.unshift(i);else if(Le(i))e+=i.byteLength,this.bufs.unshift(...i.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}get(t){let e=ai(this.bufs,t);return e.buf[e.index]}set(t,e){let i=ai(this.bufs,t);i.buf[i.index]=e}write(t,e=0){if(t instanceof Uint8Array)for(let i=0;i<t.length;i++)this.set(e+i,t[i]);else if(Le(t))for(let i=0;i<t.length;i++)this.set(e+i,t.get(i));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(t){if(t=Math.trunc(t),!(Number.isNaN(t)||t<=0)){if(t===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(t>=this.bufs[0].byteLength)t-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(t),this.length-=t;break}}}slice(t,e){let{bufs:i,length:n}=this._subList(t,e);return tt(i,n)}subarray(t,e){let{bufs:i,length:n}=this._subList(t,e);return i.length===1?i[0]:tt(i,n)}sublist(t,e){let{bufs:i,length:n}=this._subList(t,e),o=new r;return o.length=n,o.bufs=[...i],o}_subList(t,e){if(t=t??0,e=e??this.length,t<0&&(t=this.length+t),e<0&&(e=this.length+e),t<0||e>this.length)throw new RangeError("index is out of bounds");if(t===e)return{bufs:[],length:0};if(t===0&&e===this.length)return{bufs:this.bufs,length:this.length};let i=[],n=0;for(let o=0;o<this.bufs.length;o++){let s=this.bufs[o],c=n,a=c+s.byteLength;if(n=a,t>=a)continue;let g=t>=c&&t<a,u=e>c&&e<=a;if(g&&u){if(t===c&&e===a){i.push(s);break}let l=t-c;i.push(s.subarray(l,l+(e-t)));break}if(g){if(t===0){i.push(s);continue}i.push(s.subarray(t-c));continue}if(u){if(e===a){i.push(s);break}i.push(s.subarray(0,e-c));break}i.push(s)}return{bufs:i,length:e-t}}indexOf(t,e=0){if(!Le(t)&&!(t instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let i=t instanceof Uint8Array?t:t.subarray();if(e=Number(e??0),isNaN(e)&&(e=0),e<0&&(e=this.length+e),e<0&&(e=0),t.length===0)return e>this.length?this.length:e;let n=i.byteLength;if(n===0)throw new TypeError("search must be at least 1 byte long");let o=256,s=new Int32Array(o);for(let l=0;l<o;l++)s[l]=-1;for(let l=0;l<n;l++)s[i[l]]=l;let c=s,a=this.byteLength-i.byteLength,g=i.byteLength-1,u;for(let l=e;l<=a;l+=u){u=0;for(let m=g;m>=0;m--){let y=this.get(l+m);if(i[m]!==y){u=Math.max(1,m-c[y]);break}}if(u===0)return l}return-1}getInt8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getInt8(0)}setInt8(t,e){let i=Z(1);new DataView(i.buffer,i.byteOffset,i.byteLength).setInt8(0,e),this.write(i,t)}getInt16(t,e){let i=this.subarray(t,t+2);return new DataView(i.buffer,i.byteOffset,i.byteLength).getInt16(0,e)}setInt16(t,e,i){let n=at(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt16(0,e,i),this.write(n,t)}getInt32(t,e){let i=this.subarray(t,t+4);return new DataView(i.buffer,i.byteOffset,i.byteLength).getInt32(0,e)}setInt32(t,e,i){let n=at(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt32(0,e,i),this.write(n,t)}getBigInt64(t,e){let i=this.subarray(t,t+8);return new DataView(i.buffer,i.byteOffset,i.byteLength).getBigInt64(0,e)}setBigInt64(t,e,i){let n=at(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigInt64(0,e,i),this.write(n,t)}getUint8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getUint8(0)}setUint8(t,e){let i=Z(1);new DataView(i.buffer,i.byteOffset,i.byteLength).setUint8(0,e),this.write(i,t)}getUint16(t,e){let i=this.subarray(t,t+2);return new DataView(i.buffer,i.byteOffset,i.byteLength).getUint16(0,e)}setUint16(t,e,i){let n=at(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint16(0,e,i),this.write(n,t)}getUint32(t,e){let i=this.subarray(t,t+4);return new DataView(i.buffer,i.byteOffset,i.byteLength).getUint32(0,e)}setUint32(t,e,i){let n=at(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint32(0,e,i),this.write(n,t)}getBigUint64(t,e){let i=this.subarray(t,t+8);return new DataView(i.buffer,i.byteOffset,i.byteLength).getBigUint64(0,e)}setBigUint64(t,e,i){let n=at(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigUint64(0,e,i),this.write(n,t)}getFloat32(t,e){let i=this.subarray(t,t+4);return new DataView(i.buffer,i.byteOffset,i.byteLength).getFloat32(0,e)}setFloat32(t,e,i){let n=at(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat32(0,e,i),this.write(n,t)}getFloat64(t,e){let i=this.subarray(t,t+8);return new DataView(i.buffer,i.byteOffset,i.byteLength).getFloat64(0,e)}setFloat64(t,e,i){let n=at(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat64(0,e,i),this.write(n,t)}equals(t){if(t==null||!(t instanceof r)||t.bufs.length!==this.bufs.length)return!1;for(let e=0;e<this.bufs.length;e++)if(!Lt(this.bufs[e],t.bufs[e]))return!1;return!0}static fromUint8Arrays(t,e){let i=new r;return i.bufs=t,e==null&&(e=t.reduce((n,o)=>n+o.byteLength,0)),i.length=e,i}};var Ne=class extends Error{code;constructor(t,e){super(t),this.code=e}},$r=class extends Ne{type;constructor(t){super(t,"ABORT_ERR"),this.type="aborted"}};function li(r,t){let e=si();r.sink(e).catch(async s=>{await e.end(s)}),r.sink=async s=>{for await(let c of s)await e.push(c);await e.end()};let i=r.source;r.source[Symbol.iterator]!=null?i=r.source[Symbol.iterator]():r.source[Symbol.asyncIterator]!=null&&(i=r.source[Symbol.asyncIterator]());let n=new ft;return{read:async(s,c)=>{c?.signal?.throwIfAborted();let a,g=new Promise((u,l)=>{a=()=>{l(new $r("Read aborted"))},c?.signal?.addEventListener("abort",a)});try{if(s==null){let{done:l,value:m}=await Promise.race([i.next(),g]);return l===!0?new ft:m}for(;n.byteLength<s;){let{value:l,done:m}=await Promise.race([i.next(),g]);if(m===!0)throw new Ne("unexpected end of input","ERR_UNEXPECTED_EOF");n.append(l)}let u=n.sublist(0,s);return n.consume(s),u}finally{a!=null&&c?.signal?.removeEventListener("abort",a)}},write:async(s,c)=>{c?.signal?.throwIfAborted(),s instanceof Uint8Array?await e.push(s,c):await e.push(s.subarray(),c)},unwrap:()=>{if(n.byteLength>0){let s=r.source;r.source=async function*(){t?.yieldBytes===!1?yield n:yield*n,yield*s}()}return r}}}var _e=class extends Error{code;constructor(t,e){super(t),this.code=e}};function Pe(r,t={}){let e=li(r,t);t.maxDataLength!=null&&t.maxLengthLength==null&&(t.maxLengthLength=B(t.maxDataLength));let i=t?.lengthDecoder??ut,n=t?.lengthEncoder??ht;return{read:async s=>{let c=-1,a=new ft;for(;;){a.append(await e.read(1,s));try{c=i(a)}catch(g){if(g instanceof RangeError)continue;throw g}if(t?.maxLengthLength!=null&&a.byteLength>t.maxLengthLength)throw new _e("message length length too long","ERR_MSG_LENGTH_TOO_LONG");if(c>-1)break}if(t?.maxDataLength!=null&&c>t.maxDataLength)throw new _e("message length too long","ERR_MSG_DATA_TOO_LONG");return e.read(c,s)},write:async(s,c)=>{await e.write(new ft(n(s.byteLength),s),c)},writeV:async(s,c)=>{let a=new ft(...s.flatMap(g=>[n(g.byteLength),g]));await e.write(a,c)},unwrap:()=>e.unwrap()}}var zr=Dt("libp2p:daemon-protocol:stream-handler"),Oe=class{stream;lp;constructor(t){let{stream:e,maxLength:i}=t;this.stream=e,this.lp=Pe(this.stream,{maxDataLength:i??4096})}async read(){try{return await this.lp.read()}catch(t){zr.error("read received no value",t)}}async write(t){zr("write message"),await this.lp.write(t)}rest(){return this.lp.unwrap()}async close(){zr("closing the stream"),await this.rest().close()}};var Hr={upgradeInbound:async r=>r,upgradeOutbound:async r=>r};var ke=Symbol.for("@libp2p/peer-id");function Yt(r){return r!=null&&!!r[ke]}var fi=Symbol.for("@libp2p/transport");var di;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(di||(di={}));var re=class r extends Error{code;type;constructor(t="The operation was aborted"){super(t),this.name="AbortError",this.code=r.code,this.type=r.type}static code="ABORT_ERR";static type="aborted"},f=class extends Error{code;props;constructor(t,e,i){super(t),this.code=e,this.name=i?.name??"CodeError",this.props=i??{}}};var hi=$("events"),pi=(r,...t)=>{try{(0,hi.setMaxListeners)(r,...t)}catch{}};var Ue=class extends EventTarget{#t=new Map;constructor(){super(),pi(1/0,this)}listenerCount(t){let e=this.#t.get(t);return e==null?0:e.length}addEventListener(t,e,i){super.addEventListener(t,e,i);let n=this.#t.get(t);n==null&&(n=[],this.#t.set(t,n)),n.push({callback:e,once:(i!==!0&&i!==!1&&i?.once)??!1})}removeEventListener(t,e,i){super.removeEventListener(t.toString(),e??null,i);let n=this.#t.get(t);n!=null&&(n=n.filter(({callback:o})=>o!==e),this.#t.set(t,n))}dispatchEvent(t){let e=super.dispatchEvent(t),i=this.#t.get(t.type);return i==null||(i=i.filter(({once:n})=>!n),this.#t.set(t.type,i)),e}safeDispatchEvent(t,e={}){return this.dispatchEvent(new Ws(t,e))}},Kr=class extends Event{detail;constructor(t,e){super(t,e),this.detail=e?.detail}},Ws=globalThis.CustomEvent??Kr;var mi=Symbol.for("@libp2p/service-capabilities"),Yu=Symbol.for("@libp2p/service-dependencies");var gi=$("node:buffer");function k(r,t="utf8"){let e=de[t];if(e==null)throw new Error(`Unsupported encoding "${t}"`);return t==="utf8"||t==="utf-8"?gi.Buffer.from(r.buffer,r.byteOffset,r.byteLength).toString("utf8"):e.encoder.encode(r).substring(1)}var wi=Symbol.for("nodejs.util.inspect.custom"),yi=Object.values(yt).map(r=>r.decoder).reduce((r,t)=>r.or(t),yt.identity.decoder),bi=114,Ei=36,xi=37,ne=class{type;multihash;privateKey;publicKey;string;constructor(t){this.type=t.type,this.multihash=t.multihash,this.privateKey=t.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}[ke]=!0;toString(){return this.string==null&&(this.string=N.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return G.createV1(bi,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(t){if(t==null)return!1;if(t instanceof Uint8Array)return Lt(this.multihash.bytes,t);if(typeof t=="string")return Ys(t).equals(this);if(t?.multihash?.bytes!=null)return Lt(this.multihash.bytes,t.multihash.bytes);throw new Error("not valid Id")}[wi](){return`PeerId(${this.toString()})`}},ie=class extends ne{type="RSA";publicKey;constructor(t){super({...t,type:"RSA"}),this.publicKey=t.publicKey}},oe=class extends ne{type="Ed25519";publicKey;constructor(t){super({...t,type:"Ed25519"}),this.publicKey=t.multihash.digest}},se=class extends ne{type="secp256k1";publicKey;constructor(t){super({...t,type:"secp256k1"}),this.publicKey=t.multihash.digest}},Wr=2336,Yr=class{type="url";multihash;privateKey;publicKey;url;constructor(t){this.url=t.toString(),this.multihash=qt.digest(vt(this.url))}[wi](){return`PeerId(${this.url})`}[ke]=!0;toString(){return this.toCID().toString()}toCID(){return G.createV1(Wr,this.multihash)}toBytes(){return this.toCID().bytes}equals(t){return t==null?!1:(t instanceof Uint8Array&&(t=k(t)),t.toString()===this.toString())}};function Ys(r,t){if(t=t??yi,r.charAt(0)==="1"||r.charAt(0)==="Q"){let e=Ct(N.decode(`z${r}`));return r.startsWith("12D")?new oe({multihash:e}):r.startsWith("16U")?new se({multihash:e}):new ie({multihash:e})}return ct(yi.decode(r))}function ct(r){try{let t=Ct(r);if(t.code===qt.code){if(t.digest.length===Ei)return new oe({multihash:t});if(t.digest.length===xi)return new se({multihash:t})}if(t.code===le.code)return new ie({multihash:t})}catch{return Xs(G.decode(r))}throw new Error("Supplied PeerID CID is invalid")}function Xs(r){if(r==null||r.multihash==null||r.version==null||r.version===1&&r.code!==bi&&r.code!==Wr)throw new Error("Supplied PeerID CID is invalid");if(r.code===Wr){let e=k(r.multihash.digest);return new Yr(new URL(e))}let t=r.multihash;if(t.code===le.code)return new ie({multihash:r.multihash});if(t.code===qt.code){if(t.digest.length===Ei)return new oe({multihash:r.multihash});if(t.digest.length===xi)return new se({multihash:r.multihash})}throw new Error("Supplied PeerID CID is invalid")}var Xi=kt($("net"),1);var Fe=class{index=0;input="";new(t){return this.index=0,this.input=t,this}readAtomically(t){let e=this.index,i=t();return i===void 0&&(this.index=e),i}parseWith(t){let e=t();if(this.index===this.input.length)return e}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(t){return this.readAtomically(()=>{let e=this.readChar();if(e===t)return e})}readSeparator(t,e,i){return this.readAtomically(()=>{if(!(e>0&&this.readGivenChar(t)===void 0))return i()})}readNumber(t,e,i,n){return this.readAtomically(()=>{let o=0,s=0,c=this.peekChar();if(c===void 0)return;let a=c==="0",g=2**(8*n)-1;for(;;){let u=this.readAtomically(()=>{let l=this.readChar();if(l===void 0)return;let m=Number.parseInt(l,t);if(!Number.isNaN(m))return m});if(u===void 0)break;if(o*=t,o+=u,o>g||(s+=1,e!==void 0&&s>e))return}if(s!==0)return!i&&a&&s>1?void 0:o})}readIPv4Addr(){return this.readAtomically(()=>{let t=new Uint8Array(4);for(let e=0;e<t.length;e++){let i=this.readSeparator(".",e,()=>this.readNumber(10,3,!1,1));if(i===void 0)return;t[e]=i}return t})}readIPv6Addr(){let t=e=>{for(let i=0;i<e.length/2;i++){let n=i*2;if(i<e.length-3){let s=this.readSeparator(":",i,()=>this.readIPv4Addr());if(s!==void 0)return e[n]=s[0],e[n+1]=s[1],e[n+2]=s[2],e[n+3]=s[3],[n+4,!0]}let o=this.readSeparator(":",i,()=>this.readNumber(16,4,!0,2));if(o===void 0)return[n,!1];e[n]=o>>8,e[n+1]=o&255}return[e.length,!1]};return this.readAtomically(()=>{let e=new Uint8Array(16),[i,n]=t(e);if(i===16)return e;if(n||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;let o=new Uint8Array(14),s=16-(i+2),[c]=t(o.subarray(0,s));return e.set(o.subarray(0,c),16-c),e})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}};var Nl=new Fe;var Ml=parseInt("0xFFFF",16),Vl=new Uint8Array([0,0,0,0,0,0,0,0,0,0,255,255]);var et=$("node:net");function Be(r){return!!(0,et.isIP)(r)}var Ci=et.isIPv4,tc=et.isIPv6,Xr=function(r){let t=0;if(r=r.toString().trim(),Ci(r)){let e=new Uint8Array(t+4);return r.split(/\./g).forEach(i=>{e[t++]=parseInt(i,10)&255}),e}if(tc(r)){let e=r.split(":",8),i;for(i=0;i<e.length;i++){let o=Ci(e[i]),s;o&&(s=Xr(e[i]),e[i]=k(s.slice(0,2),"base16")),s!=null&&++i<8&&e.splice(i,0,k(s.slice(2,4),"base16"))}if(e[0]==="")for(;e.length<8;)e.unshift("0");else if(e[e.length-1]==="")for(;e.length<8;)e.push("0");else if(e.length<8){for(i=0;i<e.length&&e[i]!=="";i++);let o=[i,1];for(i=9-e.length;i>0;i--)o.push("0");e.splice.apply(e,o)}let n=new Uint8Array(t+16);for(i=0;i<e.length;i++){let o=parseInt(e[i],16);n[t++]=o>>8&255,n[t++]=o&255}return n}throw new Error("invalid ip address")},Ti=function(r,t=0,e){t=~~t,e=e??r.length-t;let i=new DataView(r.buffer);if(e===4){let n=[];for(let o=0;o<e;o++)n.push(r[t+o]);return n.join(".")}if(e===16){let n=[];for(let o=0;o<e;o+=2)n.push(i.getUint16(t+o).toString(16));return n.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""};var Xt={},Jr={},rc=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,-1,"ip6zone"],[43,8,"ipcidr"],[53,-1,"dns",!0],[54,-1,"dns4",!0],[55,-1,"dns6",!0],[56,-1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,-1,"unix",!1,!0],[421,-1,"ipfs"],[421,-1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,-1,"garlic64"],[448,0,"tls"],[449,-1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,-1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[481,-1,"http-path"],[777,-1,"memory"]];rc.forEach(r=>{let t=nc(...r);Jr[t.code]=t,Xt[t.name]=t});function nc(r,t,e,i,n){return{code:r,size:t,name:e,resolvable:!!i,path:!!n}}function A(r){if(typeof r=="number"){if(Jr[r]!=null)return Jr[r];throw new Error(`no protocol with code: ${r}`)}else if(typeof r=="string"){if(Xt[r]!=null)return Xt[r];throw new Error(`no protocol with name: ${r}`)}throw new Error(`invalid protocol id type: ${typeof r}`)}var Cd=A("ip4"),Td=A("ip6"),vd=A("ipcidr");function jr(r,t){switch(A(r).code){case 4:case 41:return oc(t);case 42:return qr(t);case 6:case 273:case 33:case 132:return Ri(t).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return qr(t);case 421:return uc(t);case 444:return Si(t);case 445:return Si(t);case 466:return ac(t);case 481:return globalThis.encodeURIComponent(qr(t));default:return k(t,"base16")}}function tn(r,t){switch(A(r).code){case 4:return vi(t);case 41:return vi(t);case 42:return Zr(t);case 6:case 273:case 33:case 132:return en(parseInt(t,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return Zr(t);case 421:return sc(t);case 444:return lc(t);case 445:return dc(t);case 466:return cc(t);case 481:return Zr(globalThis.decodeURIComponent(t));default:return vt(t,"base16")}}var Qr=Object.values(yt).map(r=>r.decoder),ic=function(){let r=Qr[0].or(Qr[1]);return Qr.slice(2).forEach(t=>r=r.or(t)),r}();function vi(r){if(!Be(r))throw new Error("invalid ip address");return Xr(r)}function oc(r){let t=Ti(r,0,r.length);if(t==null)throw new Error("ipBuff is required");if(!Be(t))throw new Error("invalid ip address");return t}function en(r){let t=new ArrayBuffer(2);return new DataView(t).setUint16(0,r),new Uint8Array(t)}function Ri(r){return new DataView(r.buffer).getUint16(r.byteOffset)}function Zr(r){let t=vt(r),e=Uint8Array.from(ht(t.length));return tt([e,t],e.length+t.length)}function qr(r){let t=ut(r);if(r=r.slice(B(t)),r.length!==t)throw new Error("inconsistent lengths");return k(r)}function sc(r){let t;r[0]==="Q"||r[0]==="1"?t=Ct(N.decode(`z${r}`)).bytes:t=G.parse(r).multihash.bytes;let e=Uint8Array.from(ht(t.length));return tt([e,t],e.length+t.length)}function cc(r){let t=ic.decode(r),e=Uint8Array.from(ht(t.length));return tt([e,t],e.length+t.length)}function ac(r){let t=ut(r),e=r.slice(B(t));if(e.length!==t)throw new Error("inconsistent lengths");return"u"+k(e,"base64url")}function uc(r){let t=ut(r),e=r.slice(B(t));if(e.length!==t)throw new Error("inconsistent lengths");return k(e,"base58btc")}function lc(r){let t=r.split(":");if(t.length!==2)throw new Error(`failed to parse onion addr: ["'${t.join('", "')}'"]' does not contain a port number`);if(t[0].length!==16)throw new Error(`failed to parse onion addr: ${t[0]} not a Tor onion address.`);let e=it.decode("b"+t[0]),i=parseInt(t[1],10);if(i<1||i>65536)throw new Error("Port number is not in range(1, 65536)");let n=en(i);return tt([e,n],e.length+n.length)}function dc(r){let t=r.split(":");if(t.length!==2)throw new Error(`failed to parse onion addr: ["'${t.join('", "')}'"]' does not contain a port number`);if(t[0].length!==56)throw new Error(`failed to parse onion addr: ${t[0]} not a Tor onion3 address.`);let e=it.decode(`b${t[0]}`),i=parseInt(t[1],10);if(i<1||i>65536)throw new Error("Port number is not in range(1, 65536)");let n=en(i);return tt([e,n],e.length+n.length)}function Si(r){let t=r.slice(0,r.length-2),e=r.slice(r.length-2),i=k(t,"base32"),n=Ri(e);return`${i}:${n}`}function Di(r){r=rn(r);let t=[],e=[],i=null,n=r.split("/").slice(1);if(n.length===1&&n[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let o=0;o<n.length;o++){let s=n[o],c=A(s);if(c.size===0){t.push([c.code]),e.push([c.code]);continue}if(o++,o>=n.length)throw Ni("invalid address: "+r);if(c.path===!0){i=rn(n.slice(o).join("/")),t.push([c.code,tn(c.code,i)]),e.push([c.code,i]);break}let a=tn(c.code,n[o]);t.push([c.code,a]),e.push([c.code,jr(c.code,a)])}return{string:Li(e),bytes:on(t),tuples:t,stringTuples:e,path:i}}function nn(r){let t=[],e=[],i=null,n=0;for(;n<r.length;){let o=ut(r,n),s=B(o),c=A(o),a=fc(c,r.slice(n+s));if(a===0){t.push([o]),e.push([o]),n+=s;continue}let g=r.slice(n+s,n+s+a);if(n+=a+s,n>r.length)throw Ni("Invalid address Uint8Array: "+k(r,"base16"));t.push([o,g]);let u=jr(o,g);if(e.push([o,u]),c.path===!0){i=u;break}}return{bytes:Uint8Array.from(r),string:Li(e),tuples:t,stringTuples:e,path:i}}function Li(r){let t=[];return r.map(e=>{let i=A(e[0]);return t.push(i.name),e.length>1&&e[1]!=null&&t.push(e[1]),null}),rn(t.join("/"))}function on(r){return tt(r.map(t=>{let e=A(t[0]),i=Uint8Array.from(ht(e.code));return t.length>1&&t[1]!=null&&(i=tt([i,t[1]])),i}))}function fc(r,t){if(r.size>0)return r.size/8;if(r.size===0)return 0;{let e=ut(t instanceof Uint8Array?t:Uint8Array.from(t));return e+B(e)}}function rn(r){return"/"+r.trim().split("/").filter(t=>t).join("/")}function Ni(r){return new Error("Error parsing address: "+r)}var hc=Symbol.for("nodejs.util.inspect.custom"),sn=Symbol.for("@multiformats/js-multiaddr/multiaddr"),pc=[A("dns").code,A("dns4").code,A("dns6").code,A("dnsaddr").code],Me=class r{bytes;#t;#e;#r;#n;[sn]=!0;constructor(t){t==null&&(t="");let e;if(t instanceof Uint8Array)e=nn(t);else if(typeof t=="string"){if(t.length>0&&t.charAt(0)!=="/")throw new Error(`multiaddr "${t}" must start with a "/"`);e=Di(t)}else if(Ve(t))e=nn(t.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=e.bytes,this.#t=e.string,this.#e=e.tuples,this.#r=e.stringTuples,this.#n=e.path}toString(){return this.#t}toJSON(){return this.toString()}toOptions(){let t,e,i,n,o="",s=A("tcp"),c=A("udp"),a=A("ip4"),g=A("ip6"),u=A("dns6"),l=A("ip6zone");for(let[y,p]of this.stringTuples())y===l.code&&(o=`%${p??""}`),pc.includes(y)&&(e=s.name,n=443,i=`${p??""}${o}`,t=y===u.code?6:4),(y===s.code||y===c.code)&&(e=A(y).name,n=parseInt(p??"")),(y===a.code||y===g.code)&&(e=A(y).name,i=`${p??""}${o}`,t=y===g.code?6:4);if(t==null||e==null||i==null||n==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:t,host:i,transport:e,port:n}}protos(){return this.#e.map(([t])=>Object.assign({},A(t)))}protoCodes(){return this.#e.map(([t])=>t)}protoNames(){return this.#e.map(([t])=>A(t).name)}tuples(){return this.#e}stringTuples(){return this.#r}encapsulate(t){return t=new r(t),new r(this.toString()+t.toString())}decapsulate(t){let e=t.toString(),i=this.toString(),n=i.lastIndexOf(e);if(n<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${t.toString()}`);return new r(i.slice(0,n))}decapsulateCode(t){let e=this.tuples();for(let i=e.length-1;i>=0;i--)if(e[i][0]===t)return new r(on(e.slice(0,i)));return this}getPeerId(){try{let t=[];this.stringTuples().forEach(([i,n])=>{i===Xt.p2p.code&&t.push([i,n]),i===Xt["p2p-circuit"].code&&(t=[])});let e=t.pop();if(e?.[1]!=null){let i=e[1];return i[0]==="Q"||i[0]==="1"?k(N.decode(`z${i}`),"base58btc"):k(G.parse(i).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return this.#n}equals(t){return Lt(this.bytes,t.bytes)}async resolve(t){let e=this.protos().find(o=>o.resolvable);if(e==null)return[this];let i=_i.get(e.name);if(i==null)throw new f(`no available resolver for ${e.name}`,"ERR_NO_AVAILABLE_RESOLVER");return(await i(this,t)).map(o=>U(o))}nodeAddress(){let t=this.toOptions();if(t.transport!=="tcp"&&t.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${t.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:t.family,address:t.host,port:t.port}}isThinWaistAddress(t){let e=(t??this).protos();return!(e.length!==2||e[0].code!==4&&e[0].code!==41||e[1].code!==6&&e[1].code!==273)}[hc](){return`Multiaddr(${this.#t})`}};var _i=new Map;function Ve(r){return!!r?.[sn]}function U(r){return new Me(r)}var mc=d("dns4"),gc=d("dns6"),yc=d("dnsaddr"),_t=S(d("dns"),yc,mc,gc),ze=S(d("ip4"),d("ip6")),Et=S(h(ze,d("tcp")),h(_t,d("tcp"))),He=h(ze,d("udp")),wc=h(He,d("utp")),bc=h(He,d("quic")),Ec=h(He,d("quic-v1")),cn=S(h(Et,d("ws")),h(_t,d("ws"))),Ge=S(h(cn,d("p2p")),cn),an=S(h(Et,d("wss")),h(_t,d("wss")),h(Et,d("tls"),d("ws")),h(_t,d("tls"),d("ws"))),$e=S(h(an,d("p2p")),an),un=S(h(Et,d("http")),h(ze,d("http")),h(_t,d("http"))),ln=S(h(Et,d("https")),h(ze,d("https")),h(_t,d("https"))),Pi=h(He,d("webrtc-direct"),d("certhash")),Ui=S(h(Pi,d("p2p")),Pi),Oi=h(Ec,d("webtransport"),d("certhash"),d("certhash")),Fi=S(h(Oi,d("p2p")),Oi),Bi=S(h(Ge,d("p2p-webrtc-star"),d("p2p")),h($e,d("p2p-webrtc-star"),d("p2p")),h(Ge,d("p2p-webrtc-star")),h($e,d("p2p-webrtc-star"))),qd=S(h(Ge,d("p2p-websocket-star"),d("p2p")),h($e,d("p2p-websocket-star"),d("p2p")),h(Ge,d("p2p-websocket-star")),h($e,d("p2p-websocket-star"))),Mi=S(h(un,d("p2p-webrtc-direct"),d("p2p")),h(ln,d("p2p-webrtc-direct"),d("p2p")),h(un,d("p2p-webrtc-direct")),h(ln,d("p2p-webrtc-direct"))),Pt=S(cn,an,un,ln,Bi,Mi,Et,wc,bc,_t,Ui,Fi),jd=S(h(Pt,d("p2p-stardust"),d("p2p")),h(Pt,d("p2p-stardust"))),bt=S(h(Pt,d("p2p")),Bi,Mi,Ui,Fi,d("p2p")),ki=S(h(bt,d("p2p-circuit"),bt),h(bt,d("p2p-circuit")),h(d("p2p-circuit"),bt),h(Pt,d("p2p-circuit")),h(d("p2p-circuit"),Pt),d("p2p-circuit")),Vi=()=>S(h(ki,Vi),ki),Nt=Vi(),tf=S(h(Nt,bt,Nt),h(bt,Nt),h(Nt,bt),Nt,bt);var ef=S(h(Nt,d("webrtc"),d("p2p")),h(Nt,d("webrtc")),h(Pt,d("webrtc"),d("p2p")),h(Pt,d("webrtc")),d("webrtc"));function Gi(r){function t(e){let i;try{i=U(e)}catch{return!1}let n=r(i.protoNames());return n===null?!1:n===!0||n===!1?n:n.length===0}return t}function h(...r){function t(e){if(e.length<r.length)return null;let i=e;return r.some(n=>(i=typeof n=="function"?n().partialMatch(e):n.partialMatch(e),Array.isArray(i)&&(e=i),i===null)),i}return{toString:function(){return"{ "+r.join(" ")+" }"},input:r,matches:Gi(t),partialMatch:t}}function S(...r){function t(i){let n=null;return r.some(o=>{let s=typeof o=="function"?o().partialMatch(i):o.partialMatch(i);return s!=null?(n=s,!0):!1}),n}return{toString:function(){return"{ "+r.join(" ")+" }"},input:r,matches:Gi(t),partialMatch:t}}function d(r){let t=r;function e(n){let o;try{o=U(n)}catch{return!1}let s=o.protoNames();return s.length===1&&s[0]===t}function i(n){return n.length===0?null:n[0]===t?n.slice(1):null}return{toString:function(){return t},matches:e,partialMatch:i}}var Ke=class extends Event{type;detail;constructor(t,e){super(t),this.type=t,this.detail=e}};var Yi=kt($("net"),1);var dn={ERR_INVALID_IP_PARAMETER:"ERR_INVALID_IP_PARAMETER",ERR_INVALID_PORT_PARAMETER:"ERR_INVALID_PORT_PARAMETER",ERR_INVALID_IP:"ERR_INVALID_IP"};function $i(r,t){if(typeof r!="string")throw new f(`invalid ip provided: ${r}`,dn.ERR_INVALID_IP_PARAMETER);if(typeof t=="string"&&(t=parseInt(t)),isNaN(t))throw new f(`invalid port provided: ${t}`,dn.ERR_INVALID_PORT_PARAMETER);if((0,et.isIPv4)(r))return U(`/ip4/${r}/tcp/${t}`);if((0,et.isIPv6)(r))return U(`/ip6/${r}/tcp/${t}`);throw new f(`invalid ip:port for creating a multiaddr: ${r}:${t}`,dn.ERR_INVALID_IP)}function zi(r){if(Ac(r))return async function*(){let t=r.getReader();try{for(;;){let{done:e,value:i}=await t.read();if(e)return;yield i}}finally{t.releaseLock()}}();if(Ic(r))return r;throw new Error("unknown stream")}function Ic(r){return r[Symbol.asyncIterator]!=null}function Ac(r){return typeof r?.getReader=="function"}function Hi(r){return async t=>{let e=async()=>{Cc(t)&&await t.return(void 0)},i,n,o=E=>{i=E,e().catch(C=>{C=new AggregateError([i,C],"The Writable emitted an error, additionally an error occurred while ending the Source")}).finally(()=>{n?.(E)})},s,c=!1,a=()=>{c=!0,s?.()},g,u=!1,l=()=>{u=!0,g?.()},m,y=()=>{m?.()},p=async()=>new Promise((E,C)=>{s=m=E,n=C,r.once("drain",y)}),w=async()=>(await e(),new Promise((E,C)=>{if(c||u||i!=null){E();return}g=s=E,n=C})),I=()=>{r.removeListener("error",o),r.removeListener("close",a),r.removeListener("finish",l),r.removeListener("drain",y)};r.once("error",o),r.once("close",a),r.once("finish",l);try{for await(let E of t){if(!r.writable||r.destroyed||i!=null)break;r.write(E)||await p()}}catch(E){i==null&&r.destroy(E),i=E}try{if(r.writable&&r.end(),await w(),i!=null)throw i}finally{I()}}}function Cc(r){return r.return!=null}function fn(r){return{sink:Hi(r),source:zi(r)}}var hn=kt($("os"),1),Ki=kt($("path"),1);var Tc={ip4:"IPv4",ip6:"IPv6"};function Jt(r,t={}){let e=r.getPath();return e!=null?hn.default.platform()==="win32"?{path:Ki.default.join("\\\\.\\pipe\\",e)}:{path:e}:{...t,...r.toOptions()}}function pn(r,t,e){let i=n=>U(`/${r}/${n}/tcp/${e}`);return(vc(t)?Rc(Tc[r]):[t]).map(i)}function vc(r){return["0.0.0.0","::"].includes(r)}var Sc=hn.default.networkInterfaces();function Rc(r){let t=[];for(let[,e]of Object.entries(Sc))if(e!=null)for(let i of e)i.family===r&&t.push(i.address);return t}var We=(r,t)=>{let e=null,i=t.logger.forComponent("libp2p:tcp:socket"),n=t.metrics,o=t.metricPrefix??"",s=t.socketInactivityTimeout??3e5,c=t.socketCloseTimeout??500;t.listeningAddr?.getPath()!=null&&(t.remoteAddr=t.listeningAddr),t.remoteAddr?.getPath()!=null&&(t.localAddr=t.remoteAddr);let a;if(t.remoteAddr!=null)a=t.remoteAddr;else{if(r.remoteAddress==null||r.remotePort==null)throw new f("Could not determine remote address or port","ERR_NO_REMOTE_ADDRESS");a=$i(r.remoteAddress,r.remotePort)}let g=Jt(a),u=g.path??`${g.host??""}:${g.port??""}`,{sink:l,source:m}=fn(r);r.setTimeout(s,()=>{i("%s socket read timeout",u),n?.increment({[`${o}timeout`]:!0});let p;r.readable&&(p=new f("Socket read timeout","ERR_SOCKET_READ_TIMEOUT")),r.destroy(p)}),r.once("close",()=>{i("%s socket close",u),n?.increment({[`${o}close`]:!0}),y.timeline.close==null&&(y.timeline.close=Date.now())}),r.once("end",()=>{i("%s socket end",u),n?.increment({[`${o}end`]:!0})});let y={async sink(p){try{await l(async function*(){for await(let w of p)w instanceof Uint8Array?yield w:yield w.subarray()}())}catch(w){w.type!=="aborted"&&i.error("%s error in sink",u,w)}r.end()},source:m,remoteAddr:a,timeline:{open:Date.now()},async close(p={}){if(r.destroyed){i("The %s socket is destroyed",u);return}if(e!=null)return i("The %s socket is closed or closing",u),e;if(p.signal==null){let I=AbortSignal.timeout(c);p={...p,signal:I}}let w=()=>{r.destroy(new f("Destroying socket after timeout","ERR_CLOSE_TIMEOUT"))};p.signal?.addEventListener("abort",w);try{i("%s closing socket",u),e=new Promise((I,E)=>{r.once("close",()=>{i("%s socket closed",u),I()}),r.once("error",C=>{i("%s socket error",u,C),y.timeline.close==null&&(y.timeline.close=Date.now()),r.destroyed||E(C)}),r.setTimeout(c),r.end(),r.writableLength>0?r.once("drain",()=>{i("%s socket drained",u),r.destroy()}):r.destroy()}),await e}catch(I){this.abort(I)}finally{p.signal?.removeEventListener("abort",w)}},abort:p=>{i("%s socket abort due to error",u,p),r.destroyed||r.destroy(p),y.timeline.close==null&&(y.timeline.close=Date.now())},log:i};return y};async function Wi(r,t){try{await r.close()}catch(e){t.log.error("an error occurred closing the connection",e),r.abort(e)}}var P;(function(r){r[r.INACTIVE=0]="INACTIVE",r[r.ACTIVE=1]="ACTIVE",r[r.PAUSED=2]="PAUSED"})(P||(P={}));var Ye=class extends Ue{context;server;connections=new Set;status={code:P.INACTIVE};metrics;addr;log;constructor(t){if(super(),this.context=t,t.keepAlive=t.keepAlive??!0,t.noDelay=t.noDelay??!0,this.log=t.logger.forComponent("libp2p:tcp:listener"),this.addr="unknown",this.server=Yi.default.createServer(t,this.onSocket.bind(this)),t.maxConnections!==void 0&&(this.server.maxConnections=t.maxConnections),t.closeServerOnMaxConnections!=null&&t.closeServerOnMaxConnections.closeAbove<t.closeServerOnMaxConnections.listenBelow)throw new f("closeAbove must be >= listenBelow","ERR_CONNECTION_LIMITS");this.server.on("listening",()=>{if(t.metrics!=null){let e=this.server.address();e==null?this.addr="unknown":typeof e=="string"?this.addr=e:this.addr=`${e.address}:${e.port}`,t.metrics?.registerMetricGroup("libp2p_tcp_inbound_connections_total",{label:"address",help:"Current active connections in TCP listener",calculate:()=>({[this.addr]:this.connections.size})}),this.metrics={status:t.metrics.registerMetricGroup("libp2p_tcp_listener_status_info",{label:"address",help:"Current status of the TCP listener socket"}),errors:t.metrics.registerMetricGroup("libp2p_tcp_listener_errors_total",{label:"address",help:"Total count of TCP listener errors by type"}),events:t.metrics.registerMetricGroup("libp2p_tcp_listener_events_total",{label:"address",help:"Total count of TCP listener events by type"})},this.metrics?.status.update({[this.addr]:P.ACTIVE})}this.safeDispatchEvent("listening")}).on("error",e=>{this.metrics?.errors.increment({[`${this.addr} listen_error`]:!0}),this.safeDispatchEvent("error",{detail:e})}).on("close",()=>{this.metrics?.status.update({[this.addr]:this.status.code}),this.status.code!==P.PAUSED&&this.safeDispatchEvent("close")})}onSocket(t){if(this.status.code!==P.ACTIVE)throw new f("Server is not listening yet","ERR_SERVER_NOT_RUNNING");t.on("error",i=>{this.log("socket error",i),this.metrics?.events.increment({[`${this.addr} error`]:!0})});let e;try{e=We(t,{listeningAddr:this.status.listeningAddr,socketInactivityTimeout:this.context.socketInactivityTimeout,socketCloseTimeout:this.context.socketCloseTimeout,metrics:this.metrics?.events,metricPrefix:`${this.addr} `,logger:this.context.logger})}catch(i){this.log.error("inbound connection failed",i),this.metrics?.errors.increment({[`${this.addr} inbound_to_connection`]:!0});return}this.log("new inbound connection %s",e.remoteAddr);try{this.context.upgrader.upgradeInbound(e).then(i=>{this.log("inbound connection upgraded %s",e.remoteAddr),this.connections.add(e),t.once("close",()=>{this.connections.delete(e),this.context.closeServerOnMaxConnections!=null&&this.connections.size<this.context.closeServerOnMaxConnections.listenBelow&&this.resume().catch(n=>{this.log.error("error attempting to listen server once connection count under limit",n),this.context.closeServerOnMaxConnections?.onListenError?.(n)})}),this.context.handler!=null&&this.context.handler(i),this.context.closeServerOnMaxConnections!=null&&this.connections.size>=this.context.closeServerOnMaxConnections.closeAbove&&this.pause(!1).catch(n=>{this.log.error("error attempting to close server once connection count over limit",n)}),this.safeDispatchEvent("connection",{detail:i})}).catch(async i=>{this.log.error("inbound connection failed",i),this.metrics?.errors.increment({[`${this.addr} inbound_upgrade`]:!0}),await Wi(e,{log:this.log})}).catch(i=>{this.log.error("closing inbound connection failed",i)})}catch(i){this.log.error("inbound connection failed",i),Wi(e,{log:this.log}).catch(n=>{this.log.error("closing inbound connection failed",n),this.metrics?.errors.increment({[`${this.addr} inbound_closing_failed`]:!0})})}}getAddrs(){if(this.status.code===P.INACTIVE)return[];let t=[],e=this.server.address(),{listeningAddr:i,peerId:n}=this.status;if(e==null)return[];if(typeof e=="string")t=[i];else try{i.toString().startsWith("/ip4")?t=t.concat(pn("ip4",e.address,e.port)):e.family==="IPv6"&&(t=t.concat(pn("ip6",e.address,e.port)))}catch(o){this.log.error("could not turn %s:%s into multiaddr",e.address,e.port,o)}return t.map(o=>n!=null?o.encapsulate(`/p2p/${n}`):o)}async listen(t){if(this.status.code===P.ACTIVE||this.status.code===P.PAUSED)throw new f("server is already listening","ERR_SERVER_ALREADY_LISTENING");let e=t.getPeerId(),i=e==null?t.decapsulateCode(421):t,{backlog:n}=this.context;try{this.status={code:P.ACTIVE,listeningAddr:i,peerId:e,netConfig:Jt(i,{backlog:n})},await this.resume()}catch(o){throw this.status={code:P.INACTIVE},o}}async close(){let t=new f("Listener is closing","ERR_LISTENER_CLOSING");this.connections.forEach(e=>{e.abort(t)}),await this.pause(!0)}async resume(){if(this.server.listening||this.status.code===P.INACTIVE)return;let t=this.status.netConfig;await new Promise((e,i)=>{this.server.once("error",i),this.server.listen(t,e)}),this.status={...this.status,code:P.ACTIVE},this.log("listening on %s",this.server.address())}async pause(t){if(!this.server.listening&&this.status.code===P.PAUSED&&t){this.status={code:P.INACTIVE};return}!this.server.listening||this.status.code!==P.ACTIVE||(this.log("closing server on %s",this.server.address()),this.status=t?{code:P.INACTIVE}:{...this.status,code:P.PAUSED},await new Promise((e,i)=>{this.server.close(n=>{if(n!=null){i(n);return}e()})}))}};var mn=class{opts;metrics;components;log;constructor(t,e={}){this.log=t.logger.forComponent("libp2p:tcp"),this.opts=e,this.components=t,t.metrics!=null&&(this.metrics={dialerEvents:t.metrics.registerCounterGroup("libp2p_tcp_dialer_events_total",{label:"event",help:"Total count of TCP dialer events by type"})})}[fi]=!0;[Symbol.toStringTag]="@libp2p/tcp";[mi]=["@libp2p/transport"];async dial(t,e){e.keepAlive=e.keepAlive??!0,e.noDelay=e.noDelay??!0;let i=await this._connect(t,e);i.on("error",c=>{this.log("socket error",c)});let n=We(i,{remoteAddr:t,socketInactivityTimeout:this.opts.outboundSocketInactivityTimeout,socketCloseTimeout:this.opts.socketCloseTimeout,metrics:this.metrics?.dialerEvents,logger:this.components.logger}),o=()=>{n.close().catch(c=>{this.log.error("Error closing maConn after abort",c)})};e.signal?.addEventListener("abort",o,{once:!0}),this.log("new outbound connection %s",n.remoteAddr);let s=await e.upgrader.upgradeOutbound(n);if(this.log("outbound connection %s upgraded",n.remoteAddr),e.signal?.removeEventListener("abort",o),e.signal?.aborted===!0)throw s.close().catch(c=>{this.log.error("Error closing conn after abort",c)}),new re;return s}async _connect(t,e){return e.signal?.throwIfAborted(),e.onProgress?.(new Ke("tcp:open-connection")),new Promise((i,n)=>{let o=Date.now(),s=Jt(t,{...this.opts.dialOpts??{},...e});this.log("dialing %a",t);let c=Xi.default.connect(s),a=y=>{let p=s.path??`${s.host??""}:${s.port}`;y.message=`connection error ${p}: ${y.message}`,this.metrics?.dialerEvents.increment({error:!0}),m(y)},g=()=>{this.log("connection timeout %a",t),this.metrics?.dialerEvents.increment({timeout:!0});let y=new f(`connection timeout after ${Date.now()-o}ms`,"ERR_CONNECT_TIMEOUT");c.emit("error",y)},u=()=>{this.log("connection opened %a",t),this.metrics?.dialerEvents.increment({connect:!0}),m()},l=()=>{this.log("connection aborted %a",t),this.metrics?.dialerEvents.increment({abort:!0}),c.destroy(),m(new re)},m=y=>{if(c.removeListener("error",a),c.removeListener("timeout",g),c.removeListener("connect",u),e.signal!=null&&e.signal.removeEventListener("abort",l),y!=null){n(y);return}i(c)};c.on("error",a),c.on("timeout",g),c.on("connect",u),e.signal!=null&&e.signal.addEventListener("abort",l)})}createListener(t){return new Ye({...this.opts.listenOpts??{},...t,maxConnections:this.opts.maxConnections,backlog:this.opts.backlog,closeServerOnMaxConnections:this.opts.closeServerOnMaxConnections,socketInactivityTimeout:this.opts.inboundSocketInactivityTimeout,socketCloseTimeout:this.opts.socketCloseTimeout,metrics:this.components.metrics,logger:this.components.logger})}listenFilter(t){return t=Array.isArray(t)?t:[t],t.filter(e=>e.protoCodes().includes(290)?!1:e.protoCodes().includes(400)?!0:Et.matches(e.decapsulateCode(421)))}dialFilter(t){return this.listenFilter(t)}};function Ji(r={}){return t=>new mn(t,r)}function Qi(r,t){let e=Pe(r,t),i={read:async(n,o)=>{let s=await e.read(o);return n.decode(s)},write:async(n,o,s)=>{await e.write(o.encode(n),s)},writeV:async(n,o,s)=>{await e.writeV(n.map(c=>o.encode(c)),s)},pb:n=>({read:async o=>i.read(n,o),write:async(o,s)=>i.write(o,n,s),writeV:async(o,s)=>i.writeV(o,n,s),unwrap:()=>i}),unwrap:()=>e.unwrap()};return i}var Lc=Dt("libp2p:daemon-client:dht"),Xe=class{client;constructor(t){this.client=t}async put(t,e){if(!(t instanceof Uint8Array))throw new f("invalid key received","ERR_INVALID_KEY");if(!(e instanceof Uint8Array))throw new f("value received is not a Uint8Array","ERR_INVALID_VALUE");let i=await this.client.send({type:v.Type.DHT,dht:{type:j.Type.PUT_VALUE,key:t,value:e}}),n=await i.read(b);if(Lc("read",n),await i.unwrap().close(),n.type!==b.Type.OK)throw new f(n.error?.msg??"DHT put failed","ERR_DHT_PUT_FAILED")}async get(t){if(!(t instanceof Uint8Array))throw new f("invalid key received","ERR_INVALID_KEY");let e=await this.client.send({type:v.Type.DHT,dht:{type:j.Type.GET_VALUE,key:t}}),i=await e.read(b);if(await e.unwrap().close(),i.type!==b.Type.OK)throw new f(i.error?.msg??"DHT get failed","ERR_DHT_GET_FAILED");if(i.dht==null||i.dht.value==null)throw new f("Invalid DHT get response","ERR_DHT_GET_FAILED");return i.dht.value}async findPeer(t){if(!Yt(t))throw new f("invalid peer id received","ERR_INVALID_PEER_ID");let e=await this.client.send({type:v.Type.DHT,dht:{type:j.Type.FIND_PEER,peer:t.toBytes()}}),i=await e.read(b);if(await e.unwrap().close(),i.type!==b.Type.OK)throw new f(i.error?.msg??"DHT find peer failed","ERR_DHT_FIND_PEER_FAILED");if(i.dht==null||i.dht.peer==null||i.dht.peer.addrs==null)throw new f("Invalid response","ERR_DHT_FIND_PEER_FAILED");return{id:ct(i.dht.peer.id),multiaddrs:i.dht.peer.addrs.map(n=>U(n))}}async provide(t){if(t==null||G.asCID(t)==null)throw new f("invalid cid received","ERR_INVALID_CID");let e=await this.client.send({type:v.Type.DHT,dht:{type:j.Type.PROVIDE,cid:t.bytes}}),i=await e.read(b);if(await e.unwrap().close(),i.type!==b.Type.OK)throw new f(i.error?.msg??"DHT provide failed","ERR_DHT_PROVIDE_FAILED")}async*findProviders(t,e=1){if(t==null||G.asCID(t)==null)throw new f("invalid cid received","ERR_INVALID_CID");let i=await this.client.send({type:v.Type.DHT,dht:{type:j.Type.FIND_PROVIDERS,cid:t.bytes,count:e}}),n=await i.read(b);if(n.type!==b.Type.OK)throw await i.unwrap().close(),new f(n.error?.msg??"DHT find providers failed","ERR_DHT_FIND_PROVIDERS_FAILED");for(;;){let o=await i.read(ot);if(o.type===ot.Type.END){await i.unwrap().close();return}if(o.type===ot.Type.VALUE&&o.peer!=null&&o.peer?.addrs!=null)yield{id:ct(o.peer.id),multiaddrs:o.peer.addrs.map(s=>U(s))};else throw await i.unwrap().close(),new f("unexpected message received","ERR_UNEXPECTED_MESSAGE_RECEIVED")}}async*getClosestPeers(t){if(!(t instanceof Uint8Array))throw new f("invalid key received","ERR_INVALID_KEY");let e=await this.client.send({type:v.Type.DHT,dht:{type:j.Type.GET_CLOSEST_PEERS,key:t}}),i=await e.read(b);if(i.type!==b.Type.OK)throw await e.unwrap().close(),new f(i.error?.msg??"DHT find providers failed","ERR_DHT_FIND_PROVIDERS_FAILED");for(;;){let n=await e.read(ot);if(n.type===ot.Type.END){await e.unwrap().close();return}if(n.type===ot.Type.VALUE&&n.value!=null)yield{id:ct(n.value),multiaddrs:[]};else throw await e.unwrap().close(),new f("unexpected message received","ERR_UNEXPECTED_MESSAGE_RECEIVED")}}async getPublicKey(t){if(!Yt(t))throw new f("invalid peer id received","ERR_INVALID_PEER_ID");let e=await this.client.send({type:v.Type.DHT,dht:{type:j.Type.GET_PUBLIC_KEY,peer:t.toBytes()}}),i=await e.read(b);if(await e.unwrap().close(),i.type!==b.Type.OK)throw new f(i.error?.msg??"DHT get public key failed","ERR_DHT_GET_PUBLIC_KEY_FAILED");if(i.dht==null)throw new f("Invalid response","ERR_DHT_GET_PUBLIC_KEY_FAILED");return i.dht.value}};var Je=class{client;constructor(t){this.client=t}async getTopics(){let t=await this.client.send({type:v.Type.PUBSUB,pubsub:{type:dt.Type.GET_TOPICS}}),e=await t.read(b);if(await t.unwrap().close(),e.type!==b.Type.OK)throw new f(e.error?.msg??"Pubsub get topics failed","ERR_PUBSUB_GET_TOPICS_FAILED");if(e.pubsub==null||e.pubsub.topics==null)throw new f("Invalid response","ERR_PUBSUB_GET_TOPICS_FAILED");return e.pubsub.topics}async publish(t,e){if(typeof t!="string")throw new f("invalid topic received","ERR_INVALID_TOPIC");if(!(e instanceof Uint8Array))throw new f("data received is not a Uint8Array","ERR_INVALID_DATA");let i=await this.client.send({type:v.Type.PUBSUB,pubsub:{type:dt.Type.PUBLISH,topic:t,data:e}}),n=await i.read(b);if(await i.unwrap().close(),n.type!==b.Type.OK)throw new f(n.error?.msg??"Pubsub publish failed","ERR_PUBSUB_PUBLISH_FAILED")}async subscribe(t){if(typeof t!="string")throw new f("invalid topic received","ERR_INVALID_TOPIC");let e=await this.client.send({type:v.Type.PUBSUB,pubsub:{type:dt.Type.SUBSCRIBE,topic:t}}),i=await e.read(b);if(i.type!==b.Type.OK)throw new f(i.error?.msg??"Pubsub publish failed","ERR_PUBSUB_PUBLISH_FAILED");let n=!0;return{async*messages(){for(;n;)yield await e.read(xe)},async cancel(){n=!1,await e.unwrap().close()}}}async getSubscribers(t){if(typeof t!="string")throw new f("invalid topic received","ERR_INVALID_TOPIC");let e=await this.client.send({type:v.Type.PUBSUB,pubsub:{type:dt.Type.LIST_PEERS,topic:t}}),i=await e.read(b);if(await e.unwrap().close(),i.type!==b.Type.OK)throw new f(i.error?.msg??"Pubsub get subscribers failed","ERR_PUBSUB_GET_SUBSCRIBERS_FAILED");if(i.pubsub==null||i.pubsub.topics==null)throw new f("Invalid response","ERR_PUBSUB_GET_SUBSCRIBERS_FAILED");return i.pubsub.peerIDs.map(n=>ct(n))}};var gn=Dt("libp2p:daemon-client"),yn=class{multiaddr;dht;pubsub;tcp;constructor(t){this.multiaddr=t,this.tcp=Ji()({logger:ii()}),this.dht=new Xe(this),this.pubsub=new Je(this)}async connectDaemon(){return this.tcp.dial(this.multiaddr,{upgrader:Hr})}async send(t){let e=await this.connectDaemon(),i=t.pubsub?.type??t.dht?.type??t.peerStore?.type??"";gn("send",t.type,i);let n=Qi(e);return await n.write(t,v),n}async connect(t,e){if(!Yt(t))throw new f("invalid peer id received","ERR_INVALID_PEER_ID");if(!Array.isArray(e))throw new f("addrs received are not in an array","ERR_INVALID_ADDRS_TYPE");e.forEach(o=>{if(!Ve(o))throw new f("received an address that is not a multiaddr","ERR_NO_MULTIADDR_RECEIVED")});let i=await this.send({type:v.Type.CONNECT,connect:{peer:t.toBytes(),addrs:e.map(o=>o.bytes)}}),n=await i.read(b);if(n.type!==b.Type.OK){let o=n.error??{msg:"unspecified"};throw new f(o.msg??"unspecified","ERR_CONNECT_FAILED")}await i.unwrap().close()}async identify(){let t=await this.send({type:v.Type.IDENTIFY}),e=await t.read(b);if(e.type!==b.Type.OK)throw new f(e.error?.msg??"Identify failed","ERR_IDENTIFY_FAILED");if(e.identify==null||e.identify.addrs==null)throw new f("Invalid response","ERR_IDENTIFY_FAILED");let i=ct(e.identify?.id),n=e.identify.addrs.map(o=>U(o));return await t.unwrap().close(),{peerId:i,addrs:n}}async listPeers(){let t=await this.send({type:v.Type.LIST_PEERS}),e=await t.read(b);if(e.type!==b.Type.OK)throw new f(e.error?.msg??"List peers failed","ERR_LIST_PEERS_FAILED");return await t.unwrap().close(),e.peers.map(i=>ct(i.id))}async openStream(t,e){if(!Yt(t))throw new f("invalid peer id received","ERR_INVALID_PEER_ID");if(typeof e!="string")throw new f("invalid protocol received","ERR_INVALID_PROTOCOL");let i=await this.send({type:v.Type.STREAM_OPEN,streamOpen:{peer:t.toBytes(),proto:[e]}}),n=await i.read(b);if(n.type!==b.Type.OK)throw await i.unwrap().close(),new f(n.error?.msg??"Open stream failed","ERR_OPEN_STREAM_FAILED");return i.unwrap()}async registerStreamHandler(t,e){if(typeof t!="string")throw new f("invalid protocol received","ERR_INVALID_PROTOCOL");let i=this.tcp.createListener({upgrader:Hr,handler:c=>{Promise.resolve().then(async()=>{let a=new Oe({stream:c}),g=await a.read();if(g==null)throw new f("Could not read open stream response","ERR_OPEN_STREAM_FAILED");if(Gt.decode(g).proto!==t)throw new f("Incorrect protocol","ERR_OPEN_STREAM_FAILED");await e(a.rest())}).finally(()=>{c.close().catch(a=>{gn.error(a)}),i.close().catch(a=>{gn.error(a)})})}});await i.listen(U("/ip4/127.0.0.1/tcp/0"));let n=i.getAddrs()[0];if(n==null)throw new f("Could not listen on port","ERR_REGISTER_STREAM_HANDLER_FAILED");let o=await this.send({type:v.Type.STREAM_HANDLER,streamHandler:{addr:n.bytes,proto:[t]}}),s=await o.read(b);if(await o.unwrap().close(),s.type!==b.Type.OK)throw new f(s.error?.msg??"Register stream handler failed","ERR_REGISTER_STREAM_HANDLER_FAILED")}};function Nc(r){return new yn(r)}return ro(_c);})();
+`+i),r.push(o+"m+"+vr(this.diff)+"\x1B[0m")}else r[0]=qa()+t+" "+r[0]}function qa(){return Be.hideDate!=null?"":new Date().toISOString()+" "}function Wa(...r){return process.stderr.write(Tr.default.format(...r)+`
+`)}function Ya(r){r!=null?process.env.DEBUG=r:delete process.env.DEBUG}function Za(){return process.env.DEBUG}function Xa(r){r.inspectOpts={};let t=Object.keys(Be);for(let e=0;e<t.length;e++)r.inspectOpts[t[e]]=Be[t[e]]}function Ja(r){r.o=function(t){return this.inspectOpts.colors=this.useColors,Tr.default.inspect(t,this.inspectOpts).split(`
+`).map(e=>e.trim()).join(" ")},r.O=function(t){return this.inspectOpts.colors=this.useColors,Tr.default.inspect(t,this.inspectOpts)}}var $i=ao({init:Xa,log:Wa,formatArgs:Ha,save:Ya,load:Za,useColors:za,setupFormatters:Ja,colors:Ki,inspectOpts:Be});var gt=$i;gt.formatters.b=r=>r==null?"undefined":$.baseEncode(r);gt.formatters.t=r=>r==null?"undefined":Bt.baseEncode(r);gt.formatters.m=r=>r==null?"undefined":Fn.baseEncode(r);gt.formatters.p=r=>r==null?"undefined":r.toString();gt.formatters.c=r=>r==null?"undefined":r.toString();gt.formatters.k=r=>r==null?"undefined":r.toString();gt.formatters.a=r=>r==null?"undefined":r.toString();function Qa(r){let t=()=>{};return t.enabled=!1,t.color="",t.diff=0,t.log=()=>{},t.namespace=r,t.destroy=()=>!0,t.extend=()=>t,t}function Vi(){return{forComponent(r){return fe(r)}}}function fe(r){let t=Qa(`${r}:trace`);return gt.enabled(`${r}:trace`)&&gt.names.map(e=>e.toString()).find(e=>e.includes(":trace"))!=null&&(t=gt(`${r}:trace`)),Object.assign(gt(r),{error:gt(`${r}:error`),trace:t})}function Ce(){let r={};return r.promise=new Promise((t,e)=>{r.resolve=t,r.reject=e}),r}var Lr=class extends Error{type;code;constructor(t,e,n){super(t??"The operation was aborted"),this.type="aborted",this.name=n??"AbortError",this.code=e??"ABORT_ERR"}};async function Fi(r,t,e){if(t==null)return r;if(t.aborted)return Promise.reject(new Lr(e?.errorMessage,e?.errorCode,e?.errorName));let n,o=new Lr(e?.errorMessage,e?.errorCode,e?.errorName);try{return await Promise.race([r,new Promise((i,s)=>{n=()=>{s(o)},t.addEventListener("abort",n)})])}finally{n!=null&&t.removeEventListener("abort",n)}}var uo=class{readNext;haveNext;ended;nextResult;constructor(){this.ended=!1,this.readNext=Ce(),this.haveNext=Ce()}[Symbol.asyncIterator](){return this}async next(){if(this.nextResult==null&&await this.haveNext.promise,this.nextResult==null)throw new Error("HaveNext promise resolved but nextResult was undefined");let t=this.nextResult;return this.nextResult=void 0,this.readNext.resolve(),this.readNext=Ce(),t}async throw(t){return this.ended=!0,t!=null&&(this.haveNext.promise.catch(()=>{}),this.haveNext.reject(t)),{done:!0,value:void 0}}async return(){let t={done:!0,value:void 0};return await this._push(void 0),t}async push(t,e){await this._push(t,e)}async end(t,e){t!=null?await this.throw(t):await this._push(void 0,e)}async _push(t,e){if(t!=null&&this.ended)throw new Error("Cannot push value onto an ended pushable");for(;this.nextResult!=null;)await this.readNext.promise;t!=null?this.nextResult={done:!1,value:t}:(this.ended=!0,this.nextResult={done:!0,value:void 0}),this.haveNext.resolve(),this.haveNext=Ce(),await Fi(this.readNext.promise,e?.signal,e)}};function Gi(){return new uo}var zi=Z("node:buffer");function yt(r,t){return ce(zi.Buffer.concat(r,t))}function Nt(r,t){if(r===t)return!0;if(r.byteLength!==t.byteLength)return!1;for(let e=0;e<r.byteLength;e++)if(r[e]!==t[e])return!1;return!0}var qi=Symbol.for("@achingbrain/uint8arraylist");function Hi(r,t){if(t==null||t<0)throw new RangeError("index is out of bounds");let e=0;for(let n of r){let o=e+n.byteLength;if(t<o)return{buf:n,index:t-e};e=o}throw new RangeError("index is out of bounds")}function Br(r){return!!r?.[qi]}var Kt=class r{bufs;length;[qi]=!0;constructor(...t){this.bufs=[],this.length=0,t.length>0&&this.appendAll(t)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...t){this.appendAll(t)}appendAll(t){let e=0;for(let n of t)if(n instanceof Uint8Array)e+=n.byteLength,this.bufs.push(n);else if(Br(n))e+=n.byteLength,this.bufs.push(...n.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}prepend(...t){this.prependAll(t)}prependAll(t){let e=0;for(let n of t.reverse())if(n instanceof Uint8Array)e+=n.byteLength,this.bufs.unshift(n);else if(Br(n))e+=n.byteLength,this.bufs.unshift(...n.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}get(t){let e=Hi(this.bufs,t);return e.buf[e.index]}set(t,e){let n=Hi(this.bufs,t);n.buf[n.index]=e}write(t,e=0){if(t instanceof Uint8Array)for(let n=0;n<t.length;n++)this.set(e+n,t[n]);else if(Br(t))for(let n=0;n<t.length;n++)this.set(e+n,t.get(n));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(t){if(t=Math.trunc(t),!(Number.isNaN(t)||t<=0)){if(t===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(t>=this.bufs[0].byteLength)t-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(t),this.length-=t;break}}}slice(t,e){let{bufs:n,length:o}=this._subList(t,e);return yt(n,o)}subarray(t,e){let{bufs:n,length:o}=this._subList(t,e);return n.length===1?n[0]:yt(n,o)}sublist(t,e){let{bufs:n,length:o}=this._subList(t,e),i=new r;return i.length=o,i.bufs=[...n],i}_subList(t,e){if(t=t??0,e=e??this.length,t<0&&(t=this.length+t),e<0&&(e=this.length+e),t<0||e>this.length)throw new RangeError("index is out of bounds");if(t===e)return{bufs:[],length:0};if(t===0&&e===this.length)return{bufs:this.bufs,length:this.length};let n=[],o=0;for(let i=0;i<this.bufs.length;i++){let s=this.bufs[i],c=o,a=c+s.byteLength;if(o=a,t>=a)continue;let d=t>=c&&t<a,l=e>c&&e<=a;if(d&&l){if(t===c&&e===a){n.push(s);break}let u=t-c;n.push(s.subarray(u,u+(e-t)));break}if(d){if(t===0){n.push(s);continue}n.push(s.subarray(t-c));continue}if(l){if(e===a){n.push(s);break}n.push(s.subarray(0,e-c));break}n.push(s)}return{bufs:n,length:e-t}}indexOf(t,e=0){if(!Br(t)&&!(t instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let n=t instanceof Uint8Array?t:t.subarray();if(e=Number(e??0),isNaN(e)&&(e=0),e<0&&(e=this.length+e),e<0&&(e=0),t.length===0)return e>this.length?this.length:e;let o=n.byteLength;if(o===0)throw new TypeError("search must be at least 1 byte long");let i=256,s=new Int32Array(i);for(let u=0;u<i;u++)s[u]=-1;for(let u=0;u<o;u++)s[n[u]]=u;let c=s,a=this.byteLength-n.byteLength,d=n.byteLength-1,l;for(let u=e;u<=a;u+=l){l=0;for(let g=d;g>=0;g--){let y=this.get(u+g);if(n[g]!==y){l=Math.max(1,g-c[y]);break}}if(l===0)return u}return-1}getInt8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getInt8(0)}setInt8(t,e){let n=xt(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt8(0,e),this.write(n,t)}getInt16(t,e){let n=this.subarray(t,t+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt16(0,e)}setInt16(t,e,n){let o=Rt(2);new DataView(o.buffer,o.byteOffset,o.byteLength).setInt16(0,e,n),this.write(o,t)}getInt32(t,e){let n=this.subarray(t,t+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt32(0,e)}setInt32(t,e,n){let o=Rt(4);new DataView(o.buffer,o.byteOffset,o.byteLength).setInt32(0,e,n),this.write(o,t)}getBigInt64(t,e){let n=this.subarray(t,t+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigInt64(0,e)}setBigInt64(t,e,n){let o=Rt(8);new DataView(o.buffer,o.byteOffset,o.byteLength).setBigInt64(0,e,n),this.write(o,t)}getUint8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getUint8(0)}setUint8(t,e){let n=xt(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint8(0,e),this.write(n,t)}getUint16(t,e){let n=this.subarray(t,t+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint16(0,e)}setUint16(t,e,n){let o=Rt(2);new DataView(o.buffer,o.byteOffset,o.byteLength).setUint16(0,e,n),this.write(o,t)}getUint32(t,e){let n=this.subarray(t,t+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint32(0,e)}setUint32(t,e,n){let o=Rt(4);new DataView(o.buffer,o.byteOffset,o.byteLength).setUint32(0,e,n),this.write(o,t)}getBigUint64(t,e){let n=this.subarray(t,t+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigUint64(0,e)}setBigUint64(t,e,n){let o=Rt(8);new DataView(o.buffer,o.byteOffset,o.byteLength).setBigUint64(0,e,n),this.write(o,t)}getFloat32(t,e){let n=this.subarray(t,t+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat32(0,e)}setFloat32(t,e,n){let o=Rt(4);new DataView(o.buffer,o.byteOffset,o.byteLength).setFloat32(0,e,n),this.write(o,t)}getFloat64(t,e){let n=this.subarray(t,t+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat64(0,e)}setFloat64(t,e,n){let o=Rt(8);new DataView(o.buffer,o.byteOffset,o.byteLength).setFloat64(0,e,n),this.write(o,t)}equals(t){if(t==null||!(t instanceof r)||t.bufs.length!==this.bufs.length)return!1;for(let e=0;e<this.bufs.length;e++)if(!Nt(this.bufs[e],t.bufs[e]))return!1;return!0}static fromUint8Arrays(t,e){let n=new r;return n.bufs=t,e==null&&(e=t.reduce((o,i)=>o+i.byteLength,0)),n.length=e,n}};var Cr=class extends Error{name="UnexpectedEOFError";code="ERR_UNEXPECTED_EOF"};var lo=class extends Error{code;constructor(t,e){super(t),this.code=e}},fo=class extends lo{type;constructor(t){super(t,"ABORT_ERR"),this.type="aborted",this.name="AbortError"}};function Wi(r,t){let e=Gi();r.sink(e).catch(async s=>{await e.end(s)}),r.sink=async s=>{for await(let c of s)await e.push(c);await e.end()};let n=r.source;r.source[Symbol.iterator]!=null?n=r.source[Symbol.iterator]():r.source[Symbol.asyncIterator]!=null&&(n=r.source[Symbol.asyncIterator]());let o=new Kt;return{read:async(s,c)=>{c?.signal?.throwIfAborted();let a,d=new Promise((l,u)=>{a=()=>{u(new fo("Read aborted"))},c?.signal?.addEventListener("abort",a)});try{if(s==null){let{done:u,value:g}=await Promise.race([n.next(),d]);return u===!0?new Kt:g}for(;o.byteLength<s;){let{value:u,done:g}=await Promise.race([n.next(),d]);if(g===!0)throw new Cr("unexpected end of input");o.append(u)}let l=o.sublist(0,s);return o.consume(s),l}finally{a!=null&&c?.signal?.removeEventListener("abort",a)}},write:async(s,c)=>{c?.signal?.throwIfAborted(),s instanceof Uint8Array?await e.push(s,c):await e.push(s.subarray(),c)},unwrap:()=>{if(o.byteLength>0){let s=r.source;r.source=async function*(){t?.yieldBytes===!1?yield o:yield*o,yield*s}()}return r}}}var Pr=class extends Error{name="InvalidMessageLengthError";code="ERR_INVALID_MSG_LENGTH"},Nr=class extends Error{name="InvalidDataLengthError";code="ERR_MSG_DATA_TOO_LONG"},kr=class extends Error{name="InvalidDataLengthLengthError";code="ERR_MSG_LENGTH_TOO_LONG"};function Dr(r,t={}){let e=Wi(r,t);t.maxDataLength!=null&&t.maxLengthLength==null&&(t.maxLengthLength=it(t.maxDataLength));let n=t?.lengthDecoder??Ut,o=t?.lengthEncoder??qt;return{read:async s=>{let c=-1,a=new Kt;for(;;){a.append(await e.read(1,s));try{c=n(a)}catch(d){if(d instanceof RangeError)continue;throw d}if(c<0)throw new Pr("Invalid message length");if(t?.maxLengthLength!=null&&a.byteLength>t.maxLengthLength)throw new kr("message length length too long");if(c>-1)break}if(t?.maxDataLength!=null&&c>t.maxDataLength)throw new Nr("message length too long");return e.read(c,s)},write:async(s,c)=>{await e.write(new Kt(o(s.byteLength),s),c)},writeV:async(s,c)=>{let a=new Kt(...s.flatMap(d=>[o(d.byteLength),d]));await e.write(a,c)},unwrap:()=>e.unwrap()}}var ho=fe("libp2p:daemon-protocol:stream-handler"),Or=class{stream;lp;constructor(t){let{stream:e,maxLength:n}=t;this.stream=e,this.lp=Dr(this.stream,{maxDataLength:n??4096})}async read(){try{return await this.lp.read()}catch(t){ho.error("read received no value",t)}}async write(t){ho("write message"),await this.lp.write(t)}rest(){return this.lp.unwrap()}async close(){ho("closing the stream"),await this.rest().close()}};var po={upgradeInbound:async r=>r,upgradeOutbound:async r=>r};var Rr=Symbol.for("@libp2p/peer-id");function Pe(r){return!!r?.[Rr]}var Zi=Symbol.for("@libp2p/transport");var Yi;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(Yi||(Yi={}));var qe=class extends Error{constructor(t="The operation was aborted"){super(t),this.name="AbortError"}},X=class extends Error{code;props;constructor(t,e,n){super(t),this.code=e,this.name=n?.name??"CodeError",this.props=n??{}}};var D=class extends Error{constructor(t="Invalid parameters"){super(t),this.name="InvalidParametersError"}},Ur=class extends Error{constructor(t="Invalid public key"){super(t),this.name="InvalidPublicKeyError"}};var _r=class extends Error{constructor(t="Invalid Multihash"){super(t),this.name="InvalidMultihashError"}};var We=class extends Error{constructor(t="Invalid message"){super(t),this.name="InvalidMessageError"}},Ye=class extends Error{constructor(t="Protocol error"){super(t),this.name="ProtocolError"}};var Ze=class extends Error{constructor(t="Unsupported key type"){super(t),this.name="UnsupportedKeyTypeError"}};var Xi=Z("events"),Ji=(r,...t)=>{try{(0,Xi.setMaxListeners)(r,...t)}catch{}};var Mr=class extends EventTarget{#t=new Map;constructor(){super(),Ji(1/0,this)}listenerCount(t){let e=this.#t.get(t);return e==null?0:e.length}addEventListener(t,e,n){super.addEventListener(t,e,n);let o=this.#t.get(t);o==null&&(o=[],this.#t.set(t,o)),o.push({callback:e,once:(n!==!0&&n!==!1&&n?.once)??!1})}removeEventListener(t,e,n){super.removeEventListener(t.toString(),e??null,n);let o=this.#t.get(t);o!=null&&(o=o.filter(({callback:i})=>i!==e),this.#t.set(t,o))}dispatchEvent(t){let e=super.dispatchEvent(t),n=this.#t.get(t.type);return n==null||(n=n.filter(({once:o})=>!o),this.#t.set(t.type,n)),e}safeDispatchEvent(t,e={}){return this.dispatchEvent(new CustomEvent(t,e))}};var Qi=Symbol.for("@libp2p/service-capabilities"),Yd=Symbol.for("@libp2p/service-dependencies");var Kr=pt(Z("crypto"),1);var ji=Z("node:buffer");function Y(r,t="utf8"){let e=cr[t];if(e==null)throw new Error(`Unsupported encoding "${t}"`);return t==="utf8"||t==="utf-8"?ji.Buffer.from(r.buffer,r.byteOffset,r.byteLength).toString("utf8"):e.encoder.encode(r).substring(1)}var Ih=Kr.default.generateKeyPairSync,Xe=32;var ja=64;function ts(r,t,e){if(r.byteLength!==Xe)throw new TypeError('"key" must be 32 bytes in length.');if(!(r instanceof Uint8Array))throw new TypeError('"key" must be a node.js Buffer, or Uint8Array.');if(t.byteLength!==ja)throw new TypeError('"sig" must be 64 bytes in length.');if(!(t instanceof Uint8Array))throw new TypeError('"sig" must be a node.js Buffer, or Uint8Array.');let n=Kr.default.createPublicKey({format:"jwk",key:{crv:"Ed25519",x:Y(r,"base64url"),kty:"OKP"}});return Kr.default.verify(null,e instanceof Uint8Array?e:e.subarray(),n,t)}var $r=class{type="Ed25519";raw;constructor(t){this.raw=mo(t,Xe)}toMultihash(){return _t.digest(Vr(this))}toCID(){return tt.createV1(114,this.toMultihash())}toString(){return $.encode(this.toMultihash().bytes).substring(1)}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:Nt(this.raw,t.raw)}verify(t,e){return ts(this.raw,e,t)}};function rs(r){return r=mo(r,Xe),new $r(r)}function mo(r,t){if(r=Uint8Array.from(r??[]),r.length!==t)throw new D(`Key must be a Uint8Array of length ${t}, got ${r.length}`);return r}var St;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.secp256k1="secp256k1"})(St||(St={}));var go;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.secp256k1=2]="secp256k1"})(go||(go={}));(function(r){r.codec=()=>Ct(go)})(St||(St={}));var Je;(function(r){let t;r.codec=()=>(t==null&&(t=F((e,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),e.Type!=null&&(n.uint32(8),St.codec().encode(e.Type,n)),e.Data!=null&&(n.uint32(18),n.bytes(e.Data)),o.lengthDelimited!==!1&&n.ldelim()},(e,n,o={})=>{let i={},s=n==null?e.len:e.pos+n;for(;e.pos<s;){let c=e.uint32();switch(c>>>3){case 1:{i.Type=St.codec().decode(e);break}case 2:{i.Data=e.bytes();break}default:{e.skipType(c&7);break}}}return i})),t),r.encode=e=>V(e,r.codec()),r.decode=(e,n)=>K(e,r.codec(),n)})(Je||(Je={}));var yo;(function(r){let t;r.codec=()=>(t==null&&(t=F((e,n,o={})=>{o.lengthDelimited!==!1&&n.fork(),e.Type!=null&&(n.uint32(8),St.codec().encode(e.Type,n)),e.Data!=null&&(n.uint32(18),n.bytes(e.Data)),o.lengthDelimited!==!1&&n.ldelim()},(e,n,o={})=>{let i={},s=n==null?e.len:e.pos+n;for(;e.pos<s;){let c=e.uint32();switch(c>>>3){case 1:{i.Type=St.codec().decode(e);break}case 2:{i.Data=e.bytes();break}default:{e.skipType(c&7);break}}}return i})),t),r.encode=e=>V(e,r.codec()),r.decode=(e,n)=>K(e,r.codec(),n)})(yo||(yo={}));function ns(r){if(!Number.isSafeInteger(r)||r<0)throw new Error(`positive integer expected, not ${r}`)}function ru(r){return r instanceof Uint8Array||r!=null&&typeof r=="object"&&r.constructor.name==="Uint8Array"}function Ne(r,...t){if(!ru(r))throw new Error("Uint8Array expected");if(t.length>0&&!t.includes(r.length))throw new Error(`Uint8Array expected of length ${t}, not of length=${r.length}`)}function os(r){if(typeof r!="function"||typeof r.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");ns(r.outputLen),ns(r.blockLen)}function ke(r,t=!0){if(r.destroyed)throw new Error("Hash instance has been destroyed");if(t&&r.finished)throw new Error("Hash#digest() has already been called")}function is(r,t){Ne(r);let e=t.outputLen;if(r.length<e)throw new Error(`digestInto() expects output buffer of length at least ${e}`)}var Qe=pt(Z("node:crypto"),1),Fr=Qe&&typeof Qe=="object"&&"webcrypto"in Qe?Qe.webcrypto:void 0;var Gr=r=>new DataView(r.buffer,r.byteOffset,r.byteLength),kt=(r,t)=>r<<32-t|r>>>t;var zh=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function nu(r){if(typeof r!="string")throw new Error(`utf8ToBytes expected string, got ${typeof r}`);return new Uint8Array(new TextEncoder().encode(r))}function je(r){return typeof r=="string"&&(r=nu(r)),Ne(r),r}function ss(...r){let t=0;for(let n=0;n<r.length;n++){let o=r[n];Ne(o),t+=o.length}let e=new Uint8Array(t);for(let n=0,o=0;n<r.length;n++){let i=r[n];e.set(i,o),o+=i.length}return e}var De=class{clone(){return this._cloneInto()}},Hh={}.toString;function cs(r){let t=n=>r().update(je(n)).digest(),e=r();return t.outputLen=e.outputLen,t.blockLen=e.blockLen,t.create=()=>r(),t}function as(r=32){if(Fr&&typeof Fr.getRandomValues=="function")return Fr.getRandomValues(new Uint8Array(r));throw new Error("crypto.getRandomValues must be defined")}var zr=class extends De{constructor(t,e){super(),this.finished=!1,this.destroyed=!1,os(t);let n=je(e);if(this.iHash=t.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let o=this.blockLen,i=new Uint8Array(o);i.set(n.length>o?t.create().update(n).digest():n);for(let s=0;s<i.length;s++)i[s]^=54;this.iHash.update(i),this.oHash=t.create();for(let s=0;s<i.length;s++)i[s]^=106;this.oHash.update(i),i.fill(0)}update(t){return ke(this),this.iHash.update(t),this}digestInto(t){ke(this),Ne(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy()}digest(){let t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));let{oHash:e,iHash:n,finished:o,destroyed:i,blockLen:s,outputLen:c}=this;return t=t,t.finished=o,t.destroyed=i,t.blockLen=s,t.outputLen=c,t.oHash=e._cloneInto(t.oHash),t.iHash=n._cloneInto(t.iHash),t}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}},bo=(r,t,e)=>new zr(r,t).update(e).digest();bo.create=(r,t)=>new zr(r,t);function ou(r,t,e,n){if(typeof r.setBigUint64=="function")return r.setBigUint64(t,e,n);let o=BigInt(32),i=BigInt(4294967295),s=Number(e>>o&i),c=Number(e&i),a=n?4:0,d=n?0:4;r.setUint32(t+a,s,n),r.setUint32(t+d,c,n)}var us=(r,t,e)=>r&t^~r&e,ls=(r,t,e)=>r&t^r&e^t&e,Hr=class extends De{constructor(t,e,n,o){super(),this.blockLen=t,this.outputLen=e,this.padOffset=n,this.isLE=o,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=Gr(this.buffer)}update(t){ke(this);let{view:e,buffer:n,blockLen:o}=this;t=je(t);let i=t.length;for(let s=0;s<i;){let c=Math.min(o-this.pos,i-s);if(c===o){let a=Gr(t);for(;o<=i-s;s+=o)this.process(a,s);continue}n.set(t.subarray(s,s+c),this.pos),this.pos+=c,s+=c,this.pos===o&&(this.process(e,0),this.pos=0)}return this.length+=t.length,this.roundClean(),this}digestInto(t){ke(this),is(t,this),this.finished=!0;let{buffer:e,view:n,blockLen:o,isLE:i}=this,{pos:s}=this;e[s++]=128,this.buffer.subarray(s).fill(0),this.padOffset>o-s&&(this.process(n,0),s=0);for(let u=s;u<o;u++)e[u]=0;ou(n,o-8,BigInt(this.length*8),i),this.process(n,0);let c=Gr(t),a=this.outputLen;if(a%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let d=a/4,l=this.get();if(d>l.length)throw new Error("_sha2: outputLen bigger than state");for(let u=0;u<d;u++)c.setUint32(4*u,l[u],i)}digest(){let{buffer:t,outputLen:e}=this;this.digestInto(t);let n=t.slice(0,e);return this.destroy(),n}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());let{blockLen:e,buffer:n,length:o,finished:i,destroyed:s,pos:c}=this;return t.length=o,t.pos=c,t.finished=i,t.destroyed=s,o%e&&t.buffer.set(n),t}};var iu=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Jt=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Qt=new Uint32Array(64),wo=class extends Hr{constructor(){super(64,32,8,!1),this.A=Jt[0]|0,this.B=Jt[1]|0,this.C=Jt[2]|0,this.D=Jt[3]|0,this.E=Jt[4]|0,this.F=Jt[5]|0,this.G=Jt[6]|0,this.H=Jt[7]|0}get(){let{A:t,B:e,C:n,D:o,E:i,F:s,G:c,H:a}=this;return[t,e,n,o,i,s,c,a]}set(t,e,n,o,i,s,c,a){this.A=t|0,this.B=e|0,this.C=n|0,this.D=o|0,this.E=i|0,this.F=s|0,this.G=c|0,this.H=a|0}process(t,e){for(let u=0;u<16;u++,e+=4)Qt[u]=t.getUint32(e,!1);for(let u=16;u<64;u++){let g=Qt[u-15],y=Qt[u-2],h=kt(g,7)^kt(g,18)^g>>>3,f=kt(y,17)^kt(y,19)^y>>>10;Qt[u]=f+Qt[u-7]+h+Qt[u-16]|0}let{A:n,B:o,C:i,D:s,E:c,F:a,G:d,H:l}=this;for(let u=0;u<64;u++){let g=kt(c,6)^kt(c,11)^kt(c,25),y=l+g+us(c,a,d)+iu[u]+Qt[u]|0,f=(kt(n,2)^kt(n,13)^kt(n,22))+ls(n,o,i)|0;l=d,d=a,a=c,c=s+y|0,s=i,i=o,o=n,n=y+f|0}n=n+this.A|0,o=o+this.B|0,i=i+this.C|0,s=s+this.D|0,c=c+this.E|0,a=a+this.F|0,d=d+this.G|0,l=l+this.H|0,this.set(n,o,i,s,c,a,d,l)}roundClean(){Qt.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}};var fs=cs(()=>new wo);var Ao={};lt(Ao,{aInRange:()=>ee,abool:()=>de,abytes:()=>Oe,bitGet:()=>du,bitLen:()=>fu,bitMask:()=>er,bitSet:()=>hu,bytesToHex:()=>he,bytesToNumberBE:()=>Vt,bytesToNumberLE:()=>Wr,concatBytes:()=>Re,createHmacDrbg:()=>So,ensureBytes:()=>bt,equalBytes:()=>uu,hexToBytes:()=>pe,hexToNumber:()=>Io,inRange:()=>tr,isBytes:()=>jt,memoized:()=>Zr,notImplemented:()=>mu,numberToBytesBE:()=>te,numberToBytesLE:()=>Yr,numberToHexUnpadded:()=>ps,numberToVarBytesBE:()=>au,utf8ToBytes:()=>lu,validateObject:()=>re});var vo=BigInt(0),qr=BigInt(1),su=BigInt(2);function jt(r){return r instanceof Uint8Array||r!=null&&typeof r=="object"&&r.constructor.name==="Uint8Array"}function Oe(r){if(!jt(r))throw new Error("Uint8Array expected")}function de(r,t){if(typeof t!="boolean")throw new Error(`${r} must be valid boolean, got "${t}".`)}var cu=Array.from({length:256},(r,t)=>t.toString(16).padStart(2,"0"));function he(r){Oe(r);let t="";for(let e=0;e<r.length;e++)t+=cu[r[e]];return t}function ps(r){let t=r.toString(16);return t.length&1?`0${t}`:t}function Io(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);return BigInt(r===""?"0":`0x${r}`)}var $t={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function ds(r){if(r>=$t._0&&r<=$t._9)return r-$t._0;if(r>=$t._A&&r<=$t._F)return r-($t._A-10);if(r>=$t._a&&r<=$t._f)return r-($t._a-10)}function pe(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);let t=r.length,e=t/2;if(t%2)throw new Error("padded hex string expected, got unpadded hex of length "+t);let n=new Uint8Array(e);for(let o=0,i=0;o<e;o++,i+=2){let s=ds(r.charCodeAt(i)),c=ds(r.charCodeAt(i+1));if(s===void 0||c===void 0){let a=r[i]+r[i+1];throw new Error('hex string expected, got non-hex character "'+a+'" at index '+i)}n[o]=s*16+c}return n}function Vt(r){return Io(he(r))}function Wr(r){return Oe(r),Io(he(Uint8Array.from(r).reverse()))}function te(r,t){return pe(r.toString(16).padStart(t*2,"0"))}function Yr(r,t){return te(r,t).reverse()}function au(r){return pe(ps(r))}function bt(r,t,e){let n;if(typeof t=="string")try{n=pe(t)}catch(i){throw new Error(`${r} must be valid hex string, got "${t}". Cause: ${i}`)}else if(jt(t))n=Uint8Array.from(t);else throw new Error(`${r} must be hex string or Uint8Array`);let o=n.length;if(typeof e=="number"&&o!==e)throw new Error(`${r} expected ${e} bytes, got ${o}`);return n}function Re(...r){let t=0;for(let n=0;n<r.length;n++){let o=r[n];Oe(o),t+=o.length}let e=new Uint8Array(t);for(let n=0,o=0;n<r.length;n++){let i=r[n];e.set(i,o),o+=i.length}return e}function uu(r,t){if(r.length!==t.length)return!1;let e=0;for(let n=0;n<r.length;n++)e|=r[n]^t[n];return e===0}function lu(r){if(typeof r!="string")throw new Error(`utf8ToBytes expected string, got ${typeof r}`);return new Uint8Array(new TextEncoder().encode(r))}var xo=r=>typeof r=="bigint"&&vo<=r;function tr(r,t,e){return xo(r)&&xo(t)&&xo(e)&&t<=r&&r<e}function ee(r,t,e,n){if(!tr(t,e,n))throw new Error(`expected valid ${r}: ${e} <= n < ${n}, got ${typeof t} ${t}`)}function fu(r){let t;for(t=0;r>vo;r>>=qr,t+=1);return t}function du(r,t){return r>>BigInt(t)&qr}function hu(r,t,e){return r|(e?qr:vo)<<BigInt(t)}var er=r=>(su<<BigInt(r-1))-qr,Eo=r=>new Uint8Array(r),hs=r=>Uint8Array.from(r);function So(r,t,e){if(typeof r!="number"||r<2)throw new Error("hashLen must be a number");if(typeof t!="number"||t<2)throw new Error("qByteLen must be a number");if(typeof e!="function")throw new Error("hmacFn must be a function");let n=Eo(r),o=Eo(r),i=0,s=()=>{n.fill(1),o.fill(0),i=0},c=(...u)=>e(o,n,...u),a=(u=Eo())=>{o=c(hs([0]),u),n=c(),u.length!==0&&(o=c(hs([1]),u),n=c())},d=()=>{if(i++>=1e3)throw new Error("drbg: tried 1000 values");let u=0,g=[];for(;u<t;){n=c();let y=n.slice();g.push(y),u+=n.length}return Re(...g)};return(u,g)=>{s(),a(u);let y;for(;!(y=g(d()));)a();return s(),y}}var pu={bigint:r=>typeof r=="bigint",function:r=>typeof r=="function",boolean:r=>typeof r=="boolean",string:r=>typeof r=="string",stringOrUint8Array:r=>typeof r=="string"||jt(r),isSafeInteger:r=>Number.isSafeInteger(r),array:r=>Array.isArray(r),field:(r,t)=>t.Fp.isValid(r),hash:r=>typeof r=="function"&&Number.isSafeInteger(r.outputLen)};function re(r,t,e={}){let n=(o,i,s)=>{let c=pu[i];if(typeof c!="function")throw new Error(`Invalid validator "${i}", expected function`);let a=r[o];if(!(s&&a===void 0)&&!c(a,r))throw new Error(`Invalid param ${String(o)}=${a} (${typeof a}), expected ${i}`)};for(let[o,i]of Object.entries(t))n(o,i,!1);for(let[o,i]of Object.entries(e))n(o,i,!0);return r}var mu=()=>{throw new Error("not implemented")};function Zr(r){let t=new WeakMap;return(e,...n)=>{let o=t.get(e);if(o!==void 0)return o;let i=r(e,...n);return t.set(e,i),i}}var J=BigInt(0),q=BigInt(1),me=BigInt(2),gu=BigInt(3),To=BigInt(4),ms=BigInt(5),gs=BigInt(8),yu=BigInt(9),bu=BigInt(16);function ct(r,t){let e=r%t;return e>=J?e:t+e}function wu(r,t,e){if(e<=J||t<J)throw new Error("Expected power/modulo > 0");if(e===q)return J;let n=q;for(;t>J;)t&q&&(n=n*r%e),r=r*r%e,t>>=q;return n}function wt(r,t,e){let n=r;for(;t-- >J;)n*=n,n%=e;return n}function Xr(r,t){if(r===J||t<=J)throw new Error(`invert: expected positive integers, got n=${r} mod=${t}`);let e=ct(r,t),n=t,o=J,i=q,s=q,c=J;for(;e!==J;){let d=n/e,l=n%e,u=o-s*d,g=i-c*d;n=e,e=l,o=s,i=c,s=u,c=g}if(n!==q)throw new Error("invert: does not exist");return ct(o,t)}function xu(r){let t=(r-q)/me,e,n,o;for(e=r-q,n=0;e%me===J;e/=me,n++);for(o=me;o<r&&wu(o,t,r)!==r-q;o++);if(n===1){let s=(r+q)/To;return function(a,d){let l=a.pow(d,s);if(!a.eql(a.sqr(l),d))throw new Error("Cannot find square root");return l}}let i=(e+q)/me;return function(c,a){if(c.pow(a,t)===c.neg(c.ONE))throw new Error("Cannot find square root");let d=n,l=c.pow(c.mul(c.ONE,o),e),u=c.pow(a,i),g=c.pow(a,e);for(;!c.eql(g,c.ONE);){if(c.eql(g,c.ZERO))return c.ZERO;let y=1;for(let f=c.sqr(g);y<d&&!c.eql(f,c.ONE);y++)f=c.sqr(f);let h=c.pow(l,q<<BigInt(d-y-1));l=c.sqr(h),u=c.mul(u,h),g=c.mul(g,l),d=y}return u}}function Eu(r){if(r%To===gu){let t=(r+q)/To;return function(n,o){let i=n.pow(o,t);if(!n.eql(n.sqr(i),o))throw new Error("Cannot find square root");return i}}if(r%gs===ms){let t=(r-ms)/gs;return function(n,o){let i=n.mul(o,me),s=n.pow(i,t),c=n.mul(o,s),a=n.mul(n.mul(c,me),s),d=n.mul(c,n.sub(a,n.ONE));if(!n.eql(n.sqr(d),o))throw new Error("Cannot find square root");return d}}return r%bu,xu(r)}var vu=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function Lo(r){let t={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},e=vu.reduce((n,o)=>(n[o]="function",n),t);return re(r,e)}function Iu(r,t,e){if(e<J)throw new Error("Expected power > 0");if(e===J)return r.ONE;if(e===q)return t;let n=r.ONE,o=t;for(;e>J;)e&q&&(n=r.mul(n,o)),o=r.sqr(o),e>>=q;return n}function Su(r,t){let e=new Array(t.length),n=t.reduce((i,s,c)=>r.is0(s)?i:(e[c]=i,r.mul(i,s)),r.ONE),o=r.inv(n);return t.reduceRight((i,s,c)=>r.is0(s)?i:(e[c]=r.mul(i,e[c]),r.mul(i,s)),o),e}function Bo(r,t){let e=t!==void 0?t:r.toString(2).length,n=Math.ceil(e/8);return{nBitLength:e,nByteLength:n}}function ys(r,t,e=!1,n={}){if(r<=J)throw new Error(`Expected Field ORDER > 0, got ${r}`);let{nBitLength:o,nByteLength:i}=Bo(r,t);if(i>2048)throw new Error("Field lengths over 2048 bytes are not supported");let s=Eu(r),c=Object.freeze({ORDER:r,BITS:o,BYTES:i,MASK:er(o),ZERO:J,ONE:q,create:a=>ct(a,r),isValid:a=>{if(typeof a!="bigint")throw new Error(`Invalid field element: expected bigint, got ${typeof a}`);return J<=a&&a<r},is0:a=>a===J,isOdd:a=>(a&q)===q,neg:a=>ct(-a,r),eql:(a,d)=>a===d,sqr:a=>ct(a*a,r),add:(a,d)=>ct(a+d,r),sub:(a,d)=>ct(a-d,r),mul:(a,d)=>ct(a*d,r),pow:(a,d)=>Iu(c,a,d),div:(a,d)=>ct(a*Xr(d,r),r),sqrN:a=>a*a,addN:(a,d)=>a+d,subN:(a,d)=>a-d,mulN:(a,d)=>a*d,inv:a=>Xr(a,r),sqrt:n.sqrt||(a=>s(c,a)),invertBatch:a=>Su(c,a),cmov:(a,d,l)=>l?d:a,toBytes:a=>e?Yr(a,i):te(a,i),fromBytes:a=>{if(a.length!==i)throw new Error(`Fp.fromBytes: expected ${i}, got ${a.length}`);return e?Wr(a):Vt(a)}});return Object.freeze(c)}function bs(r){if(typeof r!="bigint")throw new Error("field order must be bigint");let t=r.toString(2).length;return Math.ceil(t/8)}function Co(r){let t=bs(r);return t+Math.ceil(t/2)}function ws(r,t,e=!1){let n=r.length,o=bs(t),i=Co(t);if(n<16||n<i||n>1024)throw new Error(`expected ${i}-1024 bytes of input, got ${n}`);let s=e?Vt(r):Wr(r),c=ct(s,t-q)+q;return e?Yr(c,o):te(c,o)}var Tu=BigInt(0),Po=BigInt(1),No=new WeakMap,xs=new WeakMap;function Es(r,t){let e=(i,s)=>{let c=s.negate();return i?c:s},n=i=>{if(!Number.isSafeInteger(i)||i<=0||i>t)throw new Error(`Wrong window size=${i}, should be [1..${t}]`)},o=i=>{n(i);let s=Math.ceil(t/i)+1,c=2**(i-1);return{windows:s,windowSize:c}};return{constTimeNegate:e,unsafeLadder(i,s){let c=r.ZERO,a=i;for(;s>Tu;)s&Po&&(c=c.add(a)),a=a.double(),s>>=Po;return c},precomputeWindow(i,s){let{windows:c,windowSize:a}=o(s),d=[],l=i,u=l;for(let g=0;g<c;g++){u=l,d.push(u);for(let y=1;y<a;y++)u=u.add(l),d.push(u);l=u.double()}return d},wNAF(i,s,c){let{windows:a,windowSize:d}=o(i),l=r.ZERO,u=r.BASE,g=BigInt(2**i-1),y=2**i,h=BigInt(i);for(let f=0;f<a;f++){let p=f*d,m=Number(c&g);c>>=h,m>d&&(m-=y,c+=Po);let w=p,S=p+Math.abs(m)-1,C=f%2!==0,B=m<0;m===0?u=u.add(e(C,s[w])):l=l.add(e(B,s[S]))}return{p:l,f:u}},wNAFCached(i,s,c){let a=xs.get(i)||1,d=No.get(i);return d||(d=this.precomputeWindow(i,a),a!==1&&No.set(i,c(d))),this.wNAF(a,d,s)},setWindowSize(i,s){n(s),xs.set(i,s),No.delete(i)}}}function ko(r){return Lo(r.Fp),re(r,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...Bo(r.n,r.nBitLength),...r,p:r.Fp.ORDER})}function vs(r){r.lowS!==void 0&&de("lowS",r.lowS),r.prehash!==void 0&&de("prehash",r.prehash)}function Lu(r){let t=ko(r);re(t,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:e,Fp:n,a:o}=t;if(e){if(!n.eql(o,n.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if(typeof e!="object"||typeof e.beta!="bigint"||typeof e.splitScalar!="function")throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...t})}var{bytesToNumberBE:Bu,hexToBytes:Cu}=Ao,ge={Err:class extends Error{constructor(t=""){super(t)}},_parseInt(r){let{Err:t}=ge;if(r.length<2||r[0]!==2)throw new t("Invalid signature integer tag");let e=r[1],n=r.subarray(2,e+2);if(!e||n.length!==e)throw new t("Invalid signature integer: wrong length");if(n[0]&128)throw new t("Invalid signature integer: negative");if(n[0]===0&&!(n[1]&128))throw new t("Invalid signature integer: unnecessary leading zero");return{d:Bu(n),l:r.subarray(e+2)}},toSig(r){let{Err:t}=ge,e=typeof r=="string"?Cu(r):r;Oe(e);let n=e.length;if(n<2||e[0]!=48)throw new t("Invalid signature tag");if(e[1]!==n-2)throw new t("Invalid signature: incorrect length");let{d:o,l:i}=ge._parseInt(e.subarray(2)),{d:s,l:c}=ge._parseInt(i);if(c.length)throw new t("Invalid signature: left bytes after parsing");return{r:o,s}},hexFromSig(r){let t=d=>Number.parseInt(d[0],16)&8?"00"+d:d,e=d=>{let l=d.toString(16);return l.length&1?`0${l}`:l},n=t(e(r.s)),o=t(e(r.r)),i=n.length/2,s=o.length/2,c=e(i),a=e(s);return`30${e(s+i+4)}02${a}${o}02${c}${n}`}},ne=BigInt(0),et=BigInt(1),up=BigInt(2),Is=BigInt(3),lp=BigInt(4);function Pu(r){let t=Lu(r),{Fp:e}=t,n=t.toBytes||((h,f,p)=>{let m=f.toAffine();return Re(Uint8Array.from([4]),e.toBytes(m.x),e.toBytes(m.y))}),o=t.fromBytes||(h=>{let f=h.subarray(1),p=e.fromBytes(f.subarray(0,e.BYTES)),m=e.fromBytes(f.subarray(e.BYTES,2*e.BYTES));return{x:p,y:m}});function i(h){let{a:f,b:p}=t,m=e.sqr(h),w=e.mul(m,h);return e.add(e.add(w,e.mul(h,f)),p)}if(!e.eql(e.sqr(t.Gy),i(t.Gx)))throw new Error("bad generator point: equation left != right");function s(h){return tr(h,et,t.n)}function c(h){let{allowedPrivateKeyLengths:f,nByteLength:p,wrapPrivateKey:m,n:w}=t;if(f&&typeof h!="bigint"){if(jt(h)&&(h=he(h)),typeof h!="string"||!f.includes(h.length))throw new Error("Invalid key");h=h.padStart(p*2,"0")}let S;try{S=typeof h=="bigint"?h:Vt(bt("private key",h,p))}catch{throw new Error(`private key must be ${p} bytes, hex or bigint, not ${typeof h}`)}return m&&(S=ct(S,w)),ee("private key",S,et,w),S}function a(h){if(!(h instanceof u))throw new Error("ProjectivePoint expected")}let d=Zr((h,f)=>{let{px:p,py:m,pz:w}=h;if(e.eql(w,e.ONE))return{x:p,y:m};let S=h.is0();f==null&&(f=S?e.ONE:e.inv(w));let C=e.mul(p,f),B=e.mul(m,f),E=e.mul(w,f);if(S)return{x:e.ZERO,y:e.ZERO};if(!e.eql(E,e.ONE))throw new Error("invZ was invalid");return{x:C,y:B}}),l=Zr(h=>{if(h.is0()){if(t.allowInfinityPoint&&!e.is0(h.py))return;throw new Error("bad point: ZERO")}let{x:f,y:p}=h.toAffine();if(!e.isValid(f)||!e.isValid(p))throw new Error("bad point: x or y not FE");let m=e.sqr(p),w=i(f);if(!e.eql(m,w))throw new Error("bad point: equation left != right");if(!h.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});class u{constructor(f,p,m){if(this.px=f,this.py=p,this.pz=m,f==null||!e.isValid(f))throw new Error("x required");if(p==null||!e.isValid(p))throw new Error("y required");if(m==null||!e.isValid(m))throw new Error("z required");Object.freeze(this)}static fromAffine(f){let{x:p,y:m}=f||{};if(!f||!e.isValid(p)||!e.isValid(m))throw new Error("invalid affine point");if(f instanceof u)throw new Error("projective point not allowed");let w=S=>e.eql(S,e.ZERO);return w(p)&&w(m)?u.ZERO:new u(p,m,e.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(f){let p=e.invertBatch(f.map(m=>m.pz));return f.map((m,w)=>m.toAffine(p[w])).map(u.fromAffine)}static fromHex(f){let p=u.fromAffine(o(bt("pointHex",f)));return p.assertValidity(),p}static fromPrivateKey(f){return u.BASE.multiply(c(f))}_setWindowSize(f){y.setWindowSize(this,f)}assertValidity(){l(this)}hasEvenY(){let{y:f}=this.toAffine();if(e.isOdd)return!e.isOdd(f);throw new Error("Field doesn't support isOdd")}equals(f){a(f);let{px:p,py:m,pz:w}=this,{px:S,py:C,pz:B}=f,E=e.eql(e.mul(p,B),e.mul(S,w)),I=e.eql(e.mul(m,B),e.mul(C,w));return E&&I}negate(){return new u(this.px,e.neg(this.py),this.pz)}double(){let{a:f,b:p}=t,m=e.mul(p,Is),{px:w,py:S,pz:C}=this,B=e.ZERO,E=e.ZERO,I=e.ZERO,T=e.mul(w,w),Q=e.mul(S,S),M=e.mul(C,C),k=e.mul(w,S);return k=e.add(k,k),I=e.mul(w,C),I=e.add(I,I),B=e.mul(f,I),E=e.mul(m,M),E=e.add(B,E),B=e.sub(Q,E),E=e.add(Q,E),E=e.mul(B,E),B=e.mul(k,B),I=e.mul(m,I),M=e.mul(f,M),k=e.sub(T,M),k=e.mul(f,k),k=e.add(k,I),I=e.add(T,T),T=e.add(I,T),T=e.add(T,M),T=e.mul(T,k),E=e.add(E,T),M=e.mul(S,C),M=e.add(M,M),T=e.mul(M,k),B=e.sub(B,T),I=e.mul(M,Q),I=e.add(I,I),I=e.add(I,I),new u(B,E,I)}add(f){a(f);let{px:p,py:m,pz:w}=this,{px:S,py:C,pz:B}=f,E=e.ZERO,I=e.ZERO,T=e.ZERO,Q=t.a,M=e.mul(t.b,Is),k=e.mul(p,S),dt=e.mul(m,C),ht=e.mul(w,B),v=e.add(p,m),x=e.add(S,C);v=e.mul(v,x),x=e.add(k,dt),v=e.sub(v,x),x=e.add(p,w);let L=e.add(S,B);return x=e.mul(x,L),L=e.add(k,ht),x=e.sub(x,L),L=e.add(m,w),E=e.add(C,B),L=e.mul(L,E),E=e.add(dt,ht),L=e.sub(L,E),T=e.mul(Q,x),E=e.mul(M,ht),T=e.add(E,T),E=e.sub(dt,T),T=e.add(dt,T),I=e.mul(E,T),dt=e.add(k,k),dt=e.add(dt,k),ht=e.mul(Q,ht),x=e.mul(M,x),dt=e.add(dt,ht),ht=e.sub(k,ht),ht=e.mul(Q,ht),x=e.add(x,ht),k=e.mul(dt,x),I=e.add(I,k),k=e.mul(L,x),E=e.mul(v,E),E=e.sub(E,k),k=e.mul(v,dt),T=e.mul(L,T),T=e.add(T,k),new u(E,I,T)}subtract(f){return this.add(f.negate())}is0(){return this.equals(u.ZERO)}wNAF(f){return y.wNAFCached(this,f,u.normalizeZ)}multiplyUnsafe(f){ee("scalar",f,ne,t.n);let p=u.ZERO;if(f===ne)return p;if(f===et)return this;let{endo:m}=t;if(!m)return y.unsafeLadder(this,f);let{k1neg:w,k1:S,k2neg:C,k2:B}=m.splitScalar(f),E=p,I=p,T=this;for(;S>ne||B>ne;)S&et&&(E=E.add(T)),B&et&&(I=I.add(T)),T=T.double(),S>>=et,B>>=et;return w&&(E=E.negate()),C&&(I=I.negate()),I=new u(e.mul(I.px,m.beta),I.py,I.pz),E.add(I)}multiply(f){let{endo:p,n:m}=t;ee("scalar",f,et,m);let w,S;if(p){let{k1neg:C,k1:B,k2neg:E,k2:I}=p.splitScalar(f),{p:T,f:Q}=this.wNAF(B),{p:M,f:k}=this.wNAF(I);T=y.constTimeNegate(C,T),M=y.constTimeNegate(E,M),M=new u(e.mul(M.px,p.beta),M.py,M.pz),w=T.add(M),S=Q.add(k)}else{let{p:C,f:B}=this.wNAF(f);w=C,S=B}return u.normalizeZ([w,S])[0]}multiplyAndAddUnsafe(f,p,m){let w=u.BASE,S=(B,E)=>E===ne||E===et||!B.equals(w)?B.multiplyUnsafe(E):B.multiply(E),C=S(this,p).add(S(f,m));return C.is0()?void 0:C}toAffine(f){return d(this,f)}isTorsionFree(){let{h:f,isTorsionFree:p}=t;if(f===et)return!0;if(p)return p(u,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:f,clearCofactor:p}=t;return f===et?this:p?p(u,this):this.multiplyUnsafe(t.h)}toRawBytes(f=!0){return de("isCompressed",f),this.assertValidity(),n(u,this,f)}toHex(f=!0){return de("isCompressed",f),he(this.toRawBytes(f))}}u.BASE=new u(t.Gx,t.Gy,e.ONE),u.ZERO=new u(e.ZERO,e.ONE,e.ZERO);let g=t.nBitLength,y=Es(u,t.endo?Math.ceil(g/2):g);return{CURVE:t,ProjectivePoint:u,normPrivateKeyToScalar:c,weierstrassEquation:i,isWithinCurveOrder:s}}function Nu(r){let t=ko(r);return re(t,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...t})}function Ss(r){let t=Nu(r),{Fp:e,n}=t,o=e.BYTES+1,i=2*e.BYTES+1;function s(v){return ct(v,n)}function c(v){return Xr(v,n)}let{ProjectivePoint:a,normPrivateKeyToScalar:d,weierstrassEquation:l,isWithinCurveOrder:u}=Pu({...t,toBytes(v,x,L){let _=x.toAffine(),R=e.toBytes(_.x),j=Re;return de("isCompressed",L),L?j(Uint8Array.from([x.hasEvenY()?2:3]),R):j(Uint8Array.from([4]),R,e.toBytes(_.y))},fromBytes(v){let x=v.length,L=v[0],_=v.subarray(1);if(x===o&&(L===2||L===3)){let R=Vt(_);if(!tr(R,et,e.ORDER))throw new Error("Point is not on curve");let j=l(R),at;try{at=e.sqrt(j)}catch(Tt){let zt=Tt instanceof Error?": "+Tt.message:"";throw new Error("Point is not on curve"+zt)}let ut=(at&et)===et;return(L&1)===1!==ut&&(at=e.neg(at)),{x:R,y:at}}else if(x===i&&L===4){let R=e.fromBytes(_.subarray(0,e.BYTES)),j=e.fromBytes(_.subarray(e.BYTES,2*e.BYTES));return{x:R,y:j}}else throw new Error(`Point of length ${x} was invalid. Expected ${o} compressed bytes or ${i} uncompressed bytes`)}}),g=v=>he(te(v,t.nByteLength));function y(v){let x=n>>et;return v>x}function h(v){return y(v)?s(-v):v}let f=(v,x,L)=>Vt(v.slice(x,L));class p{constructor(x,L,_){this.r=x,this.s=L,this.recovery=_,this.assertValidity()}static fromCompact(x){let L=t.nByteLength;return x=bt("compactSignature",x,L*2),new p(f(x,0,L),f(x,L,2*L))}static fromDER(x){let{r:L,s:_}=ge.toSig(bt("DER",x));return new p(L,_)}assertValidity(){ee("r",this.r,et,n),ee("s",this.s,et,n)}addRecoveryBit(x){return new p(this.r,this.s,x)}recoverPublicKey(x){let{r:L,s:_,recovery:R}=this,j=E(bt("msgHash",x));if(R==null||![0,1,2,3].includes(R))throw new Error("recovery id invalid");let at=R===2||R===3?L+t.n:L;if(at>=e.ORDER)throw new Error("recovery id 2 or 3 invalid");let ut=R&1?"03":"02",Gt=a.fromHex(ut+g(at)),Tt=c(at),zt=s(-j*Tt),Ke=s(_*Tt),Ht=a.BASE.multiplyAndAddUnsafe(Gt,zt,Ke);if(!Ht)throw new Error("point at infinify");return Ht.assertValidity(),Ht}hasHighS(){return y(this.s)}normalizeS(){return this.hasHighS()?new p(this.r,s(-this.s),this.recovery):this}toDERRawBytes(){return pe(this.toDERHex())}toDERHex(){return ge.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return pe(this.toCompactHex())}toCompactHex(){return g(this.r)+g(this.s)}}let m={isValidPrivateKey(v){try{return d(v),!0}catch{return!1}},normPrivateKeyToScalar:d,randomPrivateKey:()=>{let v=Co(t.n);return ws(t.randomBytes(v),t.n)},precompute(v=8,x=a.BASE){return x._setWindowSize(v),x.multiply(BigInt(3)),x}};function w(v,x=!0){return a.fromPrivateKey(v).toRawBytes(x)}function S(v){let x=jt(v),L=typeof v=="string",_=(x||L)&&v.length;return x?_===o||_===i:L?_===2*o||_===2*i:v instanceof a}function C(v,x,L=!0){if(S(v))throw new Error("first arg must be private key");if(!S(x))throw new Error("second arg must be public key");return a.fromHex(x).multiply(d(v)).toRawBytes(L)}let B=t.bits2int||function(v){let x=Vt(v),L=v.length*8-t.nBitLength;return L>0?x>>BigInt(L):x},E=t.bits2int_modN||function(v){return s(B(v))},I=er(t.nBitLength);function T(v){return ee(`num < 2^${t.nBitLength}`,v,ne,I),te(v,t.nByteLength)}function Q(v,x,L=M){if(["recovered","canonical"].some(se=>se in L))throw new Error("sign() legacy options not supported");let{hash:_,randomBytes:R}=t,{lowS:j,prehash:at,extraEntropy:ut}=L;j==null&&(j=!0),v=bt("msgHash",v),vs(L),at&&(v=bt("prehashed msgHash",_(v)));let Gt=E(v),Tt=d(x),zt=[T(Tt),T(Gt)];if(ut!=null&&ut!==!1){let se=ut===!0?R(e.BYTES):ut;zt.push(bt("extraEntropy",se))}let Ke=Re(...zt),Ht=Gt;function yn(se){let xe=B(se);if(!u(xe))return;let oi=c(xe),Dt=a.BASE.multiply(xe).toAffine(),Ee=s(Dt.x);if(Ee===ne)return;let nr=s(oi*s(Ht+Ee*Tt));if(nr===ne)return;let ii=(Dt.x===Ee?0:2)|Number(Dt.y&et),si=nr;return j&&y(nr)&&(si=h(nr),ii^=1),new p(Ee,si,ii)}return{seed:Ke,k2sig:yn}}let M={lowS:t.lowS,prehash:!1},k={lowS:t.lowS,prehash:!1};function dt(v,x,L=M){let{seed:_,k2sig:R}=Q(v,x,L),j=t;return So(j.hash.outputLen,j.nByteLength,j.hmac)(_,R)}a.BASE._setWindowSize(8);function ht(v,x,L,_=k){let R=v;if(x=bt("msgHash",x),L=bt("publicKey",L),"strict"in _)throw new Error("options.strict was renamed to lowS");vs(_);let{lowS:j,prehash:at}=_,ut,Gt;try{if(typeof R=="string"||jt(R))try{ut=p.fromDER(R)}catch(Dt){if(!(Dt instanceof ge.Err))throw Dt;ut=p.fromCompact(R)}else if(typeof R=="object"&&typeof R.r=="bigint"&&typeof R.s=="bigint"){let{r:Dt,s:Ee}=R;ut=new p(Dt,Ee)}else throw new Error("PARSE");Gt=a.fromHex(L)}catch(Dt){if(Dt.message==="PARSE")throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(j&&ut.hasHighS())return!1;at&&(x=t.hash(x));let{r:Tt,s:zt}=ut,Ke=E(x),Ht=c(zt),yn=s(Ke*Ht),se=s(Tt*Ht),xe=a.BASE.multiplyAndAddUnsafe(Gt,yn,se)?.toAffine();return xe?s(xe.x)===Tt:!1}return{CURVE:t,getPublicKey:w,getSharedSecret:C,sign:dt,verify:ht,ProjectivePoint:a,Signature:p,utils:m}}function ku(r){return{hash:r,hmac:(t,...e)=>bo(r,t,ss(...e)),randomBytes:as}}function As(r,t){let e=n=>Ss({...r,...ku(n)});return Object.freeze({...e(t),create:e})}var Bs=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),Ts=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Du=BigInt(1),Do=BigInt(2),Ls=(r,t)=>(r+t/Do)/t;function Ou(r){let t=Bs,e=BigInt(3),n=BigInt(6),o=BigInt(11),i=BigInt(22),s=BigInt(23),c=BigInt(44),a=BigInt(88),d=r*r*r%t,l=d*d*r%t,u=wt(l,e,t)*l%t,g=wt(u,e,t)*l%t,y=wt(g,Do,t)*d%t,h=wt(y,o,t)*y%t,f=wt(h,i,t)*h%t,p=wt(f,c,t)*f%t,m=wt(p,a,t)*p%t,w=wt(m,c,t)*f%t,S=wt(w,e,t)*l%t,C=wt(S,s,t)*h%t,B=wt(C,n,t)*d%t,E=wt(B,Do,t);if(!Oo.eql(Oo.sqr(E),r))throw new Error("Cannot find square root");return E}var Oo=ys(Bs,void 0,void 0,{sqrt:Ou}),Ue=As({a:BigInt(0),b:BigInt(7),Fp:Oo,n:Ts,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:r=>{let t=Ts,e=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-Du*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),o=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=e,s=BigInt("0x100000000000000000000000000000000"),c=Ls(i*r,t),a=Ls(-n*r,t),d=ct(r-c*e-a*o,t),l=ct(-c*n-a*i,t),u=d>s,g=l>s;if(u&&(d=t-d),g&&(l=t-l),d>s||l>s)throw new Error("splitScalar: Endomorphism failed, k="+r);return{k1neg:u,k1:d,k2neg:g,k2:l}}}},fs),wp=BigInt(0);var xp=Ue.ProjectivePoint;var Cs=pt(Z("node:crypto"),1);var Jr=class extends Error{constructor(t="An error occurred while verifying a message"){super(t),this.name="VerificationError"}};function Ps(r,t,e){let n=Cs.default.createHash("sha256");if(e instanceof Uint8Array)n.update(e);else for(let i of e)n.update(i);let o=n.digest();try{return Ue.verify(t,o,r)}catch(i){throw new Jr(String(i))}}var Qr=class{type="secp256k1";raw;_key;constructor(t){this._key=ks(t),this.raw=Ns(this._key)}toMultihash(){return _t.digest(Vr(this))}toCID(){return tt.createV1(114,this.toMultihash())}toString(){return $.encode(this.toMultihash().bytes).substring(1)}equals(t){return t==null||!(t.raw instanceof Uint8Array)?!1:Nt(this.raw,t.raw)}verify(t,e){return Ps(this._key,e,t)}};function Ds(r){return new Qr(r)}function Ns(r){return Ue.ProjectivePoint.fromHex(r).toRawBytes(!0)}function ks(r){try{return Ue.ProjectivePoint.fromHex(r),r}catch(t){throw new Ur(String(t))}}function Os(r){let{Type:t,Data:e}=Je.decode(r.digest),n=e??new Uint8Array;switch(t){case St.Ed25519:return rs(n);case St.secp256k1:return Ds(n);default:throw new Ze}}function Vr(r){return Je.encode({Type:St[r.type],Data:r.raw})}var Rs=Symbol.for("nodejs.util.inspect.custom"),Ru=114,rr=class{type;multihash;publicKey;string;constructor(t){this.type=t.type,this.multihash=t.multihash,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}[Rr]=!0;toString(){return this.string==null&&(this.string=$.encode(this.multihash.bytes).slice(1)),this.string}toMultihash(){return this.multihash}toCID(){return tt.createV1(Ru,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(t){if(t==null)return!1;if(t instanceof Uint8Array)return Nt(this.multihash.bytes,t);if(typeof t=="string")return this.toString()===t;if(t?.toMultihash()?.bytes!=null)return Nt(this.multihash.bytes,t.toMultihash().bytes);throw new Error("not valid Id")}[Rs](){return`PeerId(${this.toString()})`}},jr=class extends rr{type="RSA";publicKey;constructor(t){super({...t,type:"RSA"}),this.publicKey=t.publicKey}},tn=class extends rr{type="Ed25519";publicKey;constructor(t){super({...t,type:"Ed25519"}),this.publicKey=t.publicKey}},en=class extends rr{type="secp256k1";publicKey;constructor(t){super({...t,type:"secp256k1"}),this.publicKey=t.publicKey}},Uu=2336,rn=class{type="url";multihash;publicKey;url;constructor(t){this.url=t.toString(),this.multihash=_t.digest(Zt(this.url))}[Rs](){return`PeerId(${this.url})`}[Rr]=!0;toString(){return this.toCID().toString()}toMultihash(){return this.multihash}toCID(){return tt.createV1(Uu,this.toMultihash())}toBytes(){return this.toCID().bytes}toJSON(){return this.toString()}equals(t){return t==null?!1:(t instanceof Uint8Array&&(t=Y(t)),t.toString()===this.toString())}};function Ft(r){if(Mu(r))return new jr({multihash:r});if(_u(r))try{let t=Os(r);if(t.type==="Ed25519")return new tn({multihash:r,publicKey:t});if(t.type==="secp256k1")return new en({multihash:r,publicKey:t})}catch{let e=Y(r.digest);return new rn(new URL(e))}throw new _r("Supplied PeerID Multihash is invalid")}function _u(r){return r.code===_t.code}function Mu(r){return r.code===Jn.code}var ac=pt(Z("net"),1);var nn=class{index=0;input="";new(t){return this.index=0,this.input=t,this}readAtomically(t){let e=this.index,n=t();return n===void 0&&(this.index=e),n}parseWith(t){let e=t();if(this.index===this.input.length)return e}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(t){return this.readAtomically(()=>{let e=this.readChar();if(e===t)return e})}readSeparator(t,e,n){return this.readAtomically(()=>{if(!(e>0&&this.readGivenChar(t)===void 0))return n()})}readNumber(t,e,n,o){return this.readAtomically(()=>{let i=0,s=0,c=this.peekChar();if(c===void 0)return;let a=c==="0",d=2**(8*o)-1;for(;;){let l=this.readAtomically(()=>{let u=this.readChar();if(u===void 0)return;let g=Number.parseInt(u,t);if(!Number.isNaN(g))return g});if(l===void 0)break;if(i*=t,i+=l,i>d||(s+=1,e!==void 0&&s>e))return}if(s!==0)return!n&&a&&s>1?void 0:i})}readIPv4Addr(){return this.readAtomically(()=>{let t=new Uint8Array(4);for(let e=0;e<t.length;e++){let n=this.readSeparator(".",e,()=>this.readNumber(10,3,!1,1));if(n===void 0)return;t[e]=n}return t})}readIPv6Addr(){let t=e=>{for(let n=0;n<e.length/2;n++){let o=n*2;if(n<e.length-3){let s=this.readSeparator(":",n,()=>this.readIPv4Addr());if(s!==void 0)return e[o]=s[0],e[o+1]=s[1],e[o+2]=s[2],e[o+3]=s[3],[o+4,!0]}let i=this.readSeparator(":",n,()=>this.readNumber(16,4,!0,2));if(i===void 0)return[o,!1];e[o]=i>>8,e[o+1]=i&255}return[e.length,!1]};return this.readAtomically(()=>{let e=new Uint8Array(16),[n,o]=t(e);if(n===16)return e;if(o||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;let i=new Uint8Array(14),s=16-(n+2),[c]=t(i.subarray(0,s));return e.set(i.subarray(0,c),16-c),e})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}};var Em=new nn;var Cm=parseInt("0xFFFF",16),Pm=new Uint8Array([0,0,0,0,0,0,0,0,0,0,255,255]);var At=Z("node:net");function on(r){return!!(0,At.isIP)(r)}var Ms=At.isIPv4,zu=At.isIPv6,Ro=function(r){let t=0;if(r=r.toString().trim(),Ms(r)){let e=new Uint8Array(t+4);return r.split(/\./g).forEach(n=>{e[t++]=parseInt(n,10)&255}),e}if(zu(r)){let e=r.split(":",8),n;for(n=0;n<e.length;n++){let i=Ms(e[n]),s;i&&(s=Ro(e[n]),e[n]=Y(s.slice(0,2),"base16")),s!=null&&++n<8&&e.splice(n,0,Y(s.slice(2,4),"base16"))}if(e[0]==="")for(;e.length<8;)e.unshift("0");else if(e[e.length-1]==="")for(;e.length<8;)e.push("0");else if(e.length<8){for(n=0;n<e.length&&e[n]!=="";n++);let i=[n,1];for(n=9-e.length;n>0;n--)i.push("0");e.splice.apply(e,i)}let o=new Uint8Array(t+16);for(n=0;n<e.length;n++){let i=parseInt(e[n],16);o[t++]=i>>8&255,o[t++]=i&255}return o}throw new Error("invalid ip address")},Ks=function(r,t=0,e){t=~~t,e=e??r.length-t;let n=new DataView(r.buffer);if(e===4){let o=[];for(let i=0;i<e;i++)o.push(r[t+i]);return o.join(".")}if(e===16){let o=[];for(let i=0;i<e;i+=2)o.push(n.getUint16(t+i).toString(16));return o.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""};var _e={},Uo={},qu=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,-1,"ip6zone"],[43,8,"ipcidr"],[53,-1,"dns",!0],[54,-1,"dns4",!0],[55,-1,"dns6",!0],[56,-1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,-1,"unix",!1,!0],[421,-1,"ipfs"],[421,-1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,-1,"garlic64"],[448,0,"tls"],[449,-1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,-1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[481,-1,"http-path"],[777,-1,"memory"]];qu.forEach(r=>{let t=Wu(...r);Uo[t.code]=t,_e[t.name]=t});function Wu(r,t,e,n,o){return{code:r,size:t,name:e,resolvable:!!n,path:!!o}}function U(r){if(typeof r=="number"){if(Uo[r]!=null)return Uo[r];throw new Error(`no protocol with code: ${r}`)}else if(typeof r=="string"){if(_e[r]!=null)return _e[r];throw new Error(`no protocol with name: ${r}`)}throw new Error(`invalid protocol id type: ${typeof r}`)}var pg=U("ip4"),mg=U("ip6"),gg=U("ipcidr");function $o(r,t){switch(U(r).code){case 4:case 41:return Zu(t);case 42:return Ko(t);case 6:case 273:case 33:case 132:return Fs(t).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return Ko(t);case 421:return ju(t);case 444:return Vs(t);case 445:return Vs(t);case 466:return Qu(t);case 481:return globalThis.encodeURIComponent(Ko(t));default:return Y(t,"base16")}}function Vo(r,t){switch(U(r).code){case 4:return $s(t);case 41:return $s(t);case 42:return Mo(t);case 6:case 273:case 33:case 132:return Fo(parseInt(t,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return Mo(t);case 421:return Xu(t);case 444:return tl(t);case 445:return el(t);case 466:return Ju(t);case 481:return Mo(globalThis.decodeURIComponent(t));default:return Zt(t,"base16")}}var _o=Object.values(Ge).map(r=>r.decoder),Yu=function(){let r=_o[0].or(_o[1]);return _o.slice(2).forEach(t=>r=r.or(t)),r}();function $s(r){if(!on(r))throw new Error("invalid ip address");return Ro(r)}function Zu(r){let t=Ks(r,0,r.length);if(t==null)throw new Error("ipBuff is required");if(!on(t))throw new Error("invalid ip address");return t}function Fo(r){let t=new ArrayBuffer(2);return new DataView(t).setUint16(0,r),new Uint8Array(t)}function Fs(r){return new DataView(r.buffer).getUint16(r.byteOffset)}function Mo(r){let t=Zt(r),e=Uint8Array.from(qt(t.length));return yt([e,t],e.length+t.length)}function Ko(r){let t=Ut(r);if(r=r.slice(it(t)),r.length!==t)throw new Error("inconsistent lengths");return Y(r)}function Xu(r){let t;r[0]==="Q"||r[0]==="1"?t=ft($.decode(`z${r}`)).bytes:t=tt.parse(r).multihash.bytes;let e=Uint8Array.from(qt(t.length));return yt([e,t],e.length+t.length)}function Ju(r){let t=Yu.decode(r),e=Uint8Array.from(qt(t.length));return yt([e,t],e.length+t.length)}function Qu(r){let t=Ut(r),e=r.slice(it(t));if(e.length!==t)throw new Error("inconsistent lengths");return"u"+Y(e,"base64url")}function ju(r){let t=Ut(r),e=r.slice(it(t));if(e.length!==t)throw new Error("inconsistent lengths");return Y(e,"base58btc")}function tl(r){let t=r.split(":");if(t.length!==2)throw new Error(`failed to parse onion addr: ["'${t.join('", "')}'"]' does not contain a port number`);if(t[0].length!==16)throw new Error(`failed to parse onion addr: ${t[0]} not a Tor onion address.`);let e=Bt.decode("b"+t[0]),n=parseInt(t[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let o=Fo(n);return yt([e,o],e.length+o.length)}function el(r){let t=r.split(":");if(t.length!==2)throw new Error(`failed to parse onion addr: ["'${t.join('", "')}'"]' does not contain a port number`);if(t[0].length!==56)throw new Error(`failed to parse onion addr: ${t[0]} not a Tor onion3 address.`);let e=Bt.decode(`b${t[0]}`),n=parseInt(t[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");let o=Fo(n);return yt([e,o],e.length+o.length)}function Vs(r){let t=r.slice(0,r.length-2),e=r.slice(r.length-2),n=Y(t,"base32"),o=Fs(e);return`${n}:${o}`}function Gs(r){r=Go(r);let t=[],e=[],n=null,o=r.split("/").slice(1);if(o.length===1&&o[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let i=0;i<o.length;i++){let s=o[i],c=U(s);if(c.size===0){t.push([c.code]),e.push([c.code]);continue}if(i++,i>=o.length)throw Hs("invalid address: "+r);if(c.path===!0){n=Go(o.slice(i).join("/")),t.push([c.code,Vo(c.code,n)]),e.push([c.code,n]);break}let a=Vo(c.code,o[i]);t.push([c.code,a]),e.push([c.code,$o(c.code,a)])}return{string:zs(e),bytes:Ho(t),tuples:t,stringTuples:e,path:n}}function zo(r){let t=[],e=[],n=null,o=0;for(;o<r.length;){let i=Ut(r,o),s=it(i),c=U(i),a=rl(c,r.slice(o+s));if(a===0){t.push([i]),e.push([i]),o+=s;continue}let d=r.slice(o+s,o+s+a);if(o+=a+s,o>r.length)throw Hs("Invalid address Uint8Array: "+Y(r,"base16"));t.push([i,d]);let l=$o(i,d);if(e.push([i,l]),c.path===!0){n=l;break}}return{bytes:Uint8Array.from(r),string:zs(e),tuples:t,stringTuples:e,path:n}}function zs(r){let t=[];return r.map(e=>{let n=U(e[0]);return t.push(n.name),e.length>1&&e[1]!=null&&t.push(e[1]),null}),Go(t.join("/"))}function Ho(r){return yt(r.map(t=>{let e=U(t[0]),n=Uint8Array.from(qt(e.code));return t.length>1&&t[1]!=null&&(n=yt([n,t[1]])),n}))}function rl(r,t){if(r.size>0)return r.size/8;if(r.size===0)return 0;{let e=Ut(t instanceof Uint8Array?t:Uint8Array.from(t));return e+it(e)}}function Go(r){return"/"+r.trim().split("/").filter(t=>t).join("/")}function Hs(r){return new Error("Error parsing address: "+r)}var nl=Symbol.for("nodejs.util.inspect.custom"),qo=Symbol.for("@multiformats/js-multiaddr/multiaddr"),ol=[U("dns").code,U("dns4").code,U("dns6").code,U("dnsaddr").code],sn=class r{bytes;#t;#e;#r;#n;[qo]=!0;constructor(t){t==null&&(t="");let e;if(t instanceof Uint8Array)e=zo(t);else if(typeof t=="string"){if(t.length>0&&t.charAt(0)!=="/")throw new Error(`multiaddr "${t}" must start with a "/"`);e=Gs(t)}else if(cn(t))e=zo(t.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=e.bytes,this.#t=e.string,this.#e=e.tuples,this.#r=e.stringTuples,this.#n=e.path}toString(){return this.#t}toJSON(){return this.toString()}toOptions(){let t,e,n,o,i="",s=U("tcp"),c=U("udp"),a=U("ip4"),d=U("ip6"),l=U("dns6"),u=U("ip6zone");for(let[y,h]of this.stringTuples())y===u.code&&(i=`%${h??""}`),ol.includes(y)&&(e=s.name,o=443,n=`${h??""}${i}`,t=y===l.code?6:4),(y===s.code||y===c.code)&&(e=U(y).name,o=parseInt(h??"")),(y===a.code||y===d.code)&&(e=U(y).name,n=`${h??""}${i}`,t=y===d.code?6:4);if(t==null||e==null||n==null||o==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:t,host:n,transport:e,port:o}}protos(){return this.#e.map(([t])=>Object.assign({},U(t)))}protoCodes(){return this.#e.map(([t])=>t)}protoNames(){return this.#e.map(([t])=>U(t).name)}tuples(){return this.#e}stringTuples(){return this.#r}encapsulate(t){return t=new r(t),new r(this.toString()+t.toString())}decapsulate(t){let e=t.toString(),n=this.toString(),o=n.lastIndexOf(e);if(o<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${t.toString()}`);return new r(n.slice(0,o))}decapsulateCode(t){let e=this.tuples();for(let n=e.length-1;n>=0;n--)if(e[n][0]===t)return new r(Ho(e.slice(0,n)));return this}getPeerId(){try{let t=[];this.stringTuples().forEach(([n,o])=>{n===_e.p2p.code&&t.push([n,o]),n===_e["p2p-circuit"].code&&(t=[])});let e=t.pop();if(e?.[1]!=null){let n=e[1];return n[0]==="Q"||n[0]==="1"?Y($.decode(`z${n}`),"base58btc"):Y(tt.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return this.#n}equals(t){return Nt(this.bytes,t.bytes)}async resolve(t){let e=this.protos().find(i=>i.resolvable);if(e==null)return[this];let n=qs.get(e.name);if(n==null)throw new X(`no available resolver for ${e.name}`,"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,t)).map(i=>nt(i))}nodeAddress(){let t=this.toOptions();if(t.transport!=="tcp"&&t.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${t.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:t.family,address:t.host,port:t.port}}isThinWaistAddress(t){let e=(t??this).protos();return!(e.length!==2||e[0].code!==4&&e[0].code!==41||e[1].code!==6&&e[1].code!==273)}[nl](){return`Multiaddr(${this.#t})`}};var qs=new Map;function cn(r){return!!r?.[qo]}function nt(r){return new sn(r)}var il=b("dns4"),sl=b("dns6"),cl=b("dnsaddr"),be=W(b("dns"),cl,il,sl),ln=W(b("ip4"),b("ip6")),ie=W(A(ln,b("tcp")),A(be,b("tcp"))),fn=A(ln,b("udp")),al=A(fn,b("utp")),ul=A(fn,b("quic")),ll=A(fn,b("quic-v1")),Wo=W(A(ie,b("ws")),A(be,b("ws"))),an=W(A(Wo,b("p2p")),Wo),Yo=W(A(ie,b("wss")),A(be,b("wss")),A(ie,b("tls"),b("ws")),A(be,b("tls"),b("ws"))),un=W(A(Yo,b("p2p")),Yo),Zo=W(A(ie,b("http")),A(ln,b("http")),A(be,b("http"))),Xo=W(A(ie,b("https")),A(ln,b("https")),A(be,b("https"))),Ws=A(fn,b("webrtc-direct"),b("certhash")),Xs=W(A(Ws,b("p2p")),Ws),Ys=A(ll,b("webtransport"),b("certhash"),b("certhash")),Js=W(A(Ys,b("p2p")),Ys),Qs=W(A(an,b("p2p-webrtc-star"),b("p2p")),A(un,b("p2p-webrtc-star"),b("p2p")),A(an,b("p2p-webrtc-star")),A(un,b("p2p-webrtc-star"))),Fg=W(A(an,b("p2p-websocket-star"),b("p2p")),A(un,b("p2p-websocket-star"),b("p2p")),A(an,b("p2p-websocket-star")),A(un,b("p2p-websocket-star"))),js=W(A(Zo,b("p2p-webrtc-direct"),b("p2p")),A(Xo,b("p2p-webrtc-direct"),b("p2p")),A(Zo,b("p2p-webrtc-direct")),A(Xo,b("p2p-webrtc-direct"))),we=W(Wo,Yo,Zo,Xo,Qs,js,ie,al,ul,be,Xs,Js),Gg=W(A(we,b("p2p-stardust"),b("p2p")),A(we,b("p2p-stardust"))),oe=W(A(we,b("p2p")),Qs,js,Xs,Js,b("p2p")),Zs=W(A(oe,b("p2p-circuit"),oe),A(oe,b("p2p-circuit")),A(b("p2p-circuit"),oe),A(we,b("p2p-circuit")),A(b("p2p-circuit"),we),b("p2p-circuit")),tc=()=>W(A(Zs,tc),Zs),ye=tc(),zg=W(A(ye,oe,ye),A(oe,ye),A(ye,oe),ye,oe);var Hg=W(A(ye,b("webrtc"),b("p2p")),A(ye,b("webrtc")),A(we,b("webrtc"),b("p2p")),A(we,b("webrtc")),b("webrtc"));function ec(r){function t(e){let n;try{n=nt(e)}catch{return!1}let o=r(n.protoNames());return o===null?!1:o===!0||o===!1?o:o.length===0}return t}function A(...r){function t(e){if(e.length<r.length)return null;let n=e;return r.some(o=>(n=typeof o=="function"?o().partialMatch(e):o.partialMatch(e),Array.isArray(n)&&(e=n),n===null)),n}return{toString:function(){return"{ "+r.join(" ")+" }"},input:r,matches:ec(t),partialMatch:t}}function W(...r){function t(n){let o=null;return r.some(i=>{let s=typeof i=="function"?i().partialMatch(n):i.partialMatch(n);return s!=null?(o=s,!0):!1}),o}return{toString:function(){return"{ "+r.join(" ")+" }"},input:r,matches:ec(t),partialMatch:t}}function b(r){let t=r;function e(o){let i;try{i=nt(o)}catch{return!1}let s=i.protoNames();return s.length===1&&s[0]===t}function n(o){return o.length===0?null:o[0]===t?o.slice(1):null}return{toString:function(){return t},matches:e,partialMatch:n}}var dn=class extends Event{type;detail;constructor(t,e){super(t),this.type=t,this.detail=e}};var cc=pt(Z("net"),1);var Jo={ERR_INVALID_IP_PARAMETER:"ERR_INVALID_IP_PARAMETER",ERR_INVALID_PORT_PARAMETER:"ERR_INVALID_PORT_PARAMETER",ERR_INVALID_IP:"ERR_INVALID_IP"};function rc(r,t){if(typeof r!="string")throw new X(`invalid ip provided: ${r}`,Jo.ERR_INVALID_IP_PARAMETER);if(typeof t=="string"&&(t=parseInt(t)),isNaN(t))throw new X(`invalid port provided: ${t}`,Jo.ERR_INVALID_PORT_PARAMETER);if((0,At.isIPv4)(r))return nt(`/ip4/${r}/tcp/${t}`);if((0,At.isIPv6)(r))return nt(`/ip6/${r}/tcp/${t}`);throw new X(`invalid ip:port for creating a multiaddr: ${r}:${t}`,Jo.ERR_INVALID_IP)}function nc(r){if(hl(r))return async function*(){let t=r.getReader();try{for(;;){let{done:e,value:n}=await t.read();if(e)return;yield n}}finally{t.releaseLock()}}();if(dl(r))return r;throw new Error("unknown stream")}function dl(r){return r[Symbol.asyncIterator]!=null}function hl(r){return typeof r?.getReader=="function"}function oc(r){return async t=>{let e=async()=>{pl(t)&&await t.return(void 0)},n,o,i=m=>{n=m,e().catch(w=>{w=new AggregateError([n,w],"The Writable emitted an error, additionally an error occurred while ending the Source")}).finally(()=>{o?.(m)})},s,c=!1,a=()=>{c=!0,s?.()},d,l=!1,u=()=>{l=!0,d?.()},g,y=()=>{g?.()},h=async()=>new Promise((m,w)=>{s=g=m,o=w,r.once("drain",y)}),f=async()=>(await e(),new Promise((m,w)=>{if(c||l||n!=null){m();return}d=s=m,o=w})),p=()=>{r.removeListener("error",i),r.removeListener("close",a),r.removeListener("finish",u),r.removeListener("drain",y)};r.once("error",i),r.once("close",a),r.once("finish",u);try{for await(let m of t){if(!r.writable||r.destroyed||n!=null)break;r.write(m)||await h()}}catch(m){n==null&&r.destroy(m),n=m}try{if(r.writable&&r.end(),await f(),n!=null)throw n}finally{p()}}}function pl(r){return r.return!=null}function Qo(r){return{sink:oc(r),source:nc(r)}}var jo=pt(Z("os"),1),ic=pt(Z("path"),1);var ml={ip4:"IPv4",ip6:"IPv6"};function Me(r,t={}){let e=r.getPath();return e!=null?jo.default.platform()==="win32"?{path:ic.default.join("\\\\.\\pipe\\",e)}:{path:e}:{...t,...r.toOptions()}}function ti(r,t,e){let n=o=>nt(`/${r}/${o}/tcp/${e}`);return(gl(t)?bl(ml[r]):[t]).map(n)}function gl(r){return["0.0.0.0","::"].includes(r)}var yl=jo.default.networkInterfaces();function bl(r){let t=[];for(let[,e]of Object.entries(yl))if(e!=null)for(let n of e)n.family===r&&t.push(n.address);return t}var hn=(r,t)=>{let e=null,n=t.logger.forComponent("libp2p:tcp:socket"),o=t.metrics,i=t.metricPrefix??"",s=t.socketInactivityTimeout??3e5,c=t.socketCloseTimeout??500;t.listeningAddr?.getPath()!=null&&(t.remoteAddr=t.listeningAddr),t.remoteAddr?.getPath()!=null&&(t.localAddr=t.remoteAddr);let a;if(t.remoteAddr!=null)a=t.remoteAddr;else{if(r.remoteAddress==null||r.remotePort==null)throw new X("Could not determine remote address or port","ERR_NO_REMOTE_ADDRESS");a=rc(r.remoteAddress,r.remotePort)}let d=Me(a),l=d.path??`${d.host??""}:${d.port??""}`,{sink:u,source:g}=Qo(r);r.setTimeout(s,()=>{n("%s socket read timeout",l),o?.increment({[`${i}timeout`]:!0});let h;r.readable&&(h=new X("Socket read timeout","ERR_SOCKET_READ_TIMEOUT")),r.destroy(h)}),r.once("close",()=>{n("%s socket close",l),o?.increment({[`${i}close`]:!0}),y.timeline.close==null&&(y.timeline.close=Date.now())}),r.once("end",()=>{n("%s socket end",l),o?.increment({[`${i}end`]:!0})});let y={async sink(h){try{await u(async function*(){for await(let f of h)f instanceof Uint8Array?yield f:yield f.subarray()}())}catch(f){f.type!=="aborted"&&n.error("%s error in sink",l,f)}r.end()},source:g,remoteAddr:a,timeline:{open:Date.now()},async close(h={}){if(r.destroyed){n("The %s socket is destroyed",l);return}if(e!=null)return n("The %s socket is closed or closing",l),e;if(h.signal==null){let p=AbortSignal.timeout(c);h={...h,signal:p}}let f=()=>{r.destroy(new X("Destroying socket after timeout","ERR_CLOSE_TIMEOUT"))};h.signal?.addEventListener("abort",f);try{n("%s closing socket",l),e=new Promise((p,m)=>{r.once("close",()=>{n("%s socket closed",l),p()}),r.once("error",w=>{n("%s socket error",l,w),y.timeline.close==null&&(y.timeline.close=Date.now()),r.destroyed||m(w)}),r.setTimeout(c),r.end(),r.writableLength>0?r.once("drain",()=>{n("%s socket drained",l),r.destroy()}):r.destroy()}),await e}catch(p){this.abort(p)}finally{h.signal?.removeEventListener("abort",f)}},abort:h=>{n("%s socket abort due to error",l,h),r.destroyed||r.destroy(h),y.timeline.close==null&&(y.timeline.close=Date.now())},log:n};return y};async function sc(r,t){try{await r.close()}catch(e){t.log.error("an error occurred closing the connection",e),r.abort(e)}}var rt;(function(r){r[r.INACTIVE=0]="INACTIVE",r[r.ACTIVE=1]="ACTIVE",r[r.PAUSED=2]="PAUSED"})(rt||(rt={}));var pn=class extends Mr{context;server;connections=new Set;status={code:rt.INACTIVE};metrics;addr;log;constructor(t){if(super(),this.context=t,t.keepAlive=t.keepAlive??!0,t.noDelay=t.noDelay??!0,this.log=t.logger.forComponent("libp2p:tcp:listener"),this.addr="unknown",this.server=cc.default.createServer(t,this.onSocket.bind(this)),t.maxConnections!==void 0&&(this.server.maxConnections=t.maxConnections),t.closeServerOnMaxConnections!=null&&t.closeServerOnMaxConnections.closeAbove<t.closeServerOnMaxConnections.listenBelow)throw new X("closeAbove must be >= listenBelow","ERR_CONNECTION_LIMITS");this.server.on("listening",()=>{if(t.metrics!=null){let e=this.server.address();e==null?this.addr="unknown":typeof e=="string"?this.addr=e:this.addr=`${e.address}:${e.port}`,t.metrics?.registerMetricGroup("libp2p_tcp_inbound_connections_total",{label:"address",help:"Current active connections in TCP listener",calculate:()=>({[this.addr]:this.connections.size})}),this.metrics={status:t.metrics.registerMetricGroup("libp2p_tcp_listener_status_info",{label:"address",help:"Current status of the TCP listener socket"}),errors:t.metrics.registerMetricGroup("libp2p_tcp_listener_errors_total",{label:"address",help:"Total count of TCP listener errors by type"}),events:t.metrics.registerMetricGroup("libp2p_tcp_listener_events_total",{label:"address",help:"Total count of TCP listener events by type"})},this.metrics?.status.update({[this.addr]:rt.ACTIVE})}this.safeDispatchEvent("listening")}).on("error",e=>{this.metrics?.errors.increment({[`${this.addr} listen_error`]:!0}),this.safeDispatchEvent("error",{detail:e})}).on("close",()=>{this.metrics?.status.update({[this.addr]:this.status.code}),this.status.code!==rt.PAUSED&&this.safeDispatchEvent("close")})}onSocket(t){if(this.status.code!==rt.ACTIVE)throw new X("Server is not listening yet","ERR_SERVER_NOT_RUNNING");t.on("error",n=>{this.log("socket error",n),this.metrics?.events.increment({[`${this.addr} error`]:!0})});let e;try{e=hn(t,{listeningAddr:this.status.listeningAddr,socketInactivityTimeout:this.context.socketInactivityTimeout,socketCloseTimeout:this.context.socketCloseTimeout,metrics:this.metrics?.events,metricPrefix:`${this.addr} `,logger:this.context.logger})}catch(n){this.log.error("inbound connection failed",n),this.metrics?.errors.increment({[`${this.addr} inbound_to_connection`]:!0});return}this.log("new inbound connection %s",e.remoteAddr);try{this.context.upgrader.upgradeInbound(e).then(n=>{this.log("inbound connection upgraded %s",e.remoteAddr),this.connections.add(e),t.once("close",()=>{this.connections.delete(e),this.context.closeServerOnMaxConnections!=null&&this.connections.size<this.context.closeServerOnMaxConnections.listenBelow&&this.resume().catch(o=>{this.log.error("error attempting to listen server once connection count under limit",o),this.context.closeServerOnMaxConnections?.onListenError?.(o)})}),this.context.handler!=null&&this.context.handler(n),this.context.closeServerOnMaxConnections!=null&&this.connections.size>=this.context.closeServerOnMaxConnections.closeAbove&&this.pause(!1).catch(o=>{this.log.error("error attempting to close server once connection count over limit",o)}),this.safeDispatchEvent("connection",{detail:n})}).catch(async n=>{this.log.error("inbound connection failed",n),this.metrics?.errors.increment({[`${this.addr} inbound_upgrade`]:!0}),await sc(e,{log:this.log})}).catch(n=>{this.log.error("closing inbound connection failed",n)})}catch(n){this.log.error("inbound connection failed",n),sc(e,{log:this.log}).catch(o=>{this.log.error("closing inbound connection failed",o),this.metrics?.errors.increment({[`${this.addr} inbound_closing_failed`]:!0})})}}getAddrs(){if(this.status.code===rt.INACTIVE)return[];let t=[],e=this.server.address(),{listeningAddr:n,peerId:o}=this.status;if(e==null)return[];if(typeof e=="string")t=[n];else try{n.toString().startsWith("/ip4")?t=t.concat(ti("ip4",e.address,e.port)):e.family==="IPv6"&&(t=t.concat(ti("ip6",e.address,e.port)))}catch(i){this.log.error("could not turn %s:%s into multiaddr",e.address,e.port,i)}return t.map(i=>o!=null?i.encapsulate(`/p2p/${o}`):i)}async listen(t){if(this.status.code===rt.ACTIVE||this.status.code===rt.PAUSED)throw new X("server is already listening","ERR_SERVER_ALREADY_LISTENING");let e=t.getPeerId(),n=e==null?t.decapsulateCode(421):t,{backlog:o}=this.context;try{this.status={code:rt.ACTIVE,listeningAddr:n,peerId:e,netConfig:Me(n,{backlog:o})},await this.resume()}catch(i){throw this.status={code:rt.INACTIVE},i}}async close(){let t=new X("Listener is closing","ERR_LISTENER_CLOSING");this.connections.forEach(e=>{e.abort(t)}),await this.pause(!0)}async resume(){if(this.server.listening||this.status.code===rt.INACTIVE)return;let t=this.status.netConfig;await new Promise((e,n)=>{this.server.once("error",n),this.server.listen(t,e)}),this.status={...this.status,code:rt.ACTIVE},this.log("listening on %s",this.server.address())}async pause(t){if(!this.server.listening&&this.status.code===rt.PAUSED&&t){this.status={code:rt.INACTIVE};return}!this.server.listening||this.status.code!==rt.ACTIVE||(this.log("closing server on %s",this.server.address()),this.status=t?{code:rt.INACTIVE}:{...this.status,code:rt.PAUSED},await new Promise((e,n)=>{this.server.close(o=>{if(o!=null){n(o);return}e()})}))}};var ei=class{opts;metrics;components;log;constructor(t,e={}){this.log=t.logger.forComponent("libp2p:tcp"),this.opts=e,this.components=t,t.metrics!=null&&(this.metrics={dialerEvents:t.metrics.registerCounterGroup("libp2p_tcp_dialer_events_total",{label:"event",help:"Total count of TCP dialer events by type"})})}[Zi]=!0;[Symbol.toStringTag]="@libp2p/tcp";[Qi]=["@libp2p/transport"];async dial(t,e){e.keepAlive=e.keepAlive??!0,e.noDelay=e.noDelay??!0;let n=await this._connect(t,e);n.on("error",c=>{this.log("socket error",c)});let o=hn(n,{remoteAddr:t,socketInactivityTimeout:this.opts.outboundSocketInactivityTimeout,socketCloseTimeout:this.opts.socketCloseTimeout,metrics:this.metrics?.dialerEvents,logger:this.components.logger}),i=()=>{o.close().catch(c=>{this.log.error("Error closing maConn after abort",c)})};e.signal?.addEventListener("abort",i,{once:!0}),this.log("new outbound connection %s",o.remoteAddr);let s=await e.upgrader.upgradeOutbound(o);if(this.log("outbound connection %s upgraded",o.remoteAddr),e.signal?.removeEventListener("abort",i),e.signal?.aborted===!0)throw s.close().catch(c=>{this.log.error("Error closing conn after abort",c)}),new qe;return s}async _connect(t,e){return e.signal?.throwIfAborted(),e.onProgress?.(new dn("tcp:open-connection")),new Promise((n,o)=>{let i=Date.now(),s=Me(t,{...this.opts.dialOpts??{},...e});this.log("dialing %a",t);let c=ac.default.connect(s),a=y=>{let h=s.path??`${s.host??""}:${s.port}`;y.message=`connection error ${h}: ${y.message}`,this.metrics?.dialerEvents.increment({error:!0}),g(y)},d=()=>{this.log("connection timeout %a",t),this.metrics?.dialerEvents.increment({timeout:!0});let y=new X(`connection timeout after ${Date.now()-i}ms`,"ERR_CONNECT_TIMEOUT");c.emit("error",y)},l=()=>{this.log("connection opened %a",t),this.metrics?.dialerEvents.increment({connect:!0}),g()},u=()=>{this.log("connection aborted %a",t),this.metrics?.dialerEvents.increment({abort:!0}),c.destroy(),g(new qe)},g=y=>{if(c.removeListener("error",a),c.removeListener("timeout",d),c.removeListener("connect",l),e.signal!=null&&e.signal.removeEventListener("abort",u),y!=null){o(y);return}n(c)};c.on("error",a),c.on("timeout",d),c.on("connect",l),e.signal!=null&&e.signal.addEventListener("abort",u)})}createListener(t){return new pn({...this.opts.listenOpts??{},...t,maxConnections:this.opts.maxConnections,backlog:this.opts.backlog,closeServerOnMaxConnections:this.opts.closeServerOnMaxConnections,socketInactivityTimeout:this.opts.inboundSocketInactivityTimeout,socketCloseTimeout:this.opts.socketCloseTimeout,metrics:this.components.metrics,logger:this.components.logger})}listenFilter(t){return t=Array.isArray(t)?t:[t],t.filter(e=>e.protoCodes().includes(290)?!1:e.protoCodes().includes(400)?!0:ie.matches(e.decapsulateCode(421)))}dialFilter(t){return this.listenFilter(t)}};function uc(r={}){return t=>new ei(t,r)}function lc(r,t){let e=Dr(r,t),n={read:async(o,i)=>{let s=await e.read(i);return o.decode(s)},write:async(o,i,s)=>{await e.write(i.encode(o),s)},writeV:async(o,i,s)=>{await e.writeV(o.map(c=>i.encode(c)),s)},pb:o=>({read:async i=>n.read(o,i),write:async(i,s)=>n.write(i,o,s),writeV:async(i,s)=>n.writeV(i,o,s),unwrap:()=>n}),unwrap:()=>e.unwrap()};return n}var xl=fe("libp2p:daemon-client:dht"),mn=class{client;constructor(t){this.client=t}async put(t,e){if(!(t instanceof Uint8Array))throw new D("invalid key received");if(!(e instanceof Uint8Array))throw new D("value received is not a Uint8Array");let n=await this.client.send({type:H.Type.DHT,dht:{type:vt.Type.PUT_VALUE,key:t,value:e}}),o=await n.read(P);if(xl("read",o),await n.unwrap().close(),o.type!==P.Type.OK)throw new Ye(o.error?.msg??"DHT put failed")}async get(t){if(!(t instanceof Uint8Array))throw new D("invalid key received");let e=await this.client.send({type:H.Type.DHT,dht:{type:vt.Type.GET_VALUE,key:t}}),n=await e.read(P);if(await e.unwrap().close(),n.type!==P.Type.OK)throw new O(n.error?.msg??"DHT get failed");if(n.dht?.value==null)throw new O("Invalid DHT get response");return n.dht.value}async findPeer(t){if(!Pe(t))throw new D("invalid peer id received");let e=await this.client.send({type:H.Type.DHT,dht:{type:vt.Type.FIND_PEER,peer:t.toMultihash().bytes}}),n=await e.read(P);if(await e.unwrap().close(),n.type!==P.Type.OK)throw new O(n.error?.msg??"DHT find peer failed");if(n.dht?.peer?.addrs==null)throw new O("Invalid response");return{id:Ft(ft(n.dht.peer.id)),multiaddrs:n.dht.peer.addrs.map(o=>nt(o))}}async provide(t){if(t==null||tt.asCID(t)==null)throw new D("invalid cid received");let e=await this.client.send({type:H.Type.DHT,dht:{type:vt.Type.PROVIDE,cid:t.bytes}}),n=await e.read(P);if(await e.unwrap().close(),n.type!==P.Type.OK)throw new O(n.error?.msg??"DHT provide failed")}async*findProviders(t,e=1){if(t==null||tt.asCID(t)==null)throw new D("invalid cid received");let n=await this.client.send({type:H.Type.DHT,dht:{type:vt.Type.FIND_PROVIDERS,cid:t.bytes,count:e}}),o=await n.read(P);if(o.type!==P.Type.OK)throw await n.unwrap().close(),new O(o.error?.msg??"DHT find providers failed");for(;;){let i=await n.read(Pt);if(i.type===Pt.Type.END){await n.unwrap().close();return}if(i.type===Pt.Type.VALUE&&i.peer?.addrs!=null)yield{id:Ft(ft(i.peer.id)),multiaddrs:i.peer.addrs.map(s=>nt(s))};else throw await n.unwrap().close(),new Ye("unexpected message received")}}async*getClosestPeers(t){if(!(t instanceof Uint8Array))throw new D("invalid key received");let e=await this.client.send({type:H.Type.DHT,dht:{type:vt.Type.GET_CLOSEST_PEERS,key:t}}),n=await e.read(P);if(n.type!==P.Type.OK)throw await e.unwrap().close(),new O(n.error?.msg??"DHT find providers failed");for(;;){let o=await e.read(Pt);if(o.type===Pt.Type.END){await e.unwrap().close();return}if(o.type===Pt.Type.VALUE&&o.value!=null)yield{id:Ft(ft(o.value)),multiaddrs:[]};else throw await e.unwrap().close(),new We("unexpected message received")}}async getPublicKey(t){if(!Pe(t))throw new D("invalid peer id received");let e=await this.client.send({type:H.Type.DHT,dht:{type:vt.Type.GET_PUBLIC_KEY,peer:t.toMultihash().bytes}}),n=await e.read(P);if(await e.unwrap().close(),n.type!==P.Type.OK)throw new O(n.error?.msg??"DHT get public key failed");if(n.dht==null)throw new We("Invalid response");return n.dht.value}};var gn=class{client;constructor(t){this.client=t}async getTopics(){let t=await this.client.send({type:H.Type.PUBSUB,pubsub:{type:Mt.Type.GET_TOPICS}}),e=await t.read(P);if(await t.unwrap().close(),e.type!==P.Type.OK)throw new O(e.error?.msg??"Pubsub get topics failed");if(e.pubsub?.topics==null)throw new O("Invalid response");return e.pubsub.topics}async publish(t,e){if(typeof t!="string")throw new D("invalid topic received");if(!(e instanceof Uint8Array))throw new D("data received is not a Uint8Array");let n=await this.client.send({type:H.Type.PUBSUB,pubsub:{type:Mt.Type.PUBLISH,topic:t,data:e}}),o=await n.read(P);if(await n.unwrap().close(),o.type!==P.Type.OK)throw new O(o.error?.msg??"Pubsub publish failed")}async subscribe(t){if(typeof t!="string")throw new D("invalid topic received");let e=await this.client.send({type:H.Type.PUBSUB,pubsub:{type:Mt.Type.SUBSCRIBE,topic:t}}),n=await e.read(P);if(n.type!==P.Type.OK)throw new O(n.error?.msg??"Pubsub publish failed");let o=!0;return{async*messages(){for(;o;)yield await e.read(yr)},async cancel(){o=!1,await e.unwrap().close()}}}async getSubscribers(t){if(typeof t!="string")throw new D("invalid topic received");let e=await this.client.send({type:H.Type.PUBSUB,pubsub:{type:Mt.Type.LIST_PEERS,topic:t}}),n=await e.read(P);if(await e.unwrap().close(),n.type!==P.Type.OK)throw new O(n.error?.msg??"Pubsub get subscribers failed");if(n.pubsub?.topics==null)throw new O("Invalid response");return n.pubsub.peerIDs.map(o=>Ft(ft(o)))}};var ri=fe("libp2p:daemon-client"),O=class extends Error{constructor(t="Operation failed"){super(t),this.name="OperationFailedError"}},ni=class{multiaddr;dht;pubsub;tcp;constructor(t){this.multiaddr=t,this.tcp=uc()({logger:Vi()}),this.dht=new mn(this),this.pubsub=new gn(this)}async connectDaemon(){return this.tcp.dial(this.multiaddr,{upgrader:po})}async send(t){let e=await this.connectDaemon(),n=t.pubsub?.type??t.dht?.type??t.peerStore?.type??"";ri("send",t.type,n);let o=lc(e);return await o.write(t,H),o}async connect(t,e){if(!Pe(t))throw new D("invalid peer id received");if(!Array.isArray(e))throw new D("addrs received are not in an array");e.forEach(i=>{if(!cn(i))throw new D("received an address that is not a multiaddr")});let n=await this.send({type:H.Type.CONNECT,connect:{peer:t.toMultihash().bytes,addrs:e.map(i=>i.bytes)}}),o=await n.read(P);if(o.type!==P.Type.OK){let i=o.error??{msg:"unspecified"};throw new O(i.msg??"unspecified")}await n.unwrap().close()}async identify(){let t=await this.send({type:H.Type.IDENTIFY}),e=await t.read(P);if(e.type!==P.Type.OK)throw new O(e.error?.msg??"Identify failed");if(e.identify?.addrs==null)throw new O("Invalid response");let n=Ft(ft(e.identify?.id)),o=e.identify.addrs.map(i=>nt(i));return await t.unwrap().close(),{peerId:n,addrs:o}}async listPeers(){let t=await this.send({type:H.Type.LIST_PEERS}),e=await t.read(P);if(e.type!==P.Type.OK)throw new O(e.error?.msg??"List peers failed");return await t.unwrap().close(),e.peers.map(n=>Ft(ft(n.id)))}async openStream(t,e){if(!Pe(t))throw new D("invalid peer id received");if(typeof e!="string")throw new D("invalid protocol received");let n=await this.send({type:H.Type.STREAM_OPEN,streamOpen:{peer:t.toMultihash().bytes,proto:[e]}}),o=await n.read(P);if(o.type!==P.Type.OK)throw await n.unwrap().close(),new O(o.error?.msg??"Open stream failed");return n.unwrap()}async registerStreamHandler(t,e){if(typeof t!="string")throw new D("invalid protocol received");let n=this.tcp.createListener({upgrader:po,handler:c=>{Promise.resolve().then(async()=>{let a=new Or({stream:c}),d=await a.read();if(d==null)throw new O("Could not read open stream response");if(Le.decode(d).proto!==t)throw new O("Incorrect protocol");await e(a.rest())}).catch(a=>{c.abort(a)}).finally(()=>{c.close().catch(a=>{ri.error(a)}),n.close().catch(a=>{ri.error(a)})})}});await n.listen(nt("/ip4/127.0.0.1/tcp/0"));let o=n.getAddrs()[0];if(o==null)throw new O("Could not listen on port");let i=await this.send({type:H.Type.STREAM_HANDLER,streamHandler:{addr:o.bytes,proto:[t]}}),s=await i.read(P);if(await i.unwrap().close(),s.type!==P.Type.OK)throw new O(s.error?.msg??"Register stream handler failed")}};function El(r){return new ni(r)}return gc(vl);})();
+/*! Bundled license information:
+
+@noble/hashes/esm/utils.js:
+  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
+
+@noble/curves/esm/abstract/utils.js:
+  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
+
+@noble/curves/esm/abstract/modular.js:
+  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
+
+@noble/curves/esm/abstract/curve.js:
+  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
+
+@noble/curves/esm/abstract/weierstrass.js:
+  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
+
+@noble/curves/esm/_shortw_utils.js:
+  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
+
+@noble/curves/esm/secp256k1.js:
+  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
+*/
 return Libp2PDaemonClient}));
diff --git a/node_modules/@libp2p/daemon-client/dist/src/dht.d.ts b/node_modules/@libp2p/daemon-client/dist/src/dht.d.ts
index 00b3625..1b69d43 100644
--- a/node_modules/@libp2p/daemon-client/dist/src/dht.d.ts
+++ b/node_modules/@libp2p/daemon-client/dist/src/dht.d.ts
@@ -1,6 +1,6 @@
 import { type PeerId, type PeerInfo } from '@libp2p/interface';
 import { CID } from 'multiformats/cid';
-import type { DaemonClient } from './index.js';
+import { type DaemonClient } from './index.js';
 export declare class DHT {
     private readonly client;
     constructor(client: DaemonClient);
diff --git a/node_modules/@libp2p/daemon-client/dist/src/dht.d.ts.map b/node_modules/@libp2p/daemon-client/dist/src/dht.d.ts.map
index 8de3e2e..1903691 100644
--- a/node_modules/@libp2p/daemon-client/dist/src/dht.d.ts.map
+++ b/node_modules/@libp2p/daemon-client/dist/src/dht.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"dht.d.ts","sourceRoot":"","sources":["../../src/dht.ts"],"names":[],"mappings":"AAOA,OAAO,EAAY,KAAK,MAAM,EAAE,KAAK,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AAIxE,OAAO,EAAE,GAAG,EAAE,MAAM,kBAAkB,CAAA;AACtC,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,YAAY,CAAA;AAI9C,qBAAa,GAAG;IACd,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAc;gBAExB,MAAM,EAAE,YAAY;IAIjC;;OAEG;IACG,GAAG,CAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;IA6B7D;;OAEG;IACG,GAAG,CAAE,GAAG,EAAE,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;IA4BhD;;OAEG;IACG,QAAQ,CAAE,MAAM,EAAE,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;IA+BlD;;OAEG;IACG,OAAO,CAAE,GAAG,EAAE,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC;IAsBvC;;OAEG;IACK,aAAa,CAAE,GAAG,EAAE,GAAG,EAAE,KAAK,GAAE,MAAU,GAAG,aAAa,CAAC,QAAQ,CAAC;IA6C5E;;OAEG;IACK,eAAe,CAAE,GAAG,EAAE,UAAU,GAAG,aAAa,CAAC,QAAQ,CAAC;IA8ClE;;OAEG;IACG,YAAY,CAAE,MAAM,EAAE,MAAM,GAAG,OAAO,CAAC,UAAU,GAAG,SAAS,CAAC;CA2BrE"}
\ No newline at end of file
+{"version":3,"file":"dht.d.ts","sourceRoot":"","sources":["../../src/dht.ts"],"names":[],"mappings":"AAOA,OAAO,EAAY,KAAK,MAAM,EAAE,KAAK,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AAIxE,OAAO,EAAE,GAAG,EAAE,MAAM,kBAAkB,CAAA;AAEtC,OAAO,EAAwB,KAAK,YAAY,EAAE,MAAM,YAAY,CAAA;AAIpE,qBAAa,GAAG;IACd,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAc;gBAExB,MAAM,EAAE,YAAY;IAIjC;;OAEG;IACG,GAAG,CAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;IA6B7D;;OAEG;IACG,GAAG,CAAE,GAAG,EAAE,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;IA4BhD;;OAEG;IACG,QAAQ,CAAE,MAAM,EAAE,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;IA+BlD;;OAEG;IACG,OAAO,CAAE,GAAG,EAAE,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC;IAsBvC;;OAEG;IACK,aAAa,CAAE,GAAG,EAAE,GAAG,EAAE,KAAK,GAAE,MAAU,GAAG,aAAa,CAAC,QAAQ,CAAC;IA6C5E;;OAEG;IACK,eAAe,CAAE,GAAG,EAAE,UAAU,GAAG,aAAa,CAAC,QAAQ,CAAC;IA8ClE;;OAEG;IACG,YAAY,CAAE,MAAM,EAAE,MAAM,GAAG,OAAO,CAAC,UAAU,GAAG,SAAS,CAAC;CA2BrE"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/src/dht.js b/node_modules/@libp2p/daemon-client/dist/src/dht.js
index 8f82e99..45ad01e 100644
--- a/node_modules/@libp2p/daemon-client/dist/src/dht.js
+++ b/node_modules/@libp2p/daemon-client/dist/src/dht.js
@@ -1,10 +1,12 @@
 import { Request, Response, DHTRequest, DHTResponse } from '@libp2p/daemon-protocol';
-import { CodeError } from '@libp2p/interface';
+import { InvalidMessageError, InvalidParametersError, ProtocolError } from '@libp2p/interface';
 import { isPeerId } from '@libp2p/interface';
 import { logger } from '@libp2p/logger';
-import { peerIdFromBytes } from '@libp2p/peer-id';
+import { peerIdFromMultihash } from '@libp2p/peer-id';
 import { multiaddr } from '@multiformats/multiaddr';
 import { CID } from 'multiformats/cid';
+import * as Digest from 'multiformats/hashes/digest';
+import { OperationFailedError } from './index.js';
 const log = logger('libp2p:daemon-client:dht');
 export class DHT {
     client;
@@ -16,10 +18,10 @@ export class DHT {
      */
     async put(key, value) {
         if (!(key instanceof Uint8Array)) {
-            throw new CodeError('invalid key received', 'ERR_INVALID_KEY');
+            throw new InvalidParametersError('invalid key received');
         }
         if (!(value instanceof Uint8Array)) {
-            throw new CodeError('value received is not a Uint8Array', 'ERR_INVALID_VALUE');
+            throw new InvalidParametersError('value received is not a Uint8Array');
         }
         const sh = await this.client.send({
             type: Request.Type.DHT,
@@ -33,7 +35,7 @@ export class DHT {
         log('read', response);
         await sh.unwrap().close();
         if (response.type !== Response.Type.OK) {
-            throw new CodeError(response.error?.msg ?? 'DHT put failed', 'ERR_DHT_PUT_FAILED');
+            throw new ProtocolError(response.error?.msg ?? 'DHT put failed');
         }
     }
     /**
@@ -41,7 +43,7 @@ export class DHT {
      */
     async get(key) {
         if (!(key instanceof Uint8Array)) {
-            throw new CodeError('invalid key received', 'ERR_INVALID_KEY');
+            throw new InvalidParametersError('invalid key received');
         }
         const sh = await this.client.send({
             type: Request.Type.DHT,
@@ -53,10 +55,10 @@ export class DHT {
         const response = await sh.read(Response);
         await sh.unwrap().close();
         if (response.type !== Response.Type.OK) {
-            throw new CodeError(response.error?.msg ?? 'DHT get failed', 'ERR_DHT_GET_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'DHT get failed');
         }
-        if (response.dht == null || response.dht.value == null) {
-            throw new CodeError('Invalid DHT get response', 'ERR_DHT_GET_FAILED');
+        if (response.dht?.value == null) {
+            throw new OperationFailedError('Invalid DHT get response');
         }
         return response.dht.value;
     }
@@ -65,25 +67,25 @@ export class DHT {
      */
     async findPeer(peerId) {
         if (!isPeerId(peerId)) {
-            throw new CodeError('invalid peer id received', 'ERR_INVALID_PEER_ID');
+            throw new InvalidParametersError('invalid peer id received');
         }
         const sh = await this.client.send({
             type: Request.Type.DHT,
             dht: {
                 type: DHTRequest.Type.FIND_PEER,
-                peer: peerId.toBytes()
+                peer: peerId.toMultihash().bytes
             }
         });
         const response = await sh.read(Response);
         await sh.unwrap().close();
         if (response.type !== Response.Type.OK) {
-            throw new CodeError(response.error?.msg ?? 'DHT find peer failed', 'ERR_DHT_FIND_PEER_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'DHT find peer failed');
         }
-        if (response.dht == null || response.dht.peer == null || response.dht.peer.addrs == null) {
-            throw new CodeError('Invalid response', 'ERR_DHT_FIND_PEER_FAILED');
+        if (response.dht?.peer?.addrs == null) {
+            throw new OperationFailedError('Invalid response');
         }
         return {
-            id: peerIdFromBytes(response.dht.peer.id),
+            id: peerIdFromMultihash(Digest.decode(response.dht.peer.id)),
             multiaddrs: response.dht.peer.addrs.map((a) => multiaddr(a))
         };
     }
@@ -92,7 +94,7 @@ export class DHT {
      */
     async provide(cid) {
         if (cid == null || CID.asCID(cid) == null) {
-            throw new CodeError('invalid cid received', 'ERR_INVALID_CID');
+            throw new InvalidParametersError('invalid cid received');
         }
         const sh = await this.client.send({
             type: Request.Type.DHT,
@@ -104,7 +106,7 @@ export class DHT {
         const response = await sh.read(Response);
         await sh.unwrap().close();
         if (response.type !== Response.Type.OK) {
-            throw new CodeError(response.error?.msg ?? 'DHT provide failed', 'ERR_DHT_PROVIDE_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'DHT provide failed');
         }
     }
     /**
@@ -112,7 +114,7 @@ export class DHT {
      */
     async *findProviders(cid, count = 1) {
         if (cid == null || CID.asCID(cid) == null) {
-            throw new CodeError('invalid cid received', 'ERR_INVALID_CID');
+            throw new InvalidParametersError('invalid cid received');
         }
         const sh = await this.client.send({
             type: Request.Type.DHT,
@@ -126,7 +128,7 @@ export class DHT {
         const response = await sh.read(Response);
         if (response.type !== Response.Type.OK) {
             await sh.unwrap().close();
-            throw new CodeError(response.error?.msg ?? 'DHT find providers failed', 'ERR_DHT_FIND_PROVIDERS_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'DHT find providers failed');
         }
         while (true) {
             const dhtResponse = await sh.read(DHTResponse);
@@ -136,16 +138,16 @@ export class DHT {
                 return;
             }
             // Stream values
-            if (dhtResponse.type === DHTResponse.Type.VALUE && dhtResponse.peer != null && dhtResponse.peer?.addrs != null) {
+            if (dhtResponse.type === DHTResponse.Type.VALUE && dhtResponse.peer?.addrs != null) {
                 yield {
-                    id: peerIdFromBytes(dhtResponse.peer.id),
+                    id: peerIdFromMultihash(Digest.decode(dhtResponse.peer.id)),
                     multiaddrs: dhtResponse.peer.addrs.map((a) => multiaddr(a))
                 };
             }
             else {
                 // Unexpected message received
                 await sh.unwrap().close();
-                throw new CodeError('unexpected message received', 'ERR_UNEXPECTED_MESSAGE_RECEIVED');
+                throw new ProtocolError('unexpected message received');
             }
         }
     }
@@ -154,7 +156,7 @@ export class DHT {
      */
     async *getClosestPeers(key) {
         if (!(key instanceof Uint8Array)) {
-            throw new CodeError('invalid key received', 'ERR_INVALID_KEY');
+            throw new InvalidParametersError('invalid key received');
         }
         const sh = await this.client.send({
             type: Request.Type.DHT,
@@ -167,7 +169,7 @@ export class DHT {
         const response = await sh.read(Response);
         if (response.type !== Response.Type.OK) {
             await sh.unwrap().close();
-            throw new CodeError(response.error?.msg ?? 'DHT find providers failed', 'ERR_DHT_FIND_PROVIDERS_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'DHT find providers failed');
         }
         while (true) {
             const dhtResponse = await sh.read(DHTResponse);
@@ -178,7 +180,7 @@ export class DHT {
             }
             // Stream values
             if (dhtResponse.type === DHTResponse.Type.VALUE && dhtResponse.value != null) {
-                const peerId = peerIdFromBytes(dhtResponse.value);
+                const peerId = peerIdFromMultihash(Digest.decode(dhtResponse.value));
                 yield {
                     id: peerId,
                     multiaddrs: []
@@ -187,7 +189,7 @@ export class DHT {
             else {
                 // Unexpected message received
                 await sh.unwrap().close();
-                throw new CodeError('unexpected message received', 'ERR_UNEXPECTED_MESSAGE_RECEIVED');
+                throw new InvalidMessageError('unexpected message received');
             }
         }
     }
@@ -196,22 +198,22 @@ export class DHT {
      */
     async getPublicKey(peerId) {
         if (!isPeerId(peerId)) {
-            throw new CodeError('invalid peer id received', 'ERR_INVALID_PEER_ID');
+            throw new InvalidParametersError('invalid peer id received');
         }
         const sh = await this.client.send({
             type: Request.Type.DHT,
             dht: {
                 type: DHTRequest.Type.GET_PUBLIC_KEY,
-                peer: peerId.toBytes()
+                peer: peerId.toMultihash().bytes
             }
         });
         const response = await sh.read(Response);
         await sh.unwrap().close();
         if (response.type !== Response.Type.OK) {
-            throw new CodeError(response.error?.msg ?? 'DHT get public key failed', 'ERR_DHT_GET_PUBLIC_KEY_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'DHT get public key failed');
         }
         if (response.dht == null) {
-            throw new CodeError('Invalid response', 'ERR_DHT_GET_PUBLIC_KEY_FAILED');
+            throw new InvalidMessageError('Invalid response');
         }
         return response.dht.value;
     }
diff --git a/node_modules/@libp2p/daemon-client/dist/src/dht.js.map b/node_modules/@libp2p/daemon-client/dist/src/dht.js.map
index 9e36562..c4c4cfe 100644
--- a/node_modules/@libp2p/daemon-client/dist/src/dht.js.map
+++ b/node_modules/@libp2p/daemon-client/dist/src/dht.js.map
@@ -1 +1 @@
-{"version":3,"file":"dht.js","sourceRoot":"","sources":["../../src/dht.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,OAAO,EACP,QAAQ,EACR,UAAU,EACV,WAAW,EACZ,MAAM,yBAAyB,CAAA;AAChC,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAA;AAC7C,OAAO,EAAE,QAAQ,EAA8B,MAAM,mBAAmB,CAAA;AACxE,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAA;AACvC,OAAO,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAA;AACjD,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,GAAG,EAAE,MAAM,kBAAkB,CAAA;AAGtC,MAAM,GAAG,GAAG,MAAM,CAAC,0BAA0B,CAAC,CAAA;AAE9C,MAAM,OAAO,GAAG;IACG,MAAM,CAAc;IAErC,YAAa,MAAoB;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACtB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,GAAG,CAAE,GAAe,EAAE,KAAiB;QAC3C,IAAI,CAAC,CAAC,GAAG,YAAY,UAAU,CAAC,EAAE,CAAC;YACjC,MAAM,IAAI,SAAS,CAAC,sBAAsB,EAAE,iBAAiB,CAAC,CAAA;QAChE,CAAC;QAED,IAAI,CAAC,CAAC,KAAK,YAAY,UAAU,CAAC,EAAE,CAAC;YACnC,MAAM,IAAI,SAAS,CAAC,oCAAoC,EAAE,mBAAmB,CAAC,CAAA;QAChF,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS;gBAC/B,GAAG;gBACH,KAAK;aACN;SACF,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QAErB,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;QAEzB,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,gBAAgB,EAAE,oBAAoB,CAAC,CAAA;QACpF,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,GAAG,CAAE,GAAe;QACxB,IAAI,CAAC,CAAC,GAAG,YAAY,UAAU,CAAC,EAAE,CAAC;YACjC,MAAM,IAAI,SAAS,CAAC,sBAAsB,EAAE,iBAAiB,CAAC,CAAA;QAChE,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS;gBAC/B,GAAG;aACJ;SACF,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;QAEzB,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,gBAAgB,EAAE,oBAAoB,CAAC,CAAA;QACpF,CAAC;QAED,IAAI,QAAQ,CAAC,GAAG,IAAI,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;YACvD,MAAM,IAAI,SAAS,CAAC,0BAA0B,EAAE,oBAAoB,CAAC,CAAA;QACvE,CAAC;QAED,OAAO,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAA;IAC3B,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,QAAQ,CAAE,MAAc;QAC5B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YACtB,MAAM,IAAI,SAAS,CAAC,0BAA0B,EAAE,qBAAqB,CAAC,CAAA;QACxE,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS;gBAC/B,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE;aACvB;SACF,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;QAEzB,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,sBAAsB,EAAE,0BAA0B,CAAC,CAAA;QAChG,CAAC;QAED,IAAI,QAAQ,CAAC,GAAG,IAAI,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;YACzF,MAAM,IAAI,SAAS,CAAC,kBAAkB,EAAE,0BAA0B,CAAC,CAAA;QACrE,CAAC;QAED,OAAO;YACL,EAAE,EAAE,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;YACzC,UAAU,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAC7D,CAAA;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,OAAO,CAAE,GAAQ;QACrB,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;YAC1C,MAAM,IAAI,SAAS,CAAC,sBAAsB,EAAE,iBAAiB,CAAC,CAAA;QAChE,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,OAAO;gBAC7B,GAAG,EAAE,GAAG,CAAC,KAAK;aACf;SACF,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;QAEzB,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,oBAAoB,EAAE,wBAAwB,CAAC,CAAA;QAC5F,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,CAAE,aAAa,CAAE,GAAQ,EAAE,QAAgB,CAAC;QAChD,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;YAC1C,MAAM,IAAI,SAAS,CAAC,sBAAsB,EAAE,iBAAiB,CAAC,CAAA;QAChE,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,cAAc;gBACpC,GAAG,EAAE,GAAG,CAAC,KAAK;gBACd,KAAK;aACN;SACF,CAAC,CAAA;QAEF,uBAAuB;QACvB,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;YACzB,MAAM,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,2BAA2B,EAAE,+BAA+B,CAAC,CAAA;QAC1G,CAAC;QAED,OAAO,IAAI,EAAE,CAAC;YACZ,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YAE9C,aAAa;YACb,IAAI,WAAW,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBAC9C,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;gBACzB,OAAM;YACR,CAAC;YAED,gBAAgB;YAChB,IAAI,WAAW,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC,IAAI,IAAI,IAAI,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,CAAC;gBAC/G,MAAM;oBACJ,EAAE,EAAE,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC;oBACxC,UAAU,EAAE,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBAC5D,CAAA;YACH,CAAC;iBAAM,CAAC;gBACN,8BAA8B;gBAC9B,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;gBACzB,MAAM,IAAI,SAAS,CAAC,6BAA6B,EAAE,iCAAiC,CAAC,CAAA;YACvF,CAAC;QACH,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,CAAE,eAAe,CAAE,GAAe;QACtC,IAAI,CAAC,CAAC,GAAG,YAAY,UAAU,CAAC,EAAE,CAAC;YACjC,MAAM,IAAI,SAAS,CAAC,sBAAsB,EAAE,iBAAiB,CAAC,CAAA;QAChE,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,iBAAiB;gBACvC,GAAG;aACJ;SACF,CAAC,CAAA;QAEF,uBAAuB;QACvB,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;YACzB,MAAM,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,2BAA2B,EAAE,+BAA+B,CAAC,CAAA;QAC1G,CAAC;QAED,OAAO,IAAI,EAAE,CAAC;YACZ,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YAE9C,aAAa;YACb,IAAI,WAAW,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBAC9C,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;gBACzB,OAAM;YACR,CAAC;YAED,gBAAgB;YAChB,IAAI,WAAW,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;gBAC7E,MAAM,MAAM,GAAG,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;gBAEjD,MAAM;oBACJ,EAAE,EAAE,MAAM;oBACV,UAAU,EAAE,EAAE;iBACf,CAAA;YACH,CAAC;iBAAM,CAAC;gBACN,8BAA8B;gBAC9B,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;gBACzB,MAAM,IAAI,SAAS,CAAC,6BAA6B,EAAE,iCAAiC,CAAC,CAAA;YACvF,CAAC;QACH,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,YAAY,CAAE,MAAc;QAChC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YACtB,MAAM,IAAI,SAAS,CAAC,0BAA0B,EAAE,qBAAqB,CAAC,CAAA;QACxE,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,cAAc;gBACpC,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE;aACvB;SACF,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;QAEzB,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,2BAA2B,EAAE,+BAA+B,CAAC,CAAA;QAC1G,CAAC;QAED,IAAI,QAAQ,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;YACzB,MAAM,IAAI,SAAS,CAAC,kBAAkB,EAAE,+BAA+B,CAAC,CAAA;QAC1E,CAAC;QAED,OAAO,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAA;IAC3B,CAAC;CACF"}
\ No newline at end of file
+{"version":3,"file":"dht.js","sourceRoot":"","sources":["../../src/dht.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,OAAO,EACP,QAAQ,EACR,UAAU,EACV,WAAW,EACZ,MAAM,yBAAyB,CAAA;AAChC,OAAO,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAA;AAC9F,OAAO,EAAE,QAAQ,EAA8B,MAAM,mBAAmB,CAAA;AACxE,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAA;AACvC,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAA;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACnD,OAAO,EAAE,GAAG,EAAE,MAAM,kBAAkB,CAAA;AACtC,OAAO,KAAK,MAAM,MAAM,4BAA4B,CAAA;AACpD,OAAO,EAAE,oBAAoB,EAAqB,MAAM,YAAY,CAAA;AAEpE,MAAM,GAAG,GAAG,MAAM,CAAC,0BAA0B,CAAC,CAAA;AAE9C,MAAM,OAAO,GAAG;IACG,MAAM,CAAc;IAErC,YAAa,MAAoB;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACtB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,GAAG,CAAE,GAAe,EAAE,KAAiB;QAC3C,IAAI,CAAC,CAAC,GAAG,YAAY,UAAU,CAAC,EAAE,CAAC;YACjC,MAAM,IAAI,sBAAsB,CAAC,sBAAsB,CAAC,CAAA;QAC1D,CAAC;QAED,IAAI,CAAC,CAAC,KAAK,YAAY,UAAU,CAAC,EAAE,CAAC;YACnC,MAAM,IAAI,sBAAsB,CAAC,oCAAoC,CAAC,CAAA;QACxE,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS;gBAC/B,GAAG;gBACH,KAAK;aACN;SACF,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QAErB,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;QAEzB,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,IAAI,aAAa,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,gBAAgB,CAAC,CAAA;QAClE,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,GAAG,CAAE,GAAe;QACxB,IAAI,CAAC,CAAC,GAAG,YAAY,UAAU,CAAC,EAAE,CAAC;YACjC,MAAM,IAAI,sBAAsB,CAAC,sBAAsB,CAAC,CAAA;QAC1D,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS;gBAC/B,GAAG;aACJ;SACF,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;QAEzB,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,IAAI,oBAAoB,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,gBAAgB,CAAC,CAAA;QACzE,CAAC;QAED,IAAI,QAAQ,CAAC,GAAG,EAAE,KAAK,IAAI,IAAI,EAAE,CAAC;YAChC,MAAM,IAAI,oBAAoB,CAAC,0BAA0B,CAAC,CAAA;QAC5D,CAAC;QAED,OAAO,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAA;IAC3B,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,QAAQ,CAAE,MAAc;QAC5B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YACtB,MAAM,IAAI,sBAAsB,CAAC,0BAA0B,CAAC,CAAA;QAC9D,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS;gBAC/B,IAAI,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK;aACjC;SACF,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;QAEzB,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,IAAI,oBAAoB,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,sBAAsB,CAAC,CAAA;QAC/E,CAAC;QAED,IAAI,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,CAAC;YACtC,MAAM,IAAI,oBAAoB,CAAC,kBAAkB,CAAC,CAAA;QACpD,CAAC;QAED,OAAO;YACL,EAAE,EAAE,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC5D,UAAU,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAC7D,CAAA;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,OAAO,CAAE,GAAQ;QACrB,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;YAC1C,MAAM,IAAI,sBAAsB,CAAC,sBAAsB,CAAC,CAAA;QAC1D,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,OAAO;gBAC7B,GAAG,EAAE,GAAG,CAAC,KAAK;aACf;SACF,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;QAEzB,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,IAAI,oBAAoB,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,oBAAoB,CAAC,CAAA;QAC7E,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,CAAE,aAAa,CAAE,GAAQ,EAAE,QAAgB,CAAC;QAChD,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;YAC1C,MAAM,IAAI,sBAAsB,CAAC,sBAAsB,CAAC,CAAA;QAC1D,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,cAAc;gBACpC,GAAG,EAAE,GAAG,CAAC,KAAK;gBACd,KAAK;aACN;SACF,CAAC,CAAA;QAEF,uBAAuB;QACvB,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;YACzB,MAAM,IAAI,oBAAoB,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,2BAA2B,CAAC,CAAA;QACpF,CAAC;QAED,OAAO,IAAI,EAAE,CAAC;YACZ,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YAE9C,aAAa;YACb,IAAI,WAAW,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBAC9C,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;gBACzB,OAAM;YACR,CAAC;YAED,gBAAgB;YAChB,IAAI,WAAW,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,CAAC;gBACnF,MAAM;oBACJ,EAAE,EAAE,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBAC3D,UAAU,EAAE,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBAC5D,CAAA;YACH,CAAC;iBAAM,CAAC;gBACN,8BAA8B;gBAC9B,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;gBACzB,MAAM,IAAI,aAAa,CAAC,6BAA6B,CAAC,CAAA;YACxD,CAAC;QACH,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,CAAE,eAAe,CAAE,GAAe;QACtC,IAAI,CAAC,CAAC,GAAG,YAAY,UAAU,CAAC,EAAE,CAAC;YACjC,MAAM,IAAI,sBAAsB,CAAC,sBAAsB,CAAC,CAAA;QAC1D,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,iBAAiB;gBACvC,GAAG;aACJ;SACF,CAAC,CAAA;QAEF,uBAAuB;QACvB,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;YACzB,MAAM,IAAI,oBAAoB,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,2BAA2B,CAAC,CAAA;QACpF,CAAC;QAED,OAAO,IAAI,EAAE,CAAC;YACZ,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YAE9C,aAAa;YACb,IAAI,WAAW,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBAC9C,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;gBACzB,OAAM;YACR,CAAC;YAED,gBAAgB;YAChB,IAAI,WAAW,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;gBAC7E,MAAM,MAAM,GAAG,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAA;gBAEpE,MAAM;oBACJ,EAAE,EAAE,MAAM;oBACV,UAAU,EAAE,EAAE;iBACf,CAAA;YACH,CAAC;iBAAM,CAAC;gBACN,8BAA8B;gBAC9B,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;gBACzB,MAAM,IAAI,mBAAmB,CAAC,6BAA6B,CAAC,CAAA;YAC9D,CAAC;QACH,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,YAAY,CAAE,MAAc;QAChC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YACtB,MAAM,IAAI,sBAAsB,CAAC,0BAA0B,CAAC,CAAA;QAC9D,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAChC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG;YACtB,GAAG,EAAE;gBACH,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,cAAc;gBACpC,IAAI,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK;aACjC;SACF,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAA;QAEzB,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YACvC,MAAM,IAAI,oBAAoB,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,2BAA2B,CAAC,CAAA;QACpF,CAAC;QAED,IAAI,QAAQ,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;YACzB,MAAM,IAAI,mBAAmB,CAAC,kBAAkB,CAAC,CAAA;QACnD,CAAC;QAED,OAAO,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAA;IAC3B,CAAC;CACF"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/src/index.d.ts b/node_modules/@libp2p/daemon-client/dist/src/index.d.ts
index 949c8e6..b657509 100644
--- a/node_modules/@libp2p/daemon-client/dist/src/index.d.ts
+++ b/node_modules/@libp2p/daemon-client/dist/src/index.d.ts
@@ -3,6 +3,9 @@ import { type ProtobufStream } from 'it-protobuf-stream';
 import type { Stream, PeerId, MultiaddrConnection, PeerInfo } from '@libp2p/interface';
 import type { Multiaddr } from '@multiformats/multiaddr';
 import type { CID } from 'multiformats/cid';
+export declare class OperationFailedError extends Error {
+    constructor(message?: string);
+}
 export interface IdentifyResult {
     peerId: PeerId;
     addrs: Multiaddr[];
diff --git a/node_modules/@libp2p/daemon-client/dist/src/index.d.ts.map b/node_modules/@libp2p/daemon-client/dist/src/index.d.ts.map
index 82a7e50..625b51e 100644
--- a/node_modules/@libp2p/daemon-client/dist/src/index.d.ts.map
+++ b/node_modules/@libp2p/daemon-client/dist/src/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,SAAS,EAAE,OAAO,EAAwB,MAAM,yBAAyB,CAAA;AAQvF,OAAO,EAAY,KAAK,cAAc,EAAE,MAAM,oBAAoB,CAAA;AAGlE,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,mBAAmB,EAAE,QAAQ,EAAa,MAAM,mBAAmB,CAAA;AACjG,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACxD,OAAO,KAAK,EAAE,GAAG,EAAE,MAAM,kBAAkB,CAAA;AA6O3C,MAAM,WAAW,cAAc;IAC7B,MAAM,EAAE,MAAM,CAAA;IACd,KAAK,EAAE,SAAS,EAAE,CAAA;CACnB;AAED,MAAM,WAAW,qBAAqB;IACpC,CAAC,MAAM,EAAE,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;CAChC;AAED,MAAM,WAAW,SAAS;IACxB,GAAG,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;IACtD,GAAG,CAAC,GAAG,EAAE,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;IACzC,OAAO,CAAC,GAAG,EAAE,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;IAChC,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,MAAM,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAA;IAChE,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;IAC3C,eAAe,CAAC,GAAG,EAAE,UAAU,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAA;CAC1D;AAED,MAAM,WAAW,YAAY;IAC3B,QAAQ,IAAI,aAAa,CAAC,SAAS,CAAC,CAAA;IACpC,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,CAAA;CACxB;AAED,MAAM,WAAW,YAAY;IAC3B,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;IACvD,SAAS,CAAC,KAAK,EAAE,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,CAAA;IAC/C,SAAS,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,CAAA;IAC9B,cAAc,CAAC,KAAK,EAAE,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,CAAA;CACjD;AAED,MAAM,WAAW,YAAY;IAC3B,QAAQ,IAAI,OAAO,CAAC,cAAc,CAAC,CAAA;IACnC,SAAS,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,CAAA;IAC9B,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;IAC1D,GAAG,EAAE,SAAS,CAAA;IACd,MAAM,EAAE,YAAY,CAAA;IAEpB,IAAI,CAAC,OAAO,EAAE,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,CAAA;IACpE,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAA;IAC1E,qBAAqB,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,qBAAqB,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;CACvF;AAED,wBAAgB,YAAY,CAAE,SAAS,EAAE,SAAS,GAAG,YAAY,CAEhE"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,SAAS,EAAE,OAAO,EAAwB,MAAM,yBAAyB,CAAA;AAQvF,OAAO,EAAY,KAAK,cAAc,EAAE,MAAM,oBAAoB,CAAA;AAIlE,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,mBAAmB,EAAE,QAAQ,EAAa,MAAM,mBAAmB,CAAA;AACjG,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AACxD,OAAO,KAAK,EAAE,GAAG,EAAE,MAAM,kBAAkB,CAAA;AAI3C,qBAAa,oBAAqB,SAAQ,KAAK;gBAChC,OAAO,SAAqB;CAI1C;AA8OD,MAAM,WAAW,cAAc;IAC7B,MAAM,EAAE,MAAM,CAAA;IACd,KAAK,EAAE,SAAS,EAAE,CAAA;CACnB;AAED,MAAM,WAAW,qBAAqB;IACpC,CAAC,MAAM,EAAE,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;CAChC;AAED,MAAM,WAAW,SAAS;IACxB,GAAG,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;IACtD,GAAG,CAAC,GAAG,EAAE,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;IACzC,OAAO,CAAC,GAAG,EAAE,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;IAChC,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,MAAM,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAA;IAChE,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;IAC3C,eAAe,CAAC,GAAG,EAAE,UAAU,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAA;CAC1D;AAED,MAAM,WAAW,YAAY;IAC3B,QAAQ,IAAI,aAAa,CAAC,SAAS,CAAC,CAAA;IACpC,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,CAAA;CACxB;AAED,MAAM,WAAW,YAAY;IAC3B,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;IACvD,SAAS,CAAC,KAAK,EAAE,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,CAAA;IAC/C,SAAS,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,CAAA;IAC9B,cAAc,CAAC,KAAK,EAAE,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,CAAA;CACjD;AAED,MAAM,WAAW,YAAY;IAC3B,QAAQ,IAAI,OAAO,CAAC,cAAc,CAAC,CAAA;IACnC,SAAS,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,CAAA;IAC9B,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;IAC1D,GAAG,EAAE,SAAS,CAAA;IACd,MAAM,EAAE,YAAY,CAAA;IAEpB,IAAI,CAAC,OAAO,EAAE,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,CAAA;IACpE,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAA;IAC1E,qBAAqB,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,qBAAqB,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;CACvF;AAED,wBAAgB,YAAY,CAAE,SAAS,EAAE,SAAS,GAAG,YAAY,CAEhE"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/src/index.js b/node_modules/@libp2p/daemon-client/dist/src/index.js
index 19585b1..0c1ae7c 100644
--- a/node_modules/@libp2p/daemon-client/dist/src/index.js
+++ b/node_modules/@libp2p/daemon-client/dist/src/index.js
@@ -1,15 +1,22 @@
 import { Request, Response, StreamInfo } from '@libp2p/daemon-protocol';
 import { StreamHandler } from '@libp2p/daemon-protocol/stream-handler';
 import { passThroughUpgrader } from '@libp2p/daemon-protocol/upgrader';
-import { CodeError, isPeerId } from '@libp2p/interface';
+import { InvalidParametersError, isPeerId } from '@libp2p/interface';
 import { defaultLogger, logger } from '@libp2p/logger';
-import { peerIdFromBytes } from '@libp2p/peer-id';
+import { peerIdFromMultihash } from '@libp2p/peer-id';
 import { tcp } from '@libp2p/tcp';
 import { multiaddr, isMultiaddr } from '@multiformats/multiaddr';
 import { pbStream } from 'it-protobuf-stream';
+import * as Digest from 'multiformats/hashes/digest';
 import { DHT } from './dht.js';
 import { Pubsub } from './pubsub.js';
 const log = logger('libp2p:daemon-client');
+export class OperationFailedError extends Error {
+    constructor(message = 'Operation failed') {
+        super(message);
+        this.name = 'OperationFailedError';
+    }
+}
 class Client {
     multiaddr;
     dht;
@@ -54,27 +61,27 @@ class Client {
      */
     async connect(peerId, addrs) {
         if (!isPeerId(peerId)) {
-            throw new CodeError('invalid peer id received', 'ERR_INVALID_PEER_ID');
+            throw new InvalidParametersError('invalid peer id received');
         }
         if (!Array.isArray(addrs)) {
-            throw new CodeError('addrs received are not in an array', 'ERR_INVALID_ADDRS_TYPE');
+            throw new InvalidParametersError('addrs received are not in an array');
         }
         addrs.forEach((addr) => {
             if (!isMultiaddr(addr)) {
-                throw new CodeError('received an address that is not a multiaddr', 'ERR_NO_MULTIADDR_RECEIVED');
+                throw new InvalidParametersError('received an address that is not a multiaddr');
             }
         });
         const sh = await this.send({
             type: Request.Type.CONNECT,
             connect: {
-                peer: peerId.toBytes(),
+                peer: peerId.toMultihash().bytes,
                 addrs: addrs.map((a) => a.bytes)
             }
         });
         const response = await sh.read(Response);
         if (response.type !== Response.Type.OK) {
             const errResponse = response.error ?? { msg: 'unspecified' };
-            throw new CodeError(errResponse.msg ?? 'unspecified', 'ERR_CONNECT_FAILED');
+            throw new OperationFailedError(errResponse.msg ?? 'unspecified');
         }
         await sh.unwrap().close();
     }
@@ -92,12 +99,12 @@ class Client {
         });
         const response = await sh.read(Response);
         if (response.type !== Response.Type.OK) {
-            throw new CodeError(response.error?.msg ?? 'Identify failed', 'ERR_IDENTIFY_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'Identify failed');
         }
-        if (response.identify == null || response.identify.addrs == null) {
-            throw new CodeError('Invalid response', 'ERR_IDENTIFY_FAILED');
+        if (response.identify?.addrs == null) {
+            throw new OperationFailedError('Invalid response');
         }
-        const peerId = peerIdFromBytes(response.identify?.id);
+        const peerId = peerIdFromMultihash(Digest.decode(response.identify?.id));
         const addrs = response.identify.addrs.map((a) => multiaddr(a));
         await sh.unwrap().close();
         return ({ peerId, addrs });
@@ -111,32 +118,32 @@ class Client {
         });
         const response = await sh.read(Response);
         if (response.type !== Response.Type.OK) {
-            throw new CodeError(response.error?.msg ?? 'List peers failed', 'ERR_LIST_PEERS_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'List peers failed');
         }
         await sh.unwrap().close();
-        return response.peers.map((peer) => peerIdFromBytes(peer.id));
+        return response.peers.map((peer) => peerIdFromMultihash(Digest.decode(peer.id)));
     }
     /**
      * Initiate an outbound stream to a peer on one of a set of protocols.
      */
     async openStream(peerId, protocol) {
         if (!isPeerId(peerId)) {
-            throw new CodeError('invalid peer id received', 'ERR_INVALID_PEER_ID');
+            throw new InvalidParametersError('invalid peer id received');
         }
         if (typeof protocol !== 'string') {
-            throw new CodeError('invalid protocol received', 'ERR_INVALID_PROTOCOL');
+            throw new InvalidParametersError('invalid protocol received');
         }
         const sh = await this.send({
             type: Request.Type.STREAM_OPEN,
             streamOpen: {
-                peer: peerId.toBytes(),
+                peer: peerId.toMultihash().bytes,
                 proto: [protocol]
             }
         });
         const response = await sh.read(Response);
         if (response.type !== Response.Type.OK) {
             await sh.unwrap().close();
-            throw new CodeError(response.error?.msg ?? 'Open stream failed', 'ERR_OPEN_STREAM_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'Open stream failed');
         }
         return sh.unwrap();
     }
@@ -145,7 +152,7 @@ class Client {
      */
     async registerStreamHandler(protocol, handler) {
         if (typeof protocol !== 'string') {
-            throw new CodeError('invalid protocol received', 'ERR_INVALID_PROTOCOL');
+            throw new InvalidParametersError('invalid protocol received');
         }
         // open a tcp port, pipe any data from it to the handler function
         const listener = this.tcp.createListener({
@@ -159,14 +166,17 @@ class Client {
                     });
                     const message = await sh.read();
                     if (message == null) {
-                        throw new CodeError('Could not read open stream response', 'ERR_OPEN_STREAM_FAILED');
+                        throw new OperationFailedError('Could not read open stream response');
                     }
                     const response = StreamInfo.decode(message);
                     if (response.proto !== protocol) {
-                        throw new CodeError('Incorrect protocol', 'ERR_OPEN_STREAM_FAILED');
+                        throw new OperationFailedError('Incorrect protocol');
                     }
                     // @ts-expect-error because we are using a passthrough upgrader, this is a MultiaddrConnection
                     await handler(sh.rest());
+                })
+                    .catch(err => {
+                    connection.abort(err);
                 })
                     .finally(() => {
                     connection.close()
@@ -183,7 +193,7 @@ class Client {
         await listener.listen(multiaddr('/ip4/127.0.0.1/tcp/0'));
         const address = listener.getAddrs()[0];
         if (address == null) {
-            throw new CodeError('Could not listen on port', 'ERR_REGISTER_STREAM_HANDLER_FAILED');
+            throw new OperationFailedError('Could not listen on port');
         }
         const sh = await this.send({
             type: Request.Type.STREAM_HANDLER,
@@ -195,7 +205,7 @@ class Client {
         const response = await sh.read(Response);
         await sh.unwrap().close();
         if (response.type !== Response.Type.OK) {
-            throw new CodeError(response.error?.msg ?? 'Register stream handler failed', 'ERR_REGISTER_STREAM_HANDLER_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'Register stream handler failed');
         }
     }
 }
diff --git a/node_modules/@libp2p/daemon-client/dist/src/index.js.map b/node_modules/@libp2p/daemon-client/dist/src/index.js.map
index c18b9de..97d91a0 100644
--- a/node_modules/@libp2p/daemon-client/dist/src/index.js.map
+++ b/node_modules/@libp2p/daemon-client/dist/src/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/src/pubsub.d.ts b/node_modules/@libp2p/daemon-client/dist/src/pubsub.d.ts
index 7d4e6ae..7647ffb 100644
--- a/node_modules/@libp2p/daemon-client/dist/src/pubsub.d.ts
+++ b/node_modules/@libp2p/daemon-client/dist/src/pubsub.d.ts
@@ -1,4 +1,4 @@
-import type { DaemonClient, Subscription } from './index.js';
+import { type DaemonClient, type Subscription } from './index.js';
 import type { PeerId } from '@libp2p/interface';
 export declare class Pubsub {
     private readonly client;
diff --git a/node_modules/@libp2p/daemon-client/dist/src/pubsub.d.ts.map b/node_modules/@libp2p/daemon-client/dist/src/pubsub.d.ts.map
index 54b3f22..da440d0 100644
--- a/node_modules/@libp2p/daemon-client/dist/src/pubsub.d.ts.map
+++ b/node_modules/@libp2p/daemon-client/dist/src/pubsub.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"pubsub.d.ts","sourceRoot":"","sources":["../../src/pubsub.ts"],"names":[],"mappings":"AAQA,OAAO,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,YAAY,CAAA;AAC5D,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAA;AAE/C,qBAAa,MAAM;IACjB,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAc;gBAExB,MAAM,EAAE,YAAY;IAIjC;;;;OAIG;IACG,SAAS,IAAK,OAAO,CAAC,MAAM,EAAE,CAAC;IAuBrC;;OAEG;IACG,OAAO,CAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;IA2B9D;;OAEG;IACG,SAAS,CAAE,KAAK,EAAE,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC;IAoChD,cAAc,CAAE,KAAK,EAAE,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;CA2BxD"}
\ No newline at end of file
+{"version":3,"file":"pubsub.d.ts","sourceRoot":"","sources":["../../src/pubsub.ts"],"names":[],"mappings":"AASA,OAAO,EAAwB,KAAK,YAAY,EAAE,KAAK,YAAY,EAAE,MAAM,YAAY,CAAA;AACvF,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAA;AAE/C,qBAAa,MAAM;IACjB,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAc;gBAExB,MAAM,EAAE,YAAY;IAIjC;;;;OAIG;IACG,SAAS,IAAK,OAAO,CAAC,MAAM,EAAE,CAAC;IAuBrC;;OAEG;IACG,OAAO,CAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;IA2B9D;;OAEG;IACG,SAAS,CAAE,KAAK,EAAE,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC;IAoChD,cAAc,CAAE,KAAK,EAAE,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;CA2BxD"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/src/pubsub.js b/node_modules/@libp2p/daemon-client/dist/src/pubsub.js
index bb7db1c..bf1b287 100644
--- a/node_modules/@libp2p/daemon-client/dist/src/pubsub.js
+++ b/node_modules/@libp2p/daemon-client/dist/src/pubsub.js
@@ -1,6 +1,8 @@
 import { Request, Response, PSRequest, PSMessage } from '@libp2p/daemon-protocol';
-import { CodeError } from '@libp2p/interface';
-import { peerIdFromBytes } from '@libp2p/peer-id';
+import { InvalidParametersError } from '@libp2p/interface';
+import { peerIdFromMultihash } from '@libp2p/peer-id';
+import * as Digest from 'multiformats/hashes/digest';
+import { OperationFailedError } from './index.js';
 export class Pubsub {
     client;
     constructor(client) {
@@ -21,10 +23,10 @@ export class Pubsub {
         const response = await sh.read(Response);
         await sh.unwrap().close();
         if (response.type !== Response.Type.OK) {
-            throw new CodeError(response.error?.msg ?? 'Pubsub get topics failed', 'ERR_PUBSUB_GET_TOPICS_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'Pubsub get topics failed');
         }
-        if (response.pubsub == null || response.pubsub.topics == null) {
-            throw new CodeError('Invalid response', 'ERR_PUBSUB_GET_TOPICS_FAILED');
+        if (response.pubsub?.topics == null) {
+            throw new OperationFailedError('Invalid response');
         }
         return response.pubsub.topics;
     }
@@ -33,10 +35,10 @@ export class Pubsub {
      */
     async publish(topic, data) {
         if (typeof topic !== 'string') {
-            throw new CodeError('invalid topic received', 'ERR_INVALID_TOPIC');
+            throw new InvalidParametersError('invalid topic received');
         }
         if (!(data instanceof Uint8Array)) {
-            throw new CodeError('data received is not a Uint8Array', 'ERR_INVALID_DATA');
+            throw new InvalidParametersError('data received is not a Uint8Array');
         }
         const sh = await this.client.send({
             type: Request.Type.PUBSUB,
@@ -49,7 +51,7 @@ export class Pubsub {
         const response = await sh.read(Response);
         await sh.unwrap().close();
         if (response.type !== Response.Type.OK) {
-            throw new CodeError(response.error?.msg ?? 'Pubsub publish failed', 'ERR_PUBSUB_PUBLISH_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'Pubsub publish failed');
         }
     }
     /**
@@ -57,7 +59,7 @@ export class Pubsub {
      */
     async subscribe(topic) {
         if (typeof topic !== 'string') {
-            throw new CodeError('invalid topic received', 'ERR_INVALID_TOPIC');
+            throw new InvalidParametersError('invalid topic received');
         }
         const sh = await this.client.send({
             type: Request.Type.PUBSUB,
@@ -68,7 +70,7 @@ export class Pubsub {
         });
         const response = await sh.read(Response);
         if (response.type !== Response.Type.OK) {
-            throw new CodeError(response.error?.msg ?? 'Pubsub publish failed', 'ERR_PUBSUB_PUBLISH_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'Pubsub publish failed');
         }
         let subscribed = true;
         const subscription = {
@@ -86,7 +88,7 @@ export class Pubsub {
     }
     async getSubscribers(topic) {
         if (typeof topic !== 'string') {
-            throw new CodeError('invalid topic received', 'ERR_INVALID_TOPIC');
+            throw new InvalidParametersError('invalid topic received');
         }
         const sh = await this.client.send({
             type: Request.Type.PUBSUB,
@@ -98,12 +100,12 @@ export class Pubsub {
         const response = await sh.read(Response);
         await sh.unwrap().close();
         if (response.type !== Response.Type.OK) {
-            throw new CodeError(response.error?.msg ?? 'Pubsub get subscribers failed', 'ERR_PUBSUB_GET_SUBSCRIBERS_FAILED');
+            throw new OperationFailedError(response.error?.msg ?? 'Pubsub get subscribers failed');
         }
-        if (response.pubsub == null || response.pubsub.topics == null) {
-            throw new CodeError('Invalid response', 'ERR_PUBSUB_GET_SUBSCRIBERS_FAILED');
+        if (response.pubsub?.topics == null) {
+            throw new OperationFailedError('Invalid response');
         }
-        return response.pubsub.peerIDs.map(buf => peerIdFromBytes(buf));
+        return response.pubsub.peerIDs.map(buf => peerIdFromMultihash(Digest.decode(buf)));
     }
 }
 //# sourceMappingURL=pubsub.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/src/pubsub.js.map b/node_modules/@libp2p/daemon-client/dist/src/pubsub.js.map
index 4b8210e..9eb6f36 100644
--- a/node_modules/@libp2p/daemon-client/dist/src/pubsub.js.map
+++ b/node_modules/@libp2p/daemon-client/dist/src/pubsub.js.map
@@ -1 +1 @@
-{"version":3,"file":"pubsub.js","sourceRoot":"","sources":["../../src/pubsub.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"pubsub.js","sourceRoot":"","sources":["../../src/pubsub.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/dht.spec.d.ts b/node_modules/@libp2p/daemon-client/dist/test/dht.spec.d.ts
new file mode 100644
index 0000000..a423a4e
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/dht.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=dht.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/dht.spec.d.ts.map b/node_modules/@libp2p/daemon-client/dist/test/dht.spec.d.ts.map
new file mode 100644
index 0000000..13981f1
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/dht.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"dht.spec.d.ts","sourceRoot":"","sources":["../../test/dht.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/dht.spec.js b/node_modules/@libp2p/daemon-client/dist/test/dht.spec.js
new file mode 100644
index 0000000..567ebe2
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/dht.spec.js
@@ -0,0 +1,183 @@
+/* eslint-env mocha */
+import { createServer } from '@libp2p/daemon-server';
+import { MessageType, EventTypes } from '@libp2p/kad-dht';
+import { peerIdFromString } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import all from 'it-all';
+import { CID } from 'multiformats/cid';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { createClient } from '../src/index.js';
+import { matchBytes } from './fixtures/match-bytes.js';
+const defaultMultiaddr = multiaddr('/ip4/0.0.0.0/tcp/12345');
+function matchCid(cid) {
+    return sinon.match((c) => c.toString() === cid.toString(), 'cid');
+}
+describe('daemon dht client', function () {
+    this.timeout(30e3);
+    let libp2p;
+    let server;
+    let client;
+    let dht;
+    beforeEach(async function () {
+        dht = stubInterface();
+        libp2p = stubInterface();
+        libp2p.services.dht = dht;
+        server = createServer(defaultMultiaddr, libp2p);
+        await server.start();
+        client = createClient(server.getMultiaddr());
+    });
+    afterEach(async () => {
+        if (server != null) {
+            await server.stop();
+        }
+        sinon.restore();
+    });
+    describe('put', () => {
+        const key = uint8ArrayFromString('/key');
+        const value = uint8ArrayFromString('oh hello there');
+        it('should be able to put a value to the dht', async function () {
+            dht.put.returns(async function* () { }());
+            await client.dht.put(key, value);
+            expect(dht.put.calledWith(matchBytes(key), matchBytes(value))).to.be.true();
+        });
+        it('should error if receive an error message', async () => {
+            dht.put.returns(async function* () {
+                throw new Error('Urk!');
+            }());
+            await expect(client.dht.put(key, value)).to.eventually.be.rejectedWith(/Urk!/);
+        });
+    });
+    describe('get', () => {
+        it('should be able to get a value from the dht', async function () {
+            const key = uint8ArrayFromString('/key');
+            const value = uint8ArrayFromString('oh hello there');
+            dht.get.withArgs(matchBytes(key)).returns(async function* () {
+                const event = {
+                    name: 'VALUE',
+                    type: EventTypes.VALUE,
+                    value,
+                    from: peerIdFromString('12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsa')
+                };
+                yield event;
+            }());
+            const result = await client.dht.get(key);
+            expect(result).to.equalBytes(value);
+        });
+        it('should error if receive an error message', async function () {
+            const key = uint8ArrayFromString('/key');
+            dht.get.returns(async function* () {
+                throw new Error('Urk!');
+            }());
+            await expect(client.dht.get(key)).to.eventually.be.rejectedWith(/Urk!/);
+        });
+    });
+    describe('findPeer', () => {
+        it('should be able to find a peer', async () => {
+            const id = peerIdFromString('12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsa');
+            dht.findPeer.withArgs(id).returns(async function* () {
+                const event = {
+                    name: 'FINAL_PEER',
+                    type: EventTypes.FINAL_PEER,
+                    peer: {
+                        id,
+                        multiaddrs: []
+                    },
+                    from: peerIdFromString('12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsa')
+                };
+                yield event;
+            }());
+            const result = await client.dht.findPeer(id);
+            expect(result.id.equals(id)).to.be.true();
+        });
+        it('should error if receive an error message', async () => {
+            const id = peerIdFromString('12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsa');
+            dht.findPeer.returns(async function* () {
+                throw new Error('Urk!');
+            }());
+            await expect(client.dht.findPeer(id)).to.eventually.be.rejectedWith(/Urk!/);
+        });
+    });
+    describe('provide', () => {
+        it('should be able to provide', async () => {
+            const cid = CID.parse('QmVzw6MPsF96TyXBSRs1ptLoVMWRv5FCYJZZGJSVB2Hp38');
+            dht.provide.returns(async function* () { }());
+            await client.dht.provide(cid);
+            expect(dht.provide.calledWith(matchCid(cid))).to.be.true();
+        });
+        it('should error if receive an error message', async () => {
+            const cid = CID.parse('QmVzw6MPsF96TyXBSRs1ptLoVMWRv5FCYJZZGJSVB2Hp38');
+            dht.provide.returns(async function* () {
+                throw new Error('Urk!');
+            }());
+            await expect(client.dht.provide(cid)).to.eventually.be.rejectedWith(/Urk!/);
+        });
+    });
+    describe('findProviders', () => {
+        it('should be able to find providers', async () => {
+            const cid = CID.parse('QmVzw6MPsF96TyXBSRs1ptLoVMWRv5FCYJZZGJSVB2Hp38');
+            const id = peerIdFromString('12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsa');
+            dht.findProviders.withArgs(matchCid(cid)).returns(async function* () {
+                const event = {
+                    name: 'PEER_RESPONSE',
+                    type: EventTypes.PEER_RESPONSE,
+                    providers: [{
+                            id,
+                            multiaddrs: []
+                        }],
+                    closer: [],
+                    from: id,
+                    messageName: 'GET_PROVIDERS',
+                    messageType: MessageType.GET_PROVIDERS
+                };
+                yield event;
+            }());
+            const result = await all(client.dht.findProviders(cid));
+            expect(result).to.have.lengthOf(1);
+            expect(result[0].id.equals(id)).to.be.true();
+        });
+        // skipped because the protocol doesn't handle streaming errors
+        it.skip('should error if receive an error message', async () => {
+            const cid = CID.parse('QmVzw6MPsF96TyXBSRs1ptLoVMWRv5FCYJZZGJSVB2Hp38');
+            dht.findProviders.returns(async function* () {
+                throw new Error('Urk!');
+            }());
+            await expect(all(client.dht.findProviders(cid))).to.eventually.be.rejectedWith(/Urk!/);
+        });
+    });
+    describe('getClosestPeers', () => {
+        it('should be able to get the closest peers', async () => {
+            const cid = CID.parse('QmVzw6MPsF96TyXBSRs1ptLoVMWRv5FCYJZZGJSVB2Hp38');
+            const id = peerIdFromString('12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsa');
+            dht.getClosestPeers.returns(async function* () {
+                const event = {
+                    name: 'PEER_RESPONSE',
+                    type: EventTypes.PEER_RESPONSE,
+                    providers: [],
+                    closer: [{
+                            id,
+                            multiaddrs: []
+                        }],
+                    from: id,
+                    messageName: 'GET_PROVIDERS',
+                    messageType: MessageType.GET_PROVIDERS
+                };
+                yield event;
+            }());
+            const result = await all(client.dht.getClosestPeers(cid.bytes));
+            expect(result).to.have.lengthOf(1);
+            expect(result[0].id.equals(id)).to.be.true();
+        });
+        // skipped because the protocol doesn't handle streaming errors
+        it.skip('should error if it gets an invalid key', async () => {
+            const cid = CID.parse('QmVzw6MPsF96TyXBSRs1ptLoVMWRv5FCYJZZGJSVB2Hp38');
+            dht.getClosestPeers.returns(async function* () {
+                throw new Error('Urk!');
+            }());
+            await expect(all(client.dht.getClosestPeers(cid.bytes))).to.eventually.be.rejectedWith(/Urk!/);
+        });
+    });
+});
+//# sourceMappingURL=dht.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/dht.spec.js.map b/node_modules/@libp2p/daemon-client/dist/test/dht.spec.js.map
new file mode 100644
index 0000000..e8673fe
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/dht.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"dht.spec.js","sourceRoot":"","sources":["../../test/dht.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/fixtures/match-bytes.d.ts b/node_modules/@libp2p/daemon-client/dist/test/fixtures/match-bytes.d.ts
new file mode 100644
index 0000000..accfd6a
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/fixtures/match-bytes.d.ts
@@ -0,0 +1,4 @@
+import type { SinonMatcher } from 'sinon';
+import type { Uint8ArrayList } from 'uint8arraylist';
+export declare function matchBytes(bytes: Uint8Array | Uint8ArrayList): SinonMatcher;
+//# sourceMappingURL=match-bytes.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/fixtures/match-bytes.d.ts.map b/node_modules/@libp2p/daemon-client/dist/test/fixtures/match-bytes.d.ts.map
new file mode 100644
index 0000000..0894b65
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/fixtures/match-bytes.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"match-bytes.d.ts","sourceRoot":"","sources":["../../../test/fixtures/match-bytes.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,OAAO,CAAA;AACzC,OAAO,KAAK,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAA;AAEpD,wBAAgB,UAAU,CAAE,KAAK,EAAE,UAAU,GAAG,cAAc,GAAG,YAAY,CAI5E"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/fixtures/match-bytes.js b/node_modules/@libp2p/daemon-client/dist/test/fixtures/match-bytes.js
new file mode 100644
index 0000000..ccb4c2e
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/fixtures/match-bytes.js
@@ -0,0 +1,8 @@
+import Sinon from 'sinon';
+import { equals as uint8ArrayEquals } from 'uint8arrays/equals';
+export function matchBytes(bytes) {
+    return Sinon.match((val) => {
+        return uint8ArrayEquals(val.subarray(), bytes.subarray());
+    });
+}
+//# sourceMappingURL=match-bytes.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/fixtures/match-bytes.js.map b/node_modules/@libp2p/daemon-client/dist/test/fixtures/match-bytes.js.map
new file mode 100644
index 0000000..e4ef380
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/fixtures/match-bytes.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"match-bytes.js","sourceRoot":"","sources":["../../../test/fixtures/match-bytes.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,MAAM,IAAI,gBAAgB,EAAE,MAAM,oBAAoB,CAAA;AAI/D,MAAM,UAAU,UAAU,CAAE,KAAkC;IAC5D,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,GAAgC,EAAE,EAAE;QACtD,OAAO,gBAAgB,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAA;IAC3D,CAAC,CAAC,CAAA;AACJ,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/index.spec.d.ts b/node_modules/@libp2p/daemon-client/dist/test/index.spec.d.ts
new file mode 100644
index 0000000..b37c2d2
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/index.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=index.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/index.spec.d.ts.map b/node_modules/@libp2p/daemon-client/dist/test/index.spec.d.ts.map
new file mode 100644
index 0000000..5c89780
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/index.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.d.ts","sourceRoot":"","sources":["../../test/index.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/index.spec.js b/node_modules/@libp2p/daemon-client/dist/test/index.spec.js
new file mode 100644
index 0000000..ae6b501
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/index.spec.js
@@ -0,0 +1,78 @@
+/* eslint-env mocha */
+import { createServer } from '@libp2p/daemon-server';
+import { isPeerId } from '@libp2p/interface';
+import { mockConnection, mockDuplex, mockMultiaddrConnection } from '@libp2p/interface-compliance-tests/mocks';
+import { peerIdFromString } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { createClient } from '../src/index.js';
+const defaultMultiaddr = multiaddr('/ip4/0.0.0.0/tcp/0');
+describe('daemon client', function () {
+    this.timeout(30e3);
+    let libp2p;
+    let server;
+    let client;
+    beforeEach(async function () {
+        libp2p = stubInterface();
+        libp2p.peerStore = stubInterface();
+        server = createServer(defaultMultiaddr, libp2p);
+        await server.start();
+        client = createClient(server.getMultiaddr());
+    });
+    afterEach(async () => {
+        if (server != null) {
+            await server.stop();
+        }
+        sinon.restore();
+    });
+    describe('identify', () => {
+        it('should be able to identify', async () => {
+            libp2p.peerId = peerIdFromString('12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsa');
+            libp2p.getMultiaddrs.returns([
+                multiaddr('/ip4/0.0.0.0/tcp/1234/p2p/12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsa')
+            ]);
+            const identify = await client.identify();
+            expect(identify).to.exist();
+            expect(identify.peerId).to.exist();
+            expect(identify.addrs).to.exist();
+            expect(isPeerId(identify.peerId));
+        });
+        it('should error if receive an error message', async () => {
+            libp2p.peerId = peerIdFromString('12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsa');
+            libp2p.getMultiaddrs.throws(new Error('Urk!'));
+            await expect(client.identify()).to.eventually.be.rejectedWith(/Urk!/);
+        });
+    });
+    describe('listPeers', () => {
+        it('should be able to listPeers', async () => {
+            const remotePeer = peerIdFromString('12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsa');
+            libp2p.getConnections.returns([
+                mockConnection(mockMultiaddrConnection(mockDuplex(), remotePeer))
+            ]);
+            const peers = await client.listPeers();
+            expect(peers).to.have.lengthOf(1);
+            expect(peers[0].equals(remotePeer)).to.be.true();
+        });
+        it('should error if receive an error message', async () => {
+            libp2p.getConnections.throws(new Error('Urk!'));
+            await expect(client.listPeers()).to.eventually.be.rejectedWith(/Urk!/);
+        });
+    });
+    describe('connect', () => {
+        it('should be able to connect', async () => {
+            const remotePeer = peerIdFromString('12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsa');
+            const ma = multiaddr('/ip4/1.2.3.4/tcp/1234');
+            await client.connect(remotePeer, [ma]);
+            expect(libp2p.dial.calledWith(remotePeer)).to.be.true();
+        });
+        it('should error if receive an error message', async () => {
+            const remotePeer = peerIdFromString('12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsa');
+            const ma = multiaddr('/ip4/1.2.3.4/tcp/1234');
+            libp2p.dial.rejects(new Error('Urk!'));
+            await expect(client.connect(remotePeer, [ma])).to.eventually.be.rejectedWith(/Urk!/);
+        });
+    });
+});
+//# sourceMappingURL=index.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/index.spec.js.map b/node_modules/@libp2p/daemon-client/dist/test/index.spec.js.map
new file mode 100644
index 0000000..c4fe3b2
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/index.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../test/index.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/pubsub.spec.d.ts b/node_modules/@libp2p/daemon-client/dist/test/pubsub.spec.d.ts
new file mode 100644
index 0000000..89ef0a9
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/pubsub.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=pubsub.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/pubsub.spec.d.ts.map b/node_modules/@libp2p/daemon-client/dist/test/pubsub.spec.d.ts.map
new file mode 100644
index 0000000..1a66b20
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/pubsub.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"pubsub.spec.d.ts","sourceRoot":"","sources":["../../test/pubsub.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/pubsub.spec.js b/node_modules/@libp2p/daemon-client/dist/test/pubsub.spec.js
new file mode 100644
index 0000000..5907e3a
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/pubsub.spec.js
@@ -0,0 +1,88 @@
+/* eslint-env mocha */
+import { createServer } from '@libp2p/daemon-server';
+import { peerIdFromString } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { createClient } from '../src/index.js';
+const defaultMultiaddr = multiaddr('/ip4/0.0.0.0/tcp/12345');
+describe('daemon pubsub client', function () {
+    this.timeout(30e3);
+    let libp2p;
+    let server;
+    let client;
+    let pubsub;
+    beforeEach(async function () {
+        pubsub = stubInterface();
+        libp2p = stubInterface();
+        libp2p.services.pubsub = pubsub;
+        server = createServer(defaultMultiaddr, libp2p);
+        await server.start();
+        client = createClient(server.getMultiaddr());
+    });
+    afterEach(async () => {
+        if (server != null) {
+            await server.stop();
+        }
+        sinon.restore();
+    });
+    describe('getTopics', () => {
+        it('should get empty list of topics when no subscriptions exist', async () => {
+            pubsub.getTopics.returns([]);
+            const topics = await client.pubsub.getTopics();
+            expect(topics).to.have.lengthOf(0);
+        });
+        it('should get a list with a topic when subscribed', async () => {
+            const topic = 'test-topic';
+            pubsub.getTopics.returns([topic]);
+            const topics = await client.pubsub.getTopics();
+            expect(topics).to.have.lengthOf(1);
+            expect(topics[0]).to.equal(topic);
+        });
+        it('should error if receive an error message', async () => {
+            pubsub.getTopics.throws(new Error('Urk!'));
+            await expect(client.pubsub.getTopics()).to.eventually.be.rejectedWith(/Urk!/);
+        });
+    });
+    describe('publish', () => {
+        it('should publish an event', async () => {
+            const topic = 'test-topic';
+            const data = uint8ArrayFromString('hello world');
+            await client.pubsub.publish(topic, data);
+            expect(pubsub.publish.called).to.be.true();
+            const call = pubsub.publish.getCall(0);
+            expect(call).to.have.nested.property('args[0]', topic);
+            expect(call).to.have.deep.nested.property('args[1]', data);
+        });
+        it('should error if receive an error message', async () => {
+            const topic = 'test-topic';
+            const data = uint8ArrayFromString('hello world');
+            pubsub.publish.throws(new Error('Urk!'));
+            await expect(client.pubsub.publish(topic, data)).to.eventually.be.rejectedWith(/Urk!/);
+        });
+    });
+    describe('getSubscribers', () => {
+        it('should get empty list of topics when no subscriptions exist', async () => {
+            pubsub.getSubscribers.returns([]);
+            const topic = 'test-topic';
+            const topics = await client.pubsub.getSubscribers(topic);
+            expect(topics).to.have.lengthOf(0);
+        });
+        it('should get a list with a peer when subscribed', async () => {
+            const topic = 'test-topic';
+            const peer = peerIdFromString('12D3KooWKnQbfH5t1XxJW5FBoMGNjmC9LTSbDdRJxtYj2bJV5XfP');
+            pubsub.getSubscribers.withArgs(topic).returns([peer]);
+            const peers = await client.pubsub.getSubscribers(topic);
+            expect(peers).to.have.lengthOf(1);
+            expect(peers[0].toString()).to.equal(peer.toString());
+        });
+        it('should error if receive an error message', async () => {
+            const topic = 'test-topic';
+            pubsub.getSubscribers.throws(new Error('Urk!'));
+            await expect(client.pubsub.getSubscribers(topic)).to.eventually.be.rejectedWith(/Urk!/);
+        });
+    });
+});
+//# sourceMappingURL=pubsub.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/pubsub.spec.js.map b/node_modules/@libp2p/daemon-client/dist/test/pubsub.spec.js.map
new file mode 100644
index 0000000..47e87fa
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/pubsub.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"pubsub.spec.js","sourceRoot":"","sources":["../../test/pubsub.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/stream.spec.d.ts b/node_modules/@libp2p/daemon-client/dist/test/stream.spec.d.ts
new file mode 100644
index 0000000..2ce8297
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/stream.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=stream.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/stream.spec.d.ts.map b/node_modules/@libp2p/daemon-client/dist/test/stream.spec.d.ts.map
new file mode 100644
index 0000000..77bed14
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/stream.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"stream.spec.d.ts","sourceRoot":"","sources":["../../test/stream.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/stream.spec.js b/node_modules/@libp2p/daemon-client/dist/test/stream.spec.js
new file mode 100644
index 0000000..6f62fbb
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/stream.spec.js
@@ -0,0 +1,61 @@
+/* eslint-env mocha */
+import { createServer } from '@libp2p/daemon-server';
+import { mockRegistrar, connectionPair } from '@libp2p/interface-compliance-tests/mocks';
+import { peerIdFromString } from '@libp2p/peer-id';
+import { multiaddr } from '@multiformats/multiaddr';
+import { expect } from 'aegir/chai';
+import all from 'it-all';
+import { pipe } from 'it-pipe';
+import sinon from 'sinon';
+import { stubInterface } from 'sinon-ts';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { toString as uint8ArrayToString } from 'uint8arrays/to-string';
+import { createClient } from '../src/index.js';
+const defaultMultiaddr = multiaddr('/ip4/0.0.0.0/tcp/0');
+describe('daemon stream client', function () {
+    this.timeout(50e3);
+    let libp2p;
+    let server;
+    let client;
+    beforeEach(async function () {
+        libp2p = stubInterface();
+        libp2p.peerStore = stubInterface();
+        server = createServer(defaultMultiaddr, libp2p);
+        await server.start();
+        client = createClient(server.getMultiaddr());
+    });
+    afterEach(async () => {
+        if (server != null) {
+            await server.stop();
+        }
+        sinon.restore();
+    });
+    it('should be able to open a stream, write to it and a stream handler, should handle the message', async () => {
+        const protocol = '/echo/1.0.0';
+        const peerA = peerIdFromString('12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsa');
+        const registrarA = mockRegistrar();
+        await registrarA.handle(protocol, (data) => {
+            void pipe(data.stream, data.stream);
+        });
+        const peerB = peerIdFromString('12D3KooWJKCJW8Y26pRFNv78TCMGLNTfyN8oKaFswMRYXTzSbSsb');
+        const registrarB = mockRegistrar();
+        await registrarB.handle(protocol, (data) => {
+            void pipe(data.stream, data.stream);
+        });
+        const [peerAtoPeerB] = connectionPair({
+            peerId: peerA,
+            registrar: registrarA
+        }, {
+            peerId: peerB,
+            registrar: registrarB
+        });
+        libp2p.dial.withArgs(peerB).resolves(peerAtoPeerB);
+        const stream = await client.openStream(peerB, protocol);
+        const data = await pipe(async function* () {
+            yield uint8ArrayFromString('hello world');
+        }, stream, async (source) => all(source));
+        expect(data).to.have.lengthOf(1);
+        expect(uint8ArrayToString(data[0].subarray())).to.equal('hello world');
+    });
+});
+//# sourceMappingURL=stream.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/test/stream.spec.js.map b/node_modules/@libp2p/daemon-client/dist/test/stream.spec.js.map
new file mode 100644
index 0000000..16ecfbb
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/test/stream.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"stream.spec.js","sourceRoot":"","sources":["../../test/stream.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/tsconfig.tsbuildinfo b/node_modules/@libp2p/daemon-client/dist/tsconfig.tsbuildinfo
new file mode 100644
index 0000000..d005fb1
--- /dev/null
+++ b/node_modules/@libp2p/daemon-client/dist/tsconfig.tsbuildinfo
@@ -0,0 +1 @@
+{"program":{"fileNames":["../../../node_modules/typescript/lib/lib.es5.d.ts","../../../node_modules/typescript/lib/lib.es2015.d.ts","../../../node_modules/typescript/lib/lib.es2016.d.ts","../../../node_modules/typescript/lib/lib.es2017.d.ts","../../../node_modules/typescript/lib/lib.es2018.d.ts","../../../node_modules/typescript/lib/lib.es2019.d.ts","../../../node_modules/typescript/lib/lib.es2020.d.ts","../../../node_modules/typescript/lib/lib.es2021.d.ts","../../../node_modules/typescript/lib/lib.es2022.d.ts","../../../node_modules/typescript/lib/lib.es2023.d.ts","../../../node_modules/typescript/lib/lib.dom.d.ts","../../../node_modules/typescript/lib/lib.dom.iterable.d.ts","../../../node_modules/typescript/lib/lib.webworker.d.ts","../../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../../node_modules/typescript/lib/lib.es2021.promise.d.ts","../../../node_modules/typescript/lib/lib.es2021.string.d.ts","../../../node_modules/typescript/lib/lib.es2021.weakref.d.ts","../../../node_modules/typescript/lib/lib.es2021.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.array.d.ts","../../../node_modules/typescript/lib/lib.es2022.error.d.ts","../../../node_modules/typescript/lib/lib.es2022.intl.d.ts","../../../node_modules/typescript/lib/lib.es2022.object.d.ts","../../../node_modules/typescript/lib/lib.es2022.sharedmemory.d.ts","../../../node_modules/typescript/lib/lib.es2022.string.d.ts","../../../node_modules/typescript/lib/lib.es2022.regexp.d.ts","../../../node_modules/typescript/lib/lib.es2023.array.d.ts","../../../node_modules/typescript/lib/lib.es2023.collection.d.ts","../../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../../node_modules/typescript/lib/lib.decorators.d.ts","../../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../../node_modules/protons-runtime/dist/src/codec.d.ts","../../../node_modules/uint8arraylist/dist/src/index.d.ts","../../../node_modules/protons-runtime/dist/src/decode.d.ts","../../../node_modules/protons-runtime/dist/src/encode.d.ts","../../../node_modules/protons-runtime/dist/src/codecs/enum.d.ts","../../../node_modules/protons-runtime/dist/src/codecs/message.d.ts","../../../node_modules/protons-runtime/dist/src/utils/reader.d.ts","../../../node_modules/protons-runtime/dist/src/utils/writer.d.ts","../../../node_modules/protons-runtime/dist/src/index.d.ts","../../libp2p-daemon-protocol/dist/src/index.d.ts","../../../node_modules/multiformats/dist/src/bases/interface.d.ts","../../../node_modules/multiformats/dist/src/block/interface.d.ts","../../../node_modules/multiformats/dist/src/hashes/interface.d.ts","../../../node_modules/multiformats/dist/src/link/interface.d.ts","../../../node_modules/multiformats/dist/src/cid.d.ts","../../../node_modules/@libp2p/interface/dist/src/keys/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/peer-id/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/protocols-table.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/dns-json-over-https.d.ts","../../../node_modules/@multiformats/dns/dist/src/resolvers/index.d.ts","../../../node_modules/progress-events/dist/src/index.d.ts","../../../node_modules/@multiformats/dns/dist/src/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/dnsaddr.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/resolvers/index.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/filter/multiaddr-filter.d.ts","../../../node_modules/@multiformats/multiaddr/dist/src/index.d.ts","../../../node_modules/it-stream-types/dist/src/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/connection/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/peer-info/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/content-routing/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/event-target.d.ts","../../../node_modules/@libp2p/interface/dist/src/metrics/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/peer-routing/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/peer-store/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/startable.d.ts","../../../node_modules/@libp2p/interface/dist/src/stream-handler/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/topology/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/stream-muxer/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/transport/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/connection-encrypter/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/connection-gater/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/peer-discovery/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/peer-store/tags.d.ts","../../../node_modules/it-pushable/dist/src/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/pubsub/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/record/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/errors.d.ts","../../../node_modules/@types/node/assert.d.ts","../../../node_modules/@types/node/assert/strict.d.ts","../../../node_modules/buffer/index.d.ts","../../../node_modules/undici-types/header.d.ts","../../../node_modules/undici-types/readable.d.ts","../../../node_modules/undici-types/file.d.ts","../../../node_modules/undici-types/fetch.d.ts","../../../node_modules/undici-types/formdata.d.ts","../../../node_modules/undici-types/connector.d.ts","../../../node_modules/undici-types/client.d.ts","../../../node_modules/undici-types/errors.d.ts","../../../node_modules/undici-types/dispatcher.d.ts","../../../node_modules/undici-types/global-dispatcher.d.ts","../../../node_modules/undici-types/global-origin.d.ts","../../../node_modules/undici-types/pool-stats.d.ts","../../../node_modules/undici-types/pool.d.ts","../../../node_modules/undici-types/handlers.d.ts","../../../node_modules/undici-types/balanced-pool.d.ts","../../../node_modules/undici-types/agent.d.ts","../../../node_modules/undici-types/mock-interceptor.d.ts","../../../node_modules/undici-types/mock-agent.d.ts","../../../node_modules/undici-types/mock-client.d.ts","../../../node_modules/undici-types/mock-pool.d.ts","../../../node_modules/undici-types/mock-errors.d.ts","../../../node_modules/undici-types/proxy-agent.d.ts","../../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../../node_modules/undici-types/retry-handler.d.ts","../../../node_modules/undici-types/retry-agent.d.ts","../../../node_modules/undici-types/api.d.ts","../../../node_modules/undici-types/interceptors.d.ts","../../../node_modules/undici-types/util.d.ts","../../../node_modules/undici-types/cookies.d.ts","../../../node_modules/undici-types/patch.d.ts","../../../node_modules/undici-types/websocket.d.ts","../../../node_modules/undici-types/eventsource.d.ts","../../../node_modules/undici-types/filereader.d.ts","../../../node_modules/undici-types/diagnostics-channel.d.ts","../../../node_modules/undici-types/content-type.d.ts","../../../node_modules/undici-types/cache.d.ts","../../../node_modules/undici-types/index.d.ts","../../../node_modules/@types/node/globals.d.ts","../../../node_modules/@types/node/async_hooks.d.ts","../../../node_modules/@types/node/buffer.d.ts","../../../node_modules/@types/node/child_process.d.ts","../../../node_modules/@types/node/cluster.d.ts","../../../node_modules/@types/node/console.d.ts","../../../node_modules/@types/node/constants.d.ts","../../../node_modules/@types/node/crypto.d.ts","../../../node_modules/@types/node/dgram.d.ts","../../../node_modules/@types/node/diagnostics_channel.d.ts","../../../node_modules/@types/node/dns.d.ts","../../../node_modules/@types/node/dns/promises.d.ts","../../../node_modules/@types/node/domain.d.ts","../../../node_modules/@types/node/dom-events.d.ts","../../../node_modules/@types/node/events.d.ts","../../../node_modules/@types/node/fs.d.ts","../../../node_modules/@types/node/fs/promises.d.ts","../../../node_modules/@types/node/http.d.ts","../../../node_modules/@types/node/http2.d.ts","../../../node_modules/@types/node/https.d.ts","../../../node_modules/@types/node/inspector.d.ts","../../../node_modules/@types/node/module.d.ts","../../../node_modules/@types/node/net.d.ts","../../../node_modules/@types/node/os.d.ts","../../../node_modules/@types/node/path.d.ts","../../../node_modules/@types/node/perf_hooks.d.ts","../../../node_modules/@types/node/process.d.ts","../../../node_modules/@types/node/punycode.d.ts","../../../node_modules/@types/node/querystring.d.ts","../../../node_modules/@types/node/readline.d.ts","../../../node_modules/@types/node/readline/promises.d.ts","../../../node_modules/@types/node/repl.d.ts","../../../node_modules/@types/node/sea.d.ts","../../../node_modules/@types/node/stream.d.ts","../../../node_modules/@types/node/stream/promises.d.ts","../../../node_modules/@types/node/stream/consumers.d.ts","../../../node_modules/@types/node/stream/web.d.ts","../../../node_modules/@types/node/string_decoder.d.ts","../../../node_modules/@types/node/test.d.ts","../../../node_modules/@types/node/timers.d.ts","../../../node_modules/@types/node/timers/promises.d.ts","../../../node_modules/@types/node/tls.d.ts","../../../node_modules/@types/node/trace_events.d.ts","../../../node_modules/@types/node/tty.d.ts","../../../node_modules/@types/node/url.d.ts","../../../node_modules/@types/node/util.d.ts","../../../node_modules/@types/node/v8.d.ts","../../../node_modules/@types/node/vm.d.ts","../../../node_modules/@types/node/wasi.d.ts","../../../node_modules/@types/node/worker_threads.d.ts","../../../node_modules/@types/node/zlib.d.ts","../../../node_modules/@types/node/globals.global.d.ts","../../../node_modules/@types/node/index.d.ts","../../../node_modules/@libp2p/interface/dist/src/events.d.ts","../../../node_modules/@libp2p/interface/dist/src/index.d.ts","../../../node_modules/@libp2p/logger/dist/src/index.d.ts","../../../node_modules/@libp2p/peer-id/dist/src/index.d.ts","../../../node_modules/multiformats/dist/src/hashes/digest.d.ts","../../libp2p-daemon-protocol/dist/src/stream-handler.d.ts","../../libp2p-daemon-protocol/dist/src/upgrader.d.ts","../../../node_modules/@libp2p/tcp/dist/src/listener.d.ts","../../../node_modules/@libp2p/tcp/dist/src/index.d.ts","../../../node_modules/it-byte-stream/dist/src/index.d.ts","../../../node_modules/it-length-prefixed-stream/dist/src/index.d.ts","../../../node_modules/it-protobuf-stream/dist/src/index.d.ts","../src/pubsub.ts","../src/index.ts","../src/dht.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/decoderpc.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/node_modules/protons-runtime/dist/src/codec.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/node_modules/protons-runtime/dist/src/decode.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/node_modules/protons-runtime/dist/src/encode.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/node_modules/protons-runtime/dist/src/codecs/enum.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/node_modules/protons-runtime/dist/src/codecs/message.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/node_modules/protons-runtime/dist/src/utils/reader.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/node_modules/protons-runtime/dist/src/utils/writer.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/node_modules/protons-runtime/dist/src/index.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/rpc.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/types.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/message-cache.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/peer-score-thresholds.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/metrics.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/peer-score-params.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/set.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/peer-stats.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/compute-score.d.ts","../../../node_modules/denque/index.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/message-deliveries.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/peer-score.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/score/index.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/stream.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/tracer.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/config.d.ts","../../../node_modules/@libp2p/interface-internal/dist/src/address-manager/index.d.ts","../../../node_modules/@libp2p/peer-collections/dist/src/map.d.ts","../../../node_modules/@libp2p/peer-collections/dist/src/set.d.ts","../../../node_modules/@libp2p/peer-collections/dist/src/list.d.ts","../../../node_modules/@libp2p/peer-collections/dist/src/filter.d.ts","../../../node_modules/@libp2p/peer-collections/dist/src/tracked-map.d.ts","../../../node_modules/@libp2p/peer-collections/dist/src/tracked-set.d.ts","../../../node_modules/@libp2p/peer-collections/dist/src/tracked-list.d.ts","../../../node_modules/@libp2p/peer-collections/dist/src/index.d.ts","../../../node_modules/@libp2p/interface-internal/dist/src/connection-manager/index.d.ts","../../../node_modules/@libp2p/interface-internal/dist/src/random-walk/index.d.ts","../../../node_modules/@libp2p/interface-internal/dist/src/record/index.d.ts","../../../node_modules/@libp2p/interface-internal/dist/src/registrar/index.d.ts","../../../node_modules/@libp2p/interface-internal/dist/src/transport-manager/index.d.ts","../../../node_modules/@libp2p/interface-internal/dist/src/index.d.ts","../../../node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.d.ts","../../../node_modules/@libp2p/kad-dht/dist/src/message/dht.d.ts","../../../node_modules/multiformats/dist/src/codecs/interface.d.ts","../../../node_modules/multiformats/dist/src/codecs/json.d.ts","../../../node_modules/multiformats/dist/src/codecs/raw.d.ts","../../../node_modules/multiformats/dist/src/bytes.d.ts","../../../node_modules/multiformats/dist/src/hashes/hasher.d.ts","../../../node_modules/multiformats/dist/src/varint.d.ts","../../../node_modules/multiformats/dist/src/interface.d.ts","../../../node_modules/multiformats/dist/src/index.d.ts","../../../node_modules/multiformats/dist/src/bases/base.d.ts","../../../node_modules/multiformats/dist/src/basics.d.ts","../../../node_modules/uint8arrays/dist/src/util/bases.d.ts","../../../node_modules/uint8arrays/dist/src/to-string.d.ts","../../../node_modules/interface-datastore/dist/src/key.d.ts","../../../node_modules/@libp2p/kad-dht/dist/src/utils.d.ts","../../../node_modules/interface-store/dist/src/errors.d.ts","../../../node_modules/interface-store/dist/src/index.d.ts","../../../node_modules/interface-datastore/dist/src/index.d.ts","../../../node_modules/@libp2p/kad-dht/dist/src/providers.d.ts","../../../node_modules/any-signal/dist/src/index.d.ts","../../../node_modules/@libp2p/utils/dist/src/adaptive-timeout.d.ts","../../../node_modules/@libp2p/record/dist/src/record.d.ts","../../../node_modules/@libp2p/record/dist/src/index.d.ts","../../../node_modules/@libp2p/kad-dht/dist/src/index.d.ts","../../libp2p-daemon-server/dist/src/index.d.ts","../../../node_modules/@types/chai/index.d.ts","../../../node_modules/@types/chai-as-promised/index.d.ts","../../../node_modules/chai-parentheses/index.d.ts","../../../node_modules/@types/chai-subset/index.d.ts","../../../node_modules/chai-bites/index.d.ts","../../../node_modules/@types/chai-string/index.d.ts","../../../node_modules/aegir/dist/utils/chai.d.ts","../../../node_modules/it-all/dist/src/index.d.ts","../../../node_modules/@types/sinonjs__fake-timers/index.d.ts","../../../node_modules/@types/sinon/index.d.ts","../../../node_modules/sinon-ts/dist/src/index.d.ts","../../../node_modules/uint8arrays/dist/src/from-string.d.ts","../../../node_modules/uint8arrays/dist/src/equals.d.ts","../test/fixtures/match-bytes.ts","../test/dht.spec.ts","../../../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/connection-gater.d.ts","../../../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/connection-manager.d.ts","../../../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/connection.d.ts","../../../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/multiaddr-connection.d.ts","../../../node_modules/@libp2p/utils/dist/src/abstract-stream.d.ts","../../../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/muxer.d.ts","../../../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/registrar.d.ts","../../../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/upgrader.d.ts","../../../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/duplex.d.ts","../../../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/metrics.d.ts","../../../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/index.d.ts","../test/index.spec.ts","../test/pubsub.spec.ts","../../../node_modules/it-pipe/dist/src/index.d.ts","../test/stream.spec.ts","../../../node_modules/keyv/src/index.d.ts","../../../node_modules/@types/http-cache-semantics/index.d.ts","../../../node_modules/@types/responselike/index.d.ts","../../../node_modules/@types/cacheable-request/index.d.ts","../../../node_modules/@types/ms/index.d.ts","../../../node_modules/@types/debug/index.d.ts","../../../node_modules/@types/dns-packet/index.d.ts","../../../node_modules/@types/istanbul-lib-coverage/index.d.ts","../../../node_modules/@types/json-schema/index.d.ts","../../../node_modules/@types/json5/index.d.ts","../../../node_modules/@types/keyv/index.d.ts","../../../node_modules/@types/linkify-it/build/index.cjs.d.ts","../../../node_modules/@types/linkify-it/index.d.ts","../../../node_modules/@types/mdurl/build/index.cjs.d.ts","../../../node_modules/@types/mdurl/index.d.ts","../../../node_modules/@types/markdown-it/dist/index.cjs.d.ts","../../../node_modules/@types/markdown-it/index.d.ts","../../../node_modules/@types/unist/index.d.ts","../../../node_modules/@types/mdast/index.d.ts","../../../node_modules/@types/minimatch/index.d.ts","../../../node_modules/@types/minimist/index.d.ts","../../../node_modules/@types/mocha/index.d.ts","../../../node_modules/@types/murmurhash3js-revisited/index.d.ts","../../../node_modules/@types/normalize-package-data/index.d.ts","../../../node_modules/@types/parse-json/index.d.ts","../../../node_modules/@types/retry/index.d.ts","../../../node_modules/@types/semver/classes/semver.d.ts","../../../node_modules/@types/semver/functions/parse.d.ts","../../../node_modules/@types/semver/functions/valid.d.ts","../../../node_modules/@types/semver/functions/clean.d.ts","../../../node_modules/@types/semver/functions/inc.d.ts","../../../node_modules/@types/semver/functions/diff.d.ts","../../../node_modules/@types/semver/functions/major.d.ts","../../../node_modules/@types/semver/functions/minor.d.ts","../../../node_modules/@types/semver/functions/patch.d.ts","../../../node_modules/@types/semver/functions/prerelease.d.ts","../../../node_modules/@types/semver/functions/compare.d.ts","../../../node_modules/@types/semver/functions/rcompare.d.ts","../../../node_modules/@types/semver/functions/compare-loose.d.ts","../../../node_modules/@types/semver/functions/compare-build.d.ts","../../../node_modules/@types/semver/functions/sort.d.ts","../../../node_modules/@types/semver/functions/rsort.d.ts","../../../node_modules/@types/semver/functions/gt.d.ts","../../../node_modules/@types/semver/functions/lt.d.ts","../../../node_modules/@types/semver/functions/eq.d.ts","../../../node_modules/@types/semver/functions/neq.d.ts","../../../node_modules/@types/semver/functions/gte.d.ts","../../../node_modules/@types/semver/functions/lte.d.ts","../../../node_modules/@types/semver/functions/cmp.d.ts","../../../node_modules/@types/semver/functions/coerce.d.ts","../../../node_modules/@types/semver/classes/comparator.d.ts","../../../node_modules/@types/semver/classes/range.d.ts","../../../node_modules/@types/semver/functions/satisfies.d.ts","../../../node_modules/@types/semver/ranges/max-satisfying.d.ts","../../../node_modules/@types/semver/ranges/min-satisfying.d.ts","../../../node_modules/@types/semver/ranges/to-comparators.d.ts","../../../node_modules/@types/semver/ranges/min-version.d.ts","../../../node_modules/@types/semver/ranges/valid.d.ts","../../../node_modules/@types/semver/ranges/outside.d.ts","../../../node_modules/@types/semver/ranges/gtr.d.ts","../../../node_modules/@types/semver/ranges/ltr.d.ts","../../../node_modules/@types/semver/ranges/intersects.d.ts","../../../node_modules/@types/semver/ranges/simplify.d.ts","../../../node_modules/@types/semver/ranges/subset.d.ts","../../../node_modules/@types/semver/internals/identifiers.d.ts","../../../node_modules/@types/semver/index.d.ts","../../../node_modules/@types/strip-bom/index.d.ts","../../../node_modules/@types/strip-json-comments/index.d.ts","../../../node_modules/@types/yargs-parser/index.d.ts","../../../node_modules/@types/yargs/index.d.ts","../../../node_modules/@types/yauzl/index.d.ts"],"fileInfos":[{"version":"824cb491a40f7e8fdeb56f1df5edf91b23f3e3ee6b4cde84d4a99be32338faee","affectsGlobalScope":true},"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","9a68c0c07ae2fa71b44384a839b7b8d81662a236d4b9ac30916718f7510b1b2d","5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","5514e54f17d6d74ecefedc73c504eadffdeda79c7ea205cf9febead32d45c4bc","1c0cdb8dc619bc549c3e5020643e7cf7ae7940058e8c7e5aefa5871b6d86f44b",{"version":"87d693a4920d794a73384b3c779cadcb8548ac6945aa7a925832fe2418c9527a","affectsGlobalScope":true},{"version":"76f838d5d49b65de83bc345c04aa54c62a3cfdb72a477dc0c0fce89a30596c30","affectsGlobalScope":true},{"version":"db88e2781075c7bca86634724f38a132de718ddf3a470a3a2cdb182f4364af9e","affectsGlobalScope":true},{"version":"138fb588d26538783b78d1e3b2c2cc12d55840b97bf5e08bca7f7a174fbe2f17","affectsGlobalScope":true},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true},{"version":"4443e68b35f3332f753eacc66a04ac1d2053b8b035a0e0ac1d455392b5e243b3","affectsGlobalScope":true},{"version":"bc47685641087c015972a3f072480889f0d6c65515f12bd85222f49a98952ed7","affectsGlobalScope":true},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true},{"version":"93495ff27b8746f55d19fcbcdbaccc99fd95f19d057aed1bd2c0cafe1335fbf0","affectsGlobalScope":true},{"version":"6fc23bb8c3965964be8c597310a2878b53a0306edb71d4b5a4dfe760186bcc01","affectsGlobalScope":true},{"version":"ea011c76963fb15ef1cdd7ce6a6808b46322c527de2077b6cfdf23ae6f5f9ec7","affectsGlobalScope":true},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true},{"version":"bb42a7797d996412ecdc5b2787720de477103a0b2e53058569069a0e2bae6c7e","affectsGlobalScope":true},{"version":"4738f2420687fd85629c9efb470793bb753709c2379e5f85bc1815d875ceadcd","affectsGlobalScope":true},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true},{"version":"9fc46429fbe091ac5ad2608c657201eb68b6f1b8341bd6d670047d32ed0a88fa","affectsGlobalScope":true},{"version":"61c37c1de663cf4171e1192466e52c7a382afa58da01b1dc75058f032ddf0839","affectsGlobalScope":true},{"version":"b541a838a13f9234aba650a825393ffc2292dc0fc87681a5d81ef0c96d281e7a","affectsGlobalScope":true},{"version":"b20fe0eca9a4e405f1a5ae24a2b3290b37cf7f21eba6cbe4fc3fab979237d4f3","affectsGlobalScope":true},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true},{"version":"49ed889be54031e1044af0ad2c603d627b8bda8b50c1a68435fe85583901d072","affectsGlobalScope":true},{"version":"e93d098658ce4f0c8a0779e6cab91d0259efb88a318137f686ad76f8410ca270","affectsGlobalScope":true},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true},{"version":"bf14a426dbbf1022d11bd08d6b8e709a2e9d246f0c6c1032f3b2edb9a902adbe","affectsGlobalScope":true},{"version":"5e07ed3809d48205d5b985642a59f2eba47c402374a7cf8006b686f79efadcbd","affectsGlobalScope":true},{"version":"2b72d528b2e2fe3c57889ca7baef5e13a56c957b946906d03767c642f386bbc3","affectsGlobalScope":true},{"version":"8073890e29d2f46fdbc19b8d6d2eb9ea58db9a2052f8640af20baff9afbc8640","affectsGlobalScope":true},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true},{"version":"51e547984877a62227042850456de71a5c45e7fe86b7c975c6e68896c86fa23b","affectsGlobalScope":true},{"version":"956d27abdea9652e8368ce029bb1e0b9174e9678a273529f426df4b3d90abd60","affectsGlobalScope":true},{"version":"4fa6ed14e98aa80b91f61b9805c653ee82af3502dc21c9da5268d3857772ca05","affectsGlobalScope":true},{"version":"e6633e05da3ff36e6da2ec170d0d03ccf33de50ca4dc6f5aeecb572cedd162fb","affectsGlobalScope":true},{"version":"d8670852241d4c6e03f2b89d67497a4bbefe29ecaa5a444e2c11a9b05e6fccc6","affectsGlobalScope":true},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true},{"version":"caccc56c72713969e1cfe5c3d44e5bab151544d9d2b373d7dbe5a1e4166652be","affectsGlobalScope":true},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true},{"version":"50d53ccd31f6667aff66e3d62adf948879a3a16f05d89882d1188084ee415bbc","affectsGlobalScope":true},{"version":"08a58483392df5fcc1db57d782e87734f77ae9eab42516028acbfe46f29a3ef7","affectsGlobalScope":true},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true},{"version":"13f6e6380c78e15e140243dc4be2fa546c287c6d61f4729bc2dd7cf449605471","affectsGlobalScope":true},{"version":"33358442698bb565130f52ba79bfd3d4d484ac85fe33f3cb1759c54d18201393","affectsGlobalScope":true},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true},"6d268309f0e15dd820b2df9806234166554cb4e2fe00d11737adcb4e5489f700","d35b5db21a04a45ae6323c4d4b25acc983dfe2870fc670fd05249eb19d839a5e","58cf96187feb10cc8ad3bb080871cd30888ef63bc5db131f11458850ef8f6245","9102986ff52326a2016e8cddc1cf3092f0808ac916dcc8dc2d2c7195cd181987","fa82b7b22d9df87323e31e9e2ad75911028f3e544647fd212424b3c4452fee3f","01f20dac9dc14f0d306e5d1215c5c1c3b4d1805905e60ae92fabac4031eae7da","9ceec2a882368c0160a8a3879aa0efce0fb985751fc23ff6191006030969cfa4","cad5d6451789234434c28dd2d6a8267b0d64c479b1ad267321faa31ba90d570b","6516fc98fa10b0cb22c7e332bacea4a7ea80257e113f6cdddd924d03bfde218e","be8d072f400254824429edab10acbe595299b702c97b99cc47f8e8018b7102ff","4a3605bef1a5ef29fd5a1696dd95b0b4e2259e2d07a4d88fac79f3a9765c44a2","370079895f1acdd4bb5194a403c85bf60cfbb2654bced9430a6c7210e7246be8","90240231e730deed31569f6c686766a538e4a024bbc33ea1738fe924f477ba61","552223520e823223ee13c5764e9b69b1819c985818a8bcda435d8d1dbd909bee","49b7c3ddd683c09aa437dd92681699387441f522524b14d2331ce494a9bf2f27","637b97f727f21c07a73f09130dc7bf5ac94d04511b179b5eb3e9a4d85a16147a","fb69a046d9f55e2c182c07e793017518b002859497084c0f69f3ee74edd0c4b9","5212dd78d1d63ab33332c8846a0ea5ce248159e74033cde16de48373036b4704","954b3c04ee9f94ca1e262f3e5a6e833b0da0066514b3d4b97b92b7f0c85f8700","a2fc9ce1ae5bed7068d701d8aeebf13321de0f42c217dc2e10f1622dcaa53a7f","8e81f220cb935d551e88cff11541d5e89d3a3494a52fe6247e98016a9dbd4c2d","6b2576a04253626ba41b7dc7ec5977bec07f3b6952b16249d9fa8a3a0d79901c","9de17491f2bfbccea92500e174079d53bdedae34dbebe5d4a12a06ab09814710","e88481085a8576fa52efc913e631c1a833d16179486469b8538d8c4fab2f7381","aec68502c8f4ffaecb4440b37363473582fec0bfee4fb8668a87daa7f700f708","d71577e78c7a4257074aaf82f595724175210c89e8b467ef82f949a6cbd891bc","cf548af8b03cbbc79fdc4f357b5560f618c6d2f68c8688e6eb759c3c11d962c3","c84146dbc9d2e5f43d2cbf15485a4eabf90219dbb66c0d481f20f12d3851bffc","9dc5a1d8f09f9faf21207253a92b461190d59c81ee12c9ac612630e699749990","99c24f331c9f4e75a779b9a988e942442db3cf29923ceb820d3bdd4ed1edfef2","25b1f20d5868ef9ef18132f7dd76b40b7038688ff7c56c58930537a8dff9f231","4105fa0ecfaffb578c8051c3de22e8c984191aac8de14641ee99beed9c5e5bd9","9bba18dcac8cc9bdce65a4e34122d90474617cdf857feddeeba1e7a3638097d4","8c92080253bac0506d82b83d555a029582595f0944abb349954ea732322baa5c","45d4c8d63a67224af62bebff18da32bb2817e306c9fd9e5d1dac6ef8d2da7ead","230eb449f719119cab1728252f20ecdd36d7a20cef659e4a51ada1a232a8aaad","5f264ca312dfcbf23917febc8d7a73ef5be9c248af605939de1c7c4129aa65f2","c1c7b50665ce0b8aa4b95f3843167ac7ac25d1f724d77c2a07b597abb9cf394c","1bf687d978bdd6d5aff10b9eb0ff0695179f8594d4446946fd0182d6d25fa433","ec26029e3a4eccf8ee79d5c76093fbe928cedc83d813fca9be4f055d61530013","e0ff6a627dfbfb9d32e49f34879a763680e37758c509ddd809cb316b96f34390","2113d72680c7ddad6d3b6f70a29432a35c074c94ec6823a7c16ccd69847d965c","c8ffd61bf2db2e7bccb996dd70c9499805cb338f1b1c781987e38ba99dd5b296","55e5a976b594dc02f054860fb59a5299872a5b3c8c90e96733a5c9c9d4ed1fb8","fac83d4c6898d5bf90c508cc84409ded40fdc14611cf42d7fb750fb2c7847979","1668310e691181966c371fce881c88cb1c2e65ac832ef5470434ad926998da2f","4f1eb6b9c2b666278e09019281953fc4ecadad3b2ba2781b2602445743eaaeca","cd4a19200e7e4b235f85c3a15176f84b68bca0a171e802df091553e679238621","2db0dd3aaa2ed285950273ce96ae8a450b45423aa9da2d10e194570f1233fa6b","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","4967529644e391115ca5592184d4b63980569adf60ee685f968fd59ab1557188","5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","4d2b0eb911816f66abe4970898f97a2cfc902bcd743cbfa5017fad79f7ef90d8","bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","e53a3c2a9f624d90f24bf4588aacd223e7bec1b9d0d479b68d2f4a9e6011147f","24b8685c62562f5d98615c5a0c1d05f297cf5065f15246edfe99e81ec4c0e011","93507c745e8f29090efb99399c3f77bec07db17acd75634249dc92f961573387","339dc5265ee5ed92e536a93a04c4ebbc2128f45eeec6ed29f379e0085283542c","4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107",{"version":"e7be367719c613d580d4b27fdf8fe64c9736f48217f4b322c0d63b2971460918","affectsGlobalScope":true},"3d77c73be94570813f8cadd1f05ebc3dc5e2e4fdefe4d340ca20cd018724ee36",{"version":"9d8f6e55f5a038f4dca0cacd6566f9b82c576eee35c694b89230e9dec1895a77","affectsGlobalScope":true},"62f1c00d3d246e0e3cf0224f91e122d560428ec1ccc36bb51d4574a84f1dbad0","53f0960fdcc53d097918adfd8861ffbe0db989c56ffc16c052197bf115da5ed6",{"version":"662163e5327f260b23ca0a1a1ad8a74078aabb587c904fcb5ef518986987eaff","affectsGlobalScope":true},"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb",{"version":"f85c06e750743acf31f0cfd3be284a364d469761649e29547d0dd6be48875150","affectsGlobalScope":true},"b0c0d1d13be149f790a75b381b413490f98558649428bb916fd2d71a3f47a134","3c884d9d9ec454bdf0d5a0b8465bf8297d2caa4d853851d92cc417ac6f30b969","0364f8bb461d6e84252412d4e5590feda4eb582f77d47f7a024a7a9ff105dfdc","5433f7f77cd1fd53f45bd82445a4e437b2f6a72a32070e907530a4fea56c30c8","d0ca5d7df114035258a9d01165be309371fcccf0cccd9d57b1453204686d1ed0",{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true},{"version":"9a30b7fefd7f8abbca4828d481c61c18e40fe5ff107e113b1c1fcd2c8dcf2743","affectsGlobalScope":true},"173b6275a81ebdb283b180654890f46516c21199734fed01a773b1c168b8c45c","304f66274aa8119e8d65a49b1cff84cbf803def6afe1b2cc987386e9a9890e22","1b9adafe8a7fefaeaf9099a0e06f602903f6268438147b843a33a5233ac71745","98273274f2dbb79b0b2009b20f74eca4a7146a3447c912d580cd5d2d94a7ae30","c933f7ba4b201c98b14275fd11a14abb950178afd2074703250fe3654fc10cd2","dccdf1677e531e33f8ac961a68bc537418c9a414797c1ea7e91307501cdc3f5e",{"version":"ea455cc68871b049bcecd9f56d4cf27b852d6dafd5e3b54468ca87cc11604e4d","affectsGlobalScope":true},"8f5814f29dbaf8bacd1764aebdf1c8a6eb86381f6a188ddbac0fcbaab855ce52","a63d03de72adfb91777784015bd3b4125abd2f5ef867fc5a13920b5649e8f52b","d20e003f3d518a7c1f749dbe27c6ab5e3be7b3c905a48361b04a9557de4a6900",{"version":"452e8a437aa57fe832dece2a5d3ea8dd0ab1de03ca778d09798c56ece0a29e80","affectsGlobalScope":true},{"version":"a20f1e119615bf7632729fd89b6c0b5ffdc2df3b512d6304146294528e3ebe19","affectsGlobalScope":true},"575fb200043b11b464db8e42cc64379c5fd322b6d787638e005b5ee98a64486d","6de2f225d942562733e231a695534b30039bdf1875b377bb7255881f0df8ede8","56249fd3ef1f6b90888e606f4ea648c43978ef43a7263aafad64f8d83cd3b8aa","139ad1dc93a503da85b7a0d5f615bddbae61ad796bc68fedd049150db67a1e26","7b166975fdbd3b37afb64707b98bca88e46577bbc6c59871f9383a7df2daacd1","9eece5e586312581ccd106d4853e861aaaa1a39f8e3ea672b8c3847eedd12f6e","81505c54d7cad0009352eaa21bd923ab7cdee7ec3405357a54d9a5da033a2084","269929a24b2816343a178008ac9ae9248304d92a8ba8e233055e0ed6dbe6ef71","93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633","3c1f19c7abcda6b3a4cf9438a15c7307a080bd3b51dfd56b198d9f86baf19447","2ee1645e0df9d84467cfe1d67b0ad3003c2f387de55874d565094464ee6f2927",{"version":"a321f588d51d742955993766d2969ed19006110a080572bfd24054178a5be640","affectsGlobalScope":true},{"version":"9cf780e96b687e4bdfd1907ed26a688c18b89797490a00598fa8b8ab683335dd","affectsGlobalScope":true},"98e00f3613402504bc2a2c9a621800ab48e0a463d1eed062208a4ae98ad8f84c","9ae88ce9f73446c24b2d2452e993b676da1b31fca5ceb7276e7f36279f693ed1","e49d7625faff2a7842e4e7b9b197f972633fca685afcf6b4403400c97d087c36","b82c38abc53922b1b3670c3af6f333c21b735722a8f156e7d357a2da7c53a0a0",{"version":"b423f53647708043299ded4daa68d95c967a2ac30aa1437adc4442129d7d0a6c","affectsGlobalScope":true},{"version":"21fcdcb618236f0feaca7e511e2da10c19970f86e09c934cef2d45b340ad92b5","affectsGlobalScope":true},"4f0fc7b7f54422bd97cfaf558ddb4bca86893839367b746a8f86b60ac7619673","4cdd8b6b51599180a387cc7c1c50f49eca5ce06595d781638fd0216520d98246","d91a7d8b5655c42986f1bdfe2105c4408f472831c8f20cf11a8c3345b6b56c8c",{"version":"8704423bf338bff381ebc951ed819935d0252d90cd6de7dffe5b0a5debb65d07","affectsGlobalScope":true},"b33379077284c9e55d2410d814b71b15522c5f71f9e93e15a8c3c41d463b00f6",{"version":"ab9b9a36e5284fd8d3bf2f7d5fcbc60052f25f27e4d20954782099282c60d23e","affectsGlobalScope":true},"a42be67ed1ddaec743582f41fc219db96a1b69719fccac6d1464321178d610fc","c663a7e4ee2cb54d99cf095479a5bcf1dd18d762ffdfa038aa1b2d79b070b0d7","5463c98206a890ea7a759fbcc97b0c042ab1a740b3e24037f7fbf40bae70a3c5","841f7ca2af7f4d9cca1f9fa2288a4849fc9d49ca15b47336892efd06a14dd1d8","5bccd6ffc11fed820a432ac819200e6af38f8c3625e6eae0cf0f07ca85856392","8510595d2ca2660e6407be65d8bf95f0c53877dbb812e269cdd980fc34de5f78","b73dc0d8185876891831a04b36b0c97fc950b82dd747adaa1fe2d001be8f2a03","82f507498b118e727c99b2b24b66fe95e475db73959a5af372526e2aabeba2bd","a014705f62ab3731cd6e83cc0d47055301bda50e883a7c5b308c5fc294384f00","c123e41196eb293cd30ff19b31d55192d3a3ffbbab8409d5c4b328844c5e93fc","4729c40012c9b4ae235cdeb76bc9cf5c127e09eb08ecf5b1b51b8d03d58e5555","38aaec0cd25bec1bec8511430fcfc6a7ce53ec44fa7e4e68717c551d0c786ef0","ec6adf14f44d63199b70a1117f13d380dfd0b1e1f0a6357b0ecf04cf0c56ab68",{"version":"76e5960564db42c66dd27a08a63517b8b25e2c5ae7ab9299c2e90ef0862d2b7f","signature":"4bf10276abb7b9ef6ab6a169077f7613a63855513aa1b9573e6cbd036041c6a3"},{"version":"813b443e19cfb702984f5bafb80567c27ae4074f2a48e38ee12b8769ce13bafa","signature":"06803634d9730f5fe5f4d2003e59ed8bc4463a87cdd1da074a45bcde21339695"},{"version":"272572fe069ea7baa5d358631289fcedbca8c7e9f8917e9824dfb8a867e10b04","signature":"03de2b57205c09f67df158eeb63e321a39aacb35f4afd1e207cdf62fc3854cab"},"7ad3e0aaeb840047fa4711306188cac803514091f251b6baecb9b2aacf15b976","6d268309f0e15dd820b2df9806234166554cb4e2fe00d11737adcb4e5489f700","58cf96187feb10cc8ad3bb080871cd30888ef63bc5db131f11458850ef8f6245","9102986ff52326a2016e8cddc1cf3092f0808ac916dcc8dc2d2c7195cd181987","fa82b7b22d9df87323e31e9e2ad75911028f3e544647fd212424b3c4452fee3f","01f20dac9dc14f0d306e5d1215c5c1c3b4d1805905e60ae92fabac4031eae7da","9ceec2a882368c0160a8a3879aa0efce0fb985751fc23ff6191006030969cfa4","cad5d6451789234434c28dd2d6a8267b0d64c479b1ad267321faa31ba90d570b","d5197053be441d40f4d074185a40d461137c8fa8db9e00cceedf2d9ca6583157","3cd33c37432c2de7bdd9f1d48b3ea4fd03afad4969cfc5ba88d81e6ed03f432c","6db29cf7af1d68c8194d98f1c444cea3b30a2c65deda3428452efaa05717b81d","561ef05d7e369040c28800d878d7e6461af62e459460263e911d508f319c8d5d","a1b60bd2328318dcbec30bdf529dad31a13315ff2df60c8bd71630c58a575b06","a399dd9b73e4bbfbed2ad1c1259d707f5f147f40dc5e3eeb541bf0bf2da42b25","8cc6a35806cd10d448b0f2ab01fe0b6194ca57fdaced2d71781b68e83c55bd88","8f364fec0ef20506aa9cf00b5cd8b620c1c0389687b11a3a32b0b5d4716ad894","5d11703e2c5d4dbe00bbe79f3bc864d178cf8d6ebccc2d1448ea29e93654f029","f4e82c91aac3b61f3ad04f11a44c5b79f724ff8a09281d0afa24a6624633ff25","ed849d616865076f44a41c87f27698f7cdf230290c44bafc71d7c2bc6919b202","7b8b9017156ef8bf3bbe42785fac8956e5c9869f4a494536d7f548a7c1c7d98a","07c34d1f83dfc5746de4229e01f0cb4d388a9f128eab6beadb4ae1621ebb87c6","763bb8df872cbb8783e29e19bd7a1dea0f88f7fd7398343af38be8509a65df82","372b3681eb9618821c0e0e10bcc775b838e45b51912b8998bc5ba035100dc9e5","c286b410193495d067668bcdbd13ea3f3a39001edff02edee248babf2652e563","87c73268165bf20f01c101ac785e8a9d1d95ff203d05d3548a6c49952597e321","af89ab13b40dd28cd91818fc6329914d2b9663591831f032ff0f0cb4a028d4a5","63007f1618ada5041fb3b47630b64a9987d268bf740dd72334c38b5d23f5239b","3395f90467d2bb9db039a5c22ed6659ca2ff6f0b4f7ee5f223b0f77288f54ea7","20df2907d398e369d49e8906d6e0f096c465501e9ceff9d61293bf0f4e9020f1","302aa8248dab7c689c103162e542224aa7f3b0db46e29d0fb468fac721cf1c41","ea0a3bb69845621165c21e80ebb0d2b28dad22cd9920564516ce8e927a828f79","6a81475a67505af60be3242841c65ce4bf6d0b624d8b3fada646ba459a3eaad8","6834dd6cc060648604278cdb920a9316fa916e9116134b17dfad90e42800ca47","19fba62f1aab90f0110738261ed8bc1da82c89433fc43265f14870d4380d10b8","fbb2df54f4778b4d691bbc7c0a6e1e241dfffaca19f443cc9f230f450458bf89","da98d8109f379be48d459a6821ebd7cc728af62557e1c44f864e04360686af93","ef6e6d838cc600162626a53167046484f38e9a4bab9454e72350bed76c497228","8adf9a02b0c2508f81516b561a6c8080ea2169126f166e39767bcb5389b9cfbc","c8b50ecedc9ff1b0e83c96f0a334d022874199f7c2d00d182ca6672176b0ea9d","b66ede73039e8751e06e3cab843e5a4265c1124a3285c3d854092c37a966b1f5","580ac7757b426f045be01f7e47fff9910b922442b45266fd3fe39c44b53ef5ad","94432b8ce4402dd579be8dbf8d798dd64b57d9df617b9dfe4f10f93c1540540f","1447d46bff9e7c5c77da14515a7456ea5e919ce6e28f5e6746edf99818e4be47","ba3f6f0ee47f46cdce55620aec5726de80e92a930982634afe9918c114c38f0b","6f38045547cdfd54ec19abcd943cace72c775fde739c5e0e1d917cf3030c16b5","929fc31f7523aaa1d19735b77e637af06e58d76007648ec088ecfbec1521cbfe","a6eb23f2a83113ce0ab7203bfda2be0888720f8d694a20abaef83b9f62832061","363dca5004ac5a3d9c2bba12812b97a64461911762f0b8f9320a8856ec53bcad","557b8c7481296f4b7ed362320f3bbb40bb87404edf880c81224f365a8d1e17f3","283ed3d075bf7d3e8793f63b2a52f475ed84d95b7b6351c5d5bcc6c49d4b845b","6544dab49004fecb69a4ef775e9ad2773a6148b1f9bfd9b75508e3afa11f5d35","bd4c741820ec3574b7ed3b782c8d78034d6e4631d11997e701e6b955b86a87c1","e2dd36a524ea5b13de1ed104ede9cea79696588175c1df1940d6a29113a4aee0","a878d4c7237a7af50e96534295fcf723134d70cbb1e9bfd8365266b912aee6ec","a1f708ddf34053065f8f53682123421af299cee37ae110a86ba07851adf940da","913fbbd374393d3473dcae4b64a5eff2dea93306bb065ae7111be724a8ca57e1","395e6fa1fc8f46f827a5f7d3b7dabc836627ae57e41338f93c221b88d4978f15","749effab6d7e72df8d126868c82b8166cdde84d48453e44f65cbad42ad900b06","11705a4aad6e2e724b82ffee6c4fa271d798f0fb68806ace4b1c425c266f8d98","b81972aff48d9f08543cb19cc5d73f50eb9901d25daecabc46a53866f99d27b2","ca027df9fd496a200d99ca0db4b0077463ce4926a6c8e05cfae522c5971ccbc0","e043a9288022e8d802117e5e9e718443296f9c69a5eab7ed89b2fb76128a0140","1834770fc1d5e5240fe8f3de72205c9e79b1c321224fb4af8bd2529202a6960c","3b1901191af5f232f0a950a914649749c3447c445cae6b896e74fe987b379701","3641a97eab56e401bc6ab265ef34e54d926017181e2cbbd8ee36d87b7e19345b","1e84b75e59ed7fff2883625dc3d3d8a6828c878a1b7e4e9ea54fa67ab574eb1e",{"version":"6a9eb9c5d3f7474937973fe4b0a9e53025634c2e39118eda436d89f3e9df976f","affectsGlobalScope":true},{"version":"86e56d97b13ef0a58bc9c59aee782ae7d47d63802b5b32129ec5e5d62c20dbfa","affectsGlobalScope":true},{"version":"c1f79c6d85cd84518fd7349588b3c61bdc189f58e3866f925cbf4631c81e31f9","affectsGlobalScope":true},{"version":"54db406753da16e177f094aa66da79840f447de6d87ddd1543a80c9418c52545","affectsGlobalScope":true},{"version":"42f28f4cfca4a70bd89c1d55d76c7978275030b894f6793f36890265c11a83a4","affectsGlobalScope":true},{"version":"7cf1027da9599f056355b46bbea31dbf7f715f797dffb9cbb3402d4490c503e5","affectsGlobalScope":true},"96dbd0787b57ae02981d26d5f2441f0f8444fb46d7578c56527eab89cff13a7d","5ccc3c7f73ef48c223635cd4506f21133560de7abc4c09c623327bb1b54386dc","7d2a0ba1297be385a89b5515b88cd31b4a1eeef5236f710166dc1b36b1741e1b","8e87660f5170c195ade218937e360484775be6a4e75a098665d9ba5a2e4cdc15","8d16e3ff29dd0650435766702b01c2f7e9d1f289a48fcbf8e93687d6ecf33f26","ac63a01fcac70315fc9b416e9a57e568b18032c7cfcaa314e1751f03ef71286f","66336b5a5d5e897e932cbf1e306ff8ac8a9929971409a8049c8c8a249cd8b57c",{"version":"e1873a754ad26cfb66157fc3f87e339dbb7204dba5fb3b6805c8637862fed98d","signature":"a1a78d01e5f4686fc589b88ed8e965667e2144af0af21b1c6a153de86acb32b8"},{"version":"12b7221ba57d081fb4ed1f5af21ed57b84e2cb47f5443f29a71af9d861aa880f","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"1f63ac6272e4d2d43cb25552b4ed8a89ffc86244ea655f685e8e3685433c7b23","2d2bccc77a578611c2aef535a8d131d4ec98aa7c644119b0d88d83bb68ebc947","094be99dc9410d3cb517ba523ae031864c5e258a3904ed8058773672768c2c6c","fafe1e5b2114bc57a6da341cad2bb44298543caa3fd7680e6bb0f29215048aa2","796eea44840b57d4c6741d119d767c5ea294fdf610151158fd0a2f236cf21367","309ab701fcc8aa7f3c9b53fe84cb5ef7cbd579888de19423c8fc54402be9e8d9","5ad6d882be6f8e602795bc0bd0fac7806b16ba7715be494fe0279e2c5e3e23c0","596ab45ef67fa8dae4996a2a61dc5055ae2b3dc5102cf3b43ee7965a7088943b","a3f9f52ce73700565c8d9ba2aa75823ab8fc8e7258a27ecb828cd4257b8f918d","5f4884638ab10b753ec0c7406916fc746bb99cc0044b9a4a67b2006b7e57e8af","4b5603a1ccca455500cfb39517d41ec011f31ba84bb6de44473344a237d89168",{"version":"48065d9ccf3c6ee5a00bfcc4dca34927e477759a6e603ea20673d9285427081a","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"6c507d6c49c34dc31a5dcc96ca0ac806beb36d37a33f71cb34077fcac8f12145","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"56558ae167446acf230ea2cc072a835309a37ae63d286b484308afd8c504c2d6",{"version":"5b193c198a20fd0215e7a144ddddbc6570f5a155e6c7386da9df5a1d98118712","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"42baf4ca38c38deaf411ea73f37bc39ff56c6e5c761a968b64ac1b25c92b5cd8","d7dbe0ad36bdca8a6ecf143422a48e72cc8927bab7b23a1a2485c2f78a7022c6","8718fa41d7cf4aa91de4e8f164c90f88e0bf343aa92a1b9b725a9c675c64e16b","f992cd6cc0bcbaa4e6c810468c90f2d8595f8c6c3cf050c806397d3de8585562","68cc8d6fcc2f270d7108f02f3ebc59480a54615be3e09a47e14527f349e9d53e","3eb11dbf3489064a47a2e1cf9d261b1f100ef0b3b50ffca6c44dd99d6dd81ac1","bc222163edcb8df6ba9b506d053d6c5afcae50e85695151cf4636a3107deaba9","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","96d14f21b7652903852eef49379d04dbda28c16ed36468f8c9fa08f7c14c9538","fec943fdb3275eb6e006b35e04a8e2e99e9adf3f4b969ddf15315ac7575a93e4","742f21debb3937c3839a63245648238555bdab1ea095d43fd10c88a64029bf76","7cfdf3b9a5ba934a058bfc9390c074104dc7223b7e3c16fd5335206d789bc3d3","0944f27ebff4b20646b71e7e3faaaae50a6debd40bc63e225de1320dd15c5795","5d30565583300c9256072a013ac0318cc603ff769b4c5cafc222394ea93963e1","8a7219b41d3c1c93f3f3b779146f313efade2404eeece88dcd366df7e2364977","a109c4289d59d9019cfe1eeab506fe57817ee549499b02a83a7e9d3bdf662d63","89121c1bf2990f5219bfd802a3e7fc557de447c62058d6af68d6b6348d64499a","d4a22007b481fe2a2e6bfd3a42c00cd62d41edb36d30fc4697df2692e9891fc8","8841e2aa774b89bd23302dede20663306dc1b9902431ac64b24be8b8d0e3f649","fbca5ffaebf282ec3cdac47b0d1d4a138a8b0bb32105251a38acb235087d3318",{"version":"90ebf5865e27d8966ef44b073e6e83b0ddd45058bab1d58b1e4b5a47d36396c4","affectsGlobalScope":true},"cb482592bfcbdfcefa8d155590399e8bff66277e60e17bfada7c2f31322e7b87","22293bd6fa12747929f8dfca3ec1684a3fe08638aa18023dd286ab337e88a592","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","7d8ddf0f021c53099e34ee831a06c394d50371816caa98684812f089b4c6b3d4","4006c872e38a2c4e09c593bc0cdd32b7b4f5c4843910bea0def631c483fff6c5","ab6aa3a65d473871ee093e3b7b71ed0f9c69e07d1d4295f45c9efd91a771241d","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","26a770cec4bd2e7dbba95c6e536390fffe83c6268b78974a93727903b515c4e7","74d5a87c3616cd5d8691059d531504403aa857e09cbaecb1c64dfb9ace0db185"],"root":[[218,220],300,301,313,314,316],"options":{"allowJs":true,"checkJs":true,"composite":true,"declaration":true,"declarationMap":true,"emitDeclarationOnly":false,"esModuleInterop":true,"module":7,"noEmitOnError":true,"outDir":"./","removeComments":false,"skipLibCheck":true,"sourceMap":true,"strict":true,"stripInternal":true,"target":9},"fileIdsList":[[207,221,230,231,232,234,242,243,244,245,260],[230,231],[66,229],[207,230,231,233],[235,237],[233,235,241],[239],[207,231,234,235,236,237,238,240],[231],[66,207],[231,234],[91,207,230],[229],[222],[66,222],[222,223,224,225,226,227,228],[207],[91,207,260],[66,92,207,260],[66,92],[302,303,304,305,307,308,309,310,311],[66,91,92,207],[109,207,306],[207,260],[91],[86,91,207,254],[246,255,256,257,258,259],[86,91,207],[66,81,92,93,207],[81,91,93],[66,81,91,92,207],[79,94,207],[167,205],[80,81,86,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,206],[66,77,79],[93],[94,96],[77,79,80],[81,91],[81,94,207],[80,81,91],[66,80,81,93,96,109],[66,80],[66,92,93,207],[81,93],[86,91,93,96,103,207],[79,86,207,260,262,276,279,280,282,284],[66,73],[207,270,279],[91,207,275],[247,248,249,250,251,252,253],[207,249],[207,247],[207,248],[77,79,207],[66,283],[86,91,207,213],[91,207,214],[66,92,207,208],[207,281],[85,86],[85],[83,84,87],[82,87,89,90],[87,89,91],[88,91],[167,170,197,205,317,318,319],[287],[321],[205],[328],[329,331],[332],[334],[330],[113],[154],[155,160,189],[156,161,167,168,175,186,197],[156,157,167,175],[158,198],[159,160,168,176],[160,186,194],[161,163,167,175],[154,162],[163,164],[167],[165,167],[154,167],[167,168,169,186,197],[167,168,169,182,186,189],[152,155,202],[163,167,170,175,186,197],[167,168,170,171,175,186,194,197],[170,172,186,194,197],[113,114,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204],[167,173],[174,197,202],[163,167,175,186],[176],[177],[154,178],[113,114,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],[180],[181],[167,182,183],[182,184,198,200],[155,167,186,187,188,189],[155,186,188],[186,187],[189],[190],[113,186],[167,192,193],[192,193],[160,175,186,194],[195],[175,196],[155,170,181,197],[160,198],[186,199],[174,200],[201],[155,160,167,169,178,186,197,200,202],[186,203],[170,186,205],[343,382],[343,367,382],[382],[343],[343,368,382],[343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381],[368,382],[295],[385],[167,186,205],[287,288,289,290,291,292],[287,288],[275,278],[274],[277],[66,92,215],[92],[66,92,216],[75],[264,265,270,271],[78,79],[78],[76],[263],[77],[77,210],[79,210,266,267,268,269],[75,76,77,78,263],[75,76,77],[73],[65],[65,66],[65,67,68,69,70,71,72],[296],[273],[270,272],[124,128,197],[124,186,197],[119],[121,124,194,197],[175,194],[119,205],[121,124,175,197],[116,117,120,123,155,167,186,197],[124,131],[116,122],[124,145,146],[120,124,155,189,197,205],[155,205],[145,155,205],[118,119,205],[124],[118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151],[124,139],[124,131,132],[122,124,132,133],[123],[116,119,124],[124,128,132,133],[128],[122,124,127,197],[116,121,124,131],[155,186],[119,124,145,155,202,205],[74,79,91,207,208,209,210,219],[74,79,91,207,208,209,210,211,212,214,217,218,220],[74,207,209,210,219],[79,91,207,209,219,261,285,286,293,294,296,297,298,300],[66,296,299],[91,207,209,219,261,285,286,293,296,297,312],[91,207,209,219,261,285,286,293,296,297,298],[91,207,209,219,261,274,285,286,293,294,296,297,298,312,315],[74,91,207,261,285],[79,207,219],[74,79,91,207,217],[207,219],[66,296]],"referencedMap":[[261,1],[232,2],[230,3],[234,4],[238,5],[242,6],[240,7],[241,8],[237,9],[243,10],[244,11],[231,12],[222,13],[225,14],[226,14],[223,15],[224,14],[229,16],[227,3],[228,13],[302,17],[303,18],[304,19],[310,20],[312,21],[311,17],[305,22],[307,23],[308,24],[309,24],[246,25],[255,26],[260,27],[256,17],[257,10],[258,17],[259,28],[105,29],[106,30],[93,31],[95,32],[206,33],[207,34],[80,35],[97,36],[107,37],[81,38],[94,39],[98,40],[99,41],[110,42],[111,43],[101,36],[103,44],[102,45],[104,46],[285,47],[262,48],[280,49],[276,50],[208,17],[250,17],[254,51],[249,17],[247,17],[248,17],[253,52],[251,53],[252,54],[209,55],[284,56],[283,48],[214,57],[213,58],[306,59],[282,60],[87,61],[84,62],[83,62],[85,63],[90,25],[91,64],[82,25],[88,65],[89,66],[320,67],[288,68],[292,68],[290,68],[322,69],[323,70],[327,33],[329,71],[332,72],[333,73],[335,74],[331,75],[113,76],[114,76],[154,77],[155,78],[156,79],[157,80],[158,81],[159,82],[160,83],[161,84],[162,85],[163,86],[164,86],[166,87],[165,88],[167,89],[168,90],[169,91],[153,92],[170,93],[171,94],[172,95],[205,96],[173,97],[174,98],[175,99],[176,100],[177,101],[178,102],[179,103],[180,104],[181,105],[182,106],[183,106],[184,107],[186,108],[188,109],[187,110],[189,111],[190,112],[191,113],[192,114],[193,115],[194,116],[195,117],[196,118],[197,119],[198,120],[199,121],[200,122],[201,123],[202,124],[203,125],[319,126],[367,127],[368,128],[343,129],[346,129],[365,127],[366,127],[356,127],[355,130],[353,127],[348,127],[361,127],[359,127],[363,127],[347,127],[360,127],[364,127],[349,127],[350,127],[362,127],[344,127],[351,127],[352,127],[354,127],[358,127],[369,131],[357,127],[345,127],[382,132],[376,131],[378,133],[377,131],[370,131],[371,131],[373,131],[375,131],[379,133],[380,133],[372,133],[374,133],[296,134],[386,135],[387,136],[293,137],[291,68],[289,138],[279,139],[275,140],[278,141],[215,20],[216,142],[315,143],[217,144],[317,87],[271,145],[272,146],[76,147],[79,148],[263,149],[264,150],[265,150],[210,151],[267,152],[270,153],[269,154],[78,155],[65,156],[69,157],[70,157],[67,158],[68,157],[73,159],[71,48],[72,156],[297,160],[298,161],[274,161],[273,162],[131,163],[141,164],[130,163],[151,165],[122,166],[121,167],[150,70],[144,168],[149,169],[124,170],[138,171],[123,172],[147,173],[119,174],[118,175],[148,176],[120,177],[125,178],[129,178],[152,179],[142,180],[133,181],[134,182],[136,183],[132,184],[135,185],[145,70],[127,186],[128,187],[137,188],[117,189],[140,180],[139,178],[146,190],[220,191],[219,192],[218,193],[301,194],[300,195],[313,196],[314,197],[316,198],[74,48],[211,10],[212,17],[286,199]],"exportedModulesMap":[[261,1],[232,2],[230,3],[234,4],[238,5],[242,6],[240,7],[241,8],[237,9],[243,10],[244,11],[231,12],[222,13],[225,14],[226,14],[223,15],[224,14],[229,16],[227,3],[228,13],[302,17],[303,18],[304,19],[310,20],[312,21],[311,17],[305,22],[307,23],[308,24],[309,24],[246,25],[255,26],[260,27],[256,17],[257,10],[258,17],[259,28],[105,29],[106,30],[93,31],[95,32],[206,33],[207,34],[80,35],[97,36],[107,37],[81,38],[94,39],[98,40],[99,41],[110,42],[111,43],[101,36],[103,44],[102,45],[104,46],[285,47],[262,48],[280,49],[276,50],[208,17],[250,17],[254,51],[249,17],[247,17],[248,17],[253,52],[251,53],[252,54],[209,55],[284,56],[283,48],[214,57],[213,58],[306,59],[282,60],[87,61],[84,62],[83,62],[85,63],[90,25],[91,64],[82,25],[88,65],[89,66],[320,67],[288,68],[292,68],[290,68],[322,69],[323,70],[327,33],[329,71],[332,72],[333,73],[335,74],[331,75],[113,76],[114,76],[154,77],[155,78],[156,79],[157,80],[158,81],[159,82],[160,83],[161,84],[162,85],[163,86],[164,86],[166,87],[165,88],[167,89],[168,90],[169,91],[153,92],[170,93],[171,94],[172,95],[205,96],[173,97],[174,98],[175,99],[176,100],[177,101],[178,102],[179,103],[180,104],[181,105],[182,106],[183,106],[184,107],[186,108],[188,109],[187,110],[189,111],[190,112],[191,113],[192,114],[193,115],[194,116],[195,117],[196,118],[197,119],[198,120],[199,121],[200,122],[201,123],[202,124],[203,125],[319,126],[367,127],[368,128],[343,129],[346,129],[365,127],[366,127],[356,127],[355,130],[353,127],[348,127],[361,127],[359,127],[363,127],[347,127],[360,127],[364,127],[349,127],[350,127],[362,127],[344,127],[351,127],[352,127],[354,127],[358,127],[369,131],[357,127],[345,127],[382,132],[376,131],[378,133],[377,131],[370,131],[371,131],[373,131],[375,131],[379,133],[380,133],[372,133],[374,133],[296,134],[386,135],[387,136],[293,137],[291,68],[289,138],[279,139],[275,140],[278,141],[215,20],[216,142],[315,143],[217,144],[317,87],[271,145],[272,146],[76,147],[79,148],[263,149],[264,150],[265,150],[210,151],[267,152],[270,153],[269,154],[78,155],[65,156],[69,157],[70,157],[67,158],[68,157],[73,159],[71,48],[72,156],[297,160],[298,161],[274,161],[273,162],[131,163],[141,164],[130,163],[151,165],[122,166],[121,167],[150,70],[144,168],[149,169],[124,170],[138,171],[123,172],[147,173],[119,174],[118,175],[148,176],[120,177],[125,178],[129,178],[152,179],[142,180],[133,181],[134,182],[136,183],[132,184],[135,185],[145,70],[127,186],[128,187],[137,188],[117,189],[140,180],[139,178],[146,190],[220,200],[219,201],[218,202],[300,203],[74,48],[211,10],[212,17],[286,199]],"semanticDiagnosticsPerFile":[245,261,232,221,230,234,238,242,240,235,233,241,237,243,244,231,236,222,225,226,223,224,229,227,228,302,303,304,310,312,311,305,307,308,309,246,255,260,256,257,258,259,105,106,93,95,112,96,206,207,80,97,107,81,94,98,99,108,110,111,100,101,103,102,104,285,262,280,276,208,250,254,249,247,248,253,251,252,209,284,283,214,213,306,282,87,84,83,85,90,91,82,88,89,320,288,292,290,287,322,323,318,324,325,326,327,328,329,332,333,335,330,331,336,337,338,321,339,113,114,154,155,156,157,158,159,160,161,162,163,164,166,165,167,168,169,153,204,170,171,172,205,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,340,341,319,342,367,368,343,346,365,366,356,355,353,348,361,359,363,347,360,364,349,350,362,344,351,352,354,358,369,357,345,382,381,376,378,377,370,371,373,375,379,380,372,374,296,295,383,384,334,385,386,387,293,281,115,291,289,239,279,275,277,278,294,215,216,315,217,109,92,317,271,75,272,76,266,79,263,264,265,210,267,77,270,269,78,268,86,65,69,70,67,68,73,71,72,297,63,64,11,12,15,14,2,16,17,18,19,20,21,22,23,3,24,4,25,29,26,27,28,30,31,32,5,33,34,35,36,6,40,37,38,39,41,7,42,47,48,43,44,45,46,8,52,49,50,51,53,9,54,55,56,59,57,58,60,61,10,1,62,13,66,299,298,274,273,131,141,130,151,122,121,150,144,149,124,138,123,147,119,118,148,120,125,126,129,116,152,142,133,134,136,132,135,145,127,128,137,117,140,139,143,146,220,219,218,301,300,313,314,316,74,211,212,286],"latestChangedDtsFile":"./src/dht.d.ts"},"version":"5.4.5"}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/dist/typedoc-urls.json b/node_modules/@libp2p/daemon-client/dist/typedoc-urls.json
deleted file mode 100644
index 594d455..0000000
--- a/node_modules/@libp2p/daemon-client/dist/typedoc-urls.json
+++ /dev/null
@@ -1,16 +0,0 @@
-{
-  "DHTClient": "https://libp2p.github.io/js-libp2p-daemon/interfaces/_libp2p_daemon_client.DHTClient.html",
-  ".:DHTClient": "https://libp2p.github.io/js-libp2p-daemon/interfaces/_libp2p_daemon_client.DHTClient.html",
-  "DaemonClient": "https://libp2p.github.io/js-libp2p-daemon/interfaces/_libp2p_daemon_client.DaemonClient.html",
-  ".:DaemonClient": "https://libp2p.github.io/js-libp2p-daemon/interfaces/_libp2p_daemon_client.DaemonClient.html",
-  "IdentifyResult": "https://libp2p.github.io/js-libp2p-daemon/interfaces/_libp2p_daemon_client.IdentifyResult.html",
-  ".:IdentifyResult": "https://libp2p.github.io/js-libp2p-daemon/interfaces/_libp2p_daemon_client.IdentifyResult.html",
-  "PubSubClient": "https://libp2p.github.io/js-libp2p-daemon/interfaces/_libp2p_daemon_client.PubSubClient.html",
-  ".:PubSubClient": "https://libp2p.github.io/js-libp2p-daemon/interfaces/_libp2p_daemon_client.PubSubClient.html",
-  "StreamHandlerFunction": "https://libp2p.github.io/js-libp2p-daemon/interfaces/_libp2p_daemon_client.StreamHandlerFunction.html",
-  ".:StreamHandlerFunction": "https://libp2p.github.io/js-libp2p-daemon/interfaces/_libp2p_daemon_client.StreamHandlerFunction.html",
-  "Subscription": "https://libp2p.github.io/js-libp2p-daemon/interfaces/_libp2p_daemon_client.Subscription.html",
-  ".:Subscription": "https://libp2p.github.io/js-libp2p-daemon/interfaces/_libp2p_daemon_client.Subscription.html",
-  "createClient": "https://libp2p.github.io/js-libp2p-daemon/functions/_libp2p_daemon_client.createClient.html",
-  ".:createClient": "https://libp2p.github.io/js-libp2p-daemon/functions/_libp2p_daemon_client.createClient.html"
-}
\ No newline at end of file
diff --git a/node_modules/@libp2p/daemon-client/src/dht.ts b/node_modules/@libp2p/daemon-client/src/dht.ts
index 83f46f7..bbf041b 100644
--- a/node_modules/@libp2p/daemon-client/src/dht.ts
+++ b/node_modules/@libp2p/daemon-client/src/dht.ts
@@ -4,13 +4,14 @@ import {
   DHTRequest,
   DHTResponse
 } from '@libp2p/daemon-protocol'
-import { CodeError } from '@libp2p/interface'
+import { InvalidMessageError, InvalidParametersError, ProtocolError } from '@libp2p/interface'
 import { isPeerId, type PeerId, type PeerInfo } from '@libp2p/interface'
 import { logger } from '@libp2p/logger'
-import { peerIdFromBytes } from '@libp2p/peer-id'
+import { peerIdFromMultihash } from '@libp2p/peer-id'
 import { multiaddr } from '@multiformats/multiaddr'
 import { CID } from 'multiformats/cid'
-import type { DaemonClient } from './index.js'
+import * as Digest from 'multiformats/hashes/digest'
+import { OperationFailedError, type DaemonClient } from './index.js'
 
 const log = logger('libp2p:daemon-client:dht')
 
@@ -26,11 +27,11 @@ export class DHT {
    */
   async put (key: Uint8Array, value: Uint8Array): Promise<void> {
     if (!(key instanceof Uint8Array)) {
-      throw new CodeError('invalid key received', 'ERR_INVALID_KEY')
+      throw new InvalidParametersError('invalid key received')
     }
 
     if (!(value instanceof Uint8Array)) {
-      throw new CodeError('value received is not a Uint8Array', 'ERR_INVALID_VALUE')
+      throw new InvalidParametersError('value received is not a Uint8Array')
     }
 
     const sh = await this.client.send({
@@ -49,7 +50,7 @@ export class DHT {
     await sh.unwrap().close()
 
     if (response.type !== Response.Type.OK) {
-      throw new CodeError(response.error?.msg ?? 'DHT put failed', 'ERR_DHT_PUT_FAILED')
+      throw new ProtocolError(response.error?.msg ?? 'DHT put failed')
     }
   }
 
@@ -58,7 +59,7 @@ export class DHT {
    */
   async get (key: Uint8Array): Promise<Uint8Array> {
     if (!(key instanceof Uint8Array)) {
-      throw new CodeError('invalid key received', 'ERR_INVALID_KEY')
+      throw new InvalidParametersError('invalid key received')
     }
 
     const sh = await this.client.send({
@@ -74,11 +75,11 @@ export class DHT {
     await sh.unwrap().close()
 
     if (response.type !== Response.Type.OK) {
-      throw new CodeError(response.error?.msg ?? 'DHT get failed', 'ERR_DHT_GET_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'DHT get failed')
     }
 
-    if (response.dht == null || response.dht.value == null) {
-      throw new CodeError('Invalid DHT get response', 'ERR_DHT_GET_FAILED')
+    if (response.dht?.value == null) {
+      throw new OperationFailedError('Invalid DHT get response')
     }
 
     return response.dht.value
@@ -89,14 +90,14 @@ export class DHT {
    */
   async findPeer (peerId: PeerId): Promise<PeerInfo> {
     if (!isPeerId(peerId)) {
-      throw new CodeError('invalid peer id received', 'ERR_INVALID_PEER_ID')
+      throw new InvalidParametersError('invalid peer id received')
     }
 
     const sh = await this.client.send({
       type: Request.Type.DHT,
       dht: {
         type: DHTRequest.Type.FIND_PEER,
-        peer: peerId.toBytes()
+        peer: peerId.toMultihash().bytes
       }
     })
 
@@ -105,15 +106,15 @@ export class DHT {
     await sh.unwrap().close()
 
     if (response.type !== Response.Type.OK) {
-      throw new CodeError(response.error?.msg ?? 'DHT find peer failed', 'ERR_DHT_FIND_PEER_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'DHT find peer failed')
     }
 
-    if (response.dht == null || response.dht.peer == null || response.dht.peer.addrs == null) {
-      throw new CodeError('Invalid response', 'ERR_DHT_FIND_PEER_FAILED')
+    if (response.dht?.peer?.addrs == null) {
+      throw new OperationFailedError('Invalid response')
     }
 
     return {
-      id: peerIdFromBytes(response.dht.peer.id),
+      id: peerIdFromMultihash(Digest.decode(response.dht.peer.id)),
       multiaddrs: response.dht.peer.addrs.map((a) => multiaddr(a))
     }
   }
@@ -123,7 +124,7 @@ export class DHT {
    */
   async provide (cid: CID): Promise<void> {
     if (cid == null || CID.asCID(cid) == null) {
-      throw new CodeError('invalid cid received', 'ERR_INVALID_CID')
+      throw new InvalidParametersError('invalid cid received')
     }
 
     const sh = await this.client.send({
@@ -139,7 +140,7 @@ export class DHT {
     await sh.unwrap().close()
 
     if (response.type !== Response.Type.OK) {
-      throw new CodeError(response.error?.msg ?? 'DHT provide failed', 'ERR_DHT_PROVIDE_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'DHT provide failed')
     }
   }
 
@@ -148,7 +149,7 @@ export class DHT {
    */
   async * findProviders (cid: CID, count: number = 1): AsyncIterable<PeerInfo> {
     if (cid == null || CID.asCID(cid) == null) {
-      throw new CodeError('invalid cid received', 'ERR_INVALID_CID')
+      throw new InvalidParametersError('invalid cid received')
     }
 
     const sh = await this.client.send({
@@ -165,7 +166,7 @@ export class DHT {
 
     if (response.type !== Response.Type.OK) {
       await sh.unwrap().close()
-      throw new CodeError(response.error?.msg ?? 'DHT find providers failed', 'ERR_DHT_FIND_PROVIDERS_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'DHT find providers failed')
     }
 
     while (true) {
@@ -178,15 +179,15 @@ export class DHT {
       }
 
       // Stream values
-      if (dhtResponse.type === DHTResponse.Type.VALUE && dhtResponse.peer != null && dhtResponse.peer?.addrs != null) {
+      if (dhtResponse.type === DHTResponse.Type.VALUE && dhtResponse.peer?.addrs != null) {
         yield {
-          id: peerIdFromBytes(dhtResponse.peer.id),
+          id: peerIdFromMultihash(Digest.decode(dhtResponse.peer.id)),
           multiaddrs: dhtResponse.peer.addrs.map((a) => multiaddr(a))
         }
       } else {
         // Unexpected message received
         await sh.unwrap().close()
-        throw new CodeError('unexpected message received', 'ERR_UNEXPECTED_MESSAGE_RECEIVED')
+        throw new ProtocolError('unexpected message received')
       }
     }
   }
@@ -196,7 +197,7 @@ export class DHT {
    */
   async * getClosestPeers (key: Uint8Array): AsyncIterable<PeerInfo> {
     if (!(key instanceof Uint8Array)) {
-      throw new CodeError('invalid key received', 'ERR_INVALID_KEY')
+      throw new InvalidParametersError('invalid key received')
     }
 
     const sh = await this.client.send({
@@ -212,7 +213,7 @@ export class DHT {
 
     if (response.type !== Response.Type.OK) {
       await sh.unwrap().close()
-      throw new CodeError(response.error?.msg ?? 'DHT find providers failed', 'ERR_DHT_FIND_PROVIDERS_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'DHT find providers failed')
     }
 
     while (true) {
@@ -226,7 +227,7 @@ export class DHT {
 
       // Stream values
       if (dhtResponse.type === DHTResponse.Type.VALUE && dhtResponse.value != null) {
-        const peerId = peerIdFromBytes(dhtResponse.value)
+        const peerId = peerIdFromMultihash(Digest.decode(dhtResponse.value))
 
         yield {
           id: peerId,
@@ -235,7 +236,7 @@ export class DHT {
       } else {
         // Unexpected message received
         await sh.unwrap().close()
-        throw new CodeError('unexpected message received', 'ERR_UNEXPECTED_MESSAGE_RECEIVED')
+        throw new InvalidMessageError('unexpected message received')
       }
     }
   }
@@ -245,14 +246,14 @@ export class DHT {
    */
   async getPublicKey (peerId: PeerId): Promise<Uint8Array | undefined> {
     if (!isPeerId(peerId)) {
-      throw new CodeError('invalid peer id received', 'ERR_INVALID_PEER_ID')
+      throw new InvalidParametersError('invalid peer id received')
     }
 
     const sh = await this.client.send({
       type: Request.Type.DHT,
       dht: {
         type: DHTRequest.Type.GET_PUBLIC_KEY,
-        peer: peerId.toBytes()
+        peer: peerId.toMultihash().bytes
       }
     })
 
@@ -261,11 +262,11 @@ export class DHT {
     await sh.unwrap().close()
 
     if (response.type !== Response.Type.OK) {
-      throw new CodeError(response.error?.msg ?? 'DHT get public key failed', 'ERR_DHT_GET_PUBLIC_KEY_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'DHT get public key failed')
     }
 
     if (response.dht == null) {
-      throw new CodeError('Invalid response', 'ERR_DHT_GET_PUBLIC_KEY_FAILED')
+      throw new InvalidMessageError('Invalid response')
     }
 
     return response.dht.value
diff --git a/node_modules/@libp2p/daemon-client/src/index.ts b/node_modules/@libp2p/daemon-client/src/index.ts
index d7b3e15..200a044 100644
--- a/node_modules/@libp2p/daemon-client/src/index.ts
+++ b/node_modules/@libp2p/daemon-client/src/index.ts
@@ -1,12 +1,13 @@
 import { type PSMessage, Request, Response, StreamInfo } from '@libp2p/daemon-protocol'
 import { StreamHandler } from '@libp2p/daemon-protocol/stream-handler'
 import { passThroughUpgrader } from '@libp2p/daemon-protocol/upgrader'
-import { CodeError, isPeerId } from '@libp2p/interface'
+import { InvalidParametersError, isPeerId } from '@libp2p/interface'
 import { defaultLogger, logger } from '@libp2p/logger'
-import { peerIdFromBytes } from '@libp2p/peer-id'
+import { peerIdFromMultihash } from '@libp2p/peer-id'
 import { tcp } from '@libp2p/tcp'
 import { multiaddr, isMultiaddr } from '@multiformats/multiaddr'
 import { pbStream, type ProtobufStream } from 'it-protobuf-stream'
+import * as Digest from 'multiformats/hashes/digest'
 import { DHT } from './dht.js'
 import { Pubsub } from './pubsub.js'
 import type { Stream, PeerId, MultiaddrConnection, PeerInfo, Transport } from '@libp2p/interface'
@@ -15,6 +16,13 @@ import type { CID } from 'multiformats/cid'
 
 const log = logger('libp2p:daemon-client')
 
+export class OperationFailedError extends Error {
+  constructor (message = 'Operation failed') {
+    super(message)
+    this.name = 'OperationFailedError'
+  }
+}
+
 class Client implements DaemonClient {
   private readonly multiaddr: Multiaddr
   public dht: DHT
@@ -66,23 +74,23 @@ class Client implements DaemonClient {
    */
   async connect (peerId: PeerId, addrs: Multiaddr[]): Promise<void> {
     if (!isPeerId(peerId)) {
-      throw new CodeError('invalid peer id received', 'ERR_INVALID_PEER_ID')
+      throw new InvalidParametersError('invalid peer id received')
     }
 
     if (!Array.isArray(addrs)) {
-      throw new CodeError('addrs received are not in an array', 'ERR_INVALID_ADDRS_TYPE')
+      throw new InvalidParametersError('addrs received are not in an array')
     }
 
     addrs.forEach((addr) => {
       if (!isMultiaddr(addr)) {
-        throw new CodeError('received an address that is not a multiaddr', 'ERR_NO_MULTIADDR_RECEIVED')
+        throw new InvalidParametersError('received an address that is not a multiaddr')
       }
     })
 
     const sh = await this.send({
       type: Request.Type.CONNECT,
       connect: {
-        peer: peerId.toBytes(),
+        peer: peerId.toMultihash().bytes,
         addrs: addrs.map((a) => a.bytes)
       }
     })
@@ -91,7 +99,7 @@ class Client implements DaemonClient {
 
     if (response.type !== Response.Type.OK) {
       const errResponse = response.error ?? { msg: 'unspecified' }
-      throw new CodeError(errResponse.msg ?? 'unspecified', 'ERR_CONNECT_FAILED')
+      throw new OperationFailedError(errResponse.msg ?? 'unspecified')
     }
 
     await sh.unwrap().close()
@@ -114,14 +122,14 @@ class Client implements DaemonClient {
     const response = await sh.read(Response)
 
     if (response.type !== Response.Type.OK) {
-      throw new CodeError(response.error?.msg ?? 'Identify failed', 'ERR_IDENTIFY_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'Identify failed')
     }
 
-    if (response.identify == null || response.identify.addrs == null) {
-      throw new CodeError('Invalid response', 'ERR_IDENTIFY_FAILED')
+    if (response.identify?.addrs == null) {
+      throw new OperationFailedError('Invalid response')
     }
 
-    const peerId = peerIdFromBytes(response.identify?.id)
+    const peerId = peerIdFromMultihash(Digest.decode(response.identify?.id))
     const addrs = response.identify.addrs.map((a) => multiaddr(a))
 
     await sh.unwrap().close()
@@ -140,12 +148,12 @@ class Client implements DaemonClient {
     const response = await sh.read(Response)
 
     if (response.type !== Response.Type.OK) {
-      throw new CodeError(response.error?.msg ?? 'List peers failed', 'ERR_LIST_PEERS_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'List peers failed')
     }
 
     await sh.unwrap().close()
 
-    return response.peers.map((peer) => peerIdFromBytes(peer.id))
+    return response.peers.map((peer) => peerIdFromMultihash(Digest.decode(peer.id)))
   }
 
   /**
@@ -153,17 +161,17 @@ class Client implements DaemonClient {
    */
   async openStream (peerId: PeerId, protocol: string): Promise<MultiaddrConnection> {
     if (!isPeerId(peerId)) {
-      throw new CodeError('invalid peer id received', 'ERR_INVALID_PEER_ID')
+      throw new InvalidParametersError('invalid peer id received')
     }
 
     if (typeof protocol !== 'string') {
-      throw new CodeError('invalid protocol received', 'ERR_INVALID_PROTOCOL')
+      throw new InvalidParametersError('invalid protocol received')
     }
 
     const sh = await this.send({
       type: Request.Type.STREAM_OPEN,
       streamOpen: {
-        peer: peerId.toBytes(),
+        peer: peerId.toMultihash().bytes,
         proto: [protocol]
       }
     })
@@ -172,7 +180,7 @@ class Client implements DaemonClient {
 
     if (response.type !== Response.Type.OK) {
       await sh.unwrap().close()
-      throw new CodeError(response.error?.msg ?? 'Open stream failed', 'ERR_OPEN_STREAM_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'Open stream failed')
     }
 
     return sh.unwrap()
@@ -183,7 +191,7 @@ class Client implements DaemonClient {
    */
   async registerStreamHandler (protocol: string, handler: StreamHandlerFunction): Promise<void> {
     if (typeof protocol !== 'string') {
-      throw new CodeError('invalid protocol received', 'ERR_INVALID_PROTOCOL')
+      throw new InvalidParametersError('invalid protocol received')
     }
 
     // open a tcp port, pipe any data from it to the handler function
@@ -199,18 +207,21 @@ class Client implements DaemonClient {
             const message = await sh.read()
 
             if (message == null) {
-              throw new CodeError('Could not read open stream response', 'ERR_OPEN_STREAM_FAILED')
+              throw new OperationFailedError('Could not read open stream response')
             }
 
             const response = StreamInfo.decode(message)
 
             if (response.proto !== protocol) {
-              throw new CodeError('Incorrect protocol', 'ERR_OPEN_STREAM_FAILED')
+              throw new OperationFailedError('Incorrect protocol')
             }
 
             // @ts-expect-error because we are using a passthrough upgrader, this is a MultiaddrConnection
             await handler(sh.rest())
           })
+          .catch(err => {
+            connection.abort(err)
+          })
           .finally(() => {
             connection.close()
               .catch(err => {
@@ -227,7 +238,7 @@ class Client implements DaemonClient {
     const address = listener.getAddrs()[0]
 
     if (address == null) {
-      throw new CodeError('Could not listen on port', 'ERR_REGISTER_STREAM_HANDLER_FAILED')
+      throw new OperationFailedError('Could not listen on port')
     }
 
     const sh = await this.send({
@@ -243,7 +254,7 @@ class Client implements DaemonClient {
     await sh.unwrap().close()
 
     if (response.type !== Response.Type.OK) {
-      throw new CodeError(response.error?.msg ?? 'Register stream handler failed', 'ERR_REGISTER_STREAM_HANDLER_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'Register stream handler failed')
     }
   }
 }
diff --git a/node_modules/@libp2p/daemon-client/src/pubsub.ts b/node_modules/@libp2p/daemon-client/src/pubsub.ts
index df5f96c..2685d7f 100644
--- a/node_modules/@libp2p/daemon-client/src/pubsub.ts
+++ b/node_modules/@libp2p/daemon-client/src/pubsub.ts
@@ -4,9 +4,10 @@ import {
   PSRequest,
   PSMessage
 } from '@libp2p/daemon-protocol'
-import { CodeError } from '@libp2p/interface'
-import { peerIdFromBytes } from '@libp2p/peer-id'
-import type { DaemonClient, Subscription } from './index.js'
+import { InvalidParametersError } from '@libp2p/interface'
+import { peerIdFromMultihash } from '@libp2p/peer-id'
+import * as Digest from 'multiformats/hashes/digest'
+import { OperationFailedError, type DaemonClient, type Subscription } from './index.js'
 import type { PeerId } from '@libp2p/interface'
 
 export class Pubsub {
@@ -34,11 +35,11 @@ export class Pubsub {
     await sh.unwrap().close()
 
     if (response.type !== Response.Type.OK) {
-      throw new CodeError(response.error?.msg ?? 'Pubsub get topics failed', 'ERR_PUBSUB_GET_TOPICS_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'Pubsub get topics failed')
     }
 
-    if (response.pubsub == null || response.pubsub.topics == null) {
-      throw new CodeError('Invalid response', 'ERR_PUBSUB_GET_TOPICS_FAILED')
+    if (response.pubsub?.topics == null) {
+      throw new OperationFailedError('Invalid response')
     }
 
     return response.pubsub.topics
@@ -49,11 +50,11 @@ export class Pubsub {
    */
   async publish (topic: string, data: Uint8Array): Promise<void> {
     if (typeof topic !== 'string') {
-      throw new CodeError('invalid topic received', 'ERR_INVALID_TOPIC')
+      throw new InvalidParametersError('invalid topic received')
     }
 
     if (!(data instanceof Uint8Array)) {
-      throw new CodeError('data received is not a Uint8Array', 'ERR_INVALID_DATA')
+      throw new InvalidParametersError('data received is not a Uint8Array')
     }
 
     const sh = await this.client.send({
@@ -70,7 +71,7 @@ export class Pubsub {
     await sh.unwrap().close()
 
     if (response.type !== Response.Type.OK) {
-      throw new CodeError(response.error?.msg ?? 'Pubsub publish failed', 'ERR_PUBSUB_PUBLISH_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'Pubsub publish failed')
     }
   }
 
@@ -79,7 +80,7 @@ export class Pubsub {
    */
   async subscribe (topic: string): Promise<Subscription> {
     if (typeof topic !== 'string') {
-      throw new CodeError('invalid topic received', 'ERR_INVALID_TOPIC')
+      throw new InvalidParametersError('invalid topic received')
     }
 
     const sh = await this.client.send({
@@ -93,7 +94,7 @@ export class Pubsub {
     const response = await sh.read(Response)
 
     if (response.type !== Response.Type.OK) {
-      throw new CodeError(response.error?.msg ?? 'Pubsub publish failed', 'ERR_PUBSUB_PUBLISH_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'Pubsub publish failed')
     }
 
     let subscribed = true
@@ -115,7 +116,7 @@ export class Pubsub {
 
   async getSubscribers (topic: string): Promise<PeerId[]> {
     if (typeof topic !== 'string') {
-      throw new CodeError('invalid topic received', 'ERR_INVALID_TOPIC')
+      throw new InvalidParametersError('invalid topic received')
     }
 
     const sh = await this.client.send({
@@ -131,13 +132,13 @@ export class Pubsub {
     await sh.unwrap().close()
 
     if (response.type !== Response.Type.OK) {
-      throw new CodeError(response.error?.msg ?? 'Pubsub get subscribers failed', 'ERR_PUBSUB_GET_SUBSCRIBERS_FAILED')
+      throw new OperationFailedError(response.error?.msg ?? 'Pubsub get subscribers failed')
     }
 
-    if (response.pubsub == null || response.pubsub.topics == null) {
-      throw new CodeError('Invalid response', 'ERR_PUBSUB_GET_SUBSCRIBERS_FAILED')
+    if (response.pubsub?.topics == null) {
+      throw new OperationFailedError('Invalid response')
     }
 
-    return response.pubsub.peerIDs.map(buf => peerIdFromBytes(buf))
+    return response.pubsub.peerIDs.map(buf => peerIdFromMultihash(Digest.decode(buf)))
   }
 }
