diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/index.min.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/index.min.js
index 5736a01..80d9713 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/dist/index.min.js
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/index.min.js
@@ -1,10 +1,10 @@
 (function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.ChainsafeLibp2PGossipsub = factory()}(typeof self !== 'undefined' ? self : this, function () {
-"use strict";var ChainsafeLibp2PGossipsub=(()=>{var Yl=Object.create;var mr=Object.defineProperty;var Xl=Object.getOwnPropertyDescriptor;var Jl=Object.getOwnPropertyNames;var Ql=Object.getPrototypeOf,eu=Object.prototype.hasOwnProperty;var $n=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports),ue=(s,e)=>{for(var t in e)mr(s,t,{get:e[t],enumerable:!0})},Oo=(s,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of Jl(e))!eu.call(s,n)&&n!==t&&mr(s,n,{get:()=>e[n],enumerable:!(r=Xl(e,n))||r.enumerable});return s};var jn=(s,e,t)=>(t=s!=null?Yl(Ql(s)):{},Oo(e||!s||!s.__esModule?mr(t,"default",{value:s,enumerable:!0}):t,s)),tu=s=>Oo(mr({},"__esModule",{value:!0}),s);var ma=$n((hm,ga)=>{"use strict";function pa(s,e){for(let t in e)Object.defineProperty(s,t,{value:e[t],enumerable:!0,configurable:!0});return s}function ph(s,e,t){if(!s||typeof s=="string")throw new TypeError("Please pass an Error to err-code");t||(t={}),typeof e=="object"&&(t=e,e=""),e&&(t.code=e);try{return pa(s,t)}catch{t.message=s.message,t.stack=s.stack;let n=function(){};return n.prototype=Object.create(Object.getPrototypeOf(s)),pa(new n,t)}}ga.exports=ph});var Ga=$n((I0,Ha)=>{"use strict";function Q(s,t){var t=t||{};this._capacity=t.capacity,this._head=0,this._tail=0,Array.isArray(s)?this._fromArray(s):(this._capacityMask=3,this._list=new Array(4))}Q.prototype.peekAt=function(e){var t=e;if(t===(t|0)){var r=this.size();if(!(t>=r||t<-r))return t<0&&(t+=r),t=this._head+t&this._capacityMask,this._list[t]}};Q.prototype.get=function(e){return this.peekAt(e)};Q.prototype.peek=function(){if(this._head!==this._tail)return this._list[this._head]};Q.prototype.peekFront=function(){return this.peek()};Q.prototype.peekBack=function(){return this.peekAt(-1)};Object.defineProperty(Q.prototype,"length",{get:function(){return this.size()}});Q.prototype.size=function(){return this._head===this._tail?0:this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};Q.prototype.unshift=function(e){if(arguments.length===0)return this.size();var t=this._list.length;return this._head=this._head-1+t&this._capacityMask,this._list[this._head]=e,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.pop(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};Q.prototype.shift=function(){var e=this._head;if(e!==this._tail){var t=this._list[e];return this._list[e]=void 0,this._head=e+1&this._capacityMask,e<2&&this._tail>1e4&&this._tail<=this._list.length>>>2&&this._shrinkArray(),t}};Q.prototype.push=function(e){if(arguments.length===0)return this.size();var t=this._tail;return this._list[t]=e,this._tail=t+1&this._capacityMask,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.shift(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};Q.prototype.pop=function(){var e=this._tail;if(e!==this._head){var t=this._list.length;this._tail=e-1+t&this._capacityMask;var r=this._list[this._tail];return this._list[this._tail]=void 0,this._head<2&&e>1e4&&e<=t>>>2&&this._shrinkArray(),r}};Q.prototype.removeOne=function(e){var t=e;if(t===(t|0)&&this._head!==this._tail){var r=this.size(),n=this._list.length;if(!(t>=r||t<-r)){t<0&&(t+=r),t=this._head+t&this._capacityMask;var i=this._list[t],o;if(e<r/2){for(o=e;o>0;o--)this._list[t]=this._list[t=t-1+n&this._capacityMask];this._list[t]=void 0,this._head=this._head+1+n&this._capacityMask}else{for(o=r-1-e;o>0;o--)this._list[t]=this._list[t=t+1+n&this._capacityMask];this._list[t]=void 0,this._tail=this._tail-1+n&this._capacityMask}return i}}};Q.prototype.remove=function(e,t){var r=e,n,i=t;if(r===(r|0)&&this._head!==this._tail){var o=this.size(),a=this._list.length;if(!(r>=o||r<-o||t<1)){if(r<0&&(r+=o),t===1||!t)return n=new Array(1),n[0]=this.removeOne(r),n;if(r===0&&r+t>=o)return n=this.toArray(),this.clear(),n;r+t>o&&(t=o-r);var c;for(n=new Array(t),c=0;c<t;c++)n[c]=this._list[this._head+r+c&this._capacityMask];if(r=this._head+r&this._capacityMask,e+t===o){for(this._tail=this._tail-t+a&this._capacityMask,c=t;c>0;c--)this._list[r=r+1+a&this._capacityMask]=void 0;return n}if(e===0){for(this._head=this._head+t+a&this._capacityMask,c=t-1;c>0;c--)this._list[r=r+1+a&this._capacityMask]=void 0;return n}if(r<o/2){for(this._head=this._head+e+t+a&this._capacityMask,c=e;c>0;c--)this.unshift(this._list[r=r-1+a&this._capacityMask]);for(r=this._head-1+a&this._capacityMask;i>0;)this._list[r=r-1+a&this._capacityMask]=void 0,i--;e<0&&(this._tail=r)}else{for(this._tail=r,r=r+t+a&this._capacityMask,c=o-(t+e);c>0;c--)this.push(this._list[r++]);for(r=this._tail;i>0;)this._list[r=r+1+a&this._capacityMask]=void 0,i--}return this._head<2&&this._tail>1e4&&this._tail<=a>>>2&&this._shrinkArray(),n}}};Q.prototype.splice=function(e,t){var r=e;if(r===(r|0)){var n=this.size();if(r<0&&(r+=n),!(r>n))if(arguments.length>2){var i,o,a,c=arguments.length,f=this._list.length,l=2;if(!n||r<n/2){for(o=new Array(r),i=0;i<r;i++)o[i]=this._list[this._head+i&this._capacityMask];for(t===0?(a=[],r>0&&(this._head=this._head+r+f&this._capacityMask)):(a=this.remove(r,t),this._head=this._head+r+f&this._capacityMask);c>l;)this.unshift(arguments[--c]);for(i=r;i>0;i--)this.unshift(o[i-1])}else{o=new Array(n-(r+t));var u=o.length;for(i=0;i<u;i++)o[i]=this._list[this._head+r+t+i&this._capacityMask];for(t===0?(a=[],r!=n&&(this._tail=this._head+r+f&this._capacityMask)):(a=this.remove(r,t),this._tail=this._tail-u+f&this._capacityMask);l<c;)this.push(arguments[l++]);for(i=0;i<u;i++)this.push(o[i])}return a}else return this.remove(r,t)}};Q.prototype.clear=function(){this._list=new Array(this._list.length),this._head=0,this._tail=0};Q.prototype.isEmpty=function(){return this._head===this._tail};Q.prototype.toArray=function(){return this._copyArray(!1)};Q.prototype._fromArray=function(e){var t=e.length,r=this._nextPowerOf2(t);this._list=new Array(r),this._capacityMask=r-1,this._tail=t;for(var n=0;n<t;n++)this._list[n]=e[n]};Q.prototype._copyArray=function(e,t){var r=this._list,n=r.length,i=this.length;if(t=t|i,t==i&&this._head<this._tail)return this._list.slice(this._head,this._tail);var o=new Array(t),a=0,c;if(e||this._head>this._tail){for(c=this._head;c<n;c++)o[a++]=r[c];for(c=0;c<this._tail;c++)o[a++]=r[c]}else for(c=this._head;c<this._tail;c++)o[a++]=r[c];return o};Q.prototype._growArray=function(){if(this._head!=0){var e=this._copyArray(!0,this._list.length<<1);this._tail=this._list.length,this._head=0,this._list=e}else this._tail=this._list.length,this._list.length<<=1;this._capacityMask=this._capacityMask<<1|1};Q.prototype._shrinkArray=function(){this._list.length>>>=1,this._capacityMask>>>=1};Q.prototype._nextPowerOf2=function(e){var t=Math.log(e)/Math.log(2),r=1<<t+1;return Math.max(r,4)};Ha.exports=Q});var yc=$n(Ds=>{"use strict";var Xf="[object ArrayBuffer]",yt=class s{static isArrayBuffer(e){return Object.prototype.toString.call(e)===Xf}static toArrayBuffer(e){return this.isArrayBuffer(e)?e:e.byteLength===e.buffer.byteLength||e.byteOffset===0&&e.byteLength===e.buffer.byteLength?e.buffer:this.toUint8Array(e.buffer).slice(e.byteOffset,e.byteOffset+e.byteLength).buffer}static toUint8Array(e){return this.toView(e,Uint8Array)}static toView(e,t){if(e.constructor===t)return e;if(this.isArrayBuffer(e))return new t(e);if(this.isArrayBufferView(e))return new t(e.buffer,e.byteOffset,e.byteLength);throw new TypeError("The provided value is not of type '(ArrayBuffer or ArrayBufferView)'")}static isBufferSource(e){return this.isArrayBufferView(e)||this.isArrayBuffer(e)}static isArrayBufferView(e){return ArrayBuffer.isView(e)||e&&this.isArrayBuffer(e.buffer)}static isEqual(e,t){let r=s.toUint8Array(e),n=s.toUint8Array(t);if(r.length!==n.byteLength)return!1;for(let i=0;i<r.length;i++)if(r[i]!==n[i])return!1;return!0}static concat(...e){let t;Array.isArray(e[0])&&!(e[1]instanceof Function)||Array.isArray(e[0])&&e[1]instanceof Function?t=e[0]:e[e.length-1]instanceof Function?t=e.slice(0,e.length-1):t=e;let r=0;for(let o of t)r+=o.byteLength;let n=new Uint8Array(r),i=0;for(let o of t){let a=this.toUint8Array(o);n.set(a,i),i+=a.length}return e[e.length-1]instanceof Function?this.toView(n,e[e.length-1]):n.buffer}},co="string",Jf=/^[0-9a-f]+$/i,Qf=/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/,ed=/^[a-zA-Z0-9-_]+$/,Jr=class{static fromString(e){let t=unescape(encodeURIComponent(e)),r=new Uint8Array(t.length);for(let n=0;n<t.length;n++)r[n]=t.charCodeAt(n);return r.buffer}static toString(e){let t=yt.toUint8Array(e),r="";for(let i=0;i<t.length;i++)r+=String.fromCharCode(t[i]);return decodeURIComponent(escape(r))}},He=class{static toString(e,t=!1){let r=yt.toArrayBuffer(e),n=new DataView(r),i="";for(let o=0;o<r.byteLength;o+=2){let a=n.getUint16(o,t);i+=String.fromCharCode(a)}return i}static fromString(e,t=!1){let r=new ArrayBuffer(e.length*2),n=new DataView(r);for(let i=0;i<e.length;i++)n.setUint16(i*2,e.charCodeAt(i),t);return r}},Qr=class s{static isHex(e){return typeof e===co&&Jf.test(e)}static isBase64(e){return typeof e===co&&Qf.test(e)}static isBase64Url(e){return typeof e===co&&ed.test(e)}static ToString(e,t="utf8"){let r=yt.toUint8Array(e);switch(t.toLowerCase()){case"utf8":return this.ToUtf8String(r);case"binary":return this.ToBinary(r);case"hex":return this.ToHex(r);case"base64":return this.ToBase64(r);case"base64url":return this.ToBase64Url(r);case"utf16le":return He.toString(r,!0);case"utf16":case"utf16be":return He.toString(r);default:throw new Error(`Unknown type of encoding '${t}'`)}}static FromString(e,t="utf8"){if(!e)return new ArrayBuffer(0);switch(t.toLowerCase()){case"utf8":return this.FromUtf8String(e);case"binary":return this.FromBinary(e);case"hex":return this.FromHex(e);case"base64":return this.FromBase64(e);case"base64url":return this.FromBase64Url(e);case"utf16le":return He.fromString(e,!0);case"utf16":case"utf16be":return He.fromString(e);default:throw new Error(`Unknown type of encoding '${t}'`)}}static ToBase64(e){let t=yt.toUint8Array(e);if(typeof btoa<"u"){let r=this.ToString(t,"binary");return btoa(r)}else return Buffer.from(t).toString("base64")}static FromBase64(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!s.isBase64(t))throw new TypeError("Argument 'base64Text' is not Base64 encoded");return typeof atob<"u"?this.FromBinary(atob(t)):new Uint8Array(Buffer.from(t,"base64")).buffer}static FromBase64Url(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!s.isBase64Url(t))throw new TypeError("Argument 'base64url' is not Base64Url encoded");return this.FromBase64(this.Base64Padding(t.replace(/\-/g,"+").replace(/\_/g,"/")))}static ToBase64Url(e){return this.ToBase64(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"")}static FromUtf8String(e,t=s.DEFAULT_UTF8_ENCODING){switch(t){case"ascii":return this.FromBinary(e);case"utf8":return Jr.fromString(e);case"utf16":case"utf16be":return He.fromString(e);case"utf16le":case"usc2":return He.fromString(e,!0);default:throw new Error(`Unknown type of encoding '${t}'`)}}static ToUtf8String(e,t=s.DEFAULT_UTF8_ENCODING){switch(t){case"ascii":return this.ToBinary(e);case"utf8":return Jr.toString(e);case"utf16":case"utf16be":return He.toString(e);case"utf16le":case"usc2":return He.toString(e,!0);default:throw new Error(`Unknown type of encoding '${t}'`)}}static FromBinary(e){let t=e.length,r=new Uint8Array(t);for(let n=0;n<t;n++)r[n]=e.charCodeAt(n);return r.buffer}static ToBinary(e){let t=yt.toUint8Array(e),r="";for(let n=0;n<t.length;n++)r+=String.fromCharCode(t[n]);return r}static ToHex(e){let t=yt.toUint8Array(e),r="",n=t.length;for(let i=0;i<n;i++){let o=t[i];o<16&&(r+="0"),r+=o.toString(16)}return r}static FromHex(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!s.isHex(t))throw new TypeError("Argument 'hexString' is not HEX encoded");t.length%2&&(t=`0${t}`);let r=new Uint8Array(t.length/2);for(let n=0;n<t.length;n=n+2){let i=t.slice(n,n+2);r[n/2]=parseInt(i,16)}return r.buffer}static ToUtf16String(e,t=!1){return He.toString(e,t)}static FromUtf16String(e,t=!1){return He.fromString(e,t)}static Base64Padding(e){let t=4-e.length%4;if(t<4)for(let r=0;r<t;r++)e+="=";return e}static formatString(e){return e?.replace(/[\n\r\t ]/g,"")||""}};Qr.DEFAULT_UTF8_ENCODING="utf8";function td(s,...e){let t=arguments[0];for(let r=1;r<arguments.length;r++){let n=arguments[r];for(let i in n)t[i]=n[i]}return t}function sd(...s){let e=s.map(n=>n.byteLength).reduce((n,i)=>n+i),t=new Uint8Array(e),r=0;return s.map(n=>new Uint8Array(n)).forEach(n=>{for(let i of n)t[r++]=i}),t.buffer}function rd(s,e){if(!(s&&e)||s.byteLength!==e.byteLength)return!1;let t=new Uint8Array(s),r=new Uint8Array(e);for(let n=0;n<s.byteLength;n++)if(t[n]!==r[n])return!1;return!0}Ds.BufferSourceConverter=yt;Ds.Convert=Qr;Ds.assign=td;Ds.combine=sd;Ds.isEqual=rd});var _p={};ue(_p,{GossipSub:()=>qn,gossipsub:()=>Ep,multicodec:()=>xp});var Fo=Symbol.for("@libp2p/peer-id");var qt="StrictSign",rs="StrictNoSign",Be;(function(s){s.Accept="accept",s.Ignore="ignore",s.Reject="reject"})(Be||(Be={}));var T=class extends Error{code;props;constructor(e,t,r){super(e),this.code=t,this.name=r?.name??"CodeError",this.props=r??{}}};var Ho=(s,...e)=>{try{[...e]}catch{}};var br=class extends EventTarget{#e=new Map;constructor(){super(),Ho(1/0,this)}listenerCount(e){let t=this.#e.get(e);return t==null?0:t.length}addEventListener(e,t,r){super.addEventListener(e,t,r);let n=this.#e.get(e);n==null&&(n=[],this.#e.set(e,n)),n.push({callback:t,once:(r!==!0&&r!==!1&&r?.once)??!1})}removeEventListener(e,t,r){super.removeEventListener(e.toString(),t??null,r);let n=this.#e.get(e);n!=null&&(n=n.filter(({callback:i})=>i!==t),this.#e.set(e,n))}dispatchEvent(e){let t=super.dispatchEvent(e),r=this.#e.get(e.type);return r==null||(r=r.filter(({once:n})=>!n),this.#e.set(e.type,r)),t}safeDispatchEvent(e,t={}){return this.dispatchEvent(new su(e,t))}},Zn=class extends Event{detail;constructor(e,t){super(e,t),this.detail=t?.detail}},su=globalThis.CustomEvent??Zn;var Go=Symbol.for("@libp2p/service-capabilities"),Ko=Symbol.for("@libp2p/service-dependencies");var ei={};ue(ei,{base58btc:()=>me,base58flickr:()=>cu});var eg=new Uint8Array(0);function zo(s,e){if(s===e)return!0;if(s.byteLength!==e.byteLength)return!1;for(let t=0;t<s.byteLength;t++)if(s[t]!==e[t])return!1;return!0}function at(s){if(s instanceof Uint8Array&&s.constructor.name==="Uint8Array")return s;if(s instanceof ArrayBuffer)return new Uint8Array(s);if(ArrayBuffer.isView(s))return new Uint8Array(s.buffer,s.byteOffset,s.byteLength);throw new Error("Unknown type, must be binary type")}function qo(s){return new TextEncoder().encode(s)}function Wo(s){return new TextDecoder().decode(s)}function ru(s,e){if(s.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),r=0;r<t.length;r++)t[r]=255;for(var n=0;n<s.length;n++){var i=s.charAt(n),o=i.charCodeAt(0);if(t[o]!==255)throw new TypeError(i+" is ambiguous");t[o]=n}var a=s.length,c=s.charAt(0),f=Math.log(a)/Math.log(256),l=Math.log(256)/Math.log(a);function u(g){if(g instanceof Uint8Array||(ArrayBuffer.isView(g)?g=new Uint8Array(g.buffer,g.byteOffset,g.byteLength):Array.isArray(g)&&(g=Uint8Array.from(g))),!(g instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(g.length===0)return"";for(var d=0,m=0,b=0,_=g.length;b!==_&&g[b]===0;)b++,d++;for(var w=(_-b)*l+1>>>0,A=new Uint8Array(w);b!==_;){for(var y=g[b],x=0,E=w-1;(y!==0||x<m)&&E!==-1;E--,x++)y+=256*A[E]>>>0,A[E]=y%a>>>0,y=y/a>>>0;if(y!==0)throw new Error("Non-zero carry");m=x,b++}for(var B=w-m;B!==w&&A[B]===0;)B++;for(var D=c.repeat(d);B<w;++B)D+=s.charAt(A[B]);return D}function h(g){if(typeof g!="string")throw new TypeError("Expected String");if(g.length===0)return new Uint8Array;var d=0;if(g[d]!==" "){for(var m=0,b=0;g[d]===c;)m++,d++;for(var _=(g.length-d)*f+1>>>0,w=new Uint8Array(_);g[d];){var A=t[g.charCodeAt(d)];if(A===255)return;for(var y=0,x=_-1;(A!==0||y<b)&&x!==-1;x--,y++)A+=a*w[x]>>>0,w[x]=A%256>>>0,A=A/256>>>0;if(A!==0)throw new Error("Non-zero carry");b=y,d++}if(g[d]!==" "){for(var E=_-b;E!==_&&w[E]===0;)E++;for(var B=new Uint8Array(m+(_-E)),D=m;E!==_;)B[D++]=w[E++];return B}}}function p(g){var d=h(g);if(d)return d;throw new Error(`Non-${e} character`)}return{encode:u,decodeUnsafe:h,decode:p}}var nu=ru,iu=nu,jo=iu;var Yn=class{name;prefix;baseEncode;constructor(e,t,r){this.name=e,this.prefix=t,this.baseEncode=r}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},Xn=class{name;prefix;baseDecode;prefixCodePoint;constructor(e,t,r){if(this.name=e,this.prefix=t,t.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=r}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return Zo(this,e)}},Jn=class{decoders;constructor(e){this.decoders=e}or(e){return Zo(this,e)}decode(e){let t=e[0],r=this.decoders[t];if(r!=null)return r.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function Zo(s,e){return new Jn({...s.decoders??{[s.prefix]:s},...e.decoders??{[e.prefix]:e}})}var Qn=class{name;prefix;baseEncode;baseDecode;encoder;decoder;constructor(e,t,r,n){this.name=e,this.prefix=t,this.baseEncode=r,this.baseDecode=n,this.encoder=new Yn(e,t,r),this.decoder=new Xn(e,t,n)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}};function ns({name:s,prefix:e,encode:t,decode:r}){return new Qn(s,e,t,r)}function St({name:s,prefix:e,alphabet:t}){let{encode:r,decode:n}=jo(t,s);return ns({prefix:e,name:s,encode:r,decode:i=>at(n(i))})}function ou(s,e,t,r){let n={};for(let l=0;l<e.length;++l)n[e[l]]=l;let i=s.length;for(;s[i-1]==="=";)--i;let o=new Uint8Array(i*t/8|0),a=0,c=0,f=0;for(let l=0;l<i;++l){let u=n[s[l]];if(u===void 0)throw new SyntaxError(`Non-${r} character`);c=c<<t|u,a+=t,a>=8&&(a-=8,o[f++]=255&c>>a)}if(a>=t||255&c<<8-a)throw new SyntaxError("Unexpected end of data");return o}function au(s,e,t){let r=e[e.length-1]==="=",n=(1<<t)-1,i="",o=0,a=0;for(let c=0;c<s.length;++c)for(a=a<<8|s[c],o+=8;o>t;)o-=t,i+=e[n&a>>o];if(o!==0&&(i+=e[n&a<<t-o]),r)for(;i.length*t&7;)i+="=";return i}function te({name:s,prefix:e,bitsPerChar:t,alphabet:r}){return ns({prefix:e,name:s,encode(n){return au(n,r,t)},decode(n){return ou(n,r,t,s)}})}var me=St({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),cu=St({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var ti={};ue(ti,{base10:()=>lu});var lu=St({prefix:"9",name:"base10",alphabet:"0123456789"});var si={};ue(si,{base16:()=>uu,base16upper:()=>hu});var uu=te({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),hu=te({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var ri={};ue(ri,{base2:()=>fu});var fu=te({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var ni={};ue(ni,{base256emoji:()=>bu});var Yo=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),du=Yo.reduce((s,e,t)=>(s[t]=e,s),[]),pu=Yo.reduce((s,e,t)=>(s[e.codePointAt(0)]=t,s),[]);function gu(s){return s.reduce((e,t)=>(e+=du[t],e),"")}function mu(s){let e=[];for(let t of s){let r=pu[t.codePointAt(0)];if(r===void 0)throw new Error(`Non-base256emoji character: ${t}`);e.push(r)}return new Uint8Array(e)}var bu=ns({prefix:"\u{1F680}",name:"base256emoji",encode:gu,decode:mu});var ii={};ue(ii,{base32:()=>Wt,base32hex:()=>xu,base32hexpad:()=>_u,base32hexpadupper:()=>Bu,base32hexupper:()=>Eu,base32pad:()=>wu,base32padupper:()=>vu,base32upper:()=>yu,base32z:()=>Su});var Wt=te({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),yu=te({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),wu=te({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),vu=te({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),xu=te({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),Eu=te({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),_u=te({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),Bu=te({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),Su=te({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var oi={};ue(oi,{base36:()=>Iu,base36upper:()=>Au});var Iu=St({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),Au=St({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var ci={};ue(ci,{base64:()=>ai,base64pad:()=>ku,base64url:()=>Tu,base64urlpad:()=>Pu});var ai=te({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),ku=te({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),Tu=te({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),Pu=te({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});var li={};ue(li,{base8:()=>Ru});var Ru=te({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var ui={};ue(ui,{identity:()=>Mu});var Mu=ns({prefix:"\0",name:"identity",encode:s=>Wo(s),decode:s=>qo(s)});var mg=new TextEncoder,bg=new TextDecoder;var fi={};ue(fi,{identity:()=>ls});var Cu=Qo,Xo=128,Lu=127,Uu=~Lu,Vu=Math.pow(2,31);function Qo(s,e,t){e=e||[],t=t||0;for(var r=t;s>=Vu;)e[t++]=s&255|Xo,s/=128;for(;s&Uu;)e[t++]=s&255|Xo,s>>>=7;return e[t]=s|0,Qo.bytes=t-r+1,e}var Ou=hi,Fu=128,Jo=127;function hi(s,r){var t=0,r=r||0,n=0,i=r,o,a=s.length;do{if(i>=a)throw hi.bytes=0,new RangeError("Could not decode varint");o=s[i++],t+=n<28?(o&Jo)<<n:(o&Jo)*Math.pow(2,n),n+=7}while(o>=Fu);return hi.bytes=i-r,t}var Hu=Math.pow(2,7),Gu=Math.pow(2,14),Ku=Math.pow(2,21),zu=Math.pow(2,28),qu=Math.pow(2,35),Wu=Math.pow(2,42),$u=Math.pow(2,49),ju=Math.pow(2,56),Zu=Math.pow(2,63),Yu=function(s){return s<Hu?1:s<Gu?2:s<Ku?3:s<zu?4:s<qu?5:s<Wu?6:s<$u?7:s<ju?8:s<Zu?9:10},Xu={encode:Cu,decode:Ou,encodingLength:Yu},Ju=Xu,Hs=Ju;function Gs(s,e=0){return[Hs.decode(s,e),Hs.decode.bytes]}function is(s,e,t=0){return Hs.encode(s,e,t),e}function os(s){return Hs.encodingLength(s)}function It(s,e){let t=e.byteLength,r=os(s),n=r+os(t),i=new Uint8Array(n+t);return is(s,i,0),is(t,i,r),i.set(e,n),new as(s,t,e,i)}function cs(s){let e=at(s),[t,r]=Gs(e),[n,i]=Gs(e.subarray(r)),o=e.subarray(r+i);if(o.byteLength!==n)throw new Error("Incorrect length");return new as(t,n,o,e)}function ea(s,e){if(s===e)return!0;{let t=e;return s.code===t.code&&s.size===t.size&&t.bytes instanceof Uint8Array&&zo(s.bytes,t.bytes)}}var as=class{code;size;digest;bytes;constructor(e,t,r,n){this.code=e,this.size=t,this.digest=r,this.bytes=n}};var ta=0,Qu="identity",sa=at;function eh(s){return It(ta,sa(s))}var ls={code:ta,name:Qu,encode:sa,digest:eh};var gi={};ue(gi,{sha256:()=>ce,sha512:()=>th});function pi({name:s,code:e,encode:t}){return new di(s,e,t)}var di=class{name;code;encode;constructor(e,t,r){this.name=e,this.code=t,this.encode=r}digest(e){if(e instanceof Uint8Array){let t=this.encode(e);return t instanceof Uint8Array?It(this.code,t):t.then(r=>It(this.code,r))}else throw Error("Unknown type, must be binary type")}};function na(s){return async e=>new Uint8Array(await crypto.subtle.digest(s,e))}var ce=pi({name:"sha2-256",code:18,encode:na("SHA-256")}),th=pi({name:"sha2-512",code:19,encode:na("SHA-512")});function ia(s,e){let{bytes:t,version:r}=s;switch(r){case 0:return rh(t,mi(s),e??me.encoder);default:return nh(t,mi(s),e??Wt.encoder)}}var oa=new WeakMap;function mi(s){let e=oa.get(s);if(e==null){let t=new Map;return oa.set(s,t),t}return e}var At=class s{code;version;multihash;bytes;"/";constructor(e,t,r,n){this.code=t,this.version=e,this.multihash=r,this.bytes=n,this["/"]=n}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{let{code:e,multihash:t}=this;if(e!==Ks)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==ih)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return s.createV0(t)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{let{code:e,digest:t}=this.multihash,r=It(e,t);return s.createV1(this.code,r)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return s.equals(this,e)}static equals(e,t){let r=t;return r!=null&&e.code===r.code&&e.version===r.version&&ea(e.multihash,r.multihash)}toString(e){return ia(this,e)}toJSON(){return{"/":ia(this)}}link(){return this}[Symbol.toStringTag]="CID";[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;let t=e;if(t instanceof s)return t;if(t["/"]!=null&&t["/"]===t.bytes||t.asCID===t){let{version:r,code:n,multihash:i,bytes:o}=t;return new s(r,n,i,o??aa(r,n,i.bytes))}else if(t[oh]===!0){let{version:r,multihash:n,code:i}=t,o=cs(n);return s.create(r,i,o)}else return null}static create(e,t,r){if(typeof t!="number")throw new Error("String codecs are no longer supported");if(!(r.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(t!==Ks)throw new Error(`Version 0 CID must use dag-pb (code: ${Ks}) block encoding`);return new s(e,t,r,r.bytes)}case 1:{let n=aa(e,t,r.bytes);return new s(e,t,r,n)}default:throw new Error("Invalid version")}}static createV0(e){return s.create(0,Ks,e)}static createV1(e,t){return s.create(1,e,t)}static decode(e){let[t,r]=s.decodeFirst(e);if(r.length!==0)throw new Error("Incorrect length");return t}static decodeFirst(e){let t=s.inspectBytes(e),r=t.size-t.multihashSize,n=at(e.subarray(r,r+t.multihashSize));if(n.byteLength!==t.multihashSize)throw new Error("Incorrect length");let i=n.subarray(t.multihashSize-t.digestSize),o=new as(t.multihashCode,t.digestSize,i,n);return[t.version===0?s.createV0(o):s.createV1(t.codec,o),e.subarray(t.size)]}static inspectBytes(e){let t=0,r=()=>{let[u,h]=Gs(e.subarray(t));return t+=h,u},n=r(),i=Ks;if(n===18?(n=0,t=0):i=r(),n!==0&&n!==1)throw new RangeError(`Invalid CID version ${n}`);let o=t,a=r(),c=r(),f=t+c,l=f-o;return{version:n,codec:i,multihashCode:a,digestSize:c,multihashSize:l,size:f}}static parse(e,t){let[r,n]=sh(e,t),i=s.decode(n);if(i.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return mi(i).set(r,e),i}};function sh(s,e){switch(s[0]){case"Q":{let t=e??me;return[me.prefix,t.decode(`${me.prefix}${s}`)]}case me.prefix:{let t=e??me;return[me.prefix,t.decode(s)]}case Wt.prefix:{let t=e??Wt;return[Wt.prefix,t.decode(s)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[s[0],e.decode(s)]}}}function rh(s,e,t){let{prefix:r}=t;if(r!==me.prefix)throw Error(`Cannot string encode V0 in ${t.name} encoding`);let n=e.get(r);if(n==null){let i=t.encode(s).slice(1);return e.set(r,i),i}else return n}function nh(s,e,t){let{prefix:r}=t,n=e.get(r);if(n==null){let i=t.encode(s);return e.set(r,i),i}else return n}var Ks=112,ih=18;function aa(s,e,t){let r=os(s),n=r+os(e),i=new Uint8Array(n+t.byteLength);return is(s,i,0),is(e,i,r),i.set(t,n),i}var oh=Symbol.for("@ipld/js-cid/CID");var kt={...ui,...ri,...li,...ti,...si,...ii,...oi,...ei,...ci,...ni},Vg={...gi,...fi};function be(s,e){if(s===e)return!0;if(s.byteLength!==e.byteLength)return!1;for(let t=0;t<s.byteLength;t++)if(s[t]!==e[t])return!1;return!0}var ah=Symbol.for("nodejs.util.inspect.custom"),ca=Object.values(kt).map(s=>s.decoder).reduce((s,e)=>s.or(e),kt.identity.decoder),la=114,ua=36,ha=37,zs=class{type;multihash;privateKey;publicKey;string;constructor(e){this.type=e.type,this.multihash=e.multihash,this.privateKey=e.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}[Fo]=!0;toString(){return this.string==null&&(this.string=me.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return At.createV1(la,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e==null)return!1;if(e instanceof Uint8Array)return be(this.multihash.bytes,e);if(typeof e=="string")return ct(e).equals(this);if(e?.multihash?.bytes!=null)return be(this.multihash.bytes,e.multihash.bytes);throw new Error("not valid Id")}[ah](){return`PeerId(${this.toString()})`}},qs=class extends zs{type="RSA";publicKey;constructor(e){super({...e,type:"RSA"}),this.publicKey=e.publicKey}},Ws=class extends zs{type="Ed25519";publicKey;constructor(e){super({...e,type:"Ed25519"}),this.publicKey=e.multihash.digest}},$s=class extends zs{type="secp256k1";publicKey;constructor(e){super({...e,type:"secp256k1"}),this.publicKey=e.multihash.digest}};function ct(s,e){if(e=e??ca,s.charAt(0)==="1"||s.charAt(0)==="Q"){let t=cs(me.decode(`z${s}`));return s.startsWith("12D")?new Ws({multihash:t}):s.startsWith("16U")?new $s({multihash:t}):new qs({multihash:t})}return js(ca.decode(s))}function js(s){try{let e=cs(s);if(e.code===ls.code){if(e.digest.length===ua)return new Ws({multihash:e});if(e.digest.length===ha)return new $s({multihash:e})}if(e.code===ce.code)return new qs({multihash:e})}catch{return ch(At.decode(s))}throw new Error("Supplied PeerID CID is invalid")}function ch(s){if(s==null||s.multihash==null||s.version==null||s.version===1&&s.code!==la)throw new Error("Supplied PeerID CID is invalid");let e=s.multihash;if(e.code===ce.code)return new qs({multihash:s.multihash});if(e.code===ls.code){if(e.digest.length===ua)return new Ws({multihash:s.multihash});if(e.digest.length===ha)return new $s({multihash:s.multihash})}throw new Error("Supplied PeerID CID is invalid")}function lt(s=0){return new Uint8Array(s)}function ye(s=0){return new Uint8Array(s)}var lh=Math.pow(2,7),uh=Math.pow(2,14),hh=Math.pow(2,21),bi=Math.pow(2,28),yi=Math.pow(2,35),wi=Math.pow(2,42),vi=Math.pow(2,49),q=128,we=127;function Se(s){if(s<lh)return 1;if(s<uh)return 2;if(s<hh)return 3;if(s<bi)return 4;if(s<yi)return 5;if(s<wi)return 6;if(s<vi)return 7;if(Number.MAX_SAFE_INTEGER!=null&&s>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function xi(s,e,t=0){switch(Se(s)){case 8:e[t++]=s&255|q,s/=128;case 7:e[t++]=s&255|q,s/=128;case 6:e[t++]=s&255|q,s/=128;case 5:e[t++]=s&255|q,s/=128;case 4:e[t++]=s&255|q,s>>>=7;case 3:e[t++]=s&255|q,s>>>=7;case 2:e[t++]=s&255|q,s>>>=7;case 1:{e[t++]=s&255,s>>>=7;break}default:throw new Error("unreachable")}return e}function fh(s,e,t=0){switch(Se(s)){case 8:e.set(t++,s&255|q),s/=128;case 7:e.set(t++,s&255|q),s/=128;case 6:e.set(t++,s&255|q),s/=128;case 5:e.set(t++,s&255|q),s/=128;case 4:e.set(t++,s&255|q),s>>>=7;case 3:e.set(t++,s&255|q),s>>>=7;case 2:e.set(t++,s&255|q),s>>>=7;case 1:{e.set(t++,s&255),s>>>=7;break}default:throw new Error("unreachable")}return e}function Ei(s,e){let t=s[e],r=0;if(r+=t&we,t<q||(t=s[e+1],r+=(t&we)<<7,t<q)||(t=s[e+2],r+=(t&we)<<14,t<q)||(t=s[e+3],r+=(t&we)<<21,t<q)||(t=s[e+4],r+=(t&we)*bi,t<q)||(t=s[e+5],r+=(t&we)*yi,t<q)||(t=s[e+6],r+=(t&we)*wi,t<q)||(t=s[e+7],r+=(t&we)*vi,t<q))return r;throw new RangeError("Could not decode varint")}function dh(s,e){let t=s.get(e),r=0;if(r+=t&we,t<q||(t=s.get(e+1),r+=(t&we)<<7,t<q)||(t=s.get(e+2),r+=(t&we)<<14,t<q)||(t=s.get(e+3),r+=(t&we)<<21,t<q)||(t=s.get(e+4),r+=(t&we)*bi,t<q)||(t=s.get(e+5),r+=(t&we)*yi,t<q)||(t=s.get(e+6),r+=(t&we)*wi,t<q)||(t=s.get(e+7),r+=(t&we)*vi,t<q))return r;throw new RangeError("Could not decode varint")}function _i(s,e,t=0){return e==null&&(e=ye(Se(s))),e instanceof Uint8Array?xi(s,e,t):fh(s,e,t)}function us(s,e=0){return s instanceof Uint8Array?Ei(s,e):dh(s,e)}function Ye(s,e){e==null&&(e=s.reduce((n,i)=>n+i.length,0));let t=ye(e),r=0;for(let n of s)t.set(n,r),r+=n.length;return t}var da=Symbol.for("@achingbrain/uint8arraylist");function fa(s,e){if(e==null||e<0)throw new RangeError("index is out of bounds");let t=0;for(let r of s){let n=t+r.byteLength;if(e<n)return{buf:r,index:e-t};t=n}throw new RangeError("index is out of bounds")}function wr(s){return!!s?.[da]}var hs=class s{bufs;length;[da]=!0;constructor(...e){this.bufs=[],this.length=0,e.length>0&&this.appendAll(e)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...e){this.appendAll(e)}appendAll(e){let t=0;for(let r of e)if(r instanceof Uint8Array)t+=r.byteLength,this.bufs.push(r);else if(wr(r))t+=r.byteLength,this.bufs.push(...r.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}prepend(...e){this.prependAll(e)}prependAll(e){let t=0;for(let r of e.reverse())if(r instanceof Uint8Array)t+=r.byteLength,this.bufs.unshift(r);else if(wr(r))t+=r.byteLength,this.bufs.unshift(...r.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}get(e){let t=fa(this.bufs,e);return t.buf[t.index]}set(e,t){let r=fa(this.bufs,e);r.buf[r.index]=t}write(e,t=0){if(e instanceof Uint8Array)for(let r=0;r<e.length;r++)this.set(t+r,e[r]);else if(wr(e))for(let r=0;r<e.length;r++)this.set(t+r,e.get(r));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(e){if(e=Math.trunc(e),!(Number.isNaN(e)||e<=0)){if(e===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(e>=this.bufs[0].byteLength)e-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(e),this.length-=e;break}}}slice(e,t){let{bufs:r,length:n}=this._subList(e,t);return Ye(r,n)}subarray(e,t){let{bufs:r,length:n}=this._subList(e,t);return r.length===1?r[0]:Ye(r,n)}sublist(e,t){let{bufs:r,length:n}=this._subList(e,t),i=new s;return i.length=n,i.bufs=[...r],i}_subList(e,t){if(e=e??0,t=t??this.length,e<0&&(e=this.length+e),t<0&&(t=this.length+t),e<0||t>this.length)throw new RangeError("index is out of bounds");if(e===t)return{bufs:[],length:0};if(e===0&&t===this.length)return{bufs:this.bufs,length:this.length};let r=[],n=0;for(let i=0;i<this.bufs.length;i++){let o=this.bufs[i],a=n,c=a+o.byteLength;if(n=c,e>=c)continue;let f=e>=a&&e<c,l=t>a&&t<=c;if(f&&l){if(e===a&&t===c){r.push(o);break}let u=e-a;r.push(o.subarray(u,u+(t-e)));break}if(f){if(e===0){r.push(o);continue}r.push(o.subarray(e-a));continue}if(l){if(t===c){r.push(o);break}r.push(o.subarray(0,t-a));break}r.push(o)}return{bufs:r,length:t-e}}indexOf(e,t=0){if(!wr(e)&&!(e instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let r=e instanceof Uint8Array?e:e.subarray();if(t=Number(t??0),isNaN(t)&&(t=0),t<0&&(t=this.length+t),t<0&&(t=0),e.length===0)return t>this.length?this.length:t;let n=r.byteLength;if(n===0)throw new TypeError("search must be at least 1 byte long");let i=256,o=new Int32Array(i);for(let u=0;u<i;u++)o[u]=-1;for(let u=0;u<n;u++)o[r[u]]=u;let a=o,c=this.byteLength-r.byteLength,f=r.byteLength-1,l;for(let u=t;u<=c;u+=l){l=0;for(let h=f;h>=0;h--){let p=this.get(u+h);if(r[h]!==p){l=Math.max(1,h-a[p]);break}}if(l===0)return u}return-1}getInt8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getInt8(0)}setInt8(e,t){let r=ye(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setInt8(0,t),this.write(r,e)}getInt16(e,t){let r=this.subarray(e,e+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt16(0,t)}setInt16(e,t,r){let n=lt(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt16(0,t,r),this.write(n,e)}getInt32(e,t){let r=this.subarray(e,e+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt32(0,t)}setInt32(e,t,r){let n=lt(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt32(0,t,r),this.write(n,e)}getBigInt64(e,t){let r=this.subarray(e,e+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigInt64(0,t)}setBigInt64(e,t,r){let n=lt(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigInt64(0,t,r),this.write(n,e)}getUint8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getUint8(0)}setUint8(e,t){let r=ye(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setUint8(0,t),this.write(r,e)}getUint16(e,t){let r=this.subarray(e,e+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint16(0,t)}setUint16(e,t,r){let n=lt(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint16(0,t,r),this.write(n,e)}getUint32(e,t){let r=this.subarray(e,e+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint32(0,t)}setUint32(e,t,r){let n=lt(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint32(0,t,r),this.write(n,e)}getBigUint64(e,t){let r=this.subarray(e,e+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigUint64(0,t)}setBigUint64(e,t,r){let n=lt(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigUint64(0,t,r),this.write(n,e)}getFloat32(e,t){let r=this.subarray(e,e+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat32(0,t)}setFloat32(e,t,r){let n=lt(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat32(0,t,r),this.write(n,e)}getFloat64(e,t){let r=this.subarray(e,e+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat64(0,t)}setFloat64(e,t,r){let n=lt(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat64(0,t,r),this.write(n,e)}equals(e){if(e==null||!(e instanceof s)||e.bufs.length!==this.bufs.length)return!1;for(let t=0;t<this.bufs.length;t++)if(!be(this.bufs[t],e.bufs[t]))return!1;return!0}static fromUint8Arrays(e,t){let r=new s;return r.bufs=e,t==null&&(t=e.reduce((n,i)=>n+i.byteLength,0)),r.length=t,r}};function vr(s){return s[Symbol.asyncIterator]!=null}var xr=s=>{let e=Se(s),t=ye(e);return _i(s,t),xr.bytes=e,t};xr.bytes=0;function fs(s,e){e=e??{};let t=e.lengthEncoder??xr;function*r(n){let i=t(n.byteLength);i instanceof Uint8Array?yield i:yield*i,n instanceof Uint8Array?yield n:yield*n}return vr(s)?async function*(){for await(let n of s)yield*r(n)}():function*(){for(let n of s)yield*r(n)}()}fs.single=(s,e)=>{e=e??{};let t=e.lengthEncoder??xr;return new hs(t(s.byteLength),s)};var ds=jn(ma(),1);var gh=8,mh=1024*1024*4,jt;(function(s){s[s.LENGTH=0]="LENGTH",s[s.DATA=1]="DATA"})(jt||(jt={}));var Si=s=>{let e=us(s);return Si.bytes=Se(e),e};Si.bytes=0;function Zs(s,e){let t=new hs,r=jt.LENGTH,n=-1,i=e?.lengthDecoder??Si,o=e?.maxLengthLength??gh,a=e?.maxDataLength??mh;function*c(){for(;t.byteLength>0;){if(r===jt.LENGTH)try{if(n=i(t),n<0)throw(0,ds.default)(new Error("invalid message length"),"ERR_INVALID_MSG_LENGTH");if(n>a)throw(0,ds.default)(new Error("message length too long"),"ERR_MSG_DATA_TOO_LONG");let f=i.bytes;t.consume(f),e?.onLength!=null&&e.onLength(n),r=jt.DATA}catch(f){if(f instanceof RangeError){if(t.byteLength>o)throw(0,ds.default)(new Error("message length length too long"),"ERR_MSG_LENGTH_TOO_LONG");break}throw f}if(r===jt.DATA){if(t.byteLength<n)break;let f=t.sublist(0,n);t.consume(n),e?.onData!=null&&e.onData(f),yield f,r=jt.LENGTH}}}return vr(s)?async function*(){for await(let f of s)t.append(f),yield*c();if(t.byteLength>0)throw(0,ds.default)(new Error("unexpected end of input"),"ERR_UNEXPECTED_EOF")}():function*(){for(let f of s)t.append(f),yield*c();if(t.byteLength>0)throw(0,ds.default)(new Error("unexpected end of input"),"ERR_UNEXPECTED_EOF")}()}Zs.fromReader=(s,e)=>{let t=1,r=async function*(){for(;;)try{let{done:i,value:o}=await s.next(t);if(i===!0)return;o!=null&&(yield o)}catch(i){if(i.code==="ERR_UNDER_READ")return{done:!0,value:null};throw i}finally{t=1}}();return Zs(r,{...e??{},onLength:i=>{t=i}})};function Er(){let s={};return s.promise=new Promise((e,t)=>{s.resolve=e,s.reject=t}),s}var _r=class{buffer;mask;top;btm;next;constructor(e){if(!(e>0)||e-1&e)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(e),this.mask=e-1,this.top=0,this.btm=0,this.next=null}push(e){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=e,this.top=this.top+1&this.mask,!0)}shift(){let e=this.buffer[this.btm];if(e!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,e}isEmpty(){return this.buffer[this.btm]===void 0}},ps=class{size;hwm;head;tail;constructor(e={}){this.hwm=e.splitLimit??16,this.head=new _r(this.hwm),this.tail=this.head,this.size=0}calculateSize(e){return e?.byteLength!=null?e.byteLength:1}push(e){if(e?.value!=null&&(this.size+=this.calculateSize(e.value)),!this.head.push(e)){let t=this.head;this.head=t.next=new _r(2*this.head.buffer.length),this.head.push(e)}}shift(){let e=this.tail.shift();if(e===void 0&&this.tail.next!=null){let t=this.tail.next;this.tail.next=null,this.tail=t,e=this.tail.shift()}return e?.value!=null&&(this.size-=this.calculateSize(e.value)),e}isEmpty(){return this.head.isEmpty()}};var Ii=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.code=t??"ABORT_ERR"}};function ut(s={}){return bh(t=>{let r=t.shift();if(r==null)return{done:!0};if(r.error!=null)throw r.error;return{done:r.done===!0,value:r.value}},s)}function bh(s,e){e=e??{};let t=e.onEnd,r=new ps,n,i,o,a=Er(),c=async()=>{try{return r.isEmpty()?o?{done:!0}:await new Promise((m,b)=>{i=_=>{i=null,r.push(_);try{m(s(r))}catch(w){b(w)}return n}}):s(r)}finally{r.isEmpty()&&queueMicrotask(()=>{a.resolve(),a=Er()})}},f=m=>i!=null?i(m):(r.push(m),n),l=m=>(r=new ps,i!=null?i({error:m}):(r.push({error:m}),n)),u=m=>{if(o)return n;if(e?.objectMode!==!0&&m?.byteLength==null)throw new Error("objectMode was not true but tried to push non-Uint8Array value");return f({done:!1,value:m})},h=m=>o?n:(o=!0,m!=null?l(m):f({done:!0})),p=()=>(r=new ps,h(),{done:!0}),g=m=>(h(m),{done:!0});if(n={[Symbol.asyncIterator](){return this},next:c,return:p,throw:g,push:u,end:h,get readableLength(){return r.size},onEmpty:async m=>{let b=m?.signal;if(b?.throwIfAborted(),r.isEmpty())return;let _,w;b!=null&&(_=new Promise((A,y)=>{w=()=>{y(new Ii)},b.addEventListener("abort",w)}));try{await Promise.race([a.promise,_])}finally{w!=null&&b!=null&&b?.removeEventListener("abort",w)}}},t==null)return n;let d=n;return n={[Symbol.asyncIterator](){return this},next(){return d.next()},throw(m){return d.throw(m),t!=null&&(t(m),t=void 0),{done:!0}},return(){return d.return(),t!=null&&(t(),t=void 0),{done:!0}},push:u,end(m){return d.end(m),t!=null&&(t(m),t=void 0),n},get readableLength(){return d.readableLength},onEmpty:m=>d.onEmpty(m)},n}function yh(s){return s[Symbol.asyncIterator]!=null}function wh(...s){let e=[];for(let t of s)yh(t)||e.push(t);return e.length===s.length?function*(){for(let t of e)yield*t}():async function*(){let t=ut({objectMode:!0});Promise.resolve().then(async()=>{try{await Promise.all(s.map(async r=>{for await(let n of r)t.push(n)})),t.end()}catch(r){t.end(r)}}),yield*t}()}var ba=wh;function gs(s,...e){if(s==null)throw new Error("Empty pipeline");if(Ai(s)){let r=s;s=()=>r.source}else if(wa(s)||ya(s)){let r=s;s=()=>r}let t=[s,...e];if(t.length>1&&Ai(t[t.length-1])&&(t[t.length-1]=t[t.length-1].sink),t.length>2)for(let r=1;r<t.length-1;r++)Ai(t[r])&&(t[r]=xh(t[r]));return vh(...t)}var vh=(...s)=>{let e;for(;s.length>0;)e=s.shift()(e);return e},ya=s=>s?.[Symbol.asyncIterator]!=null,wa=s=>s?.[Symbol.iterator]!=null,Ai=s=>s==null?!1:s.sink!=null&&s.source!=null,xh=s=>e=>{let t=s.sink(e);if(t?.then!=null){let r=ut({objectMode:!0});t.then(()=>{r.end()},o=>{r.end(o)});let n,i=s.source;if(ya(i))n=async function*(){yield*i,r.end()};else if(wa(i))n=function*(){yield*i,r.end()};else throw new Error("Unknown duplex source type - must be Iterable or AsyncIterable");return ba(r,n())}return s.source};var ki="/floodsub/1.0.0",Ti="/meshsub/1.0.0",Br="/meshsub/1.1.0";var va="ERR_TOPIC_VALIDATOR_REJECT",xa="ERR_TOPIC_VALIDATOR_IGNORE";var Ea={maxSubscriptions:1/0,maxMessages:1/0,maxIhaveMessageIDs:1/0,maxIwantMessageIDs:1/0,maxControlMessages:1/0,maxPeerInfos:1/0};var Pi=new Float32Array([-0]),Tt=new Uint8Array(Pi.buffer);function _a(s,e,t){Pi[0]=s,e[t]=Tt[0],e[t+1]=Tt[1],e[t+2]=Tt[2],e[t+3]=Tt[3]}function Ba(s,e){return Tt[0]=s[e],Tt[1]=s[e+1],Tt[2]=s[e+2],Tt[3]=s[e+3],Pi[0]}var Ri=new Float64Array([-0]),ve=new Uint8Array(Ri.buffer);function Sa(s,e,t){Ri[0]=s,e[t]=ve[0],e[t+1]=ve[1],e[t+2]=ve[2],e[t+3]=ve[3],e[t+4]=ve[4],e[t+5]=ve[5],e[t+6]=ve[6],e[t+7]=ve[7]}function Ia(s,e){return ve[0]=s[e],ve[1]=s[e+1],ve[2]=s[e+2],ve[3]=s[e+3],ve[4]=s[e+4],ve[5]=s[e+5],ve[6]=s[e+6],ve[7]=s[e+7],Ri[0]}var _h=BigInt(Number.MAX_SAFE_INTEGER),Bh=BigInt(Number.MIN_SAFE_INTEGER),Ce=class s{lo;hi;constructor(e,t){this.lo=e|0,this.hi=t|0}toNumber(e=!1){if(!e&&this.hi>>>31>0){let t=~this.lo+1>>>0,r=~this.hi>>>0;return t===0&&(r=r+1>>>0),-(t+r*4294967296)}return this.lo+this.hi*4294967296}toBigInt(e=!1){if(e)return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n);if(this.hi>>>31){let t=~this.lo+1>>>0,r=~this.hi>>>0;return t===0&&(r=r+1>>>0),-(BigInt(t)+(BigInt(r)<<32n))}return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n)}toString(e=!1){return this.toBigInt(e).toString()}zzEncode(){let e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this}zzDecode(){let e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this}length(){let e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,r=this.hi>>>24;return r===0?t===0?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:r<128?9:10}static fromBigInt(e){if(e===0n)return Zt;if(e<_h&&e>Bh)return this.fromNumber(Number(e));let t=e<0n;t&&(e=-e);let r=e>>32n,n=e-(r<<32n);return t&&(r=~r|0n,n=~n|0n,++n>Aa&&(n=0n,++r>Aa&&(r=0n))),new s(Number(n),Number(r))}static fromNumber(e){if(e===0)return Zt;let t=e<0;t&&(e=-e);let r=e>>>0,n=(e-r)/4294967296>>>0;return t&&(n=~n>>>0,r=~r>>>0,++r>4294967295&&(r=0,++n>4294967295&&(n=0))),new s(r,n)}static from(e){return typeof e=="number"?s.fromNumber(e):typeof e=="bigint"?s.fromBigInt(e):typeof e=="string"?s.fromBigInt(BigInt(e)):e.low!=null||e.high!=null?new s(e.low>>>0,e.high>>>0):Zt}},Zt=new Ce(0,0);Zt.toBigInt=function(){return 0n};Zt.zzEncode=Zt.zzDecode=function(){return this};Zt.length=function(){return 1};var Aa=4294967296n;function ka(s){let e=0,t=0;for(let r=0;r<s.length;++r)t=s.charCodeAt(r),t<128?e+=1:t<2048?e+=2:(t&64512)===55296&&(s.charCodeAt(r+1)&64512)===56320?(++r,e+=4):e+=3;return e}function Ta(s,e,t){if(t-e<1)return"";let n,i=[],o=0,a;for(;e<t;)a=s[e++],a<128?i[o++]=a:a>191&&a<224?i[o++]=(a&31)<<6|s[e++]&63:a>239&&a<365?(a=((a&7)<<18|(s[e++]&63)<<12|(s[e++]&63)<<6|s[e++]&63)-65536,i[o++]=55296+(a>>10),i[o++]=56320+(a&1023)):i[o++]=(a&15)<<12|(s[e++]&63)<<6|s[e++]&63,o>8191&&((n??(n=[])).push(String.fromCharCode.apply(String,i)),o=0);return n!=null?(o>0&&n.push(String.fromCharCode.apply(String,i.slice(0,o))),n.join("")):String.fromCharCode.apply(String,i.slice(0,o))}function Mi(s,e,t){let r=t,n,i;for(let o=0;o<s.length;++o)n=s.charCodeAt(o),n<128?e[t++]=n:n<2048?(e[t++]=n>>6|192,e[t++]=n&63|128):(n&64512)===55296&&((i=s.charCodeAt(o+1))&64512)===56320?(n=65536+((n&1023)<<10)+(i&1023),++o,e[t++]=n>>18|240,e[t++]=n>>12&63|128,e[t++]=n>>6&63|128,e[t++]=n&63|128):(e[t++]=n>>12|224,e[t++]=n>>6&63|128,e[t++]=n&63|128);return t-r}function Ke(s,e){return RangeError(`index out of range: ${s.pos} + ${e??1} > ${s.len}`)}function Sr(s,e){return(s[e-4]|s[e-3]<<8|s[e-2]<<16|s[e-1]<<24)>>>0}var Di=class{buf;pos;len;_slice=Uint8Array.prototype.subarray;constructor(e){this.buf=e,this.pos=0,this.len=e.length}uint32(){let e=4294967295;if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,Ke(this,10);return e}int32(){return this.uint32()|0}sint32(){let e=this.uint32();return e>>>1^-(e&1)|0}bool(){return this.uint32()!==0}fixed32(){if(this.pos+4>this.len)throw Ke(this,4);return Sr(this.buf,this.pos+=4)}sfixed32(){if(this.pos+4>this.len)throw Ke(this,4);return Sr(this.buf,this.pos+=4)|0}float(){if(this.pos+4>this.len)throw Ke(this,4);let e=Ba(this.buf,this.pos);return this.pos+=4,e}double(){if(this.pos+8>this.len)throw Ke(this,4);let e=Ia(this.buf,this.pos);return this.pos+=8,e}bytes(){let e=this.uint32(),t=this.pos,r=this.pos+e;if(r>this.len)throw Ke(this,e);return this.pos+=e,t===r?new Uint8Array(0):this.buf.subarray(t,r)}string(){let e=this.bytes();return Ta(e,0,e.length)}skip(e){if(typeof e=="number"){if(this.pos+e>this.len)throw Ke(this,e);this.pos+=e}else do if(this.pos>=this.len)throw Ke(this);while(this.buf[this.pos++]&128);return this}skipType(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(e=this.uint32()&7)!==4;)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error(`invalid wire type ${e} at offset ${this.pos}`)}return this}readLongVarint(){let e=new Ce(0,0),t=0;if(this.len-this.pos>4){for(;t<4;++t)if(e.lo=(e.lo|(this.buf[this.pos]&127)<<t*7)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(this.buf[this.pos]&127)<<28)>>>0,e.hi=(e.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return e;t=0}else{for(;t<3;++t){if(this.pos>=this.len)throw Ke(this);if(e.lo=(e.lo|(this.buf[this.pos]&127)<<t*7)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(this.buf[this.pos++]&127)<<t*7)>>>0,e}if(this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(this.buf[this.pos]&127)<<t*7+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw Ke(this);if(e.hi=(e.hi|(this.buf[this.pos]&127)<<t*7+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}readFixed64(){if(this.pos+8>this.len)throw Ke(this,8);let e=Sr(this.buf,this.pos+=4),t=Sr(this.buf,this.pos+=4);return new Ce(e,t)}int64(){return this.readLongVarint().toBigInt()}int64Number(){return this.readLongVarint().toNumber()}int64String(){return this.readLongVarint().toString()}uint64(){return this.readLongVarint().toBigInt(!0)}uint64Number(){let e=Ei(this.buf,this.pos);return this.pos+=Se(e),e}uint64String(){return this.readLongVarint().toString(!0)}sint64(){return this.readLongVarint().zzDecode().toBigInt()}sint64Number(){return this.readLongVarint().zzDecode().toNumber()}sint64String(){return this.readLongVarint().zzDecode().toString()}fixed64(){return this.readFixed64().toBigInt()}fixed64Number(){return this.readFixed64().toNumber()}fixed64String(){return this.readFixed64().toString()}sfixed64(){return this.readFixed64().toBigInt()}sfixed64Number(){return this.readFixed64().toNumber()}sfixed64String(){return this.readFixed64().toString()}};function Ni(s){return new Di(s instanceof Uint8Array?s:s.subarray())}function Re(s,e,t){let r=Ni(s);return e.decode(r,void 0,t)}function Ma(s,e,t,r){return{name:s,prefix:e,encoder:{name:s,prefix:e,encode:t},decoder:{decode:r}}}var Ra=Ma("utf8","u",s=>"u"+new TextDecoder("utf8").decode(s),s=>new TextEncoder().encode(s.substring(1))),Ci=Ma("ascii","a",s=>{let e="a";for(let t=0;t<s.length;t++)e+=String.fromCharCode(s[t]);return e},s=>{s=s.substring(1);let e=ye(s.length);for(let t=0;t<s.length;t++)e[t]=s.charCodeAt(t);return e}),Sh={utf8:Ra,"utf-8":Ra,hex:kt.base16,latin1:Ci,ascii:Ci,binary:Ci,...kt},Ir=Sh;function Z(s,e="utf8"){let t=Ir[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return t.decoder.decode(`${t.prefix}${s}`)}function Li(s){let e=s??8192,t=e>>>1,r,n=e;return function(o){if(o<1||o>t)return ye(o);n+o>e&&(r=ye(e),n=0);let a=r.subarray(n,n+=o);return n&7&&(n=(n|7)+1),a}}var Yt=class{fn;len;next;val;constructor(e,t,r){this.fn=e,this.len=t,this.next=void 0,this.val=r}};function Ui(){}var Oi=class{head;tail;len;next;constructor(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}},Ih=Li();function Ah(s){return globalThis.Buffer!=null?ye(s):Ih(s)}var Xs=class{len;head;tail;states;constructor(){this.len=0,this.head=new Yt(Ui,0,0),this.tail=this.head,this.states=null}_push(e,t,r){return this.tail=this.tail.next=new Yt(e,t,r),this.len+=t,this}uint32(e){return this.len+=(this.tail=this.tail.next=new Fi((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this}int32(e){return e<0?this._push(Ar,10,Ce.fromNumber(e)):this.uint32(e)}sint32(e){return this.uint32((e<<1^e>>31)>>>0)}uint64(e){let t=Ce.fromBigInt(e);return this._push(Ar,t.length(),t)}uint64Number(e){return this._push(xi,Se(e),e)}uint64String(e){return this.uint64(BigInt(e))}int64(e){return this.uint64(e)}int64Number(e){return this.uint64Number(e)}int64String(e){return this.uint64String(e)}sint64(e){let t=Ce.fromBigInt(e).zzEncode();return this._push(Ar,t.length(),t)}sint64Number(e){let t=Ce.fromNumber(e).zzEncode();return this._push(Ar,t.length(),t)}sint64String(e){return this.sint64(BigInt(e))}bool(e){return this._push(Vi,1,e?1:0)}fixed32(e){return this._push(Ys,4,e>>>0)}sfixed32(e){return this.fixed32(e)}fixed64(e){let t=Ce.fromBigInt(e);return this._push(Ys,4,t.lo)._push(Ys,4,t.hi)}fixed64Number(e){let t=Ce.fromNumber(e);return this._push(Ys,4,t.lo)._push(Ys,4,t.hi)}fixed64String(e){return this.fixed64(BigInt(e))}sfixed64(e){return this.fixed64(e)}sfixed64Number(e){return this.fixed64Number(e)}sfixed64String(e){return this.fixed64String(e)}float(e){return this._push(_a,4,e)}double(e){return this._push(Sa,8,e)}bytes(e){let t=e.length>>>0;return t===0?this._push(Vi,1,0):this.uint32(t)._push(Th,t,e)}string(e){let t=ka(e);return t!==0?this.uint32(t)._push(Mi,t,e):this._push(Vi,1,0)}fork(){return this.states=new Oi(this),this.head=this.tail=new Yt(Ui,0,0),this.len=0,this}reset(){return this.states!=null?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Yt(Ui,0,0),this.len=0),this}ldelim(){let e=this.head,t=this.tail,r=this.len;return this.reset().uint32(r),r!==0&&(this.tail.next=e.next,this.tail=t,this.len+=r),this}finish(){let e=this.head.next,t=Ah(this.len),r=0;for(;e!=null;)e.fn(e.val,t,r),r+=e.len,e=e.next;return t}};function Vi(s,e,t){e[t]=s&255}function kh(s,e,t){for(;s>127;)e[t++]=s&127|128,s>>>=7;e[t]=s}var Fi=class extends Yt{next;constructor(e,t){super(kh,e,t),this.next=void 0}};function Ar(s,e,t){for(;s.hi!==0;)e[t++]=s.lo&127|128,s.lo=(s.lo>>>7|s.hi<<25)>>>0,s.hi>>>=7;for(;s.lo>127;)e[t++]=s.lo&127|128,s.lo=s.lo>>>7;e[t++]=s.lo}function Ys(s,e,t){e[t]=s&255,e[t+1]=s>>>8&255,e[t+2]=s>>>16&255,e[t+3]=s>>>24}function Th(s,e,t){e.set(s,t)}globalThis.Buffer!=null&&(Xs.prototype.bytes=function(s){let e=s.length>>>0;return this.uint32(e),e>0&&this._push(Ph,e,s),this},Xs.prototype.string=function(s){let e=globalThis.Buffer.byteLength(s);return this.uint32(e),e>0&&this._push(Rh,e,s),this});function Ph(s,e,t){e.set(s,t)}function Rh(s,e,t){s.length<40?Mi(s,e,t):e.utf8Write!=null?e.utf8Write(s,t):e.set(Z(s),t)}function Hi(){return new Xs}function Me(s,e){let t=Hi();return e.encode(s,t,{lengthDelimited:!1}),t.finish()}var ms;(function(s){s[s.VARINT=0]="VARINT",s[s.BIT64=1]="BIT64",s[s.LENGTH_DELIMITED=2]="LENGTH_DELIMITED",s[s.START_GROUP=3]="START_GROUP",s[s.END_GROUP=4]="END_GROUP",s[s.BIT32=5]="BIT32"})(ms||(ms={}));function kr(s,e,t,r){return{name:s,type:e,encode:t,decode:r}}function Gi(s){function e(n){if(s[n.toString()]==null)throw new Error("Invalid enum value");return s[n]}let t=function(i,o){let a=e(i);o.int32(a)},r=function(i){let o=i.int32();return e(o)};return kr("enum",ms.VARINT,t,r)}function De(s,e){return kr("message",ms.LENGTH_DELIMITED,s,e)}var Oe=class extends Error{code;constructor(e,t,r){super(e,r),this.code=t}};var ht;(function(s){let e;(function(l){let u;l.codec=()=>(u==null&&(u=De((h,p,g={})=>{g.lengthDelimited!==!1&&p.fork(),h.subscribe!=null&&(p.uint32(8),p.bool(h.subscribe)),h.topic!=null&&(p.uint32(18),p.string(h.topic)),g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{d.subscribe=h.bool();break}case 2:{d.topic=h.string();break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>Me(h,l.codec()),l.decode=(h,p)=>Re(h,l.codec(),p)})(e=s.SubOpts||(s.SubOpts={}));let t;(function(l){let u;l.codec=()=>(u==null&&(u=De((h,p,g={})=>{g.lengthDelimited!==!1&&p.fork(),h.from!=null&&(p.uint32(10),p.bytes(h.from)),h.data!=null&&(p.uint32(18),p.bytes(h.data)),h.seqno!=null&&(p.uint32(26),p.bytes(h.seqno)),h.topic!=null&&h.topic!==""&&(p.uint32(34),p.string(h.topic)),h.signature!=null&&(p.uint32(42),p.bytes(h.signature)),h.key!=null&&(p.uint32(50),p.bytes(h.key)),g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={topic:""},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{d.from=h.bytes();break}case 2:{d.data=h.bytes();break}case 3:{d.seqno=h.bytes();break}case 4:{d.topic=h.string();break}case 5:{d.signature=h.bytes();break}case 6:{d.key=h.bytes();break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>Me(h,l.codec()),l.decode=(h,p)=>Re(h,l.codec(),p)})(t=s.Message||(s.Message={}));let r;(function(l){let u;l.codec=()=>(u==null&&(u=De((h,p,g={})=>{if(g.lengthDelimited!==!1&&p.fork(),h.ihave!=null)for(let d of h.ihave)p.uint32(10),s.ControlIHave.codec().encode(d,p);if(h.iwant!=null)for(let d of h.iwant)p.uint32(18),s.ControlIWant.codec().encode(d,p);if(h.graft!=null)for(let d of h.graft)p.uint32(26),s.ControlGraft.codec().encode(d,p);if(h.prune!=null)for(let d of h.prune)p.uint32(34),s.ControlPrune.codec().encode(d,p);g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={ihave:[],iwant:[],graft:[],prune:[]},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{if(g.limits?.ihave!=null&&d.ihave.length===g.limits.ihave)throw new Oe('decode error - map field "ihave" had too many elements',"ERR_MAX_LENGTH");d.ihave.push(s.ControlIHave.codec().decode(h,h.uint32()));break}case 2:{if(g.limits?.iwant!=null&&d.iwant.length===g.limits.iwant)throw new Oe('decode error - map field "iwant" had too many elements',"ERR_MAX_LENGTH");d.iwant.push(s.ControlIWant.codec().decode(h,h.uint32()));break}case 3:{if(g.limits?.graft!=null&&d.graft.length===g.limits.graft)throw new Oe('decode error - map field "graft" had too many elements',"ERR_MAX_LENGTH");d.graft.push(s.ControlGraft.codec().decode(h,h.uint32()));break}case 4:{if(g.limits?.prune!=null&&d.prune.length===g.limits.prune)throw new Oe('decode error - map field "prune" had too many elements',"ERR_MAX_LENGTH");d.prune.push(s.ControlPrune.codec().decode(h,h.uint32()));break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>Me(h,l.codec()),l.decode=(h,p)=>Re(h,l.codec(),p)})(r=s.ControlMessage||(s.ControlMessage={}));let n;(function(l){let u;l.codec=()=>(u==null&&(u=De((h,p,g={})=>{if(g.lengthDelimited!==!1&&p.fork(),h.topicID!=null&&(p.uint32(10),p.string(h.topicID)),h.messageIDs!=null)for(let d of h.messageIDs)p.uint32(18),p.bytes(d);g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={messageIDs:[]},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{d.topicID=h.string();break}case 2:{if(g.limits?.messageIDs!=null&&d.messageIDs.length===g.limits.messageIDs)throw new Oe('decode error - map field "messageIDs" had too many elements',"ERR_MAX_LENGTH");d.messageIDs.push(h.bytes());break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>Me(h,l.codec()),l.decode=(h,p)=>Re(h,l.codec(),p)})(n=s.ControlIHave||(s.ControlIHave={}));let i;(function(l){let u;l.codec=()=>(u==null&&(u=De((h,p,g={})=>{if(g.lengthDelimited!==!1&&p.fork(),h.messageIDs!=null)for(let d of h.messageIDs)p.uint32(10),p.bytes(d);g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={messageIDs:[]},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{if(g.limits?.messageIDs!=null&&d.messageIDs.length===g.limits.messageIDs)throw new Oe('decode error - map field "messageIDs" had too many elements',"ERR_MAX_LENGTH");d.messageIDs.push(h.bytes());break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>Me(h,l.codec()),l.decode=(h,p)=>Re(h,l.codec(),p)})(i=s.ControlIWant||(s.ControlIWant={}));let o;(function(l){let u;l.codec=()=>(u==null&&(u=De((h,p,g={})=>{g.lengthDelimited!==!1&&p.fork(),h.topicID!=null&&(p.uint32(10),p.string(h.topicID)),g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{d.topicID=h.string();break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>Me(h,l.codec()),l.decode=(h,p)=>Re(h,l.codec(),p)})(o=s.ControlGraft||(s.ControlGraft={}));let a;(function(l){let u;l.codec=()=>(u==null&&(u=De((h,p,g={})=>{if(g.lengthDelimited!==!1&&p.fork(),h.topicID!=null&&(p.uint32(10),p.string(h.topicID)),h.peers!=null)for(let d of h.peers)p.uint32(18),s.PeerInfo.codec().encode(d,p);h.backoff!=null&&(p.uint32(24),p.uint64Number(h.backoff)),g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={peers:[]},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{d.topicID=h.string();break}case 2:{if(g.limits?.peers!=null&&d.peers.length===g.limits.peers)throw new Oe('decode error - map field "peers" had too many elements',"ERR_MAX_LENGTH");d.peers.push(s.PeerInfo.codec().decode(h,h.uint32()));break}case 3:{d.backoff=h.uint64Number();break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>Me(h,l.codec()),l.decode=(h,p)=>Re(h,l.codec(),p)})(a=s.ControlPrune||(s.ControlPrune={}));let c;(function(l){let u;l.codec=()=>(u==null&&(u=De((h,p,g={})=>{g.lengthDelimited!==!1&&p.fork(),h.peerID!=null&&(p.uint32(10),p.bytes(h.peerID)),h.signedPeerRecord!=null&&(p.uint32(18),p.bytes(h.signedPeerRecord)),g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{d.peerID=h.bytes();break}case 2:{d.signedPeerRecord=h.bytes();break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>Me(h,l.codec()),l.decode=(h,p)=>Re(h,l.codec(),p)})(c=s.PeerInfo||(s.PeerInfo={}));let f;s.codec=()=>(f==null&&(f=De((l,u,h={})=>{if(h.lengthDelimited!==!1&&u.fork(),l.subscriptions!=null)for(let p of l.subscriptions)u.uint32(10),s.SubOpts.codec().encode(p,u);if(l.messages!=null)for(let p of l.messages)u.uint32(18),s.Message.codec().encode(p,u);l.control!=null&&(u.uint32(26),s.ControlMessage.codec().encode(l.control,u)),h.lengthDelimited!==!1&&u.ldelim()},(l,u,h={})=>{let p={subscriptions:[],messages:[]},g=u==null?l.len:l.pos+u;for(;l.pos<g;){let d=l.uint32();switch(d>>>3){case 1:{if(h.limits?.subscriptions!=null&&p.subscriptions.length===h.limits.subscriptions)throw new Oe('decode error - map field "subscriptions" had too many elements',"ERR_MAX_LENGTH");p.subscriptions.push(s.SubOpts.codec().decode(l,l.uint32()));break}case 2:{if(h.limits?.messages!=null&&p.messages.length===h.limits.messages)throw new Oe('decode error - map field "messages" had too many elements',"ERR_MAX_LENGTH");p.messages.push(s.Message.codec().decode(l,l.uint32()));break}case 3:{p.control=s.ControlMessage.codec().decode(l,l.uint32());break}default:{l.skipType(d&7);break}}}return p})),f),s.encode=l=>Me(l,s.codec()),s.decode=(l,u)=>Re(l,s.codec(),u)})(ht||(ht={}));var Tr=class{gossip;msgs=new Map;msgIdToStrFn;history=[];notValidatedCount=0;constructor(e,t,r){this.gossip=e,this.msgIdToStrFn=r;for(let n=0;n<t;n++)this.history[n]=[]}get size(){return this.msgs.size}put(e,t,r=!1){let{msgIdStr:n}=e;return this.msgs.has(n)?!1:(this.msgs.set(n,{message:t,validated:r,originatingPeers:new Set,iwantCounts:new Map}),this.history[0].push({...e,topic:t.topic}),r||this.notValidatedCount++,!0)}observeDuplicate(e,t){let r=this.msgs.get(e);r!=null&&!r.validated&&r.originatingPeers.add(t)}get(e){return this.msgs.get(this.msgIdToStrFn(e))?.message}getWithIWantCount(e,t){let r=this.msgs.get(e);if(r==null)return null;let n=(r.iwantCounts.get(t)??0)+1;return r.iwantCounts.set(t,n),{msg:r.message,count:n}}getGossipIDs(e){let t=new Map;for(let r=0;r<this.gossip;r++)this.history[r].forEach(n=>{if((this.msgs.get(n.msgIdStr)?.validated??!1)&&e.has(n.topic)){let o=t.get(n.topic);o==null&&(o=[],t.set(n.topic,o)),o.push(n.msgId)}});return t}validate(e){let t=this.msgs.get(e);if(t==null)return null;t.validated||this.notValidatedCount--;let{message:r,originatingPeers:n}=t;return t.validated=!0,t.originatingPeers=new Set,{message:r,originatingPeers:n}}shift(){this.history[this.history.length-1].forEach(t=>{let r=this.msgs.get(t.msgIdStr);r!=null&&(this.msgs.delete(t.msgIdStr),r.validated||this.notValidatedCount--)}),this.history.pop(),this.history.unshift([])}remove(e){let t=this.msgs.get(e);return t==null?null:(this.msgs.delete(e),t)}};var Da;(function(s){s.StrictSign="StrictSign",s.StrictNoSign="StrictNoSign"})(Da||(Da={}));var Pt;(function(s){s[s.Signing=0]="Signing",s[s.Anonymous=1]="Anonymous"})(Pt||(Pt={}));var Ie;(function(s){s.Error="error",s.Ignore="ignore",s.Reject="reject",s.Blacklisted="blacklisted"})(Ie||(Ie={}));var xe;(function(s){s.InvalidSignature="invalid_signature",s.InvalidSeqno="invalid_seqno",s.InvalidPeerId="invalid_peerid",s.SignaturePresent="signature_present",s.SeqnoPresent="seqno_present",s.FromPresent="from_present",s.TransformFailed="transform_failed"})(xe||(xe={}));var Ee;(function(s){s.duplicate="duplicate",s.invalid="invalid",s.valid="valid"})(Ee||(Ee={}));function Ki(s){switch(s){case Be.Ignore:return Ie.Ignore;case Be.Reject:return Ie.Reject;default:throw new Error("Unreachable")}}var Na;(function(s){s.forward="forward",s.publish="publish"})(Na||(Na={}));var Ae;(function(s){s.Fanout="fanout",s.Random="random",s.Subscribed="subscribed",s.Outbound="outbound",s.NotEnough="not_enough",s.Opportunistic="opportunistic"})(Ae||(Ae={}));var ze;(function(s){s.Dc="disconnected",s.BadScore="bad_score",s.Prune="prune",s.Excess="excess"})(ze||(ze={}));var ys;(function(s){s.GraftBackoff="graft_backoff",s.BrokenPromise="broken_promise",s.MessageDeficit="message_deficit",s.IPColocation="IP_colocation"})(ys||(ys={}));var ws;(function(s){s.LowScore="low_score",s.MaxIhave="max_ihave",s.MaxIasked="max_iasked"})(ws||(ws={}));var bs;(function(s){s.graylist="graylist",s.publish="publish",s.gossip="gossip",s.mesh="mesh"})(bs||(bs={}));function Ca(s,e,t){return{protocolsEnabled:s.gauge({name:"gossipsub_protocol",help:"Status of enabled protocols",labelNames:["protocol"]}),topicSubscriptionStatus:s.gauge({name:"gossipsub_topic_subscription_status",help:"Status of our subscription to this topic",labelNames:["topicStr"]}),topicPeersCount:s.gauge({name:"gossipsub_topic_peer_count",help:"Number of peers subscribed to each topic",labelNames:["topicStr"]}),meshPeerCounts:s.gauge({name:"gossipsub_mesh_peer_count",help:"Number of peers in our mesh",labelNames:["topicStr"]}),meshPeerInclusionEventsFanout:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_fanout_total",help:"Number of times we include peers in a topic mesh for fanout reasons",labelNames:["topic"]}),meshPeerInclusionEventsRandom:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_random_total",help:"Number of times we include peers in a topic mesh for random reasons",labelNames:["topic"]}),meshPeerInclusionEventsSubscribed:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_subscribed_total",help:"Number of times we include peers in a topic mesh for subscribed reasons",labelNames:["topic"]}),meshPeerInclusionEventsOutbound:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_outbound_total",help:"Number of times we include peers in a topic mesh for outbound reasons",labelNames:["topic"]}),meshPeerInclusionEventsNotEnough:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_not_enough_total",help:"Number of times we include peers in a topic mesh for not_enough reasons",labelNames:["topic"]}),meshPeerInclusionEventsOpportunistic:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_opportunistic_total",help:"Number of times we include peers in a topic mesh for opportunistic reasons",labelNames:["topic"]}),meshPeerInclusionEventsUnknown:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_unknown_total",help:"Number of times we include peers in a topic mesh for unknown reasons",labelNames:["topic"]}),meshPeerChurnEventsDisconnected:s.gauge({name:"gossipsub_peer_churn_events_disconnected_total",help:"Number of times we remove peers in a topic mesh for disconnected reasons",labelNames:["topic"]}),meshPeerChurnEventsBadScore:s.gauge({name:"gossipsub_peer_churn_events_bad_score_total",help:"Number of times we remove peers in a topic mesh for bad_score reasons",labelNames:["topic"]}),meshPeerChurnEventsPrune:s.gauge({name:"gossipsub_peer_churn_events_prune_total",help:"Number of times we remove peers in a topic mesh for prune reasons",labelNames:["topic"]}),meshPeerChurnEventsExcess:s.gauge({name:"gossipsub_peer_churn_events_excess_total",help:"Number of times we remove peers in a topic mesh for excess reasons",labelNames:["topic"]}),meshPeerChurnEventsUnknown:s.gauge({name:"gossipsub_peer_churn_events_unknown_total",help:"Number of times we remove peers in a topic mesh for unknown reasons",labelNames:["topic"]}),peersPerProtocol:s.gauge({name:"gossipsub_peers_per_protocol_count",help:"Peers connected for each topic",labelNames:["protocol"]}),heartbeatDuration:s.histogram({name:"gossipsub_heartbeat_duration_seconds",help:"The time it takes to complete one iteration of the heartbeat",buckets:[.01,.1,1]}),heartbeatSkipped:s.gauge({name:"gossipsub_heartbeat_skipped",help:"Heartbeat run took longer than heartbeat interval so next is skipped"}),acceptedMessagesTotal:s.gauge({name:"gossipsub_accepted_messages_total",help:"Total accepted messages for each topic",labelNames:["topic"]}),ignoredMessagesTotal:s.gauge({name:"gossipsub_ignored_messages_total",help:"Total ignored messages for each topic",labelNames:["topic"]}),rejectedMessagesTotal:s.gauge({name:"gossipsub_rejected_messages_total",help:"Total rejected messages for each topic",labelNames:["topic"]}),unknownValidationResultsTotal:s.gauge({name:"gossipsub_unknown_validation_results_total",help:"Total unknown validation results for each topic",labelNames:["topic"]}),asyncValidationMcacheHit:s.gauge({name:"gossipsub_async_validation_mcache_hit_total",help:"Async validation result reported by the user layer",labelNames:["hit"]}),asyncValidationDelayFromFirstSeenSec:s.histogram({name:"gossipsub_async_validation_delay_from_first_seen",help:"Async validation report delay from first seen in second",buckets:[.01,.03,.1,.3,1,3,10]}),asyncValidationUnknownFirstSeen:s.gauge({name:"gossipsub_async_validation_unknown_first_seen_count_total",help:"Async validation report unknown first seen value for message"}),peerReadStreamError:s.gauge({name:"gossipsub_peer_read_stream_err_count_total",help:"Peer read stream error"}),rpcRecvBytes:s.gauge({name:"gossipsub_rpc_recv_bytes_total",help:"RPC recv"}),rpcRecvCount:s.gauge({name:"gossipsub_rpc_recv_count_total",help:"RPC recv"}),rpcRecvSubscription:s.gauge({name:"gossipsub_rpc_recv_subscription_total",help:"RPC recv"}),rpcRecvMessage:s.gauge({name:"gossipsub_rpc_recv_message_total",help:"RPC recv"}),rpcRecvControl:s.gauge({name:"gossipsub_rpc_recv_control_total",help:"RPC recv"}),rpcRecvIHave:s.gauge({name:"gossipsub_rpc_recv_ihave_total",help:"RPC recv"}),rpcRecvIWant:s.gauge({name:"gossipsub_rpc_recv_iwant_total",help:"RPC recv"}),rpcRecvGraft:s.gauge({name:"gossipsub_rpc_recv_graft_total",help:"RPC recv"}),rpcRecvPrune:s.gauge({name:"gossipsub_rpc_recv_prune_total",help:"RPC recv"}),rpcDataError:s.gauge({name:"gossipsub_rpc_data_err_count_total",help:"RPC data error"}),rpcRecvError:s.gauge({name:"gossipsub_rpc_recv_err_count_total",help:"RPC recv error"}),rpcRecvNotAccepted:s.gauge({name:"gossipsub_rpc_rcv_not_accepted_total",help:"Total count of RPC dropped because acceptFrom() == false"}),rpcSentBytes:s.gauge({name:"gossipsub_rpc_sent_bytes_total",help:"RPC sent"}),rpcSentCount:s.gauge({name:"gossipsub_rpc_sent_count_total",help:"RPC sent"}),rpcSentSubscription:s.gauge({name:"gossipsub_rpc_sent_subscription_total",help:"RPC sent"}),rpcSentMessage:s.gauge({name:"gossipsub_rpc_sent_message_total",help:"RPC sent"}),rpcSentControl:s.gauge({name:"gossipsub_rpc_sent_control_total",help:"RPC sent"}),rpcSentIHave:s.gauge({name:"gossipsub_rpc_sent_ihave_total",help:"RPC sent"}),rpcSentIWant:s.gauge({name:"gossipsub_rpc_sent_iwant_total",help:"RPC sent"}),rpcSentGraft:s.gauge({name:"gossipsub_rpc_sent_graft_total",help:"RPC sent"}),rpcSentPrune:s.gauge({name:"gossipsub_rpc_sent_prune_total",help:"RPC sent"}),msgPublishCount:s.gauge({name:"gossipsub_msg_publish_count_total",help:"Total count of msg published by topic",labelNames:["topic"]}),msgPublishPeersByTopic:s.gauge({name:"gossipsub_msg_publish_peers_total",help:"Total count of peers that we publish a msg to",labelNames:["topic"]}),directPeersPublishedTotal:s.gauge({name:"gossipsub_direct_peers_published_total",help:"Total direct peers that we publish a msg to",labelNames:["topic"]}),floodsubPeersPublishedTotal:s.gauge({name:"gossipsub_floodsub_peers_published_total",help:"Total floodsub peers that we publish a msg to",labelNames:["topic"]}),meshPeersPublishedTotal:s.gauge({name:"gossipsub_mesh_peers_published_total",help:"Total mesh peers that we publish a msg to",labelNames:["topic"]}),fanoutPeersPublishedTotal:s.gauge({name:"gossipsub_fanout_peers_published_total",help:"Total fanout peers that we publish a msg to",labelNames:["topic"]}),msgPublishBytes:s.gauge({name:"gossipsub_msg_publish_bytes_total",help:"Total count of msg publish data.length bytes",labelNames:["topic"]}),msgPublishTime:s.histogram({name:"gossipsub_msg_publish_seconds",help:"Total time in seconds to publish a message",buckets:[.001,.002,.005,.01,.1,.5,1],labelNames:["topic"]}),msgForwardCount:s.gauge({name:"gossipsub_msg_forward_count_total",help:"Total count of msg forwarded by topic",labelNames:["topic"]}),msgForwardPeers:s.gauge({name:"gossipsub_msg_forward_peers_total",help:"Total count of peers that we forward a msg to",labelNames:["topic"]}),msgReceivedPreValidation:s.gauge({name:"gossipsub_msg_received_prevalidation_total",help:"Total count of recv msgs before any validation",labelNames:["topic"]}),msgReceivedError:s.gauge({name:"gossipsub_msg_received_error_total",help:"Total count of recv msgs error",labelNames:["topic"]}),prevalidationInvalidTotal:s.gauge({name:"gossipsub_pre_validation_invalid_total",help:"Total count of invalid messages received",labelNames:["topic"]}),prevalidationValidTotal:s.gauge({name:"gossipsub_pre_validation_valid_total",help:"Total count of valid messages received",labelNames:["topic"]}),prevalidationDuplicateTotal:s.gauge({name:"gossipsub_pre_validation_duplicate_total",help:"Total count of duplicate messages received",labelNames:["topic"]}),prevalidationUnknownTotal:s.gauge({name:"gossipsub_pre_validation_unknown_status_total",help:"Total count of unknown_status messages received",labelNames:["topic"]}),msgReceivedInvalid:s.gauge({name:"gossipsub_msg_received_invalid_total",help:"Tracks specific reason of invalid",labelNames:["error"]}),msgReceivedInvalidByTopic:s.gauge({name:"gossipsub_msg_received_invalid_by_topic_total",help:"Tracks specific invalid message by topic",labelNames:["topic"]}),duplicateMsgDeliveryDelay:s.histogram({name:"gossisub_duplicate_msg_delivery_delay_seconds",help:"Time since the 1st duplicated message validated",labelNames:["topic"],buckets:[.25*t.maxMeshMessageDeliveriesWindowSec,.5*t.maxMeshMessageDeliveriesWindowSec,Number(t.maxMeshMessageDeliveriesWindowSec),2*t.maxMeshMessageDeliveriesWindowSec,4*t.maxMeshMessageDeliveriesWindowSec]}),duplicateMsgLateDelivery:s.gauge({name:"gossisub_duplicate_msg_late_delivery_total",help:"Total count of late duplicate message delivery by topic, which triggers P3 penalty",labelNames:["topic"]}),duplicateMsgIgnored:s.gauge({name:"gossisub_ignored_published_duplicate_msgs_total",help:"Total count of published duplicate message ignored by topic",labelNames:["topic"]}),scoreFnCalls:s.gauge({name:"gossipsub_score_fn_calls_total",help:"Total times score() is called"}),scoreFnRuns:s.gauge({name:"gossipsub_score_fn_runs_total",help:"Total times score() call actually computed computeScore(), no cache"}),scoreCachedDelta:s.histogram({name:"gossipsub_score_cache_delta",help:"Delta of score between cached values that expired",buckets:[10,100,1e3]}),peersByScoreThreshold:s.gauge({name:"gossipsub_peers_by_score_threshold_count",help:"Current count of peers by score threshold",labelNames:["threshold"]}),score:s.avgMinMax({name:"gossipsub_score",help:"Avg min max of gossip scores"}),scoreWeights:s.avgMinMax({name:"gossipsub_score_weights",help:"Separate score weights",labelNames:["topic","p"]}),scorePerMesh:s.avgMinMax({name:"gossipsub_score_per_mesh",help:"Histogram of the scores for each mesh topic",labelNames:["topic"]}),scoringPenalties:s.gauge({name:"gossipsub_scoring_penalties_total",help:"A counter of the kind of penalties being applied to peers",labelNames:["penalty"]}),behaviourPenalty:s.histogram({name:"gossipsub_peer_stat_behaviour_penalty",help:"Current peer stat behaviour_penalty at each scrape",buckets:[.25*t.behaviourPenaltyThreshold,.5*t.behaviourPenaltyThreshold,Number(t.behaviourPenaltyThreshold),2*t.behaviourPenaltyThreshold,4*t.behaviourPenaltyThreshold]}),ihaveRcvIgnored:s.gauge({name:"gossipsub_ihave_rcv_ignored_total",help:"Total received IHAVE messages that we ignore for some reason",labelNames:["reason"]}),ihaveRcvMsgids:s.gauge({name:"gossipsub_ihave_rcv_msgids_total",help:"Total received IHAVE messages by topic",labelNames:["topic"]}),ihaveRcvNotSeenMsgids:s.gauge({name:"gossipsub_ihave_rcv_not_seen_msgids_total",help:"Total messages per topic we do not have, not actual requests",labelNames:["topic"]}),iwantRcvMsgids:s.gauge({name:"gossipsub_iwant_rcv_msgids_total",help:"Total received IWANT messages by topic",labelNames:["topic"]}),iwantRcvDonthaveMsgids:s.gauge({name:"gossipsub_iwant_rcv_dont_have_msgids_total",help:"Total requested messageIDs that we do not have"}),iwantPromiseStarted:s.gauge({name:"gossipsub_iwant_promise_sent_total",help:"Total count of started IWANT promises"}),iwantPromiseResolved:s.gauge({name:"gossipsub_iwant_promise_resolved_total",help:"Total count of resolved IWANT promises"}),iwantPromiseResolvedFromDuplicate:s.gauge({name:"gossipsub_iwant_promise_resolved_from_duplicate_total",help:"Total count of resolved IWANT promises from duplicate messages"}),iwantPromiseResolvedPeers:s.gauge({name:"gossipsub_iwant_promise_resolved_peers",help:"Total count of peers we have asked IWANT promises that are resolved"}),iwantPromiseBroken:s.gauge({name:"gossipsub_iwant_promise_broken",help:"Total count of broken IWANT promises"}),iwantMessagePruned:s.gauge({name:"gossipsub_iwant_message_pruned",help:"Total count of pruned IWANT messages"}),iwantPromiseDeliveryTime:s.histogram({name:"gossipsub_iwant_promise_delivery_seconds",help:"Histogram of delivery time of resolved IWANT promises",buckets:[.5*t.gossipPromiseExpireSec,Number(t.gossipPromiseExpireSec),2*t.gossipPromiseExpireSec,4*t.gossipPromiseExpireSec]}),iwantPromiseUntracked:s.gauge({name:"gossip_iwant_promise_untracked",help:"Total count of untracked IWANT promise"}),connectedPeersBackoffSec:s.histogram({name:"gossipsub_connected_peers_backoff_seconds",help:"Backoff time in seconds",buckets:[1,2,4,10,20,60,120]}),cacheSize:s.gauge({name:"gossipsub_cache_size",help:"Unbounded cache sizes",labelNames:["cache"]}),mcacheSize:s.gauge({name:"gossipsub_mcache_size",help:"Current mcache msg count"}),mcacheNotValidatedCount:s.gauge({name:"gossipsub_mcache_not_validated_count",help:"Current mcache msg count not validated"}),fastMsgIdCacheCollision:s.gauge({name:"gossipsub_fastmsgid_cache_collision_total",help:"Total count of key collisions on fastmsgid cache put"}),newConnectionCount:s.gauge({name:"gossipsub_new_connection_total",help:"Total new connection by status",labelNames:["status"]}),topicStrToLabel:e,toTopic(r){return this.topicStrToLabel.get(r)??r},onJoin(r){this.topicSubscriptionStatus.set({topicStr:r},1),this.meshPeerCounts.set({topicStr:r},0)},onLeave(r){this.topicSubscriptionStatus.set({topicStr:r},0),this.meshPeerCounts.set({topicStr:r},0)},onAddToMesh(r,n,i){let o=this.toTopic(r);switch(n){case Ae.Fanout:this.meshPeerInclusionEventsFanout.inc({topic:o},i);break;case Ae.Random:this.meshPeerInclusionEventsRandom.inc({topic:o},i);break;case Ae.Subscribed:this.meshPeerInclusionEventsSubscribed.inc({topic:o},i);break;case Ae.Outbound:this.meshPeerInclusionEventsOutbound.inc({topic:o},i);break;case Ae.NotEnough:this.meshPeerInclusionEventsNotEnough.inc({topic:o},i);break;case Ae.Opportunistic:this.meshPeerInclusionEventsOpportunistic.inc({topic:o},i);break;default:this.meshPeerInclusionEventsUnknown.inc({topic:o},i);break}},onRemoveFromMesh(r,n,i){let o=this.toTopic(r);switch(n){case ze.Dc:this.meshPeerChurnEventsDisconnected.inc({topic:o},i);break;case ze.BadScore:this.meshPeerChurnEventsBadScore.inc({topic:o},i);break;case ze.Prune:this.meshPeerChurnEventsPrune.inc({topic:o},i);break;case ze.Excess:this.meshPeerChurnEventsExcess.inc({topic:o},i);break;default:this.meshPeerChurnEventsUnknown.inc({topic:o},i);break}},onReportValidation(r,n,i){if(this.asyncValidationMcacheHit.inc({hit:r!=null?"hit":"miss"}),r!=null){let o=this.toTopic(r.message.topic);switch(n){case Be.Accept:this.acceptedMessagesTotal.inc({topic:o});break;case Be.Ignore:this.ignoredMessagesTotal.inc({topic:o});break;case Be.Reject:this.rejectedMessagesTotal.inc({topic:o});break;default:this.unknownValidationResultsTotal.inc({topic:o});break}}i!=null?this.asyncValidationDelayFromFirstSeenSec.observe((Date.now()-i)/1e3):this.asyncValidationUnknownFirstSeen.inc()},onScorePenalty(r){this.scoringPenalties.inc({penalty:r},1)},onIhaveRcv(r,n,i){let o=this.toTopic(r);this.ihaveRcvMsgids.inc({topic:o},n),this.ihaveRcvNotSeenMsgids.inc({topic:o},i)},onIwantRcv(r,n){for(let[i,o]of r){let a=this.toTopic(i);this.iwantRcvMsgids.inc({topic:a},o)}this.iwantRcvDonthaveMsgids.inc(n)},onForwardMsg(r,n){let i=this.toTopic(r);this.msgForwardCount.inc({topic:i},1),this.msgForwardPeers.inc({topic:i},n)},onPublishMsg(r,n,i,o,a){let c=this.toTopic(r);this.msgPublishCount.inc({topic:c},1),this.msgPublishBytes.inc({topic:c},i*o),this.msgPublishPeersByTopic.inc({topic:c},i),this.directPeersPublishedTotal.inc({topic:c},n.direct),this.floodsubPeersPublishedTotal.inc({topic:c},n.floodsub),this.meshPeersPublishedTotal.inc({topic:c},n.mesh),this.fanoutPeersPublishedTotal.inc({topic:c},n.fanout),this.msgPublishTime.observe({topic:c},a/1e3)},onMsgRecvPreValidation(r){let n=this.toTopic(r);this.msgReceivedPreValidation.inc({topic:n},1)},onMsgRecvError(r){let n=this.toTopic(r);this.msgReceivedError.inc({topic:n},1)},onPrevalidationResult(r,n){let i=this.toTopic(r);switch(n){case Ee.duplicate:this.prevalidationDuplicateTotal.inc({topic:i});break;case Ee.invalid:this.prevalidationInvalidTotal.inc({topic:i});break;case Ee.valid:this.prevalidationValidTotal.inc({topic:i});break;default:this.prevalidationUnknownTotal.inc({topic:i});break}},onMsgRecvInvalid(r,n){let i=this.toTopic(r),o=n.reason===Ie.Error?n.error:n.reason;this.msgReceivedInvalid.inc({error:o},1),this.msgReceivedInvalidByTopic.inc({topic:i},1)},onDuplicateMsgDelivery(r,n,i){let o=this.toTopic(r);this.duplicateMsgDeliveryDelay.observe({topic:o},n/1e3),i&&this.duplicateMsgLateDelivery.inc({topic:o},1)},onPublishDuplicateMsg(r){let n=this.toTopic(r);this.duplicateMsgIgnored.inc({topic:n},1)},onPeerReadStreamError(){this.peerReadStreamError.inc(1)},onRpcRecvError(){this.rpcRecvError.inc(1)},onRpcDataError(){this.rpcDataError.inc(1)},onRpcRecv(r,n){this.rpcRecvBytes.inc(n),this.rpcRecvCount.inc(1),r.subscriptions!=null&&this.rpcRecvSubscription.inc(r.subscriptions.length),r.messages!=null&&this.rpcRecvMessage.inc(r.messages.length),r.control!=null&&(this.rpcRecvControl.inc(1),r.control.ihave!=null&&this.rpcRecvIHave.inc(r.control.ihave.length),r.control.iwant!=null&&this.rpcRecvIWant.inc(r.control.iwant.length),r.control.graft!=null&&this.rpcRecvGraft.inc(r.control.graft.length),r.control.prune!=null&&this.rpcRecvPrune.inc(r.control.prune.length))},onRpcSent(r,n){if(this.rpcSentBytes.inc(n),this.rpcSentCount.inc(1),r.subscriptions!=null&&this.rpcSentSubscription.inc(r.subscriptions.length),r.messages!=null&&this.rpcSentMessage.inc(r.messages.length),r.control!=null){let i=r.control.ihave?.length??0,o=r.control.iwant?.length??0,a=r.control.graft?.length??0,c=r.control.prune?.length??0;i>0&&this.rpcSentIHave.inc(i),o>0&&this.rpcSentIWant.inc(o),a>0&&this.rpcSentGraft.inc(a),c>0&&this.rpcSentPrune.inc(c),(i>0||o>0||a>0||c>0)&&this.rpcSentControl.inc(1)}},registerScores(r,n){let i=0,o=0,a=0,c=0;for(let f of r)f>=n.graylistThreshold&&i++,f>=n.publishThreshold&&o++,f>=n.gossipThreshold&&a++,f>=0&&c++;this.peersByScoreThreshold.set({threshold:bs.graylist},i),this.peersByScoreThreshold.set({threshold:bs.publish},o),this.peersByScoreThreshold.set({threshold:bs.gossip},a),this.peersByScoreThreshold.set({threshold:bs.mesh},c),this.score.set(r)},registerScoreWeights(r){for(let[n,i]of r.byTopic)this.scoreWeights.set({topic:n,p:"p1"},i.p1w),this.scoreWeights.set({topic:n,p:"p2"},i.p2w),this.scoreWeights.set({topic:n,p:"p3"},i.p3w),this.scoreWeights.set({topic:n,p:"p3b"},i.p3bw),this.scoreWeights.set({topic:n,p:"p4"},i.p4w);this.scoreWeights.set({p:"p5"},r.p5w),this.scoreWeights.set({p:"p6"},r.p6w),this.scoreWeights.set({p:"p7"},r.p7w)},registerScorePerMesh(r,n){let i=new Map;r.forEach((o,a)=>{let c=this.topicStrToLabel.get(a)??"unknown",f=i.get(c);f==null&&(f=new Set,i.set(c,f)),o.forEach(l=>f?.add(l))});for(let[o,a]of i){let c=[];a.forEach(f=>{c.push(n.get(f)??0)}),this.scorePerMesh.set({topic:o},c)}}}}var $="ERR_INVALID_PEER_SCORE_PARAMS";var Mh={topics:{},topicScoreCap:10,appSpecificScore:()=>0,appSpecificWeight:10,IPColocationFactorWeight:-5,IPColocationFactorThreshold:10,IPColocationFactorWhitelist:new Set,behaviourPenaltyWeight:-10,behaviourPenaltyThreshold:0,behaviourPenaltyDecay:.2,decayInterval:1e3,decayToZero:.1,retainScore:3600*1e3},Dh={topicWeight:.5,timeInMeshWeight:1,timeInMeshQuantum:1,timeInMeshCap:3600,firstMessageDeliveriesWeight:1,firstMessageDeliveriesDecay:.5,firstMessageDeliveriesCap:2e3,meshMessageDeliveriesWeight:-1,meshMessageDeliveriesDecay:.5,meshMessageDeliveriesCap:100,meshMessageDeliveriesThreshold:20,meshMessageDeliveriesWindow:10,meshMessageDeliveriesActivation:5e3,meshFailurePenaltyWeight:-1,meshFailurePenaltyDecay:.5,invalidMessageDeliveriesWeight:-1,invalidMessageDeliveriesDecay:.3};function La(s={}){return{...Mh,...s,topics:s.topics!=null?Object.entries(s.topics).reduce((e,[t,r])=>(e[t]=Nh(r),e),{}):{}}}function Nh(s={}){return{...Dh,...s}}function Ua(s){for(let[e,t]of Object.entries(s.topics))try{Ch(t)}catch(r){throw new T(`invalid score parameters for topic ${e}: ${r.message}`,$)}if(s.topicScoreCap<0)throw new T("invalid topic score cap; must be positive (or 0 for no cap)",$);if(s.appSpecificScore===null||s.appSpecificScore===void 0)throw new T("missing application specific score function",$);if(s.IPColocationFactorWeight>0)throw new T("invalid IPColocationFactorWeight; must be negative (or 0 to disable)",$);if(s.IPColocationFactorWeight!==0&&s.IPColocationFactorThreshold<1)throw new T("invalid IPColocationFactorThreshold; must be at least 1",$);if(s.behaviourPenaltyWeight>0)throw new T("invalid BehaviourPenaltyWeight; must be negative (or 0 to disable)",$);if(s.behaviourPenaltyWeight!==0&&(s.behaviourPenaltyDecay<=0||s.behaviourPenaltyDecay>=1))throw new T("invalid BehaviourPenaltyDecay; must be between 0 and 1",$);if(s.decayInterval<1e3)throw new T("invalid DecayInterval; must be at least 1s",$);if(s.decayToZero<=0||s.decayToZero>=1)throw new T("invalid DecayToZero; must be between 0 and 1",$)}function Ch(s){if(s.topicWeight<0)throw new T("invalid topic weight; must be >= 0",$);if(s.timeInMeshQuantum===0)throw new T("invalid TimeInMeshQuantum; must be non zero",$);if(s.timeInMeshWeight<0)throw new T("invalid TimeInMeshWeight; must be positive (or 0 to disable)",$);if(s.timeInMeshWeight!==0&&s.timeInMeshQuantum<=0)throw new T("invalid TimeInMeshQuantum; must be positive",$);if(s.timeInMeshWeight!==0&&s.timeInMeshCap<=0)throw new T("invalid TimeInMeshCap; must be positive",$);if(s.firstMessageDeliveriesWeight<0)throw new T("invallid FirstMessageDeliveriesWeight; must be positive (or 0 to disable)",$);if(s.firstMessageDeliveriesWeight!==0&&(s.firstMessageDeliveriesDecay<=0||s.firstMessageDeliveriesDecay>=1))throw new T("invalid FirstMessageDeliveriesDecay; must be between 0 and 1",$);if(s.firstMessageDeliveriesWeight!==0&&s.firstMessageDeliveriesCap<=0)throw new T("invalid FirstMessageDeliveriesCap; must be positive",$);if(s.meshMessageDeliveriesWeight>0)throw new T("invalid MeshMessageDeliveriesWeight; must be negative (or 0 to disable)",$);if(s.meshMessageDeliveriesWeight!==0&&(s.meshMessageDeliveriesDecay<=0||s.meshMessageDeliveriesDecay>=1))throw new T("invalid MeshMessageDeliveriesDecay; must be between 0 and 1",$);if(s.meshMessageDeliveriesWeight!==0&&s.meshMessageDeliveriesCap<=0)throw new T("invalid MeshMessageDeliveriesCap; must be positive",$);if(s.meshMessageDeliveriesWeight!==0&&s.meshMessageDeliveriesThreshold<=0)throw new T("invalid MeshMessageDeliveriesThreshold; must be positive",$);if(s.meshMessageDeliveriesWindow<0)throw new T("invalid MeshMessageDeliveriesWindow; must be non-negative",$);if(s.meshMessageDeliveriesWeight!==0&&s.meshMessageDeliveriesActivation<1e3)throw new T("invalid MeshMessageDeliveriesActivation; must be at least 1s",$);if(s.meshFailurePenaltyWeight>0)throw new T("invalid MeshFailurePenaltyWeight; must be negative (or 0 to disable)",$);if(s.meshFailurePenaltyWeight!==0&&(s.meshFailurePenaltyDecay<=0||s.meshFailurePenaltyDecay>=1))throw new T("invalid MeshFailurePenaltyDecay; must be between 0 and 1",$);if(s.invalidMessageDeliveriesWeight>0)throw new T("invalid InvalidMessageDeliveriesWeight; must be negative (or 0 to disable)",$);if(s.invalidMessageDeliveriesDecay<=0||s.invalidMessageDeliveriesDecay>=1)throw new T("invalid InvalidMessageDeliveriesDecay; must be between 0 and 1",$)}var Lh={gossipThreshold:-10,publishThreshold:-50,graylistThreshold:-80,acceptPXThreshold:10,opportunisticGraftThreshold:20};function Va(s={}){return{...Lh,...s}}function Rr(s,e,t=()=>!0){let r=new Set;if(e<=0)return r;for(let n of s){if(r.size>=e)break;t(n)&&(r.add(n),s.delete(n))}return r}function Oa(s,e){return Rr(s,e,()=>!0)}var Pr=class extends Map{getDefault;constructor(e){super(),this.getDefault=e}getOrDefault(e){let t=super.get(e);return t===void 0&&(t=this.getDefault(),this.set(e,t)),t}};function Fa(s,e,t,r){let n=0;Object.entries(e.topics).forEach(([o,a])=>{let c=t.topics[o];if(c===void 0)return;let f=0;if(a.inMesh){let p=a.meshTime/c.timeInMeshQuantum;p>c.timeInMeshCap&&(p=c.timeInMeshCap),f+=p*c.timeInMeshWeight}let l=a.firstMessageDeliveries;if(l>c.firstMessageDeliveriesCap&&(l=c.firstMessageDeliveriesCap),f+=l*c.firstMessageDeliveriesWeight,a.meshMessageDeliveriesActive&&a.meshMessageDeliveries<c.meshMessageDeliveriesThreshold){let p=c.meshMessageDeliveriesThreshold-a.meshMessageDeliveries,g=p*p;f+=g*c.meshMessageDeliveriesWeight}let u=a.meshFailurePenalty;f+=u*c.meshFailurePenaltyWeight;let h=a.invalidMessageDeliveries*a.invalidMessageDeliveries;f+=h*c.invalidMessageDeliveriesWeight,n+=f*c.topicWeight}),t.topicScoreCap>0&&n>t.topicScoreCap&&(n=t.topicScoreCap);let i=t.appSpecificScore(s);if(n+=i*t.appSpecificWeight,e.knownIPs.forEach(o=>{if(t.IPColocationFactorWhitelist.has(o))return;let a=r.get(o),c=a!=null?a.size:0;if(c>t.IPColocationFactorThreshold){let f=c-t.IPColocationFactorThreshold,l=f*f;n+=l*t.IPColocationFactorWeight}}),e.behaviourPenalty>t.behaviourPenaltyThreshold){let o=e.behaviourPenalty-t.behaviourPenaltyThreshold,a=o*o;n+=a*t.behaviourPenaltyWeight}return n}var Ka=jn(Ga(),1);var ke;(function(s){s[s.unknown=0]="unknown",s[s.valid=1]="valid",s[s.invalid=2]="invalid",s[s.ignored=3]="ignored"})(ke||(ke={}));var Mr=class{records;queue;constructor(){this.records=new Map,this.queue=new Ka.default}getRecord(e){return this.records.get(e)}ensureRecord(e){let t=this.records.get(e);if(t!=null)return t;t={status:ke.unknown,firstSeenTsMs:Date.now(),validated:0,peers:new Set},this.records.set(e,t);let r={msgId:e,expire:Date.now()+12e4};return this.queue.push(r),t}gc(){let e=Date.now(),t=this.queue.peekFront();for(;t!=null&&t.expire<e;)this.records.delete(t.msgId),this.queue.shift(),t=this.queue.peekFront()}clear(){this.records.clear(),this.queue.clear()}};var Dr=class{params;metrics;peerStats=new Map;peerIPs=new Pr(()=>new Set);scoreCache=new Map;deliveryRecords=new Mr;_backgroundInterval;scoreCacheValidityMs;computeScore;log;constructor(e,t,r,n){this.params=e,this.metrics=t,Ua(e),this.scoreCacheValidityMs=n.scoreCacheValidityMs,this.computeScore=n.computeScore??Fa,this.log=r.forComponent("libp2p:gossipsub:score")}get size(){return this.peerStats.size}start(){if(this._backgroundInterval!=null){this.log("Peer score already running");return}this._backgroundInterval=setInterval(()=>{this.background()},this.params.decayInterval),this.log("started")}stop(){if(this._backgroundInterval==null){this.log("Peer score already stopped");return}clearInterval(this._backgroundInterval),delete this._backgroundInterval,this.peerIPs.clear(),this.peerStats.clear(),this.deliveryRecords.clear(),this.log("stopped")}background(){this.refreshScores(),this.deliveryRecords.gc()}dumpPeerScoreStats(){return Object.fromEntries(Array.from(this.peerStats.entries()).map(([e,t])=>[e,t]))}messageFirstSeenTimestampMs(e){let t=this.deliveryRecords.getRecord(e);return t!=null?t.firstSeenTsMs:null}refreshScores(){let e=Date.now(),t=this.params.decayToZero;this.peerStats.forEach((r,n)=>{if(!r.connected){e>r.expire&&(this.removeIPsForPeer(n,r.knownIPs),this.peerStats.delete(n),this.scoreCache.delete(n));return}Object.entries(r.topics).forEach(([i,o])=>{let a=this.params.topics[i];a!==void 0&&(o.firstMessageDeliveries*=a.firstMessageDeliveriesDecay,o.firstMessageDeliveries<t&&(o.firstMessageDeliveries=0),o.meshMessageDeliveries*=a.meshMessageDeliveriesDecay,o.meshMessageDeliveries<t&&(o.meshMessageDeliveries=0),o.meshFailurePenalty*=a.meshFailurePenaltyDecay,o.meshFailurePenalty<t&&(o.meshFailurePenalty=0),o.invalidMessageDeliveries*=a.invalidMessageDeliveriesDecay,o.invalidMessageDeliveries<t&&(o.invalidMessageDeliveries=0),o.inMesh&&(o.meshTime=e-o.graftTime,o.meshTime>a.meshMessageDeliveriesActivation&&(o.meshMessageDeliveriesActive=!0)))}),r.behaviourPenalty*=this.params.behaviourPenaltyDecay,r.behaviourPenalty<t&&(r.behaviourPenalty=0)})}score(e){this.metrics?.scoreFnCalls.inc();let t=this.peerStats.get(e);if(t==null)return 0;let r=Date.now(),n=this.scoreCache.get(e);if(n!=null&&n.cacheUntil>r)return n.score;this.metrics?.scoreFnRuns.inc();let i=this.computeScore(e,t,this.params,this.peerIPs),o=r+this.scoreCacheValidityMs;return n!=null?(this.metrics?.scoreCachedDelta.observe(Math.abs(i-n.score)),n.score=i,n.cacheUntil=o):this.scoreCache.set(e,{score:i,cacheUntil:o}),i}addPenalty(e,t,r){let n=this.peerStats.get(e);n!=null&&(n.behaviourPenalty+=t,this.metrics?.onScorePenalty(r))}addPeer(e){let t={connected:!0,expire:0,topics:{},knownIPs:new Set,behaviourPenalty:0};this.peerStats.set(e,t)}addIP(e,t){let r=this.peerStats.get(e);r?.knownIPs.add(t),this.peerIPs.getOrDefault(t).add(e)}removeIP(e,t){let r=this.peerStats.get(e);r?.knownIPs.delete(t);let n=this.peerIPs.get(t);n!=null&&(n.delete(e),n.size===0&&this.peerIPs.delete(t))}removePeer(e){let t=this.peerStats.get(e);if(t!=null){if(this.score(e)>0){this.removeIPsForPeer(e,t.knownIPs),this.peerStats.delete(e);return}Object.entries(t.topics).forEach(([r,n])=>{n.firstMessageDeliveries=0;let i=this.params.topics[r].meshMessageDeliveriesThreshold;if(n.inMesh&&n.meshMessageDeliveriesActive&&n.meshMessageDeliveries<i){let o=i-n.meshMessageDeliveries;n.meshFailurePenalty+=o*o}n.inMesh=!1,n.meshMessageDeliveriesActive=!1}),t.connected=!1,t.expire=Date.now()+this.params.retainScore}}graft(e,t){let r=this.peerStats.get(e);if(r!=null){let n=this.getPtopicStats(r,t);n!=null&&(n.inMesh=!0,n.graftTime=Date.now(),n.meshTime=0,n.meshMessageDeliveriesActive=!1)}}prune(e,t){let r=this.peerStats.get(e);if(r!=null){let n=this.getPtopicStats(r,t);if(n!=null){let i=this.params.topics[t].meshMessageDeliveriesThreshold;if(n.meshMessageDeliveriesActive&&n.meshMessageDeliveries<i){let o=i-n.meshMessageDeliveries;n.meshFailurePenalty+=o*o}n.meshMessageDeliveriesActive=!1,n.inMesh=!1}}}validateMessage(e){this.deliveryRecords.ensureRecord(e)}deliverMessage(e,t,r){this.markFirstMessageDelivery(e,r);let n=this.deliveryRecords.ensureRecord(t),i=Date.now();if(n.status!==ke.unknown){this.log("unexpected delivery: message from %s was first seen %s ago and has delivery status %s",e,i-n.firstSeenTsMs,ke[n.status]);return}n.status=ke.valid,n.validated=i,n.peers.forEach(o=>{o!==e.toString()&&this.markDuplicateMessageDelivery(o,r)})}rejectInvalidMessage(e,t){this.markInvalidMessageDelivery(e,t)}rejectMessage(e,t,r,n){switch(n){case Ie.Error:this.markInvalidMessageDelivery(e,r);return;case Ie.Blacklisted:return}let i=this.deliveryRecords.ensureRecord(t);if(i.status!==ke.unknown){this.log("unexpected rejection: message from %s was first seen %s ago and has delivery status %d",e,Date.now()-i.firstSeenTsMs,ke[i.status]);return}if(n===Ie.Ignore){i.status=ke.ignored,i.peers.clear();return}i.status=ke.invalid,this.markInvalidMessageDelivery(e,r),i.peers.forEach(o=>{this.markInvalidMessageDelivery(o,r)}),i.peers.clear()}duplicateMessage(e,t,r){let n=this.deliveryRecords.ensureRecord(t);if(!n.peers.has(e))switch(n.status){case ke.unknown:n.peers.add(e);break;case ke.valid:n.peers.add(e),this.markDuplicateMessageDelivery(e,r,n.validated);break;case ke.invalid:this.markInvalidMessageDelivery(e,r);break;case ke.ignored:break}}markInvalidMessageDelivery(e,t){let r=this.peerStats.get(e);if(r!=null){let n=this.getPtopicStats(r,t);n!=null&&(n.invalidMessageDeliveries+=1)}}markFirstMessageDelivery(e,t){let r=this.peerStats.get(e);if(r!=null){let n=this.getPtopicStats(r,t);if(n!=null){let i=this.params.topics[t].firstMessageDeliveriesCap;n.firstMessageDeliveries=Math.min(i,n.firstMessageDeliveries+1),n.inMesh&&(i=this.params.topics[t].meshMessageDeliveriesCap,n.meshMessageDeliveries=Math.min(i,n.meshMessageDeliveries+1))}}}markDuplicateMessageDelivery(e,t,r){let n=this.peerStats.get(e);if(n!=null){let i=r!==void 0?Date.now():0,o=this.getPtopicStats(n,t);if(o!=null&&o.inMesh){let a=this.params.topics[t];if(r!==void 0){let f=i-r,l=f>a.meshMessageDeliveriesWindow;if(this.metrics?.onDuplicateMsgDelivery(t,f,l),l)return}let c=a.meshMessageDeliveriesCap;o.meshMessageDeliveries=Math.min(c,o.meshMessageDeliveries+1)}}}removeIPsForPeer(e,t){for(let r of t){let n=this.peerIPs.get(r);n!=null&&(n.delete(e),n.size===0&&this.peerIPs.delete(r))}}getPtopicStats(e,t){let r=e.topics[t];return r!==void 0?r:this.params.topics[t]!==void 0?(r={inMesh:!1,graftTime:0,meshTime:0,firstMessageDeliveries:0,meshMessageDeliveries:0,meshMessageDeliveriesActive:!1,meshFailurePenalty:0,invalidMessageDeliveries:0},e.topics[t]=r,r):null}};function Uh(s,e,t,r,n){let i=0,o=new Map;if(Object.entries(e.topics).forEach(([h,p])=>{let g=n.get(h)??"unknown",d=t.topics[h];if(d===void 0)return;let m=o.get(g);m==null&&(m={p1w:0,p2w:0,p3w:0,p3bw:0,p4w:0},o.set(g,m));let b=0,_=0,w=0,A=0,y=0;if(p.inMesh){let D=Math.max(p.meshTime/d.timeInMeshQuantum,d.timeInMeshCap);b+=D*d.timeInMeshWeight}let x=p.firstMessageDeliveries;if(x>d.firstMessageDeliveriesCap&&(x=d.firstMessageDeliveriesCap),_+=x*d.firstMessageDeliveriesWeight,p.meshMessageDeliveriesActive&&p.meshMessageDeliveries<d.meshMessageDeliveriesThreshold){let D=d.meshMessageDeliveriesThreshold-p.meshMessageDeliveries,N=D*D;w+=N*d.meshMessageDeliveriesWeight}let E=p.meshFailurePenalty;A+=E*d.meshFailurePenaltyWeight;let B=p.invalidMessageDeliveries*p.invalidMessageDeliveries;y+=B*d.invalidMessageDeliveriesWeight,i+=(b+_+w+A+y)*d.topicWeight,m.p1w+=b,m.p2w+=_,m.p3w+=w,m.p3bw+=A,m.p4w+=y}),t.topicScoreCap>0&&i>t.topicScoreCap){i=t.topicScoreCap;let h=t.topicScoreCap/i;for(let p of o.values())p.p1w*=h,p.p2w*=h,p.p3w*=h,p.p3bw*=h,p.p4w*=h}let a=0,c=0,f=0,l=t.appSpecificScore(s);a+=l*t.appSpecificWeight,e.knownIPs.forEach(h=>{if(t.IPColocationFactorWhitelist.has(h))return;let p=r.get(h),g=p!=null?p.size:0;if(g>t.IPColocationFactorThreshold){let d=g-t.IPColocationFactorThreshold,m=d*d;c+=m*t.IPColocationFactorWeight}});let u=e.behaviourPenalty*e.behaviourPenalty;return f+=u*t.behaviourPenaltyWeight,i+=a+c+f,{byTopic:o,p5w:a,p6w:c,p7w:f,score:i}}function za(s,e,t,r,n){let i={byTopic:new Map,p5w:[],p6w:[],p7w:[],score:[]};for(let o of s){let a=e.get(o);if(a!=null){let c=Uh(o,a,t,r,n);for(let[f,l]of c.byTopic){let u=i.byTopic.get(f);u==null&&(u={p1w:[],p2w:[],p3w:[],p3bw:[],p4w:[]},i.byTopic.set(f,u)),u.p1w.push(l.p1w),u.p2w.push(l.p2w),u.p3w.push(l.p3w),u.p3bw.push(l.p3bw),u.p4w.push(l.p4w)}i.p5w.push(c.p5w),i.p6w.push(c.p6w),i.p7w.push(c.p7w),i.score.push(c.score)}else i.p5w.push(0),i.p6w.push(0),i.p7w.push(0),i.score.push(0)}return i}var Nr=class{rawStream;pushable;closeController;maxBufferSize;constructor(e,t,r){this.rawStream=e,this.pushable=ut(),this.closeController=new AbortController,this.maxBufferSize=r.maxBufferSize??1/0,this.closeController.signal.addEventListener("abort",()=>{e.close().catch(n=>{e.abort(n)})}),gs(this.pushable,this.rawStream).catch(t)}get protocol(){return this.rawStream.protocol}push(e){if(this.pushable.readableLength>this.maxBufferSize)throw Error(`OutboundStream buffer full, size > ${this.maxBufferSize}`);this.pushable.push(fs.single(e))}pushPrefixed(e){if(this.pushable.readableLength>this.maxBufferSize)throw Error(`OutboundStream buffer full, size > ${this.maxBufferSize}`);this.pushable.push(e)}async close(){this.closeController.abort(),await this.pushable.return()}},Cr=class{source;rawStream;closeController;constructor(e,t={}){this.rawStream=e,this.closeController=new AbortController,this.closeController.signal.addEventListener("abort",()=>{e.close().catch(r=>{e.abort(r)})}),this.source=gs(this.rawStream,r=>Zs(r,t))}async close(){this.closeController.abort()}};var Lr=class{gossipsubIWantFollowupMs;msgIdToStrFn;metrics;promises=new Map;requestMsByMsg=new Map;requestMsByMsgExpire;constructor(e,t,r){this.gossipsubIWantFollowupMs=e,this.msgIdToStrFn=t,this.metrics=r,this.requestMsByMsgExpire=10*e}get size(){return this.promises.size}get requestMsByMsgSize(){return this.requestMsByMsg.size}addPromise(e,t){let r=Math.floor(Math.random()*t.length),n=t[r],i=this.msgIdToStrFn(n),o=this.promises.get(i);o==null&&(o=new Map,this.promises.set(i,o));let a=Date.now();o.has(e)||(o.set(e,a+this.gossipsubIWantFollowupMs),this.metrics!=null&&(this.metrics.iwantPromiseStarted.inc(1),this.requestMsByMsg.has(i)||this.requestMsByMsg.set(i,a)))}getBrokenPromises(){let e=Date.now(),t=new Map,r=0;return this.promises.forEach((n,i)=>{n.forEach((o,a)=>{o<e&&(t.set(a,(t.get(a)??0)+1),n.delete(a),r++)}),n.size===0&&this.promises.delete(i)}),this.metrics?.iwantPromiseBroken.inc(r),t}deliverMessage(e,t=!1){this.trackMessage(e);let r=this.promises.get(e);r!=null&&(this.promises.delete(e),this.metrics!=null&&(this.metrics.iwantPromiseResolved.inc(1),t&&this.metrics.iwantPromiseResolvedFromDuplicate.inc(1),this.metrics.iwantPromiseResolvedPeers.inc(r.size)))}rejectMessage(e,t){switch(this.trackMessage(e),t){case Ie.Error:return;default:break}this.promises.delete(e)}clear(){this.promises.clear()}prune(){let e=Date.now()-this.requestMsByMsgExpire,t=0;for(let[r,n]of this.requestMsByMsg.entries())if(n<e)this.requestMsByMsg.delete(r),t++;else break;this.metrics?.iwantMessagePruned.inc(t)}trackMessage(e){if(this.metrics!=null){let t=this.requestMsByMsg.get(e);t!==void 0&&(this.metrics.iwantPromiseDeliveryTime.observe((Date.now()-t)/1e3),this.requestMsByMsg.delete(e))}}};var Te={get(s=globalThis){let e=s.crypto;if(e==null||e.subtle==null)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}};var oo={};ue(oo,{Ed25519PrivateKey:()=>es,Ed25519PublicKey:()=>er,generateKeyPair:()=>jf,generateKeyPairFromSeed:()=>bc,unmarshalEd25519PrivateKey:()=>Wf,unmarshalEd25519PublicKey:()=>$f});function Fe(s){return s==null?!1:typeof s.then=="function"&&typeof s.catch=="function"&&typeof s.finally=="function"}function vs(s){if(!Number.isSafeInteger(s)||s<0)throw new Error(`positive integer expected, not ${s}`)}function Vh(s){return s instanceof Uint8Array||s!=null&&typeof s=="object"&&s.constructor.name==="Uint8Array"}function xs(s,...e){if(!Vh(s))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(s.length))throw new Error(`Uint8Array expected of length ${e}, not of length=${s.length}`)}function Ur(s){if(typeof s!="function"||typeof s.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");vs(s.outputLen),vs(s.blockLen)}function Es(s,e=!0){if(s.destroyed)throw new Error("Hash instance has been destroyed");if(e&&s.finished)throw new Error("Hash#digest() has already been called")}function qa(s,e){xs(s);let t=e.outputLen;if(s.length<t)throw new Error(`digestInto() expects output buffer of length at least ${t}`)}var Vr=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;var Bs=s=>new DataView(s.buffer,s.byteOffset,s.byteLength),qe=(s,e)=>s<<32-e|s>>>e;var Y0=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;var Oh=async()=>{};async function Wa(s,e,t){let r=Date.now();for(let n=0;n<s;n++){t(n);let i=Date.now()-r;i>=0&&i<e||(await Oh(),r+=i)}}function zi(s){if(typeof s!="string")throw new Error(`utf8ToBytes expected string, got ${typeof s}`);return new Uint8Array(new TextEncoder().encode(s))}function Rt(s){return typeof s=="string"&&(s=zi(s)),xs(s),s}function Or(...s){let e=0;for(let r=0;r<s.length;r++){let n=s[r];xs(n),e+=n.length}let t=new Uint8Array(e);for(let r=0,n=0;r<s.length;r++){let i=s[r];t.set(i,n),n+=i.length}return t}var _s=class{clone(){return this._cloneInto()}},Fh={}.toString;function $a(s,e){if(e!==void 0&&Fh.call(e)!=="[object Object]")throw new Error("Options should be object or undefined");return Object.assign(s,e)}function Fr(s){let e=r=>s().update(Rt(r)).digest(),t=s();return e.outputLen=t.outputLen,e.blockLen=t.blockLen,e.create=()=>s(),e}function Ss(s=32){if(Vr&&typeof Vr.getRandomValues=="function")return Vr.getRandomValues(new Uint8Array(s));throw new Error("crypto.getRandomValues must be defined")}function Hh(s,e,t,r){if(typeof s.setBigUint64=="function")return s.setBigUint64(e,t,r);let n=BigInt(32),i=BigInt(4294967295),o=Number(t>>n&i),a=Number(t&i),c=r?4:0,f=r?0:4;s.setUint32(e+c,o,r),s.setUint32(e+f,a,r)}var ja=(s,e,t)=>s&e^~s&t,Za=(s,e,t)=>s&e^s&t^e&t,Is=class extends _s{constructor(e,t,r,n){super(),this.blockLen=e,this.outputLen=t,this.padOffset=r,this.isLE=n,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=Bs(this.buffer)}update(e){Es(this);let{view:t,buffer:r,blockLen:n}=this;e=Rt(e);let i=e.length;for(let o=0;o<i;){let a=Math.min(n-this.pos,i-o);if(a===n){let c=Bs(e);for(;n<=i-o;o+=n)this.process(c,o);continue}r.set(e.subarray(o,o+a),this.pos),this.pos+=a,o+=a,this.pos===n&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){Es(this),qa(e,this),this.finished=!0;let{buffer:t,view:r,blockLen:n,isLE:i}=this,{pos:o}=this;t[o++]=128,this.buffer.subarray(o).fill(0),this.padOffset>n-o&&(this.process(r,0),o=0);for(let u=o;u<n;u++)t[u]=0;Hh(r,n-8,BigInt(this.length*8),i),this.process(r,0);let a=Bs(e),c=this.outputLen;if(c%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let f=c/4,l=this.get();if(f>l.length)throw new Error("_sha2: outputLen bigger than state");for(let u=0;u<f;u++)a.setUint32(4*u,l[u],i)}digest(){let{buffer:e,outputLen:t}=this;this.digestInto(e);let r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());let{blockLen:t,buffer:r,length:n,finished:i,destroyed:o,pos:a}=this;return e.length=n,e.pos=a,e.finished=i,e.destroyed=o,n%t&&e.buffer.set(r),e}};var Hr=BigInt(4294967295),qi=BigInt(32);function Ya(s,e=!1){return e?{h:Number(s&Hr),l:Number(s>>qi&Hr)}:{h:Number(s>>qi&Hr)|0,l:Number(s&Hr)|0}}function Gh(s,e=!1){let t=new Uint32Array(s.length),r=new Uint32Array(s.length);for(let n=0;n<s.length;n++){let{h:i,l:o}=Ya(s[n],e);[t[n],r[n]]=[i,o]}return[t,r]}var Kh=(s,e)=>BigInt(s>>>0)<<qi|BigInt(e>>>0),zh=(s,e,t)=>s>>>t,qh=(s,e,t)=>s<<32-t|e>>>t,Wh=(s,e,t)=>s>>>t|e<<32-t,$h=(s,e,t)=>s<<32-t|e>>>t,jh=(s,e,t)=>s<<64-t|e>>>t-32,Zh=(s,e,t)=>s>>>t-32|e<<64-t,Yh=(s,e)=>e,Xh=(s,e)=>s,Jh=(s,e,t)=>s<<t|e>>>32-t,Qh=(s,e,t)=>e<<t|s>>>32-t,ef=(s,e,t)=>e<<t-32|s>>>64-t,tf=(s,e,t)=>s<<t-32|e>>>64-t;function sf(s,e,t,r){let n=(e>>>0)+(r>>>0);return{h:s+t+(n/2**32|0)|0,l:n|0}}var rf=(s,e,t)=>(s>>>0)+(e>>>0)+(t>>>0),nf=(s,e,t,r)=>e+t+r+(s/2**32|0)|0,of=(s,e,t,r)=>(s>>>0)+(e>>>0)+(t>>>0)+(r>>>0),af=(s,e,t,r,n)=>e+t+r+n+(s/2**32|0)|0,cf=(s,e,t,r,n)=>(s>>>0)+(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0),lf=(s,e,t,r,n,i)=>e+t+r+n+i+(s/2**32|0)|0;var uf={fromBig:Ya,split:Gh,toBig:Kh,shrSH:zh,shrSL:qh,rotrSH:Wh,rotrSL:$h,rotrBH:jh,rotrBL:Zh,rotr32H:Yh,rotr32L:Xh,rotlSH:Jh,rotlSL:Qh,rotlBH:ef,rotlBL:tf,add:sf,add3L:rf,add3H:nf,add4L:of,add4H:af,add5H:lf,add5L:cf},U=uf;var[hf,ff]=U.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(s=>BigInt(s))),Mt=new Uint32Array(80),Dt=new Uint32Array(80),Wi=class extends Is{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){let{Ah:e,Al:t,Bh:r,Bl:n,Ch:i,Cl:o,Dh:a,Dl:c,Eh:f,El:l,Fh:u,Fl:h,Gh:p,Gl:g,Hh:d,Hl:m}=this;return[e,t,r,n,i,o,a,c,f,l,u,h,p,g,d,m]}set(e,t,r,n,i,o,a,c,f,l,u,h,p,g,d,m){this.Ah=e|0,this.Al=t|0,this.Bh=r|0,this.Bl=n|0,this.Ch=i|0,this.Cl=o|0,this.Dh=a|0,this.Dl=c|0,this.Eh=f|0,this.El=l|0,this.Fh=u|0,this.Fl=h|0,this.Gh=p|0,this.Gl=g|0,this.Hh=d|0,this.Hl=m|0}process(e,t){for(let w=0;w<16;w++,t+=4)Mt[w]=e.getUint32(t),Dt[w]=e.getUint32(t+=4);for(let w=16;w<80;w++){let A=Mt[w-15]|0,y=Dt[w-15]|0,x=U.rotrSH(A,y,1)^U.rotrSH(A,y,8)^U.shrSH(A,y,7),E=U.rotrSL(A,y,1)^U.rotrSL(A,y,8)^U.shrSL(A,y,7),B=Mt[w-2]|0,D=Dt[w-2]|0,N=U.rotrSH(B,D,19)^U.rotrBH(B,D,61)^U.shrSH(B,D,6),L=U.rotrSL(B,D,19)^U.rotrBL(B,D,61)^U.shrSL(B,D,6),ne=U.add4L(E,L,Dt[w-7],Dt[w-16]),re=U.add4H(ne,x,N,Mt[w-7],Mt[w-16]);Mt[w]=re|0,Dt[w]=ne|0}let{Ah:r,Al:n,Bh:i,Bl:o,Ch:a,Cl:c,Dh:f,Dl:l,Eh:u,El:h,Fh:p,Fl:g,Gh:d,Gl:m,Hh:b,Hl:_}=this;for(let w=0;w<80;w++){let A=U.rotrSH(u,h,14)^U.rotrSH(u,h,18)^U.rotrBH(u,h,41),y=U.rotrSL(u,h,14)^U.rotrSL(u,h,18)^U.rotrBL(u,h,41),x=u&p^~u&d,E=h&g^~h&m,B=U.add5L(_,y,E,ff[w],Dt[w]),D=U.add5H(B,b,A,x,hf[w],Mt[w]),N=B|0,L=U.rotrSH(r,n,28)^U.rotrBH(r,n,34)^U.rotrBH(r,n,39),ne=U.rotrSL(r,n,28)^U.rotrBL(r,n,34)^U.rotrBL(r,n,39),re=r&i^r&a^i&a,Ve=n&o^n&c^o&c;b=d|0,_=m|0,d=p|0,m=g|0,p=u|0,g=h|0,{h:u,l:h}=U.add(f|0,l|0,D|0,N|0),f=a|0,l=c|0,a=i|0,c=o|0,i=r|0,o=n|0;let S=U.add3L(N,ne,Ve);r=U.add3H(S,D,L,re),n=S|0}({h:r,l:n}=U.add(this.Ah|0,this.Al|0,r|0,n|0)),{h:i,l:o}=U.add(this.Bh|0,this.Bl|0,i|0,o|0),{h:a,l:c}=U.add(this.Ch|0,this.Cl|0,a|0,c|0),{h:f,l}=U.add(this.Dh|0,this.Dl|0,f|0,l|0),{h:u,l:h}=U.add(this.Eh|0,this.El|0,u|0,h|0),{h:p,l:g}=U.add(this.Fh|0,this.Fl|0,p|0,g|0),{h:d,l:m}=U.add(this.Gh|0,this.Gl|0,d|0,m|0),{h:b,l:_}=U.add(this.Hh|0,this.Hl|0,b|0,_|0),this.set(r,n,i,o,a,c,f,l,u,h,p,g,d,m,b,_)}roundClean(){Mt.fill(0),Dt.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};var As=Fr(()=>new Wi);var Kr={};ue(Kr,{abytes:()=>ks,bitGet:()=>wf,bitLen:()=>yf,bitMask:()=>Js,bitSet:()=>vf,bytesToHex:()=>dt,bytesToNumberBE:()=>pt,bytesToNumberLE:()=>Ct,concatBytes:()=>gt,createHmacDrbg:()=>Zi,ensureBytes:()=>se,equalBytes:()=>mf,hexToBytes:()=>Xt,hexToNumber:()=>ji,isBytes:()=>Nt,numberToBytesBE:()=>Lt,numberToBytesLE:()=>Jt,numberToHexUnpadded:()=>ec,numberToVarBytesBE:()=>gf,utf8ToBytes:()=>bf,validateObject:()=>Xe});var Qa=BigInt(0),Gr=BigInt(1),df=BigInt(2);function Nt(s){return s instanceof Uint8Array||s!=null&&typeof s=="object"&&s.constructor.name==="Uint8Array"}function ks(s){if(!Nt(s))throw new Error("Uint8Array expected")}var pf=Array.from({length:256},(s,e)=>e.toString(16).padStart(2,"0"));function dt(s){ks(s);let e="";for(let t=0;t<s.length;t++)e+=pf[s[t]];return e}function ec(s){let e=s.toString(16);return e.length&1?`0${e}`:e}function ji(s){if(typeof s!="string")throw new Error("hex string expected, got "+typeof s);return BigInt(s===""?"0":`0x${s}`)}var ft={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function Xa(s){if(s>=ft._0&&s<=ft._9)return s-ft._0;if(s>=ft._A&&s<=ft._F)return s-(ft._A-10);if(s>=ft._a&&s<=ft._f)return s-(ft._a-10)}function Xt(s){if(typeof s!="string")throw new Error("hex string expected, got "+typeof s);let e=s.length,t=e/2;if(e%2)throw new Error("padded hex string expected, got unpadded hex of length "+e);let r=new Uint8Array(t);for(let n=0,i=0;n<t;n++,i+=2){let o=Xa(s.charCodeAt(i)),a=Xa(s.charCodeAt(i+1));if(o===void 0||a===void 0){let c=s[i]+s[i+1];throw new Error('hex string expected, got non-hex character "'+c+'" at index '+i)}r[n]=o*16+a}return r}function pt(s){return ji(dt(s))}function Ct(s){return ks(s),ji(dt(Uint8Array.from(s).reverse()))}function Lt(s,e){return Xt(s.toString(16).padStart(e*2,"0"))}function Jt(s,e){return Lt(s,e).reverse()}function gf(s){return Xt(ec(s))}function se(s,e,t){let r;if(typeof e=="string")try{r=Xt(e)}catch(i){throw new Error(`${s} must be valid hex string, got "${e}". Cause: ${i}`)}else if(Nt(e))r=Uint8Array.from(e);else throw new Error(`${s} must be hex string or Uint8Array`);let n=r.length;if(typeof t=="number"&&n!==t)throw new Error(`${s} expected ${t} bytes, got ${n}`);return r}function gt(...s){let e=0;for(let r=0;r<s.length;r++){let n=s[r];ks(n),e+=n.length}let t=new Uint8Array(e);for(let r=0,n=0;r<s.length;r++){let i=s[r];t.set(i,n),n+=i.length}return t}function mf(s,e){if(s.length!==e.length)return!1;let t=0;for(let r=0;r<s.length;r++)t|=s[r]^e[r];return t===0}function bf(s){if(typeof s!="string")throw new Error(`utf8ToBytes expected string, got ${typeof s}`);return new Uint8Array(new TextEncoder().encode(s))}function yf(s){let e;for(e=0;s>Qa;s>>=Gr,e+=1);return e}function wf(s,e){return s>>BigInt(e)&Gr}function vf(s,e,t){return s|(t?Gr:Qa)<<BigInt(e)}var Js=s=>(df<<BigInt(s-1))-Gr,$i=s=>new Uint8Array(s),Ja=s=>Uint8Array.from(s);function Zi(s,e,t){if(typeof s!="number"||s<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof t!="function")throw new Error("hmacFn must be a function");let r=$i(s),n=$i(s),i=0,o=()=>{r.fill(1),n.fill(0),i=0},a=(...u)=>t(n,r,...u),c=(u=$i())=>{n=a(Ja([0]),u),r=a(),u.length!==0&&(n=a(Ja([1]),u),r=a())},f=()=>{if(i++>=1e3)throw new Error("drbg: tried 1000 values");let u=0,h=[];for(;u<e;){r=a();let p=r.slice();h.push(p),u+=r.length}return gt(...h)};return(u,h)=>{o(),c(u);let p;for(;!(p=h(f()));)c();return o(),p}}var xf={bigint:s=>typeof s=="bigint",function:s=>typeof s=="function",boolean:s=>typeof s=="boolean",string:s=>typeof s=="string",stringOrUint8Array:s=>typeof s=="string"||Nt(s),isSafeInteger:s=>Number.isSafeInteger(s),array:s=>Array.isArray(s),field:(s,e)=>e.Fp.isValid(s),hash:s=>typeof s=="function"&&Number.isSafeInteger(s.outputLen)};function Xe(s,e,t={}){let r=(n,i,o)=>{let a=xf[i];if(typeof a!="function")throw new Error(`Invalid validator "${i}", expected function`);let c=s[n];if(!(o&&c===void 0)&&!a(c,s))throw new Error(`Invalid param ${String(n)}=${c} (${typeof c}), expected ${i}`)};for(let[n,i]of Object.entries(e))r(n,i,!1);for(let[n,i]of Object.entries(t))r(n,i,!0);return s}var le=BigInt(0),Y=BigInt(1),Qt=BigInt(2),Ef=BigInt(3),Yi=BigInt(4),tc=BigInt(5),sc=BigInt(8),_f=BigInt(9),Bf=BigInt(16);function j(s,e){let t=s%e;return t>=le?t:e+t}function Sf(s,e,t){if(t<=le||e<le)throw new Error("Expected power/modulo > 0");if(t===Y)return le;let r=Y;for(;e>le;)e&Y&&(r=r*s%t),s=s*s%t,e>>=Y;return r}function X(s,e,t){let r=s;for(;e-- >le;)r*=r,r%=t;return r}function zr(s,e){if(s===le||e<=le)throw new Error(`invert: expected positive integers, got n=${s} mod=${e}`);let t=j(s,e),r=e,n=le,i=Y,o=Y,a=le;for(;t!==le;){let f=r/t,l=r%t,u=n-o*f,h=i-a*f;r=t,t=l,n=o,i=a,o=u,a=h}if(r!==Y)throw new Error("invert: does not exist");return j(n,e)}function If(s){let e=(s-Y)/Qt,t,r,n;for(t=s-Y,r=0;t%Qt===le;t/=Qt,r++);for(n=Qt;n<s&&Sf(n,e,s)!==s-Y;n++);if(r===1){let o=(s+Y)/Yi;return function(c,f){let l=c.pow(f,o);if(!c.eql(c.sqr(l),f))throw new Error("Cannot find square root");return l}}let i=(t+Y)/Qt;return function(a,c){if(a.pow(c,e)===a.neg(a.ONE))throw new Error("Cannot find square root");let f=r,l=a.pow(a.mul(a.ONE,n),t),u=a.pow(c,i),h=a.pow(c,t);for(;!a.eql(h,a.ONE);){if(a.eql(h,a.ZERO))return a.ZERO;let p=1;for(let d=a.sqr(h);p<f&&!a.eql(d,a.ONE);p++)d=a.sqr(d);let g=a.pow(l,Y<<BigInt(f-p-1));l=a.sqr(g),u=a.mul(u,g),h=a.mul(h,l),f=p}return u}}function Af(s){if(s%Yi===Ef){let e=(s+Y)/Yi;return function(r,n){let i=r.pow(n,e);if(!r.eql(r.sqr(i),n))throw new Error("Cannot find square root");return i}}if(s%sc===tc){let e=(s-tc)/sc;return function(r,n){let i=r.mul(n,Qt),o=r.pow(i,e),a=r.mul(n,o),c=r.mul(r.mul(a,Qt),o),f=r.mul(a,r.sub(c,r.ONE));if(!r.eql(r.sqr(f),n))throw new Error("Cannot find square root");return f}}return s%Bf,If(s)}var rc=(s,e)=>(j(s,e)&Y)===Y,kf=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function Xi(s){let e={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},t=kf.reduce((r,n)=>(r[n]="function",r),e);return Xe(s,t)}function Tf(s,e,t){if(t<le)throw new Error("Expected power > 0");if(t===le)return s.ONE;if(t===Y)return e;let r=s.ONE,n=e;for(;t>le;)t&Y&&(r=s.mul(r,n)),n=s.sqr(n),t>>=Y;return r}function Pf(s,e){let t=new Array(e.length),r=e.reduce((i,o,a)=>s.is0(o)?i:(t[a]=i,s.mul(i,o)),s.ONE),n=s.inv(r);return e.reduceRight((i,o,a)=>s.is0(o)?i:(t[a]=s.mul(i,t[a]),s.mul(i,o)),n),t}function Ji(s,e){let t=e!==void 0?e:s.toString(2).length,r=Math.ceil(t/8);return{nBitLength:t,nByteLength:r}}function qr(s,e,t=!1,r={}){if(s<=le)throw new Error(`Expected Field ORDER > 0, got ${s}`);let{nBitLength:n,nByteLength:i}=Ji(s,e);if(i>2048)throw new Error("Field lengths over 2048 bytes are not supported");let o=Af(s),a=Object.freeze({ORDER:s,BITS:n,BYTES:i,MASK:Js(n),ZERO:le,ONE:Y,create:c=>j(c,s),isValid:c=>{if(typeof c!="bigint")throw new Error(`Invalid field element: expected bigint, got ${typeof c}`);return le<=c&&c<s},is0:c=>c===le,isOdd:c=>(c&Y)===Y,neg:c=>j(-c,s),eql:(c,f)=>c===f,sqr:c=>j(c*c,s),add:(c,f)=>j(c+f,s),sub:(c,f)=>j(c-f,s),mul:(c,f)=>j(c*f,s),pow:(c,f)=>Tf(a,c,f),div:(c,f)=>j(c*zr(f,s),s),sqrN:c=>c*c,addN:(c,f)=>c+f,subN:(c,f)=>c-f,mulN:(c,f)=>c*f,inv:c=>zr(c,s),sqrt:r.sqrt||(c=>o(a,c)),invertBatch:c=>Pf(a,c),cmov:(c,f,l)=>l?f:c,toBytes:c=>t?Jt(c,i):Lt(c,i),fromBytes:c=>{if(c.length!==i)throw new Error(`Fp.fromBytes: expected ${i}, got ${c.length}`);return t?Ct(c):pt(c)}});return Object.freeze(a)}function nc(s,e){if(!s.isOdd)throw new Error("Field doesn't have isOdd");let t=s.sqrt(e);return s.isOdd(t)?s.neg(t):t}function ic(s){if(typeof s!="bigint")throw new Error("field order must be bigint");let e=s.toString(2).length;return Math.ceil(e/8)}function Qi(s){let e=ic(s);return e+Math.ceil(e/2)}function oc(s,e,t=!1){let r=s.length,n=ic(e),i=Qi(e);if(r<16||r<i||r>1024)throw new Error(`expected ${i}-1024 bytes of input, got ${r}`);let o=t?pt(s):Ct(s),a=j(o,e-Y)+Y;return t?Jt(a,n):Lt(a,n)}var Mf=BigInt(0),eo=BigInt(1);function Wr(s,e){let t=(n,i)=>{let o=i.negate();return n?o:i},r=n=>{let i=Math.ceil(e/n)+1,o=2**(n-1);return{windows:i,windowSize:o}};return{constTimeNegate:t,unsafeLadder(n,i){let o=s.ZERO,a=n;for(;i>Mf;)i&eo&&(o=o.add(a)),a=a.double(),i>>=eo;return o},precomputeWindow(n,i){let{windows:o,windowSize:a}=r(i),c=[],f=n,l=f;for(let u=0;u<o;u++){l=f,c.push(l);for(let h=1;h<a;h++)l=l.add(f),c.push(l);f=l.double()}return c},wNAF(n,i,o){let{windows:a,windowSize:c}=r(n),f=s.ZERO,l=s.BASE,u=BigInt(2**n-1),h=2**n,p=BigInt(n);for(let g=0;g<a;g++){let d=g*c,m=Number(o&u);o>>=p,m>c&&(m-=h,o+=eo);let b=d,_=d+Math.abs(m)-1,w=g%2!==0,A=m<0;m===0?l=l.add(t(w,i[b])):f=f.add(t(A,i[_]))}return{p:f,f:l}},wNAFCached(n,i,o,a){let c=n._WINDOW_SIZE||1,f=i.get(n);return f||(f=this.precomputeWindow(n,c),c!==1&&i.set(n,a(f))),this.wNAF(c,f,o)}}}function Qs(s){return Xi(s.Fp),Xe(s,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...Ji(s.n,s.nBitLength),...s,p:s.Fp.ORDER})}var We=BigInt(0),Le=BigInt(1),$r=BigInt(2),Df=BigInt(8),Nf={zip215:!0};function Cf(s){let e=Qs(s);return Xe(s,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...e})}function jr(s){let e=Cf(s),{Fp:t,n:r,prehash:n,hash:i,randomBytes:o,nByteLength:a,h:c}=e,f=$r<<BigInt(a*8)-Le,l=t.create,u=e.uvRatio||((I,v)=>{try{return{isValid:!0,value:t.sqrt(I*t.inv(v))}}catch{return{isValid:!1,value:We}}}),h=e.adjustScalarBytes||(I=>I),p=e.domain||((I,v,P)=>{if(v.length||P)throw new Error("Contexts/pre-hash are not supported");return I}),g=I=>typeof I=="bigint"&&We<I,d=(I,v)=>g(I)&&g(v)&&I<v,m=I=>I===We||d(I,f);function b(I,v){if(d(I,v))return I;throw new Error(`Expected valid scalar < ${v}, got ${typeof I} ${I}`)}function _(I){return I===We?I:b(I,r)}let w=new Map;function A(I){if(!(I instanceof y))throw new Error("ExtendedPoint expected")}class y{constructor(v,P,M,C){if(this.ex=v,this.ey=P,this.ez=M,this.et=C,!m(v))throw new Error("x required");if(!m(P))throw new Error("y required");if(!m(M))throw new Error("z required");if(!m(C))throw new Error("t required")}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(v){if(v instanceof y)throw new Error("extended point not allowed");let{x:P,y:M}=v||{};if(!m(P)||!m(M))throw new Error("invalid affine point");return new y(P,M,Le,l(P*M))}static normalizeZ(v){let P=t.invertBatch(v.map(M=>M.ez));return v.map((M,C)=>M.toAffine(P[C])).map(y.fromAffine)}_setWindowSize(v){this._WINDOW_SIZE=v,w.delete(this)}assertValidity(){let{a:v,d:P}=e;if(this.is0())throw new Error("bad point: ZERO");let{ex:M,ey:C,ez:O,et:F}=this,z=l(M*M),G=l(C*C),K=l(O*O),ie=l(K*K),ee=l(z*v),fe=l(K*l(ee+G)),de=l(ie+l(P*l(z*G)));if(fe!==de)throw new Error("bad point: equation left != right (1)");let ae=l(M*C),ge=l(O*F);if(ae!==ge)throw new Error("bad point: equation left != right (2)")}equals(v){A(v);let{ex:P,ey:M,ez:C}=this,{ex:O,ey:F,ez:z}=v,G=l(P*z),K=l(O*C),ie=l(M*z),ee=l(F*C);return G===K&&ie===ee}is0(){return this.equals(y.ZERO)}negate(){return new y(l(-this.ex),this.ey,this.ez,l(-this.et))}double(){let{a:v}=e,{ex:P,ey:M,ez:C}=this,O=l(P*P),F=l(M*M),z=l($r*l(C*C)),G=l(v*O),K=P+M,ie=l(l(K*K)-O-F),ee=G+F,fe=ee-z,de=G-F,ae=l(ie*fe),ge=l(ee*de),ot=l(ie*de),zt=l(fe*ee);return new y(ae,ge,zt,ot)}add(v){A(v);let{a:P,d:M}=e,{ex:C,ey:O,ez:F,et:z}=this,{ex:G,ey:K,ez:ie,et:ee}=v;if(P===BigInt(-1)){let Mo=l((O-C)*(K+G)),Do=l((O+C)*(K-G)),Wn=l(Do-Mo);if(Wn===We)return this.double();let No=l(F*$r*ee),Co=l(z*$r*ie),Lo=Co+No,Uo=Do+Mo,Vo=Co-No,Wl=l(Lo*Wn),$l=l(Uo*Vo),jl=l(Lo*Vo),Zl=l(Wn*Uo);return new y(Wl,$l,Zl,jl)}let fe=l(C*G),de=l(O*K),ae=l(z*M*ee),ge=l(F*ie),ot=l((C+O)*(G+K)-fe-de),zt=ge-ae,Fs=ge+ae,Ro=l(de-P*fe),Gl=l(ot*zt),Kl=l(Fs*Ro),zl=l(ot*Ro),ql=l(zt*Fs);return new y(Gl,Kl,ql,zl)}subtract(v){return this.add(v.negate())}wNAF(v){return B.wNAFCached(this,w,v,y.normalizeZ)}multiply(v){let{p:P,f:M}=this.wNAF(b(v,r));return y.normalizeZ([P,M])[0]}multiplyUnsafe(v){let P=_(v);return P===We?E:this.equals(E)||P===Le?this:this.equals(x)?this.wNAF(P).p:B.unsafeLadder(this,P)}isSmallOrder(){return this.multiplyUnsafe(c).is0()}isTorsionFree(){return B.unsafeLadder(this,r).is0()}toAffine(v){let{ex:P,ey:M,ez:C}=this,O=this.is0();v==null&&(v=O?Df:t.inv(C));let F=l(P*v),z=l(M*v),G=l(C*v);if(O)return{x:We,y:Le};if(G!==Le)throw new Error("invZ was invalid");return{x:F,y:z}}clearCofactor(){let{h:v}=e;return v===Le?this:this.multiplyUnsafe(v)}static fromHex(v,P=!1){let{d:M,a:C}=e,O=t.BYTES;v=se("pointHex",v,O);let F=v.slice(),z=v[O-1];F[O-1]=z&-129;let G=Ct(F);G===We||(P?b(G,f):b(G,t.ORDER));let K=l(G*G),ie=l(K-Le),ee=l(M*K-C),{isValid:fe,value:de}=u(ie,ee);if(!fe)throw new Error("Point.fromHex: invalid y coordinate");let ae=(de&Le)===Le,ge=(z&128)!==0;if(!P&&de===We&&ge)throw new Error("Point.fromHex: x=0 and x_0=1");return ge!==ae&&(de=l(-de)),y.fromAffine({x:de,y:G})}static fromPrivateKey(v){return L(v).point}toRawBytes(){let{x:v,y:P}=this.toAffine(),M=Jt(P,t.BYTES);return M[M.length-1]|=v&Le?128:0,M}toHex(){return dt(this.toRawBytes())}}y.BASE=new y(e.Gx,e.Gy,Le,l(e.Gx*e.Gy)),y.ZERO=new y(We,Le,Le,We);let{BASE:x,ZERO:E}=y,B=Wr(y,a*8);function D(I){return j(I,r)}function N(I){return D(Ct(I))}function L(I){let v=a;I=se("private key",I,v);let P=se("hashed private key",i(I),2*v),M=h(P.slice(0,v)),C=P.slice(v,2*v),O=N(M),F=x.multiply(O),z=F.toRawBytes();return{head:M,prefix:C,scalar:O,point:F,pointBytes:z}}function ne(I){return L(I).pointBytes}function re(I=new Uint8Array,...v){let P=gt(...v);return N(i(p(P,se("context",I),!!n)))}function Ve(I,v,P={}){I=se("message",I),n&&(I=n(I));let{prefix:M,scalar:C,pointBytes:O}=L(v),F=re(P.context,M,I),z=x.multiply(F).toRawBytes(),G=re(P.context,z,O,I),K=D(F+G*C);_(K);let ie=gt(z,Jt(K,t.BYTES));return se("result",ie,a*2)}let S=Nf;function R(I,v,P,M=S){let{context:C,zip215:O}=M,F=t.BYTES;I=se("signature",I,2*F),v=se("message",v),n&&(v=n(v));let z=Ct(I.slice(F,2*F)),G,K,ie;try{G=y.fromHex(P,O),K=y.fromHex(I.slice(0,F),O),ie=x.multiplyUnsafe(z)}catch{return!1}if(!O&&G.isSmallOrder())return!1;let ee=re(C,K.toRawBytes(),G.toRawBytes(),v);return K.add(G.multiplyUnsafe(ee)).subtract(ie).clearCofactor().equals(y.ZERO)}return x._setWindowSize(8),{CURVE:e,getPublicKey:ne,sign:Ve,verify:R,ExtendedPoint:y,utils:{getExtendedPublicKey:L,randomPrivateKey:()=>o(t.BYTES),precompute(I=8,v=y.BASE){return v._setWindowSize(I),v.multiply(BigInt(3)),v}}}}var so=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),ac=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),yb=BigInt(0),Lf=BigInt(1),to=BigInt(2),Uf=BigInt(5),cc=BigInt(10),Vf=BigInt(20),Of=BigInt(40),lc=BigInt(80);function Ff(s){let e=so,r=s*s%e*s%e,n=X(r,to,e)*r%e,i=X(n,Lf,e)*s%e,o=X(i,Uf,e)*i%e,a=X(o,cc,e)*o%e,c=X(a,Vf,e)*a%e,f=X(c,Of,e)*c%e,l=X(f,lc,e)*f%e,u=X(l,lc,e)*f%e,h=X(u,cc,e)*o%e;return{pow_p_5_8:X(h,to,e)*s%e,b2:r}}function Hf(s){return s[0]&=248,s[31]&=127,s[31]|=64,s}function Gf(s,e){let t=so,r=j(e*e*e,t),n=j(r*r*e,t),i=Ff(s*n).pow_p_5_8,o=j(s*r*i,t),a=j(e*o*o,t),c=o,f=j(o*ac,t),l=a===s,u=a===j(-s,t),h=a===j(-s*ac,t);return l&&(o=c),(u||h)&&(o=f),rc(o,t)&&(o=j(-o,t)),{isValid:l||u,value:o}}var mt=qr(so,void 0,!0),ro={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:mt,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:As,randomBytes:Ss,adjustScalarBytes:Hf,uvRatio:Gf},Ts=jr(ro);function uc(s,e,t){if(e.length>255)throw new Error("Context is too big");return Or(zi("SigEd25519 no Ed25519 collisions"),new Uint8Array([t?1:0,e.length]),e,s)}var wb=jr({...ro,domain:uc}),vb=jr({...ro,domain:uc,prehash:As});var Kf=(mt.ORDER+BigInt(3))/BigInt(8),xb=mt.pow(to,Kf),Eb=mt.sqrt(mt.neg(mt.ONE)),_b=(mt.ORDER-BigInt(5))/BigInt(8),Bb=BigInt(486662);var Sb=nc(mt,mt.neg(BigInt(486664)));var Ib=BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),Ab=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),kb=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),Tb=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952");var Pb=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");var Ps=32,bt=64,Zr=32;function hc(){let s=Ts.utils.randomPrivateKey(),e=Ts.getPublicKey(s);return{privateKey:gc(s,e),publicKey:e}}function fc(s){if(s.length!==Zr)throw new TypeError('"seed" must be 32 bytes in length.');if(!(s instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');let e=s,t=Ts.getPublicKey(e);return{privateKey:gc(e,t),publicKey:t}}function dc(s,e){let t=s.subarray(0,Zr);return Ts.sign(e instanceof Uint8Array?e:e.subarray(),t)}function pc(s,e,t){return Ts.verify(e,t instanceof Uint8Array?t:t.subarray(),s)}function gc(s,e){let t=new Uint8Array(bt);for(let r=0;r<Zr;r++)t[r]=s[r],t[Zr+r]=e[r];return t}var no={alg:"A128GCM",ext:!0,k:"scm9jmO_4BJAgdwWGVulLg",key_ops:["encrypt","decrypt"],kty:"oct"};function mc(s){let e=s?.algorithm??"AES-GCM",t=s?.keyLength??16,r=s?.nonceLength??12,n=s?.digest??"SHA-256",i=s?.saltLength??16,o=s?.iterations??32767,a=Te.get();t*=8;async function c(u,h){let p=a.getRandomValues(new Uint8Array(i)),g=a.getRandomValues(new Uint8Array(r)),d={name:e,iv:g};typeof h=="string"&&(h=Z(h));let m;if(h.length===0){m=await a.subtle.importKey("jwk",no,{name:"AES-GCM"},!0,["encrypt"]);try{let _={name:"PBKDF2",salt:p,iterations:o,hash:{name:n}},w=await a.subtle.importKey("raw",h,{name:"PBKDF2"},!1,["deriveKey"]);m=await a.subtle.deriveKey(_,w,{name:e,length:t},!0,["encrypt"])}catch{m=await a.subtle.importKey("jwk",no,{name:"AES-GCM"},!0,["encrypt"])}}else{let _={name:"PBKDF2",salt:p,iterations:o,hash:{name:n}},w=await a.subtle.importKey("raw",h,{name:"PBKDF2"},!1,["deriveKey"]);m=await a.subtle.deriveKey(_,w,{name:e,length:t},!0,["encrypt"])}let b=await a.subtle.encrypt(d,m,u);return Ye([p,d.iv,new Uint8Array(b)])}async function f(u,h){let p=u.subarray(0,i),g=u.subarray(i,i+r),d=u.subarray(i+r),m={name:e,iv:g};typeof h=="string"&&(h=Z(h));let b;if(h.length===0)try{let w={name:"PBKDF2",salt:p,iterations:o,hash:{name:n}},A=await a.subtle.importKey("raw",h,{name:"PBKDF2"},!1,["deriveKey"]);b=await a.subtle.deriveKey(w,A,{name:e,length:t},!0,["decrypt"])}catch{b=await a.subtle.importKey("jwk",no,{name:"AES-GCM"},!0,["decrypt"])}else{let w={name:"PBKDF2",salt:p,iterations:o,hash:{name:n}},A=await a.subtle.importKey("raw",h,{name:"PBKDF2"},!1,["deriveKey"]);b=await a.subtle.deriveKey(w,A,{name:e,length:t},!0,["decrypt"])}let _=await a.subtle.decrypt(m,b,d);return new Uint8Array(_)}return{encrypt:c,decrypt:f}}async function Rs(s,e){let r=await mc().encrypt(s,e);return ai.encode(r)}var J;(function(s){s.RSA="RSA",s.Ed25519="Ed25519",s.Secp256k1="Secp256k1"})(J||(J={}));var io;(function(s){s[s.RSA=0]="RSA",s[s.Ed25519=1]="Ed25519",s[s.Secp256k1=2]="Secp256k1"})(io||(io={}));(function(s){s.codec=()=>Gi(io)})(J||(J={}));var Je;(function(s){let e;s.codec=()=>(e==null&&(e=De((t,r,n={})=>{n.lengthDelimited!==!1&&r.fork(),t.Type!=null&&(r.uint32(8),J.codec().encode(t.Type,r)),t.Data!=null&&(r.uint32(18),r.bytes(t.Data)),n.lengthDelimited!==!1&&r.ldelim()},(t,r)=>{let n={},i=r==null?t.len:t.pos+r;for(;t.pos<i;){let o=t.uint32();switch(o>>>3){case 1:n.Type=J.codec().decode(t);break;case 2:n.Data=t.bytes();break;default:t.skipType(o&7);break}}return n})),e),s.encode=t=>Me(t,s.codec()),s.decode=t=>Re(t,s.codec())})(Je||(Je={}));var Qe;(function(s){let e;s.codec=()=>(e==null&&(e=De((t,r,n={})=>{n.lengthDelimited!==!1&&r.fork(),t.Type!=null&&(r.uint32(8),J.codec().encode(t.Type,r)),t.Data!=null&&(r.uint32(18),r.bytes(t.Data)),n.lengthDelimited!==!1&&r.ldelim()},(t,r)=>{let n={},i=r==null?t.len:t.pos+r;for(;t.pos<i;){let o=t.uint32();switch(o>>>3){case 1:n.Type=J.codec().decode(t);break;case 2:n.Data=t.bytes();break;default:t.skipType(o&7);break}}return n})),e),s.encode=t=>Me(t,s.codec()),s.decode=t=>Re(t,s.codec())})(Qe||(Qe={}));var er=class{_key;constructor(e){this._key=Ms(e,Ps)}verify(e,t){return pc(this._key,t,e)}marshal(){return this._key}get bytes(){return Je.encode({Type:J.Ed25519,Data:this.marshal()}).subarray()}equals(e){return be(this.bytes,e.bytes)}hash(){let e=ce.digest(this.bytes);return Fe(e)?e.then(({bytes:t})=>t):e.bytes}},es=class{_key;_publicKey;constructor(e,t){this._key=Ms(e,bt),this._publicKey=Ms(t,Ps)}sign(e){return dc(this._key,e)}get public(){return new er(this._publicKey)}marshal(){return this._key}get bytes(){return Qe.encode({Type:J.Ed25519,Data:this.marshal()}).subarray()}equals(e){return be(this.bytes,e.bytes)}async hash(){let e=ce.digest(this.bytes),t;return Fe(e)?{bytes:t}=await e:t=e.bytes,t}async id(){let e=ls.digest(this.public.bytes);return me.encode(e.bytes).substring(1)}async export(e,t="libp2p-key"){if(t==="libp2p-key")return Rs(this.bytes,e);throw new T(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function Wf(s){if(s.length>bt){s=Ms(s,bt+Ps);let r=s.subarray(0,bt),n=s.subarray(bt,s.length);return new es(r,n)}s=Ms(s,bt);let e=s.subarray(0,bt),t=s.subarray(Ps);return new es(e,t)}function $f(s){return s=Ms(s,Ps),new er(s)}async function jf(){let{privateKey:s,publicKey:e}=hc();return new es(s,e)}async function bc(s){let{privateKey:e,publicKey:t}=fc(s);return new es(e,t)}function Ms(s,e){if(s=Uint8Array.from(s??[]),s.length!==e)throw new T(`Key must be a Uint8Array of length ${e}, got ${s.length}`,"ERR_INVALID_KEY_TYPE");return s}function W(s,e="utf8"){let t=Ir[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return t.encoder.encode(s).substring(1)}var bo={};ue(bo,{MAX_RSA_KEY_SIZE:()=>fr,RsaPrivateKey:()=>Us,RsaPublicKey:()=>hr,fromJwk:()=>xd,generateKeyPair:()=>Ed,unmarshalRsaPrivateKey:()=>go,unmarshalRsaPublicKey:()=>vd});function et(s){if(isNaN(s)||s<=0)throw new T("random bytes length must be a Number bigger than 0","ERR_INVALID_LENGTH");return Ss(s)}var Ft={};ue(Ft,{exportToPem:()=>gd,importFromPem:()=>md,jwkToPkcs1:()=>hd,jwkToPkix:()=>dd,pkcs1ToJwk:()=>ud,pkixToJwk:()=>fd});var Xr=class extends _s{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,Ur(e);let r=Rt(t);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let n=this.blockLen,i=new Uint8Array(n);i.set(r.length>n?e.create().update(r).digest():r);for(let o=0;o<i.length;o++)i[o]^=54;this.iHash.update(i),this.oHash=e.create();for(let o=0;o<i.length;o++)i[o]^=106;this.oHash.update(i),i.fill(0)}update(e){return Es(this),this.iHash.update(e),this}digestInto(e){Es(this),xs(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){let e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));let{oHash:t,iHash:r,finished:n,destroyed:i,blockLen:o,outputLen:a}=this;return e=e,e.finished=n,e.destroyed=i,e.blockLen=o,e.outputLen=a,e.oHash=t._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}},tr=(s,e,t)=>new Xr(s,e).update(t).digest();tr.create=(s,e)=>new Xr(s,e);function Zf(s,e,t,r){Ur(s);let n=$a({dkLen:32,asyncTick:10},r),{c:i,dkLen:o,asyncTick:a}=n;if(vs(i),vs(o),vs(a),i<1)throw new Error("PBKDF2: iterations (c) should be >= 1");let c=Rt(e),f=Rt(t),l=new Uint8Array(o),u=tr.create(s,c),h=u._cloneInto().update(f);return{c:i,dkLen:o,asyncTick:a,DK:l,PRF:u,PRFSalt:h}}function Yf(s,e,t,r,n){return s.destroy(),e.destroy(),r&&r.destroy(),n.fill(0),t}async function ao(s,e,t,r){let{c:n,dkLen:i,asyncTick:o,DK:a,PRF:c,PRFSalt:f}=Zf(s,e,t,r),l,u=new Uint8Array(4),h=Bs(u),p=new Uint8Array(c.outputLen);for(let g=1,d=0;d<i;g++,d+=c.outputLen){let m=a.subarray(d,d+c.outputLen);h.setInt32(0,g,!1),(l=f._cloneInto(l)).update(u).digestInto(p),m.set(p.subarray(0,m.length)),await Wa(n-1,o,()=>{c._cloneInto(l).update(p).digestInto(p);for(let b=0;b<m.length;b++)m[b]^=p[b]})}return Yf(c,f,a,l,p)}var H=jn(yc());function ts(s,e){let t=0;if(s.length===1)return s[0];for(let r=s.length-1;r>=0;r--)t+=s[s.length-1-r]*Math.pow(2,e*r);return t}function Ut(s,e,t=-1){let r=t,n=s,i=0,o=Math.pow(2,e);for(let a=1;a<8;a++){if(s<o){let c;if(r<0)c=new ArrayBuffer(a),i=a;else{if(r<a)return new ArrayBuffer(0);c=new ArrayBuffer(r),i=r}let f=new Uint8Array(c);for(let l=a-1;l>=0;l--){let u=Math.pow(2,l*e);f[i-l-1]=Math.floor(n/u),n-=f[i-l-1]*u}return c}o*=Math.pow(2,e)}return new ArrayBuffer(0)}function en(...s){let e=0,t=0;for(let i of s)e+=i.length;let r=new ArrayBuffer(e),n=new Uint8Array(r);for(let i of s)n.set(i,t),t+=i.length;return n}function lo(){let s=new Uint8Array(this.valueHex);if(this.valueHex.byteLength>=2){let a=s[0]===255&&s[1]&128,c=s[0]===0&&(s[1]&128)===0;(a||c)&&this.warnings.push("Needlessly long format")}let e=new ArrayBuffer(this.valueHex.byteLength),t=new Uint8Array(e);for(let a=0;a<this.valueHex.byteLength;a++)t[a]=0;t[0]=s[0]&128;let r=ts(t,8),n=new ArrayBuffer(this.valueHex.byteLength),i=new Uint8Array(n);for(let a=0;a<this.valueHex.byteLength;a++)i[a]=s[a];return i[0]&=127,ts(i,8)-r}function wc(s){let e=s<0?s*-1:s,t=128;for(let r=1;r<8;r++){if(e<=t){if(s<0){let o=t-e,a=Ut(o,8,r),c=new Uint8Array(a);return c[0]|=128,a}let n=Ut(e,8,r),i=new Uint8Array(n);if(i[0]&128){let o=n.slice(0),a=new Uint8Array(o);n=new ArrayBuffer(n.byteLength+1),i=new Uint8Array(n);for(let c=0;c<o.byteLength;c++)i[c+1]=a[c];i[0]=0}return n}t*=Math.pow(2,8)}return new ArrayBuffer(0)}function vc(s,e){if(s.byteLength!==e.byteLength)return!1;let t=new Uint8Array(s),r=new Uint8Array(e);for(let n=0;n<t.length;n++)if(t[n]!==r[n])return!1;return!0}function Ne(s,e){let t=s.toString(10);if(e<t.length)return"";let r=e-t.length,n=new Array(r);for(let o=0;o<r;o++)n[o]="0";return n.join("").concat(t)}var iy=Math.log(2);function tn(){if(typeof BigInt>"u")throw new Error("BigInt is not defined. Your environment doesn't implement BigInt.")}function uo(s){let e=0,t=0;for(let n=0;n<s.length;n++){let i=s[n];e+=i.byteLength}let r=new Uint8Array(e);for(let n=0;n<s.length;n++){let i=s[n];r.set(new Uint8Array(i),t),t+=i.byteLength}return r.buffer}function Et(s,e,t,r){return e instanceof Uint8Array?e.byteLength?t<0?(s.error="Wrong parameter: inputOffset less than zero",!1):r<0?(s.error="Wrong parameter: inputLength less than zero",!1):e.byteLength-t-r<0?(s.error="End of input reached before message was fully decoded (inconsistent offset and length values)",!1):!0:(s.error="Wrong parameter: inputBuffer has zero length",!1):(s.error="Wrong parameter: inputBuffer must be 'Uint8Array'",!1)}var rr=class{constructor(){this.items=[]}write(e){this.items.push(e)}final(){return uo(this.items)}},sr=[new Uint8Array([1])],xc="0123456789";var Cs="",je=new ArrayBuffer(0),ho=new Uint8Array(0),nr="EndOfContent",_c="OCTET STRING",Bc="BIT STRING";function _t(s){var e;return e=class extends s{constructor(...r){var n;super(...r);let i=r[0]||{};this.isHexOnly=(n=i.isHexOnly)!==null&&n!==void 0?n:!1,this.valueHexView=i.valueHex?H.BufferSourceConverter.toUint8Array(i.valueHex):ho}get valueHex(){return this.valueHexView.slice().buffer}set valueHex(r){this.valueHexView=new Uint8Array(r)}fromBER(r,n,i){let o=r instanceof ArrayBuffer?new Uint8Array(r):r;if(!Et(this,o,n,i))return-1;let a=n+i;return this.valueHexView=o.subarray(n,a),this.valueHexView.length?(this.blockLength=i,a):(this.warnings.push("Zero buffer length"),n)}toBER(r=!1){return this.isHexOnly?r?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.byteLength===this.valueHexView.buffer.byteLength?this.valueHexView.buffer:this.valueHexView.slice().buffer:(this.error="Flag 'isHexOnly' is not set, abort",je)}toJSON(){return{...super.toJSON(),isHexOnly:this.isHexOnly,valueHex:H.Convert.ToHex(this.valueHexView)}}},e.NAME="hexBlock",e}var wt=class{constructor({blockLength:e=0,error:t=Cs,warnings:r=[],valueBeforeDecode:n=ho}={}){this.blockLength=e,this.error=t,this.warnings=r,this.valueBeforeDecodeView=H.BufferSourceConverter.toUint8Array(n)}static blockName(){return this.NAME}get valueBeforeDecode(){return this.valueBeforeDecodeView.slice().buffer}set valueBeforeDecode(e){this.valueBeforeDecodeView=new Uint8Array(e)}toJSON(){return{blockName:this.constructor.NAME,blockLength:this.blockLength,error:this.error,warnings:this.warnings,valueBeforeDecode:H.Convert.ToHex(this.valueBeforeDecodeView)}}};wt.NAME="baseBlock";var _e=class extends wt{fromBER(e,t,r){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}toBER(e,t){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}};_e.NAME="valueBlock";var sn=class extends _t(wt){constructor({idBlock:e={}}={}){var t,r,n,i;super(),e?(this.isHexOnly=(t=e.isHexOnly)!==null&&t!==void 0?t:!1,this.valueHexView=e.valueHex?H.BufferSourceConverter.toUint8Array(e.valueHex):ho,this.tagClass=(r=e.tagClass)!==null&&r!==void 0?r:-1,this.tagNumber=(n=e.tagNumber)!==null&&n!==void 0?n:-1,this.isConstructed=(i=e.isConstructed)!==null&&i!==void 0?i:!1):(this.tagClass=-1,this.tagNumber=-1,this.isConstructed=!1)}toBER(e=!1){let t=0;switch(this.tagClass){case 1:t|=0;break;case 2:t|=64;break;case 3:t|=128;break;case 4:t|=192;break;default:return this.error="Unknown tag class",je}if(this.isConstructed&&(t|=32),this.tagNumber<31&&!this.isHexOnly){let n=new Uint8Array(1);if(!e){let i=this.tagNumber;i&=31,t|=i,n[0]=t}return n.buffer}if(!this.isHexOnly){let n=Ut(this.tagNumber,7),i=new Uint8Array(n),o=n.byteLength,a=new Uint8Array(o+1);if(a[0]=t|31,!e){for(let c=0;c<o-1;c++)a[c+1]=i[c]|128;a[o]=i[o-1]}return a.buffer}let r=new Uint8Array(this.valueHexView.byteLength+1);if(r[0]=t|31,!e){let n=this.valueHexView;for(let i=0;i<n.length-1;i++)r[i+1]=n[i]|128;r[this.valueHexView.byteLength]=n[n.length-1]}return r.buffer}fromBER(e,t,r){let n=H.BufferSourceConverter.toUint8Array(e);if(!Et(this,n,t,r))return-1;let i=n.subarray(t,t+r);if(i.length===0)return this.error="Zero buffer length",-1;switch(i[0]&192){case 0:this.tagClass=1;break;case 64:this.tagClass=2;break;case 128:this.tagClass=3;break;case 192:this.tagClass=4;break;default:return this.error="Unknown tag class",-1}this.isConstructed=(i[0]&32)===32,this.isHexOnly=!1;let a=i[0]&31;if(a!==31)this.tagNumber=a,this.blockLength=1;else{let c=1,f=this.valueHexView=new Uint8Array(255),l=255;for(;i[c]&128;){if(f[c-1]=i[c]&127,c++,c>=i.length)return this.error="End of input reached before message was fully decoded",-1;if(c===l){l+=255;let h=new Uint8Array(l);for(let p=0;p<f.length;p++)h[p]=f[p];f=this.valueHexView=new Uint8Array(l)}}this.blockLength=c+1,f[c-1]=i[c]&127;let u=new Uint8Array(c);for(let h=0;h<c;h++)u[h]=f[h];f=this.valueHexView=new Uint8Array(c),f.set(u),this.blockLength<=9?this.tagNumber=ts(f,7):(this.isHexOnly=!0,this.warnings.push("Tag too long, represented as hex-coded"))}if(this.tagClass===1&&this.isConstructed)switch(this.tagNumber){case 1:case 2:case 5:case 6:case 9:case 13:case 14:case 23:case 24:case 31:case 32:case 33:case 34:return this.error="Constructed encoding used for primitive type",-1}return t+this.blockLength}toJSON(){return{...super.toJSON(),tagClass:this.tagClass,tagNumber:this.tagNumber,isConstructed:this.isConstructed}}};sn.NAME="identificationBlock";var rn=class extends wt{constructor({lenBlock:e={}}={}){var t,r,n;super(),this.isIndefiniteForm=(t=e.isIndefiniteForm)!==null&&t!==void 0?t:!1,this.longFormUsed=(r=e.longFormUsed)!==null&&r!==void 0?r:!1,this.length=(n=e.length)!==null&&n!==void 0?n:0}fromBER(e,t,r){let n=H.BufferSourceConverter.toUint8Array(e);if(!Et(this,n,t,r))return-1;let i=n.subarray(t,t+r);if(i.length===0)return this.error="Zero buffer length",-1;if(i[0]===255)return this.error="Length block 0xFF is reserved by standard",-1;if(this.isIndefiniteForm=i[0]===128,this.isIndefiniteForm)return this.blockLength=1,t+this.blockLength;if(this.longFormUsed=!!(i[0]&128),this.longFormUsed===!1)return this.length=i[0],this.blockLength=1,t+this.blockLength;let o=i[0]&127;if(o>8)return this.error="Too big integer",-1;if(o+1>i.length)return this.error="End of input reached before message was fully decoded",-1;let a=t+1,c=n.subarray(a,a+o);return c[o-1]===0&&this.warnings.push("Needlessly long encoded length"),this.length=ts(c,8),this.longFormUsed&&this.length<=127&&this.warnings.push("Unnecessary usage of long length form"),this.blockLength=o+1,t+this.blockLength}toBER(e=!1){let t,r;if(this.length>127&&(this.longFormUsed=!0),this.isIndefiniteForm)return t=new ArrayBuffer(1),e===!1&&(r=new Uint8Array(t),r[0]=128),t;if(this.longFormUsed){let n=Ut(this.length,8);if(n.byteLength>127)return this.error="Too big length",je;if(t=new ArrayBuffer(n.byteLength+1),e)return t;let i=new Uint8Array(n);r=new Uint8Array(t),r[0]=n.byteLength|128;for(let o=0;o<n.byteLength;o++)r[o+1]=i[o];return t}return t=new ArrayBuffer(1),e===!1&&(r=new Uint8Array(t),r[0]=this.length),t}toJSON(){return{...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,longFormUsed:this.longFormUsed,length:this.length}}};rn.NAME="lengthBlock";var k={},pe=class extends wt{constructor({name:e=Cs,optional:t=!1,primitiveSchema:r,...n}={},i){super(n),this.name=e,this.optional=t,r&&(this.primitiveSchema=r),this.idBlock=new sn(n),this.lenBlock=new rn(n),this.valueBlock=i?new i(n):new _e(n)}fromBER(e,t,r){let n=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return n===-1?(this.error=this.valueBlock.error,n):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),n)}toBER(e,t){let r=t||new rr;t||Sc(this);let n=this.idBlock.toBER(e);if(r.write(n),this.lenBlock.isIndefiniteForm)r.write(new Uint8Array([128]).buffer),this.valueBlock.toBER(e,r),r.write(new ArrayBuffer(2));else{let i=this.valueBlock.toBER(e);this.lenBlock.length=i.byteLength;let o=this.lenBlock.toBER(e);r.write(o),r.write(i)}return t?je:r.final()}toJSON(){let e={...super.toJSON(),idBlock:this.idBlock.toJSON(),lenBlock:this.lenBlock.toJSON(),valueBlock:this.valueBlock.toJSON(),name:this.name,optional:this.optional};return this.primitiveSchema&&(e.primitiveSchema=this.primitiveSchema.toJSON()),e}toString(e="ascii"){return e==="ascii"?this.onAsciiEncoding():H.Convert.ToHex(this.toBER())}onAsciiEncoding(){return`${this.constructor.NAME} : ${H.Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`}isEqual(e){if(this===e)return!0;if(!(e instanceof this.constructor))return!1;let t=this.toBER(),r=e.toBER();return vc(t,r)}};pe.NAME="BaseBlock";function Sc(s){if(s instanceof k.Constructed)for(let e of s.valueBlock.value)Sc(e)&&(s.lenBlock.isIndefiniteForm=!0);return!!s.lenBlock.isIndefiniteForm}var nn=class extends pe{constructor({value:e=Cs,...t}={},r){super(t,r),e&&this.fromString(e)}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}fromBER(e,t,r){let n=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return n===-1?(this.error=this.valueBlock.error,n):(this.fromBuffer(this.valueBlock.valueHexView),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),n)}onAsciiEncoding(){return`${this.constructor.NAME} : '${this.valueBlock.value}'`}};nn.NAME="BaseStringBlock";var on=class extends _t(_e){constructor({isHexOnly:e=!0,...t}={}){super(t),this.isHexOnly=e}};on.NAME="PrimitiveValueBlock";var Ic,an=class extends pe{constructor(e={}){super(e,on),this.idBlock.isConstructed=!1}};Ic=an;k.Primitive=Ic;an.NAME="PRIMITIVE";function id(s,e){if(s instanceof e)return s;let t=new e;return t.idBlock=s.idBlock,t.lenBlock=s.lenBlock,t.warnings=s.warnings,t.valueBeforeDecodeView=s.valueBeforeDecodeView,t}function Fn(s,e=0,t=s.length){let r=e,n=new pe({},_e),i=new wt;if(!Et(i,s,e,t))return n.error=i.error,{offset:-1,result:n};if(!s.subarray(e,e+t).length)return n.error="Zero buffer length",{offset:-1,result:n};let a=n.idBlock.fromBER(s,e,t);if(n.idBlock.warnings.length&&n.warnings.concat(n.idBlock.warnings),a===-1)return n.error=n.idBlock.error,{offset:-1,result:n};if(e=a,t-=n.idBlock.blockLength,a=n.lenBlock.fromBER(s,e,t),n.lenBlock.warnings.length&&n.warnings.concat(n.lenBlock.warnings),a===-1)return n.error=n.lenBlock.error,{offset:-1,result:n};if(e=a,t-=n.lenBlock.blockLength,!n.idBlock.isConstructed&&n.lenBlock.isIndefiniteForm)return n.error="Indefinite length form used for primitive encoding form",{offset:-1,result:n};let c=pe;switch(n.idBlock.tagClass){case 1:if(n.idBlock.tagNumber>=37&&n.idBlock.isHexOnly===!1)return n.error="UNIVERSAL 37 and upper tags are reserved by ASN.1 standard",{offset:-1,result:n};switch(n.idBlock.tagNumber){case 0:if(n.idBlock.isConstructed&&n.lenBlock.length>0)return n.error="Type [UNIVERSAL 0] is reserved",{offset:-1,result:n};c=k.EndOfContent;break;case 1:c=k.Boolean;break;case 2:c=k.Integer;break;case 3:c=k.BitString;break;case 4:c=k.OctetString;break;case 5:c=k.Null;break;case 6:c=k.ObjectIdentifier;break;case 10:c=k.Enumerated;break;case 12:c=k.Utf8String;break;case 13:c=k.RelativeObjectIdentifier;break;case 14:c=k.TIME;break;case 15:return n.error="[UNIVERSAL 15] is reserved by ASN.1 standard",{offset:-1,result:n};case 16:c=k.Sequence;break;case 17:c=k.Set;break;case 18:c=k.NumericString;break;case 19:c=k.PrintableString;break;case 20:c=k.TeletexString;break;case 21:c=k.VideotexString;break;case 22:c=k.IA5String;break;case 23:c=k.UTCTime;break;case 24:c=k.GeneralizedTime;break;case 25:c=k.GraphicString;break;case 26:c=k.VisibleString;break;case 27:c=k.GeneralString;break;case 28:c=k.UniversalString;break;case 29:c=k.CharacterString;break;case 30:c=k.BmpString;break;case 31:c=k.DATE;break;case 32:c=k.TimeOfDay;break;case 33:c=k.DateTime;break;case 34:c=k.Duration;break;default:{let f=n.idBlock.isConstructed?new k.Constructed:new k.Primitive;f.idBlock=n.idBlock,f.lenBlock=n.lenBlock,f.warnings=n.warnings,n=f}}break;case 2:case 3:case 4:default:c=n.idBlock.isConstructed?k.Constructed:k.Primitive}return n=id(n,c),a=n.fromBER(s,e,n.lenBlock.isIndefiniteForm?t:n.lenBlock.length),n.valueBeforeDecodeView=s.subarray(r,r+n.blockLength),{offset:a,result:n}}function Ls(s){if(!s.byteLength){let e=new pe({},_e);return e.error="Input buffer has zero length",{offset:-1,result:e}}return Fn(H.BufferSourceConverter.toUint8Array(s).slice(),0,s.byteLength)}function od(s,e){return s?1:e}var tt=class extends _e{constructor({value:e=[],isIndefiniteForm:t=!1,...r}={}){super(r),this.value=e,this.isIndefiniteForm=t}fromBER(e,t,r){let n=H.BufferSourceConverter.toUint8Array(e);if(!Et(this,n,t,r))return-1;if(this.valueBeforeDecodeView=n.subarray(t,t+r),this.valueBeforeDecodeView.length===0)return this.warnings.push("Zero buffer length"),t;let i=t;for(;od(this.isIndefiniteForm,r)>0;){let o=Fn(n,i,r);if(o.offset===-1)return this.error=o.result.error,this.warnings.concat(o.result.warnings),-1;if(i=o.offset,this.blockLength+=o.result.blockLength,r-=o.result.blockLength,this.value.push(o.result),this.isIndefiniteForm&&o.result.constructor.NAME===nr)break}return this.isIndefiniteForm&&(this.value[this.value.length-1].constructor.NAME===nr?this.value.pop():this.warnings.push("No EndOfContent block encoded")),i}toBER(e,t){let r=t||new rr;for(let n=0;n<this.value.length;n++)this.value[n].toBER(e,r);return t?je:r.final()}toJSON(){let e={...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,value:[]};for(let t of this.value)e.value.push(t.toJSON());return e}};tt.NAME="ConstructedValueBlock";var Ac,Vt=class extends pe{constructor(e={}){super(e,tt),this.idBlock.isConstructed=!0}fromBER(e,t,r){this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm;let n=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return n===-1?(this.error=this.valueBlock.error,n):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),n)}onAsciiEncoding(){let e=[];for(let r of this.valueBlock.value)e.push(r.toString("ascii").split(`
+"use strict";var ChainsafeLibp2PGossipsub=(()=>{var jl=Object.create;var lr=Object.defineProperty;var Zl=Object.getOwnPropertyDescriptor;var Jl=Object.getOwnPropertyNames;var Xl=Object.getPrototypeOf,Yl=Object.prototype.hasOwnProperty;var Vo=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports),ve=(s,e)=>{for(var t in e)lr(s,t,{get:e[t],enumerable:!0})},Oo=(s,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of Jl(e))!Yl.call(s,n)&&n!==t&&lr(s,n,{get:()=>e[n],enumerable:!(r=Zl(e,n))||r.enumerable});return s};var Ho=(s,e,t)=>(t=s!=null?jl(Xl(s)):{},Oo(e||!s||!s.__esModule?lr(t,"default",{value:s,enumerable:!0}):t,s)),Ql=s=>Oo(lr({},"__esModule",{value:!0}),s);var za=Vo(ys=>{"use strict";var Pf="[object ArrayBuffer]",pt=class s{static isArrayBuffer(e){return Object.prototype.toString.call(e)===Pf}static toArrayBuffer(e){return this.isArrayBuffer(e)?e:e.byteLength===e.buffer.byteLength||e.byteOffset===0&&e.byteLength===e.buffer.byteLength?e.buffer:this.toUint8Array(e.buffer).slice(e.byteOffset,e.byteOffset+e.byteLength).buffer}static toUint8Array(e){return this.toView(e,Uint8Array)}static toView(e,t){if(e.constructor===t)return e;if(this.isArrayBuffer(e))return new t(e);if(this.isArrayBufferView(e))return new t(e.buffer,e.byteOffset,e.byteLength);throw new TypeError("The provided value is not of type '(ArrayBuffer or ArrayBufferView)'")}static isBufferSource(e){return this.isArrayBufferView(e)||this.isArrayBuffer(e)}static isArrayBufferView(e){return ArrayBuffer.isView(e)||e&&this.isArrayBuffer(e.buffer)}static isEqual(e,t){let r=s.toUint8Array(e),n=s.toUint8Array(t);if(r.length!==n.byteLength)return!1;for(let i=0;i<r.length;i++)if(r[i]!==n[i])return!1;return!0}static concat(...e){let t;Array.isArray(e[0])&&!(e[1]instanceof Function)||Array.isArray(e[0])&&e[1]instanceof Function?t=e[0]:e[e.length-1]instanceof Function?t=e.slice(0,e.length-1):t=e;let r=0;for(let o of t)r+=o.byteLength;let n=new Uint8Array(r),i=0;for(let o of t){let a=this.toUint8Array(o);n.set(a,i),i+=a.length}return e[e.length-1]instanceof Function?this.toView(n,e[e.length-1]):n.buffer}},io="string",Mf=/^[0-9a-f]+$/i,Cf=/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/,Df=/^[a-zA-Z0-9-_]+$/,Cr=class{static fromString(e){let t=unescape(encodeURIComponent(e)),r=new Uint8Array(t.length);for(let n=0;n<t.length;n++)r[n]=t.charCodeAt(n);return r.buffer}static toString(e){let t=pt.toUint8Array(e),r="";for(let i=0;i<t.length;i++)r+=String.fromCharCode(t[i]);return decodeURIComponent(escape(r))}},Oe=class{static toString(e,t=!1){let r=pt.toArrayBuffer(e),n=new DataView(r),i="";for(let o=0;o<r.byteLength;o+=2){let a=n.getUint16(o,t);i+=String.fromCharCode(a)}return i}static fromString(e,t=!1){let r=new ArrayBuffer(e.length*2),n=new DataView(r);for(let i=0;i<e.length;i++)n.setUint16(i*2,e.charCodeAt(i),t);return r}},Dr=class s{static isHex(e){return typeof e===io&&Mf.test(e)}static isBase64(e){return typeof e===io&&Cf.test(e)}static isBase64Url(e){return typeof e===io&&Df.test(e)}static ToString(e,t="utf8"){let r=pt.toUint8Array(e);switch(t.toLowerCase()){case"utf8":return this.ToUtf8String(r);case"binary":return this.ToBinary(r);case"hex":return this.ToHex(r);case"base64":return this.ToBase64(r);case"base64url":return this.ToBase64Url(r);case"utf16le":return Oe.toString(r,!0);case"utf16":case"utf16be":return Oe.toString(r);default:throw new Error(`Unknown type of encoding '${t}'`)}}static FromString(e,t="utf8"){if(!e)return new ArrayBuffer(0);switch(t.toLowerCase()){case"utf8":return this.FromUtf8String(e);case"binary":return this.FromBinary(e);case"hex":return this.FromHex(e);case"base64":return this.FromBase64(e);case"base64url":return this.FromBase64Url(e);case"utf16le":return Oe.fromString(e,!0);case"utf16":case"utf16be":return Oe.fromString(e);default:throw new Error(`Unknown type of encoding '${t}'`)}}static ToBase64(e){let t=pt.toUint8Array(e);if(typeof btoa<"u"){let r=this.ToString(t,"binary");return btoa(r)}else return Buffer.from(t).toString("base64")}static FromBase64(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!s.isBase64(t))throw new TypeError("Argument 'base64Text' is not Base64 encoded");return typeof atob<"u"?this.FromBinary(atob(t)):new Uint8Array(Buffer.from(t,"base64")).buffer}static FromBase64Url(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!s.isBase64Url(t))throw new TypeError("Argument 'base64url' is not Base64Url encoded");return this.FromBase64(this.Base64Padding(t.replace(/\-/g,"+").replace(/\_/g,"/")))}static ToBase64Url(e){return this.ToBase64(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"")}static FromUtf8String(e,t=s.DEFAULT_UTF8_ENCODING){switch(t){case"ascii":return this.FromBinary(e);case"utf8":return Cr.fromString(e);case"utf16":case"utf16be":return Oe.fromString(e);case"utf16le":case"usc2":return Oe.fromString(e,!0);default:throw new Error(`Unknown type of encoding '${t}'`)}}static ToUtf8String(e,t=s.DEFAULT_UTF8_ENCODING){switch(t){case"ascii":return this.ToBinary(e);case"utf8":return Cr.toString(e);case"utf16":case"utf16be":return Oe.toString(e);case"utf16le":case"usc2":return Oe.toString(e,!0);default:throw new Error(`Unknown type of encoding '${t}'`)}}static FromBinary(e){let t=e.length,r=new Uint8Array(t);for(let n=0;n<t;n++)r[n]=e.charCodeAt(n);return r.buffer}static ToBinary(e){let t=pt.toUint8Array(e),r="";for(let n=0;n<t.length;n++)r+=String.fromCharCode(t[n]);return r}static ToHex(e){let t=pt.toUint8Array(e),r="",n=t.length;for(let i=0;i<n;i++){let o=t[i];o<16&&(r+="0"),r+=o.toString(16)}return r}static FromHex(e){let t=this.formatString(e);if(!t)return new ArrayBuffer(0);if(!s.isHex(t))throw new TypeError("Argument 'hexString' is not HEX encoded");t.length%2&&(t=`0${t}`);let r=new Uint8Array(t.length/2);for(let n=0;n<t.length;n=n+2){let i=t.slice(n,n+2);r[n/2]=parseInt(i,16)}return r.buffer}static ToUtf16String(e,t=!1){return Oe.toString(e,t)}static FromUtf16String(e,t=!1){return Oe.fromString(e,t)}static Base64Padding(e){let t=4-e.length%4;if(t<4)for(let r=0;r<t;r++)e+="=";return e}static formatString(e){return e?.replace(/[\n\r\t ]/g,"")||""}};Dr.DEFAULT_UTF8_ENCODING="utf8";function Rf(s,...e){let t=arguments[0];for(let r=1;r<arguments.length;r++){let n=arguments[r];for(let i in n)t[i]=n[i]}return t}function Nf(...s){let e=s.map(n=>n.byteLength).reduce((n,i)=>n+i),t=new Uint8Array(e),r=0;return s.map(n=>new Uint8Array(n)).forEach(n=>{for(let i of n)t[r++]=i}),t.buffer}function Lf(s,e){if(!(s&&e)||s.byteLength!==e.byteLength)return!1;let t=new Uint8Array(s),r=new Uint8Array(e);for(let n=0;n<s.byteLength;n++)if(t[n]!==r[n])return!1;return!0}ys.BufferSourceConverter=pt;ys.Convert=Dr;ys.assign=Rf;ys.combine=Nf;ys.isEqual=Lf});var xl=Vo((aw,vl)=>{"use strict";function Q(s,t){var t=t||{};this._capacity=t.capacity,this._head=0,this._tail=0,Array.isArray(s)?this._fromArray(s):(this._capacityMask=3,this._list=new Array(4))}Q.prototype.peekAt=function(e){var t=e;if(t===(t|0)){var r=this.size();if(!(t>=r||t<-r))return t<0&&(t+=r),t=this._head+t&this._capacityMask,this._list[t]}};Q.prototype.get=function(e){return this.peekAt(e)};Q.prototype.peek=function(){if(this._head!==this._tail)return this._list[this._head]};Q.prototype.peekFront=function(){return this.peek()};Q.prototype.peekBack=function(){return this.peekAt(-1)};Object.defineProperty(Q.prototype,"length",{get:function(){return this.size()}});Q.prototype.size=function(){return this._head===this._tail?0:this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};Q.prototype.unshift=function(e){if(arguments.length===0)return this.size();var t=this._list.length;return this._head=this._head-1+t&this._capacityMask,this._list[this._head]=e,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.pop(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};Q.prototype.shift=function(){var e=this._head;if(e!==this._tail){var t=this._list[e];return this._list[e]=void 0,this._head=e+1&this._capacityMask,e<2&&this._tail>1e4&&this._tail<=this._list.length>>>2&&this._shrinkArray(),t}};Q.prototype.push=function(e){if(arguments.length===0)return this.size();var t=this._tail;return this._list[t]=e,this._tail=t+1&this._capacityMask,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.shift(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};Q.prototype.pop=function(){var e=this._tail;if(e!==this._head){var t=this._list.length;this._tail=e-1+t&this._capacityMask;var r=this._list[this._tail];return this._list[this._tail]=void 0,this._head<2&&e>1e4&&e<=t>>>2&&this._shrinkArray(),r}};Q.prototype.removeOne=function(e){var t=e;if(t===(t|0)&&this._head!==this._tail){var r=this.size(),n=this._list.length;if(!(t>=r||t<-r)){t<0&&(t+=r),t=this._head+t&this._capacityMask;var i=this._list[t],o;if(e<r/2){for(o=e;o>0;o--)this._list[t]=this._list[t=t-1+n&this._capacityMask];this._list[t]=void 0,this._head=this._head+1+n&this._capacityMask}else{for(o=r-1-e;o>0;o--)this._list[t]=this._list[t=t+1+n&this._capacityMask];this._list[t]=void 0,this._tail=this._tail-1+n&this._capacityMask}return i}}};Q.prototype.remove=function(e,t){var r=e,n,i=t;if(r===(r|0)&&this._head!==this._tail){var o=this.size(),a=this._list.length;if(!(r>=o||r<-o||t<1)){if(r<0&&(r+=o),t===1||!t)return n=new Array(1),n[0]=this.removeOne(r),n;if(r===0&&r+t>=o)return n=this.toArray(),this.clear(),n;r+t>o&&(t=o-r);var c;for(n=new Array(t),c=0;c<t;c++)n[c]=this._list[this._head+r+c&this._capacityMask];if(r=this._head+r&this._capacityMask,e+t===o){for(this._tail=this._tail-t+a&this._capacityMask,c=t;c>0;c--)this._list[r=r+1+a&this._capacityMask]=void 0;return n}if(e===0){for(this._head=this._head+t+a&this._capacityMask,c=t-1;c>0;c--)this._list[r=r+1+a&this._capacityMask]=void 0;return n}if(r<o/2){for(this._head=this._head+e+t+a&this._capacityMask,c=e;c>0;c--)this.unshift(this._list[r=r-1+a&this._capacityMask]);for(r=this._head-1+a&this._capacityMask;i>0;)this._list[r=r-1+a&this._capacityMask]=void 0,i--;e<0&&(this._tail=r)}else{for(this._tail=r,r=r+t+a&this._capacityMask,c=o-(t+e);c>0;c--)this.push(this._list[r++]);for(r=this._tail;i>0;)this._list[r=r+1+a&this._capacityMask]=void 0,i--}return this._head<2&&this._tail>1e4&&this._tail<=a>>>2&&this._shrinkArray(),n}}};Q.prototype.splice=function(e,t){var r=e;if(r===(r|0)){var n=this.size();if(r<0&&(r+=n),!(r>n))if(arguments.length>2){var i,o,a,c=arguments.length,f=this._list.length,l=2;if(!n||r<n/2){for(o=new Array(r),i=0;i<r;i++)o[i]=this._list[this._head+i&this._capacityMask];for(t===0?(a=[],r>0&&(this._head=this._head+r+f&this._capacityMask)):(a=this.remove(r,t),this._head=this._head+r+f&this._capacityMask);c>l;)this.unshift(arguments[--c]);for(i=r;i>0;i--)this.unshift(o[i-1])}else{o=new Array(n-(r+t));var u=o.length;for(i=0;i<u;i++)o[i]=this._list[this._head+r+t+i&this._capacityMask];for(t===0?(a=[],r!=n&&(this._tail=this._head+r+f&this._capacityMask)):(a=this.remove(r,t),this._tail=this._tail-u+f&this._capacityMask);l<c;)this.push(arguments[l++]);for(i=0;i<u;i++)this.push(o[i])}return a}else return this.remove(r,t)}};Q.prototype.clear=function(){this._list=new Array(this._list.length),this._head=0,this._tail=0};Q.prototype.isEmpty=function(){return this._head===this._tail};Q.prototype.toArray=function(){return this._copyArray(!1)};Q.prototype._fromArray=function(e){var t=e.length,r=this._nextPowerOf2(t);this._list=new Array(r),this._capacityMask=r-1,this._tail=t;for(var n=0;n<t;n++)this._list[n]=e[n]};Q.prototype._copyArray=function(e,t){var r=this._list,n=r.length,i=this.length;if(t=t|i,t==i&&this._head<this._tail)return this._list.slice(this._head,this._tail);var o=new Array(t),a=0,c;if(e||this._head>this._tail){for(c=this._head;c<n;c++)o[a++]=r[c];for(c=0;c<this._tail;c++)o[a++]=r[c]}else for(c=this._head;c<this._tail;c++)o[a++]=r[c];return o};Q.prototype._growArray=function(){if(this._head!=0){var e=this._copyArray(!0,this._list.length<<1);this._tail=this._list.length,this._head=0,this._list=e}else this._tail=this._list.length,this._list.length<<=1;this._capacityMask=this._capacityMask<<1|1};Q.prototype._shrinkArray=function(){this._list.length>>>=1,this._capacityMask>>>=1};Q.prototype._nextPowerOf2=function(e){var t=Math.log(e)/Math.log(2),r=1<<t+1;return Math.max(r,4)};vl.exports=Q});var ip={};ve(ip,{GossipSub:()=>$n,gossipsub:()=>np,multicodec:()=>rp});var Zn=Symbol.for("@libp2p/peer-id");var Ht="StrictSign",es="StrictNoSign",xe;(function(s){s.Accept="accept",s.Ignore="ignore",s.Reject="reject"})(xe||(xe={}));var K=class extends Error{code;props;constructor(e,t,r){super(e),this.code=t,this.name=r?.name??"CodeError",this.props=r??{}}};var j=class extends Error{constructor(e="Invalid parameters"){super(e),this.name="InvalidParametersError"}},ts=class extends Error{constructor(e="Invalid public key"){super(e),this.name="InvalidPublicKeyError"}};var ur=class extends Error{constructor(e="Invalid Multihash"){super(e),this.name="InvalidMultihashError"}};var ss=class extends Error{constructor(e="Unsupported key type"){super(e),this.name="UnsupportedKeyTypeError"}};var Ko=(s,...e)=>{try{[...e]}catch{}};var hr=class extends EventTarget{#e=new Map;constructor(){super(),Ko(1/0,this)}listenerCount(e){let t=this.#e.get(e);return t==null?0:t.length}addEventListener(e,t,r){super.addEventListener(e,t,r);let n=this.#e.get(e);n==null&&(n=[],this.#e.set(e,n)),n.push({callback:t,once:(r!==!0&&r!==!1&&r?.once)??!1})}removeEventListener(e,t,r){super.removeEventListener(e.toString(),t??null,r);let n=this.#e.get(e);n!=null&&(n=n.filter(({callback:i})=>i!==t),this.#e.set(e,n))}dispatchEvent(e){let t=super.dispatchEvent(e),r=this.#e.get(e.type);return r==null||(r=r.filter(({once:n})=>!n),this.#e.set(e.type,r)),t}safeDispatchEvent(e,t={}){return this.dispatchEvent(new CustomEvent(e,t))}};var Go=Symbol.for("@libp2p/service-capabilities"),zo=Symbol.for("@libp2p/service-dependencies");var ei={};ve(ei,{base58btc:()=>se,base58flickr:()=>iu});var Lp=new Uint8Array(0);function qo(s,e){if(s===e)return!0;if(s.byteLength!==e.byteLength)return!1;for(let t=0;t<s.byteLength;t++)if(s[t]!==e[t])return!1;return!0}function at(s){if(s instanceof Uint8Array&&s.constructor.name==="Uint8Array")return s;if(s instanceof ArrayBuffer)return new Uint8Array(s);if(ArrayBuffer.isView(s))return new Uint8Array(s.buffer,s.byteOffset,s.byteLength);throw new Error("Unknown type, must be binary type")}function Wo(s){return new TextEncoder().encode(s)}function $o(s){return new TextDecoder().decode(s)}function eu(s,e){if(s.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),r=0;r<t.length;r++)t[r]=255;for(var n=0;n<s.length;n++){var i=s.charAt(n),o=i.charCodeAt(0);if(t[o]!==255)throw new TypeError(i+" is ambiguous");t[o]=n}var a=s.length,c=s.charAt(0),f=Math.log(a)/Math.log(256),l=Math.log(256)/Math.log(a);function u(g){if(g instanceof Uint8Array||(ArrayBuffer.isView(g)?g=new Uint8Array(g.buffer,g.byteOffset,g.byteLength):Array.isArray(g)&&(g=Uint8Array.from(g))),!(g instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(g.length===0)return"";for(var d=0,m=0,b=0,v=g.length;b!==v&&g[b]===0;)b++,d++;for(var E=(v-b)*l+1>>>0,A=new Uint8Array(E);b!==v;){for(var w=g[b],S=0,B=E-1;(w!==0||S<m)&&B!==-1;B--,S++)w+=256*A[B]>>>0,A[B]=w%a>>>0,w=w/a>>>0;if(w!==0)throw new Error("Non-zero carry");m=S,b++}for(var I=E-m;I!==E&&A[I]===0;)I++;for(var M=c.repeat(d);I<E;++I)M+=s.charAt(A[I]);return M}function h(g){if(typeof g!="string")throw new TypeError("Expected String");if(g.length===0)return new Uint8Array;var d=0;if(g[d]!==" "){for(var m=0,b=0;g[d]===c;)m++,d++;for(var v=(g.length-d)*f+1>>>0,E=new Uint8Array(v);g[d];){var A=t[g.charCodeAt(d)];if(A===255)return;for(var w=0,S=v-1;(A!==0||w<b)&&S!==-1;S--,w++)A+=a*E[S]>>>0,E[S]=A%256>>>0,A=A/256>>>0;if(A!==0)throw new Error("Non-zero carry");b=w,d++}if(g[d]!==" "){for(var B=v-b;B!==v&&E[B]===0;)B++;for(var I=new Uint8Array(m+(v-B)),M=m;B!==v;)I[M++]=E[B++];return I}}}function p(g){var d=h(g);if(d)return d;throw new Error(`Non-${e} character`)}return{encode:u,decodeUnsafe:h,decode:p}}var tu=eu,su=tu,Zo=su;var Jn=class{name;prefix;baseEncode;constructor(e,t,r){this.name=e,this.prefix=t,this.baseEncode=r}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},Xn=class{name;prefix;baseDecode;prefixCodePoint;constructor(e,t,r){if(this.name=e,this.prefix=t,t.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=r}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return Jo(this,e)}},Yn=class{decoders;constructor(e){this.decoders=e}or(e){return Jo(this,e)}decode(e){let t=e[0],r=this.decoders[t];if(r!=null)return r.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};function Jo(s,e){return new Yn({...s.decoders??{[s.prefix]:s},...e.decoders??{[e.prefix]:e}})}var Qn=class{name;prefix;baseEncode;baseDecode;encoder;decoder;constructor(e,t,r,n){this.name=e,this.prefix=t,this.baseEncode=r,this.baseDecode=n,this.encoder=new Jn(e,t,r),this.decoder=new Xn(e,t,n)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}};function rs({name:s,prefix:e,encode:t,decode:r}){return new Qn(s,e,t,r)}function Et({name:s,prefix:e,alphabet:t}){let{encode:r,decode:n}=Zo(t,s);return rs({prefix:e,name:s,encode:r,decode:i=>at(n(i))})}function ru(s,e,t,r){let n={};for(let l=0;l<e.length;++l)n[e[l]]=l;let i=s.length;for(;s[i-1]==="=";)--i;let o=new Uint8Array(i*t/8|0),a=0,c=0,f=0;for(let l=0;l<i;++l){let u=n[s[l]];if(u===void 0)throw new SyntaxError(`Non-${r} character`);c=c<<t|u,a+=t,a>=8&&(a-=8,o[f++]=255&c>>a)}if(a>=t||255&c<<8-a)throw new SyntaxError("Unexpected end of data");return o}function nu(s,e,t){let r=e[e.length-1]==="=",n=(1<<t)-1,i="",o=0,a=0;for(let c=0;c<s.length;++c)for(a=a<<8|s[c],o+=8;o>t;)o-=t,i+=e[n&a>>o];if(o!==0&&(i+=e[n&a<<t-o]),r)for(;i.length*t&7;)i+="=";return i}function ee({name:s,prefix:e,bitsPerChar:t,alphabet:r}){return rs({prefix:e,name:s,encode(n){return nu(n,r,t)},decode(n){return ru(n,r,t,s)}})}var se=Et({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),iu=Et({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var ti={};ve(ti,{base32:()=>Kt,base32hex:()=>lu,base32hexpad:()=>hu,base32hexpadupper:()=>fu,base32hexupper:()=>uu,base32pad:()=>au,base32padupper:()=>cu,base32upper:()=>ou,base32z:()=>du});var Kt=ee({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),ou=ee({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),au=ee({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),cu=ee({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),lu=ee({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),uu=ee({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),hu=ee({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),fu=ee({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),du=ee({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var pu=Qo,Xo=128,gu=127,mu=~gu,bu=Math.pow(2,31);function Qo(s,e,t){e=e||[],t=t||0;for(var r=t;s>=bu;)e[t++]=s&255|Xo,s/=128;for(;s&mu;)e[t++]=s&255|Xo,s>>>=7;return e[t]=s|0,Qo.bytes=t-r+1,e}var yu=si,wu=128,Yo=127;function si(s,r){var t=0,r=r||0,n=0,i=r,o,a=s.length;do{if(i>=a)throw si.bytes=0,new RangeError("Could not decode varint");o=s[i++],t+=n<28?(o&Yo)<<n:(o&Yo)*Math.pow(2,n),n+=7}while(o>=wu);return si.bytes=i-r,t}var vu=Math.pow(2,7),xu=Math.pow(2,14),Eu=Math.pow(2,21),Su=Math.pow(2,28),Bu=Math.pow(2,35),Iu=Math.pow(2,42),_u=Math.pow(2,49),Au=Math.pow(2,56),ku=Math.pow(2,63),Tu=function(s){return s<vu?1:s<xu?2:s<Eu?3:s<Su?4:s<Bu?5:s<Iu?6:s<_u?7:s<Au?8:s<ku?9:10},Pu={encode:pu,decode:yu,encodingLength:Tu},Mu=Pu,Ds=Mu;function Rs(s,e=0){return[Ds.decode(s,e),Ds.decode.bytes]}function ns(s,e,t=0){return Ds.encode(s,e,t),e}function is(s){return Ds.encodingLength(s)}function Ge(s,e){let t=e.byteLength,r=is(s),n=r+is(t),i=new Uint8Array(n+t);return ns(s,i,0),ns(t,i,r),i.set(e,n),new os(s,t,e,i)}function ze(s){let e=at(s),[t,r]=Rs(e),[n,i]=Rs(e.subarray(r)),o=e.subarray(r+i);if(o.byteLength!==n)throw new Error("Incorrect length");return new os(t,n,o,e)}function ea(s,e){if(s===e)return!0;{let t=e;return s.code===t.code&&s.size===t.size&&t.bytes instanceof Uint8Array&&qo(s.bytes,t.bytes)}}var os=class{code;size;digest;bytes;constructor(e,t,r,n){this.code=e,this.size=t,this.digest=r,this.bytes=n}};function ta(s,e){let{bytes:t,version:r}=s;switch(r){case 0:return Du(t,ri(s),e??se.encoder);default:return Ru(t,ri(s),e??Kt.encoder)}}var sa=new WeakMap;function ri(s){let e=sa.get(s);if(e==null){let t=new Map;return sa.set(s,t),t}return e}var Te=class s{code;version;multihash;bytes;"/";constructor(e,t,r,n){this.code=t,this.version=e,this.multihash=r,this.bytes=n,this["/"]=n}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{let{code:e,multihash:t}=this;if(e!==Ns)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==Nu)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return s.createV0(t)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{let{code:e,digest:t}=this.multihash,r=Ge(e,t);return s.createV1(this.code,r)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return s.equals(this,e)}static equals(e,t){let r=t;return r!=null&&e.code===r.code&&e.version===r.version&&ea(e.multihash,r.multihash)}toString(e){return ta(this,e)}toJSON(){return{"/":ta(this)}}link(){return this}[Symbol.toStringTag]="CID";[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;let t=e;if(t instanceof s)return t;if(t["/"]!=null&&t["/"]===t.bytes||t.asCID===t){let{version:r,code:n,multihash:i,bytes:o}=t;return new s(r,n,i,o??ra(r,n,i.bytes))}else if(t[Lu]===!0){let{version:r,multihash:n,code:i}=t,o=ze(n);return s.create(r,i,o)}else return null}static create(e,t,r){if(typeof t!="number")throw new Error("String codecs are no longer supported");if(!(r.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(t!==Ns)throw new Error(`Version 0 CID must use dag-pb (code: ${Ns}) block encoding`);return new s(e,t,r,r.bytes)}case 1:{let n=ra(e,t,r.bytes);return new s(e,t,r,n)}default:throw new Error("Invalid version")}}static createV0(e){return s.create(0,Ns,e)}static createV1(e,t){return s.create(1,e,t)}static decode(e){let[t,r]=s.decodeFirst(e);if(r.length!==0)throw new Error("Incorrect length");return t}static decodeFirst(e){let t=s.inspectBytes(e),r=t.size-t.multihashSize,n=at(e.subarray(r,r+t.multihashSize));if(n.byteLength!==t.multihashSize)throw new Error("Incorrect length");let i=n.subarray(t.multihashSize-t.digestSize),o=new os(t.multihashCode,t.digestSize,i,n);return[t.version===0?s.createV0(o):s.createV1(t.codec,o),e.subarray(t.size)]}static inspectBytes(e){let t=0,r=()=>{let[u,h]=Rs(e.subarray(t));return t+=h,u},n=r(),i=Ns;if(n===18?(n=0,t=0):i=r(),n!==0&&n!==1)throw new RangeError(`Invalid CID version ${n}`);let o=t,a=r(),c=r(),f=t+c,l=f-o;return{version:n,codec:i,multihashCode:a,digestSize:c,multihashSize:l,size:f}}static parse(e,t){let[r,n]=Cu(e,t),i=s.decode(n);if(i.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return ri(i).set(r,e),i}};function Cu(s,e){switch(s[0]){case"Q":{let t=e??se;return[se.prefix,t.decode(`${se.prefix}${s}`)]}case se.prefix:{let t=e??se;return[se.prefix,t.decode(s)]}case Kt.prefix:{let t=e??Kt;return[Kt.prefix,t.decode(s)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[s[0],e.decode(s)]}}}function Du(s,e,t){let{prefix:r}=t;if(r!==se.prefix)throw Error(`Cannot string encode V0 in ${t.name} encoding`);let n=e.get(r);if(n==null){let i=t.encode(s).slice(1);return e.set(r,i),i}else return n}function Ru(s,e,t){let{prefix:r}=t,n=e.get(r);if(n==null){let i=t.encode(s);return e.set(r,i),i}else return n}var Ns=112,Nu=18;function ra(s,e,t){let r=is(s),n=r+is(e),i=new Uint8Array(n+t.byteLength);return ns(s,i,0),ns(e,i,r),i.set(t,n),i}var Lu=Symbol.for("@ipld/js-cid/CID");var ni={};ve(ni,{identity:()=>ct});var na=0,Uu="identity",ia=at;function Fu(s){return Ge(na,ia(s))}var ct={code:na,name:Uu,encode:ia,digest:Fu};function Fe(s,e){if(s===e)return!0;if(s.byteLength!==e.byteLength)return!1;for(let t=0;t<s.byteLength;t++)if(s[t]!==e[t])return!1;return!0}function as(s){if(!Number.isSafeInteger(s)||s<0)throw new Error(`positive integer expected, not ${s}`)}function Vu(s){return s instanceof Uint8Array||s!=null&&typeof s=="object"&&s.constructor.name==="Uint8Array"}function cs(s,...e){if(!Vu(s))throw new Error("Uint8Array expected");if(e.length>0&&!e.includes(s.length))throw new Error(`Uint8Array expected of length ${e}, not of length=${s.length}`)}function dr(s){if(typeof s!="function"||typeof s.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");as(s.outputLen),as(s.blockLen)}function ls(s,e=!0){if(s.destroyed)throw new Error("Hash instance has been destroyed");if(e&&s.finished)throw new Error("Hash#digest() has already been called")}function oa(s,e){cs(s);let t=e.outputLen;if(s.length<t)throw new Error(`digestInto() expects output buffer of length at least ${t}`)}var pr=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;var hs=s=>new DataView(s.buffer,s.byteOffset,s.byteLength),qe=(s,e)=>s<<32-e|s>>>e;var rg=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;var Ou=async()=>{};async function aa(s,e,t){let r=Date.now();for(let n=0;n<s;n++){t(n);let i=Date.now()-r;i>=0&&i<e||(await Ou(),r+=i)}}function ca(s){if(typeof s!="string")throw new Error(`utf8ToBytes expected string, got ${typeof s}`);return new Uint8Array(new TextEncoder().encode(s))}function St(s){return typeof s=="string"&&(s=ca(s)),cs(s),s}function ii(...s){let e=0;for(let r=0;r<s.length;r++){let n=s[r];cs(n),e+=n.length}let t=new Uint8Array(e);for(let r=0,n=0;r<s.length;r++){let i=s[r];t.set(i,n),n+=i.length}return t}var us=class{clone(){return this._cloneInto()}},Hu={}.toString;function la(s,e){if(e!==void 0&&Hu.call(e)!=="[object Object]")throw new Error("Options should be object or undefined");return Object.assign(s,e)}function gr(s){let e=r=>s().update(St(r)).digest(),t=s();return e.outputLen=t.outputLen,e.blockLen=t.blockLen,e.create=()=>s(),e}function fs(s=32){if(pr&&typeof pr.getRandomValues=="function")return pr.getRandomValues(new Uint8Array(s));throw new Error("crypto.getRandomValues must be defined")}function Ku(s,e,t,r){if(typeof s.setBigUint64=="function")return s.setBigUint64(e,t,r);let n=BigInt(32),i=BigInt(4294967295),o=Number(t>>n&i),a=Number(t&i),c=r?4:0,f=r?0:4;s.setUint32(e+c,o,r),s.setUint32(e+f,a,r)}var ua=(s,e,t)=>s&e^~s&t,ha=(s,e,t)=>s&e^s&t^e&t,ds=class extends us{constructor(e,t,r,n){super(),this.blockLen=e,this.outputLen=t,this.padOffset=r,this.isLE=n,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=hs(this.buffer)}update(e){ls(this);let{view:t,buffer:r,blockLen:n}=this;e=St(e);let i=e.length;for(let o=0;o<i;){let a=Math.min(n-this.pos,i-o);if(a===n){let c=hs(e);for(;n<=i-o;o+=n)this.process(c,o);continue}r.set(e.subarray(o,o+a),this.pos),this.pos+=a,o+=a,this.pos===n&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){ls(this),oa(e,this),this.finished=!0;let{buffer:t,view:r,blockLen:n,isLE:i}=this,{pos:o}=this;t[o++]=128,this.buffer.subarray(o).fill(0),this.padOffset>n-o&&(this.process(r,0),o=0);for(let u=o;u<n;u++)t[u]=0;Ku(r,n-8,BigInt(this.length*8),i),this.process(r,0);let a=hs(e),c=this.outputLen;if(c%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let f=c/4,l=this.get();if(f>l.length)throw new Error("_sha2: outputLen bigger than state");for(let u=0;u<f;u++)a.setUint32(4*u,l[u],i)}digest(){let{buffer:e,outputLen:t}=this;this.digestInto(e);let r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());let{blockLen:t,buffer:r,length:n,finished:i,destroyed:o,pos:a}=this;return e.length=n,e.pos=a,e.finished=i,e.destroyed=o,n%t&&e.buffer.set(r),e}};var mr=BigInt(4294967295),oi=BigInt(32);function fa(s,e=!1){return e?{h:Number(s&mr),l:Number(s>>oi&mr)}:{h:Number(s>>oi&mr)|0,l:Number(s&mr)|0}}function Gu(s,e=!1){let t=new Uint32Array(s.length),r=new Uint32Array(s.length);for(let n=0;n<s.length;n++){let{h:i,l:o}=fa(s[n],e);[t[n],r[n]]=[i,o]}return[t,r]}var zu=(s,e)=>BigInt(s>>>0)<<oi|BigInt(e>>>0),qu=(s,e,t)=>s>>>t,Wu=(s,e,t)=>s<<32-t|e>>>t,$u=(s,e,t)=>s>>>t|e<<32-t,ju=(s,e,t)=>s<<32-t|e>>>t,Zu=(s,e,t)=>s<<64-t|e>>>t-32,Ju=(s,e,t)=>s>>>t-32|e<<64-t,Xu=(s,e)=>e,Yu=(s,e)=>s,Qu=(s,e,t)=>s<<t|e>>>32-t,eh=(s,e,t)=>e<<t|s>>>32-t,th=(s,e,t)=>e<<t-32|s>>>64-t,sh=(s,e,t)=>s<<t-32|e>>>64-t;function rh(s,e,t,r){let n=(e>>>0)+(r>>>0);return{h:s+t+(n/2**32|0)|0,l:n|0}}var nh=(s,e,t)=>(s>>>0)+(e>>>0)+(t>>>0),ih=(s,e,t,r)=>e+t+r+(s/2**32|0)|0,oh=(s,e,t,r)=>(s>>>0)+(e>>>0)+(t>>>0)+(r>>>0),ah=(s,e,t,r,n)=>e+t+r+n+(s/2**32|0)|0,ch=(s,e,t,r,n)=>(s>>>0)+(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0),lh=(s,e,t,r,n,i)=>e+t+r+n+i+(s/2**32|0)|0;var uh={fromBig:fa,split:Gu,toBig:zu,shrSH:qu,shrSL:Wu,rotrSH:$u,rotrSL:ju,rotrBH:Zu,rotrBL:Ju,rotr32H:Xu,rotr32L:Yu,rotlSH:Qu,rotlSL:eh,rotlBH:th,rotlBL:sh,add:rh,add3L:nh,add3H:ih,add4L:oh,add4H:ah,add5H:lh,add5L:ch},L=uh;var[hh,fh]=L.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(s=>BigInt(s))),Bt=new Uint32Array(80),It=new Uint32Array(80),ai=class extends ds{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){let{Ah:e,Al:t,Bh:r,Bl:n,Ch:i,Cl:o,Dh:a,Dl:c,Eh:f,El:l,Fh:u,Fl:h,Gh:p,Gl:g,Hh:d,Hl:m}=this;return[e,t,r,n,i,o,a,c,f,l,u,h,p,g,d,m]}set(e,t,r,n,i,o,a,c,f,l,u,h,p,g,d,m){this.Ah=e|0,this.Al=t|0,this.Bh=r|0,this.Bl=n|0,this.Ch=i|0,this.Cl=o|0,this.Dh=a|0,this.Dl=c|0,this.Eh=f|0,this.El=l|0,this.Fh=u|0,this.Fl=h|0,this.Gh=p|0,this.Gl=g|0,this.Hh=d|0,this.Hl=m|0}process(e,t){for(let E=0;E<16;E++,t+=4)Bt[E]=e.getUint32(t),It[E]=e.getUint32(t+=4);for(let E=16;E<80;E++){let A=Bt[E-15]|0,w=It[E-15]|0,S=L.rotrSH(A,w,1)^L.rotrSH(A,w,8)^L.shrSH(A,w,7),B=L.rotrSL(A,w,1)^L.rotrSL(A,w,8)^L.shrSL(A,w,7),I=Bt[E-2]|0,M=It[E-2]|0,D=L.rotrSH(I,M,19)^L.rotrBH(I,M,61)^L.shrSH(I,M,6),U=L.rotrSL(I,M,19)^L.rotrBL(I,M,61)^L.shrSL(I,M,6),re=L.add4L(B,U,It[E-7],It[E-16]),oe=L.add4H(re,S,D,Bt[E-7],Bt[E-16]);Bt[E]=oe|0,It[E]=re|0}let{Ah:r,Al:n,Bh:i,Bl:o,Ch:a,Cl:c,Dh:f,Dl:l,Eh:u,El:h,Fh:p,Fl:g,Gh:d,Gl:m,Hh:b,Hl:v}=this;for(let E=0;E<80;E++){let A=L.rotrSH(u,h,14)^L.rotrSH(u,h,18)^L.rotrBH(u,h,41),w=L.rotrSL(u,h,14)^L.rotrSL(u,h,18)^L.rotrBL(u,h,41),S=u&p^~u&d,B=h&g^~h&m,I=L.add5L(v,w,B,fh[E],It[E]),M=L.add5H(I,b,A,S,hh[E],Bt[E]),D=I|0,U=L.rotrSH(r,n,28)^L.rotrBH(r,n,34)^L.rotrBH(r,n,39),re=L.rotrSL(r,n,28)^L.rotrBL(r,n,34)^L.rotrBL(r,n,39),oe=r&i^r&a^i&a,P=n&o^n&c^o&c;b=d|0,v=m|0,d=p|0,m=g|0,p=u|0,g=h|0,{h:u,l:h}=L.add(f|0,l|0,M|0,D|0),f=a|0,l=c|0,a=i|0,c=o|0,i=r|0,o=n|0;let x=L.add3L(D,re,P);r=L.add3H(x,M,U,oe),n=x|0}({h:r,l:n}=L.add(this.Ah|0,this.Al|0,r|0,n|0)),{h:i,l:o}=L.add(this.Bh|0,this.Bl|0,i|0,o|0),{h:a,l:c}=L.add(this.Ch|0,this.Cl|0,a|0,c|0),{h:f,l}=L.add(this.Dh|0,this.Dl|0,f|0,l|0),{h:u,l:h}=L.add(this.Eh|0,this.El|0,u|0,h|0),{h:p,l:g}=L.add(this.Fh|0,this.Fl|0,p|0,g|0),{h:d,l:m}=L.add(this.Gh|0,this.Gl|0,d|0,m|0),{h:b,l:v}=L.add(this.Hh|0,this.Hl|0,b|0,v|0),this.set(r,n,i,o,a,c,f,l,u,h,p,g,d,m,b,v)}roundClean(){Bt.fill(0),It.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};var Ls=gr(()=>new ai);var yr={};ve(yr,{aInRange:()=>Pe,abool:()=>We,abytes:()=>ps,bitGet:()=>wh,bitLen:()=>yh,bitMask:()=>Fs,bitSet:()=>vh,bytesToHex:()=>ut,bytesToNumberBE:()=>ht,bytesToNumberLE:()=>At,concatBytes:()=>ft,createHmacDrbg:()=>fi,ensureBytes:()=>te,equalBytes:()=>mh,hexToBytes:()=>Gt,hexToNumber:()=>hi,inRange:()=>Us,isBytes:()=>_t,memoized:()=>qt,notImplemented:()=>Eh,numberToBytesBE:()=>kt,numberToBytesLE:()=>zt,numberToHexUnpadded:()=>ga,numberToVarBytesBE:()=>gh,utf8ToBytes:()=>bh,validateObject:()=>Qe});var ui=BigInt(0),br=BigInt(1),dh=BigInt(2);function _t(s){return s instanceof Uint8Array||s!=null&&typeof s=="object"&&s.constructor.name==="Uint8Array"}function ps(s){if(!_t(s))throw new Error("Uint8Array expected")}function We(s,e){if(typeof e!="boolean")throw new Error(`${s} must be valid boolean, got "${e}".`)}var ph=Array.from({length:256},(s,e)=>e.toString(16).padStart(2,"0"));function ut(s){ps(s);let e="";for(let t=0;t<s.length;t++)e+=ph[s[t]];return e}function ga(s){let e=s.toString(16);return e.length&1?`0${e}`:e}function hi(s){if(typeof s!="string")throw new Error("hex string expected, got "+typeof s);return BigInt(s===""?"0":`0x${s}`)}var lt={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function da(s){if(s>=lt._0&&s<=lt._9)return s-lt._0;if(s>=lt._A&&s<=lt._F)return s-(lt._A-10);if(s>=lt._a&&s<=lt._f)return s-(lt._a-10)}function Gt(s){if(typeof s!="string")throw new Error("hex string expected, got "+typeof s);let e=s.length,t=e/2;if(e%2)throw new Error("padded hex string expected, got unpadded hex of length "+e);let r=new Uint8Array(t);for(let n=0,i=0;n<t;n++,i+=2){let o=da(s.charCodeAt(i)),a=da(s.charCodeAt(i+1));if(o===void 0||a===void 0){let c=s[i]+s[i+1];throw new Error('hex string expected, got non-hex character "'+c+'" at index '+i)}r[n]=o*16+a}return r}function ht(s){return hi(ut(s))}function At(s){return ps(s),hi(ut(Uint8Array.from(s).reverse()))}function kt(s,e){return Gt(s.toString(16).padStart(e*2,"0"))}function zt(s,e){return kt(s,e).reverse()}function gh(s){return Gt(ga(s))}function te(s,e,t){let r;if(typeof e=="string")try{r=Gt(e)}catch(i){throw new Error(`${s} must be valid hex string, got "${e}". Cause: ${i}`)}else if(_t(e))r=Uint8Array.from(e);else throw new Error(`${s} must be hex string or Uint8Array`);let n=r.length;if(typeof t=="number"&&n!==t)throw new Error(`${s} expected ${t} bytes, got ${n}`);return r}function ft(...s){let e=0;for(let r=0;r<s.length;r++){let n=s[r];ps(n),e+=n.length}let t=new Uint8Array(e);for(let r=0,n=0;r<s.length;r++){let i=s[r];t.set(i,n),n+=i.length}return t}function mh(s,e){if(s.length!==e.length)return!1;let t=0;for(let r=0;r<s.length;r++)t|=s[r]^e[r];return t===0}function bh(s){if(typeof s!="string")throw new Error(`utf8ToBytes expected string, got ${typeof s}`);return new Uint8Array(new TextEncoder().encode(s))}var ci=s=>typeof s=="bigint"&&ui<=s;function Us(s,e,t){return ci(s)&&ci(e)&&ci(t)&&e<=s&&s<t}function Pe(s,e,t,r){if(!Us(e,t,r))throw new Error(`expected valid ${s}: ${t} <= n < ${r}, got ${typeof e} ${e}`)}function yh(s){let e;for(e=0;s>ui;s>>=br,e+=1);return e}function wh(s,e){return s>>BigInt(e)&br}function vh(s,e,t){return s|(t?br:ui)<<BigInt(e)}var Fs=s=>(dh<<BigInt(s-1))-br,li=s=>new Uint8Array(s),pa=s=>Uint8Array.from(s);function fi(s,e,t){if(typeof s!="number"||s<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof t!="function")throw new Error("hmacFn must be a function");let r=li(s),n=li(s),i=0,o=()=>{r.fill(1),n.fill(0),i=0},a=(...u)=>t(n,r,...u),c=(u=li())=>{n=a(pa([0]),u),r=a(),u.length!==0&&(n=a(pa([1]),u),r=a())},f=()=>{if(i++>=1e3)throw new Error("drbg: tried 1000 values");let u=0,h=[];for(;u<e;){r=a();let p=r.slice();h.push(p),u+=r.length}return ft(...h)};return(u,h)=>{o(),c(u);let p;for(;!(p=h(f()));)c();return o(),p}}var xh={bigint:s=>typeof s=="bigint",function:s=>typeof s=="function",boolean:s=>typeof s=="boolean",string:s=>typeof s=="string",stringOrUint8Array:s=>typeof s=="string"||_t(s),isSafeInteger:s=>Number.isSafeInteger(s),array:s=>Array.isArray(s),field:(s,e)=>e.Fp.isValid(s),hash:s=>typeof s=="function"&&Number.isSafeInteger(s.outputLen)};function Qe(s,e,t={}){let r=(n,i,o)=>{let a=xh[i];if(typeof a!="function")throw new Error(`Invalid validator "${i}", expected function`);let c=s[n];if(!(o&&c===void 0)&&!a(c,s))throw new Error(`Invalid param ${String(n)}=${c} (${typeof c}), expected ${i}`)};for(let[n,i]of Object.entries(e))r(n,i,!1);for(let[n,i]of Object.entries(t))r(n,i,!0);return s}var Eh=()=>{throw new Error("not implemented")};function qt(s){let e=new WeakMap;return(t,...r)=>{let n=e.get(t);if(n!==void 0)return n;let i=s(t,...r);return e.set(t,i),i}}var ce=BigInt(0),Z=BigInt(1),Wt=BigInt(2),Sh=BigInt(3),di=BigInt(4),ma=BigInt(5),ba=BigInt(8),Bh=BigInt(9),Ih=BigInt(16);function q(s,e){let t=s%e;return t>=ce?t:e+t}function _h(s,e,t){if(t<=ce||e<ce)throw new Error("Expected power/modulo > 0");if(t===Z)return ce;let r=Z;for(;e>ce;)e&Z&&(r=r*s%t),s=s*s%t,e>>=Z;return r}function J(s,e,t){let r=s;for(;e-- >ce;)r*=r,r%=t;return r}function wr(s,e){if(s===ce||e<=ce)throw new Error(`invert: expected positive integers, got n=${s} mod=${e}`);let t=q(s,e),r=e,n=ce,i=Z,o=Z,a=ce;for(;t!==ce;){let f=r/t,l=r%t,u=n-o*f,h=i-a*f;r=t,t=l,n=o,i=a,o=u,a=h}if(r!==Z)throw new Error("invert: does not exist");return q(n,e)}function Ah(s){let e=(s-Z)/Wt,t,r,n;for(t=s-Z,r=0;t%Wt===ce;t/=Wt,r++);for(n=Wt;n<s&&_h(n,e,s)!==s-Z;n++);if(r===1){let o=(s+Z)/di;return function(c,f){let l=c.pow(f,o);if(!c.eql(c.sqr(l),f))throw new Error("Cannot find square root");return l}}let i=(t+Z)/Wt;return function(a,c){if(a.pow(c,e)===a.neg(a.ONE))throw new Error("Cannot find square root");let f=r,l=a.pow(a.mul(a.ONE,n),t),u=a.pow(c,i),h=a.pow(c,t);for(;!a.eql(h,a.ONE);){if(a.eql(h,a.ZERO))return a.ZERO;let p=1;for(let d=a.sqr(h);p<f&&!a.eql(d,a.ONE);p++)d=a.sqr(d);let g=a.pow(l,Z<<BigInt(f-p-1));l=a.sqr(g),u=a.mul(u,g),h=a.mul(h,l),f=p}return u}}function kh(s){if(s%di===Sh){let e=(s+Z)/di;return function(r,n){let i=r.pow(n,e);if(!r.eql(r.sqr(i),n))throw new Error("Cannot find square root");return i}}if(s%ba===ma){let e=(s-ma)/ba;return function(r,n){let i=r.mul(n,Wt),o=r.pow(i,e),a=r.mul(n,o),c=r.mul(r.mul(a,Wt),o),f=r.mul(a,r.sub(c,r.ONE));if(!r.eql(r.sqr(f),n))throw new Error("Cannot find square root");return f}}return s%Ih,Ah(s)}var ya=(s,e)=>(q(s,e)&Z)===Z,Th=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function pi(s){let e={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},t=Th.reduce((r,n)=>(r[n]="function",r),e);return Qe(s,t)}function Ph(s,e,t){if(t<ce)throw new Error("Expected power > 0");if(t===ce)return s.ONE;if(t===Z)return e;let r=s.ONE,n=e;for(;t>ce;)t&Z&&(r=s.mul(r,n)),n=s.sqr(n),t>>=Z;return r}function Mh(s,e){let t=new Array(e.length),r=e.reduce((i,o,a)=>s.is0(o)?i:(t[a]=i,s.mul(i,o)),s.ONE),n=s.inv(r);return e.reduceRight((i,o,a)=>s.is0(o)?i:(t[a]=s.mul(i,t[a]),s.mul(i,o)),n),t}function gi(s,e){let t=e!==void 0?e:s.toString(2).length,r=Math.ceil(t/8);return{nBitLength:t,nByteLength:r}}function vr(s,e,t=!1,r={}){if(s<=ce)throw new Error(`Expected Field ORDER > 0, got ${s}`);let{nBitLength:n,nByteLength:i}=gi(s,e);if(i>2048)throw new Error("Field lengths over 2048 bytes are not supported");let o=kh(s),a=Object.freeze({ORDER:s,BITS:n,BYTES:i,MASK:Fs(n),ZERO:ce,ONE:Z,create:c=>q(c,s),isValid:c=>{if(typeof c!="bigint")throw new Error(`Invalid field element: expected bigint, got ${typeof c}`);return ce<=c&&c<s},is0:c=>c===ce,isOdd:c=>(c&Z)===Z,neg:c=>q(-c,s),eql:(c,f)=>c===f,sqr:c=>q(c*c,s),add:(c,f)=>q(c+f,s),sub:(c,f)=>q(c-f,s),mul:(c,f)=>q(c*f,s),pow:(c,f)=>Ph(a,c,f),div:(c,f)=>q(c*wr(f,s),s),sqrN:c=>c*c,addN:(c,f)=>c+f,subN:(c,f)=>c-f,mulN:(c,f)=>c*f,inv:c=>wr(c,s),sqrt:r.sqrt||(c=>o(a,c)),invertBatch:c=>Mh(a,c),cmov:(c,f,l)=>l?f:c,toBytes:c=>t?zt(c,i):kt(c,i),fromBytes:c=>{if(c.length!==i)throw new Error(`Fp.fromBytes: expected ${i}, got ${c.length}`);return t?At(c):ht(c)}});return Object.freeze(a)}function wa(s){if(typeof s!="bigint")throw new Error("field order must be bigint");let e=s.toString(2).length;return Math.ceil(e/8)}function mi(s){let e=wa(s);return e+Math.ceil(e/2)}function va(s,e,t=!1){let r=s.length,n=wa(e),i=mi(e);if(r<16||r<i||r>1024)throw new Error(`expected ${i}-1024 bytes of input, got ${r}`);let o=t?ht(s):At(s),a=q(o,e-Z)+Z;return t?zt(a,n):kt(a,n)}var Dh=BigInt(0),bi=BigInt(1),yi=new WeakMap,xa=new WeakMap;function xr(s,e){let t=(i,o)=>{let a=o.negate();return i?a:o},r=i=>{if(!Number.isSafeInteger(i)||i<=0||i>e)throw new Error(`Wrong window size=${i}, should be [1..${e}]`)},n=i=>{r(i);let o=Math.ceil(e/i)+1,a=2**(i-1);return{windows:o,windowSize:a}};return{constTimeNegate:t,unsafeLadder(i,o){let a=s.ZERO,c=i;for(;o>Dh;)o&bi&&(a=a.add(c)),c=c.double(),o>>=bi;return a},precomputeWindow(i,o){let{windows:a,windowSize:c}=n(o),f=[],l=i,u=l;for(let h=0;h<a;h++){u=l,f.push(u);for(let p=1;p<c;p++)u=u.add(l),f.push(u);l=u.double()}return f},wNAF(i,o,a){let{windows:c,windowSize:f}=n(i),l=s.ZERO,u=s.BASE,h=BigInt(2**i-1),p=2**i,g=BigInt(i);for(let d=0;d<c;d++){let m=d*f,b=Number(a&h);a>>=g,b>f&&(b-=p,a+=bi);let v=m,E=m+Math.abs(b)-1,A=d%2!==0,w=b<0;b===0?u=u.add(t(A,o[v])):l=l.add(t(w,o[E]))}return{p:l,f:u}},wNAFCached(i,o,a){let c=xa.get(i)||1,f=yi.get(i);return f||(f=this.precomputeWindow(i,c),c!==1&&yi.set(i,a(f))),this.wNAF(c,f,o)},setWindowSize(i,o){r(o),xa.set(i,o),yi.delete(i)}}}function Vs(s){return pi(s.Fp),Qe(s,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...gi(s.n,s.nBitLength),...s,p:s.Fp.ORDER})}var $e=BigInt(0),Me=BigInt(1),Er=BigInt(2),Rh=BigInt(8),Nh={zip215:!0};function Lh(s){let e=Vs(s);return Qe(s,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...e})}function Ea(s){let e=Lh(s),{Fp:t,n:r,prehash:n,hash:i,randomBytes:o,nByteLength:a,h:c}=e,f=Er<<BigInt(a*8)-Me,l=t.create,u=e.uvRatio||((x,y)=>{try{return{isValid:!0,value:t.sqrt(x*t.inv(y))}}catch{return{isValid:!1,value:$e}}}),h=e.adjustScalarBytes||(x=>x),p=e.domain||((x,y,_)=>{if(We("phflag",_),y.length||_)throw new Error("Contexts/pre-hash are not supported");return x});function g(x,y){Pe("coordinate "+x,y,$e,f)}function d(x){if(!(x instanceof v))throw new Error("ExtendedPoint expected")}let m=qt((x,y)=>{let{ex:_,ey:k,ez:C}=x,R=x.is0();y==null&&(y=R?Rh:t.inv(C));let N=l(_*y),O=l(k*y),F=l(C*y);if(R)return{x:$e,y:Me};if(F!==Me)throw new Error("invZ was invalid");return{x:N,y:O}}),b=qt(x=>{let{a:y,d:_}=e;if(x.is0())throw new Error("bad point: ZERO");let{ex:k,ey:C,ez:R,et:N}=x,O=l(k*k),F=l(C*C),H=l(R*R),X=l(H*H),Y=l(O*y),ke=l(H*l(Y+F)),le=l(X+l(_*l(O*F)));if(ke!==le)throw new Error("bad point: equation left != right (1)");let ae=l(k*C),He=l(R*N);if(ae!==He)throw new Error("bad point: equation left != right (2)");return!0});class v{constructor(y,_,k,C){this.ex=y,this.ey=_,this.ez=k,this.et=C,g("x",y),g("y",_),g("z",k),g("t",C),Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(y){if(y instanceof v)throw new Error("extended point not allowed");let{x:_,y:k}=y||{};return g("x",_),g("y",k),new v(_,k,Me,l(_*k))}static normalizeZ(y){let _=t.invertBatch(y.map(k=>k.ez));return y.map((k,C)=>k.toAffine(_[C])).map(v.fromAffine)}_setWindowSize(y){w.setWindowSize(this,y)}assertValidity(){b(this)}equals(y){d(y);let{ex:_,ey:k,ez:C}=this,{ex:R,ey:N,ez:O}=y,F=l(_*O),H=l(R*C),X=l(k*O),Y=l(N*C);return F===H&&X===Y}is0(){return this.equals(v.ZERO)}negate(){return new v(l(-this.ex),this.ey,this.ez,l(-this.et))}double(){let{a:y}=e,{ex:_,ey:k,ez:C}=this,R=l(_*_),N=l(k*k),O=l(Er*l(C*C)),F=l(y*R),H=_+k,X=l(l(H*H)-R-N),Y=F+N,ke=Y-O,le=F-N,ae=l(X*ke),He=l(Y*le),ue=l(X*le),Ke=l(ke*Y);return new v(ae,He,Ke,ue)}add(y){d(y);let{a:_,d:k}=e,{ex:C,ey:R,ez:N,et:O}=this,{ex:F,ey:H,ez:X,et:Y}=y;if(_===BigInt(-1)){let Co=l((R-C)*(H+F)),Do=l((R+C)*(H-F)),jn=l(Do-Co);if(jn===$e)return this.double();let Ro=l(N*Er*Y),No=l(O*Er*X),Lo=No+Ro,Uo=Do+Co,Fo=No-Ro,zl=l(Lo*jn),ql=l(Uo*Fo),Wl=l(Lo*Fo),$l=l(jn*Uo);return new v(zl,ql,$l,Wl)}let ke=l(C*F),le=l(R*H),ae=l(O*k*Y),He=l(N*X),ue=l((C+R)*(F+H)-ke-le),Ke=He-ae,Ot=He+ae,Cs=l(le-_*ke),cr=l(ue*Ke),Hl=l(Ot*Cs),Kl=l(ue*Cs),Gl=l(Ke*Ot);return new v(cr,Hl,Gl,Kl)}subtract(y){return this.add(y.negate())}wNAF(y){return w.wNAFCached(this,y,v.normalizeZ)}multiply(y){let _=y;Pe("scalar",_,Me,r);let{p:k,f:C}=this.wNAF(_);return v.normalizeZ([k,C])[0]}multiplyUnsafe(y){let _=y;return Pe("scalar",_,$e,r),_===$e?A:this.equals(A)||_===Me?this:this.equals(E)?this.wNAF(_).p:w.unsafeLadder(this,_)}isSmallOrder(){return this.multiplyUnsafe(c).is0()}isTorsionFree(){return w.unsafeLadder(this,r).is0()}toAffine(y){return m(this,y)}clearCofactor(){let{h:y}=e;return y===Me?this:this.multiplyUnsafe(y)}static fromHex(y,_=!1){let{d:k,a:C}=e,R=t.BYTES;y=te("pointHex",y,R),We("zip215",_);let N=y.slice(),O=y[R-1];N[R-1]=O&-129;let F=At(N),H=_?f:t.ORDER;Pe("pointHex.y",F,$e,H);let X=l(F*F),Y=l(X-Me),ke=l(k*X-C),{isValid:le,value:ae}=u(Y,ke);if(!le)throw new Error("Point.fromHex: invalid y coordinate");let He=(ae&Me)===Me,ue=(O&128)!==0;if(!_&&ae===$e&&ue)throw new Error("Point.fromHex: x=0 and x_0=1");return ue!==He&&(ae=l(-ae)),v.fromAffine({x:ae,y:F})}static fromPrivateKey(y){return I(y).point}toRawBytes(){let{x:y,y:_}=this.toAffine(),k=zt(_,t.BYTES);return k[k.length-1]|=y&Me?128:0,k}toHex(){return ut(this.toRawBytes())}}v.BASE=new v(e.Gx,e.Gy,Me,l(e.Gx*e.Gy)),v.ZERO=new v($e,Me,Me,$e);let{BASE:E,ZERO:A}=v,w=xr(v,a*8);function S(x){return q(x,r)}function B(x){return S(At(x))}function I(x){let y=a;x=te("private key",x,y);let _=te("hashed private key",i(x),2*y),k=h(_.slice(0,y)),C=_.slice(y,2*y),R=B(k),N=E.multiply(R),O=N.toRawBytes();return{head:k,prefix:C,scalar:R,point:N,pointBytes:O}}function M(x){return I(x).pointBytes}function D(x=new Uint8Array,...y){let _=ft(...y);return B(i(p(_,te("context",x),!!n)))}function U(x,y,_={}){x=te("message",x),n&&(x=n(x));let{prefix:k,scalar:C,pointBytes:R}=I(y),N=D(_.context,k,x),O=E.multiply(N).toRawBytes(),F=D(_.context,O,R,x),H=S(N+F*C);Pe("signature.s",H,$e,r);let X=ft(O,zt(H,t.BYTES));return te("result",X,a*2)}let re=Nh;function oe(x,y,_,k=re){let{context:C,zip215:R}=k,N=t.BYTES;x=te("signature",x,2*N),y=te("message",y),R!==void 0&&We("zip215",R),n&&(y=n(y));let O=At(x.slice(N,2*N)),F,H,X;try{F=v.fromHex(_,R),H=v.fromHex(x.slice(0,N),R),X=E.multiplyUnsafe(O)}catch{return!1}if(!R&&F.isSmallOrder())return!1;let Y=D(C,H.toRawBytes(),F.toRawBytes(),y);return H.add(F.multiplyUnsafe(Y)).subtract(X).clearCofactor().equals(v.ZERO)}return E._setWindowSize(8),{CURVE:e,getPublicKey:M,sign:U,verify:oe,ExtendedPoint:v,utils:{getExtendedPublicKey:I,randomPrivateKey:()=>o(t.BYTES),precompute(x=8,y=v.BASE){return y._setWindowSize(x),y.multiply(BigInt(3)),y}}}}var wi=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),Sa=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),_g=BigInt(0),Uh=BigInt(1),Ba=BigInt(2),Ag=BigInt(3),Fh=BigInt(5),Vh=BigInt(8);function Oh(s){let e=BigInt(10),t=BigInt(20),r=BigInt(40),n=BigInt(80),i=wi,a=s*s%i*s%i,c=J(a,Ba,i)*a%i,f=J(c,Uh,i)*s%i,l=J(f,Fh,i)*f%i,u=J(l,e,i)*l%i,h=J(u,t,i)*u%i,p=J(h,r,i)*h%i,g=J(p,n,i)*p%i,d=J(g,n,i)*p%i,m=J(d,e,i)*l%i;return{pow_p_5_8:J(m,Ba,i)*s%i,b2:a}}function Hh(s){return s[0]&=248,s[31]&=127,s[31]|=64,s}function Kh(s,e){let t=wi,r=q(e*e*e,t),n=q(r*r*e,t),i=Oh(s*n).pow_p_5_8,o=q(s*r*i,t),a=q(e*o*o,t),c=o,f=q(o*Sa,t),l=a===s,u=a===q(-s,t),h=a===q(-s*Sa,t);return l&&(o=c),(u||h)&&(o=f),ya(o,t)&&(o=q(-o,t)),{isValid:l||u,value:o}}var Gh=vr(wi,void 0,!0),zh={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:Gh,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:Vh,Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:Ls,randomBytes:fs,adjustScalarBytes:Hh,uvRatio:Kh},Ia=Ea(zh);var Sr=32;function _a(s,e,t){return Ia.verify(e,t instanceof Uint8Array?t:t.subarray(),s)}var Br=class{type="Ed25519";raw;constructor(e){this.raw=vi(e,Sr)}toMultihash(){return ct.digest(Tt(this))}toCID(){return Te.createV1(114,this.toMultihash())}toString(){return se.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:Fe(this.raw,e.raw)}verify(e,t){return _a(this.raw,t,e)}};var Ei={};ve(Ei,{base64:()=>xi,base64pad:()=>Wh,base64url:()=>$h,base64urlpad:()=>jh});var xi=ee({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),Wh=ee({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),$h=ee({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),jh=ee({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6});function dt(s=0){return new Uint8Array(s)}function pe(s=0){return new Uint8Array(s)}function et(s,e){e==null&&(e=s.reduce((n,i)=>n+i.length,0));let t=pe(e),r=0;for(let n of s)t.set(n,r),r+=n.length;return t}var Si={};ve(Si,{base10:()=>Zh});var Zh=Et({prefix:"9",name:"base10",alphabet:"0123456789"});var Bi={};ve(Bi,{base16:()=>Jh,base16upper:()=>Xh});var Jh=ee({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),Xh=ee({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4});var Ii={};ve(Ii,{base2:()=>Yh});var Yh=ee({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1});var _i={};ve(_i,{base256emoji:()=>rf});var ka=Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"),Qh=ka.reduce((s,e,t)=>(s[t]=e,s),[]),ef=ka.reduce((s,e,t)=>(s[e.codePointAt(0)]=t,s),[]);function tf(s){return s.reduce((e,t)=>(e+=Qh[t],e),"")}function sf(s){let e=[];for(let t of s){let r=ef[t.codePointAt(0)];if(r===void 0)throw new Error(`Non-base256emoji character: ${t}`);e.push(r)}return new Uint8Array(e)}var rf=rs({prefix:"\u{1F680}",name:"base256emoji",encode:tf,decode:sf});var Ai={};ve(Ai,{base36:()=>nf,base36upper:()=>of});var nf=Et({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),of=Et({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"});var ki={};ve(ki,{base8:()=>af});var af=ee({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3});var Ti={};ve(Ti,{identity:()=>cf});var cf=rs({prefix:"\0",name:"identity",encode:s=>$o(s),decode:s=>Wo(s)});var em=new TextEncoder,tm=new TextDecoder;var Ci={};ve(Ci,{sha256:()=>Pt,sha512:()=>hf});function Mi({name:s,code:e,encode:t}){return new Pi(s,e,t)}var Pi=class{name;code;encode;constructor(e,t,r){this.name=e,this.code=t,this.encode=r}digest(e){if(e instanceof Uint8Array){let t=this.encode(e);return t instanceof Uint8Array?Ge(this.code,t):t.then(r=>Ge(this.code,r))}else throw Error("Unknown type, must be binary type")}};function Pa(s){return async e=>new Uint8Array(await crypto.subtle.digest(s,e))}var Pt=Mi({name:"sha2-256",code:18,encode:Pa("SHA-256")}),hf=Mi({name:"sha2-512",code:19,encode:Pa("SHA-512")});var Os={...Ti,...Ii,...ki,...Si,...Bi,...ti,...Ai,...ei,...Ei,..._i},dm={...Ci,...ni};function Ca(s,e,t,r){return{name:s,prefix:e,encoder:{name:s,prefix:e,encode:t},decoder:{decode:r}}}var Ma=Ca("utf8","u",s=>"u"+new TextDecoder("utf8").decode(s),s=>new TextEncoder().encode(s.substring(1))),Di=Ca("ascii","a",s=>{let e="a";for(let t=0;t<s.length;t++)e+=String.fromCharCode(s[t]);return e},s=>{s=s.substring(1);let e=pe(s.length);for(let t=0;t<s.length;t++)e[t]=s.charCodeAt(t);return e}),ff={utf8:Ma,"utf-8":Ma,hex:Os.base16,latin1:Di,ascii:Di,binary:Di,...Os},Ir=ff;function W(s,e="utf8"){let t=Ir[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return t.decoder.decode(`${t.prefix}${s}`)}var Hs=class extends Error{constructor(e="An error occurred while verifying a message"){super(e),this.name="VerificationError"}},_r=class extends Error{constructor(e="Missing Web Crypto API"){super(e),this.name="WebCryptoMissingError"}};var Ee={get(s=globalThis){let e=s.crypto;if(e?.subtle==null)throw new _r("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api");return e}};var Ri={alg:"A128GCM",ext:!0,k:"scm9jmO_4BJAgdwWGVulLg",key_ops:["encrypt","decrypt"],kty:"oct"};function Da(s){let e=s?.algorithm??"AES-GCM",t=s?.keyLength??16,r=s?.nonceLength??12,n=s?.digest??"SHA-256",i=s?.saltLength??16,o=s?.iterations??32767,a=Ee.get();t*=8;async function c(u,h){let p=a.getRandomValues(new Uint8Array(i)),g=a.getRandomValues(new Uint8Array(r)),d={name:e,iv:g};typeof h=="string"&&(h=W(h));let m;if(h.length===0){m=await a.subtle.importKey("jwk",Ri,{name:"AES-GCM"},!0,["encrypt"]);try{let v={name:"PBKDF2",salt:p,iterations:o,hash:{name:n}},E=await a.subtle.importKey("raw",h,{name:"PBKDF2"},!1,["deriveKey"]);m=await a.subtle.deriveKey(v,E,{name:e,length:t},!0,["encrypt"])}catch{m=await a.subtle.importKey("jwk",Ri,{name:"AES-GCM"},!0,["encrypt"])}}else{let v={name:"PBKDF2",salt:p,iterations:o,hash:{name:n}},E=await a.subtle.importKey("raw",h,{name:"PBKDF2"},!1,["deriveKey"]);m=await a.subtle.deriveKey(v,E,{name:e,length:t},!0,["encrypt"])}let b=await a.subtle.encrypt(d,m,u);return et([p,d.iv,new Uint8Array(b)])}async function f(u,h){let p=u.subarray(0,i),g=u.subarray(i,i+r),d=u.subarray(i+r),m={name:e,iv:g};typeof h=="string"&&(h=W(h));let b;if(h.length===0)try{let E={name:"PBKDF2",salt:p,iterations:o,hash:{name:n}},A=await a.subtle.importKey("raw",h,{name:"PBKDF2"},!1,["deriveKey"]);b=await a.subtle.deriveKey(E,A,{name:e,length:t},!0,["decrypt"])}catch{b=await a.subtle.importKey("jwk",Ri,{name:"AES-GCM"},!0,["decrypt"])}else{let E={name:"PBKDF2",salt:p,iterations:o,hash:{name:n}},A=await a.subtle.importKey("raw",h,{name:"PBKDF2"},!1,["deriveKey"]);b=await a.subtle.deriveKey(E,A,{name:e,length:t},!0,["decrypt"])}let v=await a.subtle.decrypt(m,b,d);return new Uint8Array(v)}return{encrypt:c,decrypt:f}}async function Ra(s,e){let r=await Da().encrypt(s,e);return xi.encode(r)}function Ni(s){return s=vi(s,Sr),new Br(s)}function vi(s,e){if(s=Uint8Array.from(s??[]),s.length!==e)throw new j(`Key must be a Uint8Array of length ${e}, got ${s.length}`);return s}var pf=Math.pow(2,7),gf=Math.pow(2,14),mf=Math.pow(2,21),Li=Math.pow(2,28),Ui=Math.pow(2,35),Fi=Math.pow(2,42),Vi=Math.pow(2,49),G=128,ge=127;function Se(s){if(s<pf)return 1;if(s<gf)return 2;if(s<mf)return 3;if(s<Li)return 4;if(s<Ui)return 5;if(s<Fi)return 6;if(s<Vi)return 7;if(Number.MAX_SAFE_INTEGER!=null&&s>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function Oi(s,e,t=0){switch(Se(s)){case 8:e[t++]=s&255|G,s/=128;case 7:e[t++]=s&255|G,s/=128;case 6:e[t++]=s&255|G,s/=128;case 5:e[t++]=s&255|G,s/=128;case 4:e[t++]=s&255|G,s>>>=7;case 3:e[t++]=s&255|G,s>>>=7;case 2:e[t++]=s&255|G,s>>>=7;case 1:{e[t++]=s&255,s>>>=7;break}default:throw new Error("unreachable")}return e}function bf(s,e,t=0){switch(Se(s)){case 8:e.set(t++,s&255|G),s/=128;case 7:e.set(t++,s&255|G),s/=128;case 6:e.set(t++,s&255|G),s/=128;case 5:e.set(t++,s&255|G),s/=128;case 4:e.set(t++,s&255|G),s>>>=7;case 3:e.set(t++,s&255|G),s>>>=7;case 2:e.set(t++,s&255|G),s>>>=7;case 1:{e.set(t++,s&255),s>>>=7;break}default:throw new Error("unreachable")}return e}function Hi(s,e){let t=s[e],r=0;if(r+=t&ge,t<G||(t=s[e+1],r+=(t&ge)<<7,t<G)||(t=s[e+2],r+=(t&ge)<<14,t<G)||(t=s[e+3],r+=(t&ge)<<21,t<G)||(t=s[e+4],r+=(t&ge)*Li,t<G)||(t=s[e+5],r+=(t&ge)*Ui,t<G)||(t=s[e+6],r+=(t&ge)*Fi,t<G)||(t=s[e+7],r+=(t&ge)*Vi,t<G))return r;throw new RangeError("Could not decode varint")}function yf(s,e){let t=s.get(e),r=0;if(r+=t&ge,t<G||(t=s.get(e+1),r+=(t&ge)<<7,t<G)||(t=s.get(e+2),r+=(t&ge)<<14,t<G)||(t=s.get(e+3),r+=(t&ge)<<21,t<G)||(t=s.get(e+4),r+=(t&ge)*Li,t<G)||(t=s.get(e+5),r+=(t&ge)*Ui,t<G)||(t=s.get(e+6),r+=(t&ge)*Fi,t<G)||(t=s.get(e+7),r+=(t&ge)*Vi,t<G))return r;throw new RangeError("Could not decode varint")}function Ki(s,e,t=0){return e==null&&(e=pe(Se(s))),e instanceof Uint8Array?Oi(s,e,t):bf(s,e,t)}function gs(s,e=0){return s instanceof Uint8Array?Hi(s,e):yf(s,e)}var zi=new Float32Array([-0]),Mt=new Uint8Array(zi.buffer);function Na(s,e,t){zi[0]=s,e[t]=Mt[0],e[t+1]=Mt[1],e[t+2]=Mt[2],e[t+3]=Mt[3]}function La(s,e){return Mt[0]=s[e],Mt[1]=s[e+1],Mt[2]=s[e+2],Mt[3]=s[e+3],zi[0]}var qi=new Float64Array([-0]),me=new Uint8Array(qi.buffer);function Ua(s,e,t){qi[0]=s,e[t]=me[0],e[t+1]=me[1],e[t+2]=me[2],e[t+3]=me[3],e[t+4]=me[4],e[t+5]=me[5],e[t+6]=me[6],e[t+7]=me[7]}function Fa(s,e){return me[0]=s[e],me[1]=s[e+1],me[2]=s[e+2],me[3]=s[e+3],me[4]=s[e+4],me[5]=s[e+5],me[6]=s[e+6],me[7]=s[e+7],qi[0]}var wf=BigInt(Number.MAX_SAFE_INTEGER),vf=BigInt(Number.MIN_SAFE_INTEGER),Le=class s{lo;hi;constructor(e,t){this.lo=e|0,this.hi=t|0}toNumber(e=!1){if(!e&&this.hi>>>31>0){let t=~this.lo+1>>>0,r=~this.hi>>>0;return t===0&&(r=r+1>>>0),-(t+r*4294967296)}return this.lo+this.hi*4294967296}toBigInt(e=!1){if(e)return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n);if(this.hi>>>31){let t=~this.lo+1>>>0,r=~this.hi>>>0;return t===0&&(r=r+1>>>0),-(BigInt(t)+(BigInt(r)<<32n))}return BigInt(this.lo>>>0)+(BigInt(this.hi>>>0)<<32n)}toString(e=!1){return this.toBigInt(e).toString()}zzEncode(){let e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this}zzDecode(){let e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this}length(){let e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,r=this.hi>>>24;return r===0?t===0?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:r<128?9:10}static fromBigInt(e){if(e===0n)return $t;if(e<wf&&e>vf)return this.fromNumber(Number(e));let t=e<0n;t&&(e=-e);let r=e>>32n,n=e-(r<<32n);return t&&(r=~r|0n,n=~n|0n,++n>Va&&(n=0n,++r>Va&&(r=0n))),new s(Number(n),Number(r))}static fromNumber(e){if(e===0)return $t;let t=e<0;t&&(e=-e);let r=e>>>0,n=(e-r)/4294967296>>>0;return t&&(n=~n>>>0,r=~r>>>0,++r>4294967295&&(r=0,++n>4294967295&&(n=0))),new s(r,n)}static from(e){return typeof e=="number"?s.fromNumber(e):typeof e=="bigint"?s.fromBigInt(e):typeof e=="string"?s.fromBigInt(BigInt(e)):e.low!=null||e.high!=null?new s(e.low>>>0,e.high>>>0):$t}},$t=new Le(0,0);$t.toBigInt=function(){return 0n};$t.zzEncode=$t.zzDecode=function(){return this};$t.length=function(){return 1};var Va=4294967296n;function Oa(s){let e=0,t=0;for(let r=0;r<s.length;++r)t=s.charCodeAt(r),t<128?e+=1:t<2048?e+=2:(t&64512)===55296&&(s.charCodeAt(r+1)&64512)===56320?(++r,e+=4):e+=3;return e}function Ha(s,e,t){if(t-e<1)return"";let n,i=[],o=0,a;for(;e<t;)a=s[e++],a<128?i[o++]=a:a>191&&a<224?i[o++]=(a&31)<<6|s[e++]&63:a>239&&a<365?(a=((a&7)<<18|(s[e++]&63)<<12|(s[e++]&63)<<6|s[e++]&63)-65536,i[o++]=55296+(a>>10),i[o++]=56320+(a&1023)):i[o++]=(a&15)<<12|(s[e++]&63)<<6|s[e++]&63,o>8191&&((n??(n=[])).push(String.fromCharCode.apply(String,i)),o=0);return n!=null?(o>0&&n.push(String.fromCharCode.apply(String,i.slice(0,o))),n.join("")):String.fromCharCode.apply(String,i.slice(0,o))}function Wi(s,e,t){let r=t,n,i;for(let o=0;o<s.length;++o)n=s.charCodeAt(o),n<128?e[t++]=n:n<2048?(e[t++]=n>>6|192,e[t++]=n&63|128):(n&64512)===55296&&((i=s.charCodeAt(o+1))&64512)===56320?(n=65536+((n&1023)<<10)+(i&1023),++o,e[t++]=n>>18|240,e[t++]=n>>12&63|128,e[t++]=n>>6&63|128,e[t++]=n&63|128):(e[t++]=n>>12|224,e[t++]=n>>6&63|128,e[t++]=n&63|128);return t-r}function je(s,e){return RangeError(`index out of range: ${s.pos} + ${e??1} > ${s.len}`)}function Ar(s,e){return(s[e-4]|s[e-3]<<8|s[e-2]<<16|s[e-1]<<24)>>>0}var $i=class{buf;pos;len;_slice=Uint8Array.prototype.subarray;constructor(e){this.buf=e,this.pos=0,this.len=e.length}uint32(){let e=4294967295;if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,je(this,10);return e}int32(){return this.uint32()|0}sint32(){let e=this.uint32();return e>>>1^-(e&1)|0}bool(){return this.uint32()!==0}fixed32(){if(this.pos+4>this.len)throw je(this,4);return Ar(this.buf,this.pos+=4)}sfixed32(){if(this.pos+4>this.len)throw je(this,4);return Ar(this.buf,this.pos+=4)|0}float(){if(this.pos+4>this.len)throw je(this,4);let e=La(this.buf,this.pos);return this.pos+=4,e}double(){if(this.pos+8>this.len)throw je(this,4);let e=Fa(this.buf,this.pos);return this.pos+=8,e}bytes(){let e=this.uint32(),t=this.pos,r=this.pos+e;if(r>this.len)throw je(this,e);return this.pos+=e,t===r?new Uint8Array(0):this.buf.subarray(t,r)}string(){let e=this.bytes();return Ha(e,0,e.length)}skip(e){if(typeof e=="number"){if(this.pos+e>this.len)throw je(this,e);this.pos+=e}else do if(this.pos>=this.len)throw je(this);while(this.buf[this.pos++]&128);return this}skipType(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(e=this.uint32()&7)!==4;)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error(`invalid wire type ${e} at offset ${this.pos}`)}return this}readLongVarint(){let e=new Le(0,0),t=0;if(this.len-this.pos>4){for(;t<4;++t)if(e.lo=(e.lo|(this.buf[this.pos]&127)<<t*7)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(this.buf[this.pos]&127)<<28)>>>0,e.hi=(e.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return e;t=0}else{for(;t<3;++t){if(this.pos>=this.len)throw je(this);if(e.lo=(e.lo|(this.buf[this.pos]&127)<<t*7)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(this.buf[this.pos++]&127)<<t*7)>>>0,e}if(this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(this.buf[this.pos]&127)<<t*7+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw je(this);if(e.hi=(e.hi|(this.buf[this.pos]&127)<<t*7+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}readFixed64(){if(this.pos+8>this.len)throw je(this,8);let e=Ar(this.buf,this.pos+=4),t=Ar(this.buf,this.pos+=4);return new Le(e,t)}int64(){return this.readLongVarint().toBigInt()}int64Number(){return this.readLongVarint().toNumber()}int64String(){return this.readLongVarint().toString()}uint64(){return this.readLongVarint().toBigInt(!0)}uint64Number(){let e=Hi(this.buf,this.pos);return this.pos+=Se(e),e}uint64String(){return this.readLongVarint().toString(!0)}sint64(){return this.readLongVarint().zzDecode().toBigInt()}sint64Number(){return this.readLongVarint().zzDecode().toNumber()}sint64String(){return this.readLongVarint().zzDecode().toString()}fixed64(){return this.readFixed64().toBigInt()}fixed64Number(){return this.readFixed64().toNumber()}fixed64String(){return this.readFixed64().toString()}sfixed64(){return this.readFixed64().toBigInt()}sfixed64Number(){return this.readFixed64().toNumber()}sfixed64String(){return this.readFixed64().toString()}};function ji(s){return new $i(s instanceof Uint8Array?s:s.subarray())}function Ce(s,e,t){let r=ji(s);return e.decode(r,void 0,t)}function Zi(s){let e=s??8192,t=e>>>1,r,n=e;return function(o){if(o<1||o>t)return pe(o);n+o>e&&(r=pe(e),n=0);let a=r.subarray(n,n+=o);return n&7&&(n=(n|7)+1),a}}var jt=class{fn;len;next;val;constructor(e,t,r){this.fn=e,this.len=t,this.next=void 0,this.val=r}};function Ji(){}var Yi=class{head;tail;len;next;constructor(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}},xf=Zi();function Ef(s){return globalThis.Buffer!=null?pe(s):xf(s)}var Gs=class{len;head;tail;states;constructor(){this.len=0,this.head=new jt(Ji,0,0),this.tail=this.head,this.states=null}_push(e,t,r){return this.tail=this.tail.next=new jt(e,t,r),this.len+=t,this}uint32(e){return this.len+=(this.tail=this.tail.next=new Qi((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this}int32(e){return e<0?this._push(kr,10,Le.fromNumber(e)):this.uint32(e)}sint32(e){return this.uint32((e<<1^e>>31)>>>0)}uint64(e){let t=Le.fromBigInt(e);return this._push(kr,t.length(),t)}uint64Number(e){return this._push(Oi,Se(e),e)}uint64String(e){return this.uint64(BigInt(e))}int64(e){return this.uint64(e)}int64Number(e){return this.uint64Number(e)}int64String(e){return this.uint64String(e)}sint64(e){let t=Le.fromBigInt(e).zzEncode();return this._push(kr,t.length(),t)}sint64Number(e){let t=Le.fromNumber(e).zzEncode();return this._push(kr,t.length(),t)}sint64String(e){return this.sint64(BigInt(e))}bool(e){return this._push(Xi,1,e?1:0)}fixed32(e){return this._push(Ks,4,e>>>0)}sfixed32(e){return this.fixed32(e)}fixed64(e){let t=Le.fromBigInt(e);return this._push(Ks,4,t.lo)._push(Ks,4,t.hi)}fixed64Number(e){let t=Le.fromNumber(e);return this._push(Ks,4,t.lo)._push(Ks,4,t.hi)}fixed64String(e){return this.fixed64(BigInt(e))}sfixed64(e){return this.fixed64(e)}sfixed64Number(e){return this.fixed64Number(e)}sfixed64String(e){return this.fixed64String(e)}float(e){return this._push(Na,4,e)}double(e){return this._push(Ua,8,e)}bytes(e){let t=e.length>>>0;return t===0?this._push(Xi,1,0):this.uint32(t)._push(Bf,t,e)}string(e){let t=Oa(e);return t!==0?this.uint32(t)._push(Wi,t,e):this._push(Xi,1,0)}fork(){return this.states=new Yi(this),this.head=this.tail=new jt(Ji,0,0),this.len=0,this}reset(){return this.states!=null?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new jt(Ji,0,0),this.len=0),this}ldelim(){let e=this.head,t=this.tail,r=this.len;return this.reset().uint32(r),r!==0&&(this.tail.next=e.next,this.tail=t,this.len+=r),this}finish(){let e=this.head.next,t=Ef(this.len),r=0;for(;e!=null;)e.fn(e.val,t,r),r+=e.len,e=e.next;return t}};function Xi(s,e,t){e[t]=s&255}function Sf(s,e,t){for(;s>127;)e[t++]=s&127|128,s>>>=7;e[t]=s}var Qi=class extends jt{next;constructor(e,t){super(Sf,e,t),this.next=void 0}};function kr(s,e,t){for(;s.hi!==0;)e[t++]=s.lo&127|128,s.lo=(s.lo>>>7|s.hi<<25)>>>0,s.hi>>>=7;for(;s.lo>127;)e[t++]=s.lo&127|128,s.lo=s.lo>>>7;e[t++]=s.lo}function Ks(s,e,t){e[t]=s&255,e[t+1]=s>>>8&255,e[t+2]=s>>>16&255,e[t+3]=s>>>24}function Bf(s,e,t){e.set(s,t)}globalThis.Buffer!=null&&(Gs.prototype.bytes=function(s){let e=s.length>>>0;return this.uint32(e),e>0&&this._push(If,e,s),this},Gs.prototype.string=function(s){let e=globalThis.Buffer.byteLength(s);return this.uint32(e),e>0&&this._push(_f,e,s),this});function If(s,e,t){e.set(s,t)}function _f(s,e,t){s.length<40?Wi(s,e,t):e.utf8Write!=null?e.utf8Write(s,t):e.set(W(s),t)}function eo(){return new Gs}function De(s,e){let t=eo();return e.encode(s,t,{lengthDelimited:!1}),t.finish()}var ms;(function(s){s[s.VARINT=0]="VARINT",s[s.BIT64=1]="BIT64",s[s.LENGTH_DELIMITED=2]="LENGTH_DELIMITED",s[s.START_GROUP=3]="START_GROUP",s[s.END_GROUP=4]="END_GROUP",s[s.BIT32=5]="BIT32"})(ms||(ms={}));function Tr(s,e,t,r){return{name:s,type:e,encode:t,decode:r}}function to(s){function e(n){if(s[n.toString()]==null)throw new Error("Invalid enum value");return s[n]}let t=function(i,o){let a=e(i);o.int32(a)},r=function(i){let o=i.int32();return e(o)};return Tr("enum",ms.VARINT,t,r)}function Re(s,e){return Tr("message",ms.LENGTH_DELIMITED,s,e)}var Ve=class extends Error{code;constructor(e,t,r){super(e,r),this.code=t}};var ne;(function(s){s.RSA="RSA",s.Ed25519="Ed25519",s.secp256k1="secp256k1"})(ne||(ne={}));var so;(function(s){s[s.RSA=0]="RSA",s[s.Ed25519=1]="Ed25519",s[s.secp256k1=2]="secp256k1"})(so||(so={}));(function(s){s.codec=()=>to(so)})(ne||(ne={}));var tt;(function(s){let e;s.codec=()=>(e==null&&(e=Re((t,r,n={})=>{n.lengthDelimited!==!1&&r.fork(),t.Type!=null&&(r.uint32(8),ne.codec().encode(t.Type,r)),t.Data!=null&&(r.uint32(18),r.bytes(t.Data)),n.lengthDelimited!==!1&&r.ldelim()},(t,r,n={})=>{let i={},o=r==null?t.len:t.pos+r;for(;t.pos<o;){let a=t.uint32();switch(a>>>3){case 1:{i.Type=ne.codec().decode(t);break}case 2:{i.Data=t.bytes();break}default:{t.skipType(a&7);break}}}return i})),e),s.encode=t=>De(t,s.codec()),s.decode=(t,r)=>Ce(t,s.codec(),r)})(tt||(tt={}));var Pr;(function(s){let e;s.codec=()=>(e==null&&(e=Re((t,r,n={})=>{n.lengthDelimited!==!1&&r.fork(),t.Type!=null&&(r.uint32(8),ne.codec().encode(t.Type,r)),t.Data!=null&&(r.uint32(18),r.bytes(t.Data)),n.lengthDelimited!==!1&&r.ldelim()},(t,r,n={})=>{let i={},o=r==null?t.len:t.pos+r;for(;t.pos<o;){let a=t.uint32();switch(a>>>3){case 1:{i.Type=ne.codec().decode(t);break}case 2:{i.Data=t.bytes();break}default:{t.skipType(a&7);break}}}return i})),e),s.encode=t=>De(t,s.codec()),s.decode=(t,r)=>Ce(t,s.codec(),r)})(Pr||(Pr={}));var Qs={};ve(Qs,{MAX_RSA_KEY_SIZE:()=>xn,exportRSAPrivateKey:()=>Hc,exportToPem:()=>Vc,generateRSAKeyPair:()=>Gc,importFromPem:()=>Oc,jwkToPkcs1:()=>zf,jwkToPkix:()=>po,jwkToRSAPrivateKey:()=>Kc,pkcs1ToJwk:()=>Uc,pkcs1ToRSAPrivateKey:()=>go,pkixToJwk:()=>Fc,pkixToRSAPublicKey:()=>mo});var Mr=class extends us{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,dr(e);let r=St(t);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let n=this.blockLen,i=new Uint8Array(n);i.set(r.length>n?e.create().update(r).digest():r);for(let o=0;o<i.length;o++)i[o]^=54;this.iHash.update(i),this.oHash=e.create();for(let o=0;o<i.length;o++)i[o]^=106;this.oHash.update(i),i.fill(0)}update(e){return ls(this),this.iHash.update(e),this}digestInto(e){ls(this),cs(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){let e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));let{oHash:t,iHash:r,finished:n,destroyed:i,blockLen:o,outputLen:a}=this;return e=e,e.finished=n,e.destroyed=i,e.blockLen=o,e.outputLen=a,e.oHash=t._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}},zs=(s,e,t)=>new Mr(s,e).update(t).digest();zs.create=(s,e)=>new Mr(s,e);function Af(s,e,t,r){dr(s);let n=la({dkLen:32,asyncTick:10},r),{c:i,dkLen:o,asyncTick:a}=n;if(as(i),as(o),as(a),i<1)throw new Error("PBKDF2: iterations (c) should be >= 1");let c=St(e),f=St(t),l=new Uint8Array(o),u=zs.create(s,c),h=u._cloneInto().update(f);return{c:i,dkLen:o,asyncTick:a,DK:l,PRF:u,PRFSalt:h}}function kf(s,e,t,r,n){return s.destroy(),e.destroy(),r&&r.destroy(),n.fill(0),t}async function ro(s,e,t,r){let{c:n,dkLen:i,asyncTick:o,DK:a,PRF:c,PRFSalt:f}=Af(s,e,t,r),l,u=new Uint8Array(4),h=hs(u),p=new Uint8Array(c.outputLen);for(let g=1,d=0;d<i;g++,d+=c.outputLen){let m=a.subarray(d,d+c.outputLen);h.setInt32(0,g,!1),(l=f._cloneInto(l)).update(u).digestInto(p),m.set(p.subarray(0,m.length)),await aa(n-1,o,()=>{c._cloneInto(l).update(p).digestInto(p);for(let b=0;b<m.length;b++)m[b]^=p[b]})}return kf(c,f,a,l,p)}var Tf=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Ct=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Dt=new Uint32Array(64),no=class extends ds{constructor(){super(64,32,8,!1),this.A=Ct[0]|0,this.B=Ct[1]|0,this.C=Ct[2]|0,this.D=Ct[3]|0,this.E=Ct[4]|0,this.F=Ct[5]|0,this.G=Ct[6]|0,this.H=Ct[7]|0}get(){let{A:e,B:t,C:r,D:n,E:i,F:o,G:a,H:c}=this;return[e,t,r,n,i,o,a,c]}set(e,t,r,n,i,o,a,c){this.A=e|0,this.B=t|0,this.C=r|0,this.D=n|0,this.E=i|0,this.F=o|0,this.G=a|0,this.H=c|0}process(e,t){for(let u=0;u<16;u++,t+=4)Dt[u]=e.getUint32(t,!1);for(let u=16;u<64;u++){let h=Dt[u-15],p=Dt[u-2],g=qe(h,7)^qe(h,18)^h>>>3,d=qe(p,17)^qe(p,19)^p>>>10;Dt[u]=d+Dt[u-7]+g+Dt[u-16]|0}let{A:r,B:n,C:i,D:o,E:a,F:c,G:f,H:l}=this;for(let u=0;u<64;u++){let h=qe(a,6)^qe(a,11)^qe(a,25),p=l+h+ua(a,c,f)+Tf[u]+Dt[u]|0,d=(qe(r,2)^qe(r,13)^qe(r,22))+ha(r,n,i)|0;l=f,f=c,c=a,a=o+p|0,o=i,i=n,n=r,r=p+d|0}r=r+this.A|0,n=n+this.B|0,i=i+this.C|0,o=o+this.D|0,a=a+this.E|0,c=c+this.F|0,f=f+this.G|0,l=l+this.H|0,this.set(r,n,i,o,a,c,f,l)}roundClean(){Dt.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}};var bs=gr(()=>new no);var V=Ho(za());function Zt(s,e){let t=0;if(s.length===1)return s[0];for(let r=s.length-1;r>=0;r--)t+=s[s.length-1-r]*Math.pow(2,e*r);return t}function Rt(s,e,t=-1){let r=t,n=s,i=0,o=Math.pow(2,e);for(let a=1;a<8;a++){if(s<o){let c;if(r<0)c=new ArrayBuffer(a),i=a;else{if(r<a)return new ArrayBuffer(0);c=new ArrayBuffer(r),i=r}let f=new Uint8Array(c);for(let l=a-1;l>=0;l--){let u=Math.pow(2,l*e);f[i-l-1]=Math.floor(n/u),n-=f[i-l-1]*u}return c}o*=Math.pow(2,e)}return new ArrayBuffer(0)}function Rr(...s){let e=0,t=0;for(let i of s)e+=i.length;let r=new ArrayBuffer(e),n=new Uint8Array(r);for(let i of s)n.set(i,t),t+=i.length;return n}function oo(){let s=new Uint8Array(this.valueHex);if(this.valueHex.byteLength>=2){let a=s[0]===255&&s[1]&128,c=s[0]===0&&(s[1]&128)===0;(a||c)&&this.warnings.push("Needlessly long format")}let e=new ArrayBuffer(this.valueHex.byteLength),t=new Uint8Array(e);for(let a=0;a<this.valueHex.byteLength;a++)t[a]=0;t[0]=s[0]&128;let r=Zt(t,8),n=new ArrayBuffer(this.valueHex.byteLength),i=new Uint8Array(n);for(let a=0;a<this.valueHex.byteLength;a++)i[a]=s[a];return i[0]&=127,Zt(i,8)-r}function qa(s){let e=s<0?s*-1:s,t=128;for(let r=1;r<8;r++){if(e<=t){if(s<0){let o=t-e,a=Rt(o,8,r),c=new Uint8Array(a);return c[0]|=128,a}let n=Rt(e,8,r),i=new Uint8Array(n);if(i[0]&128){let o=n.slice(0),a=new Uint8Array(o);n=new ArrayBuffer(n.byteLength+1),i=new Uint8Array(n);for(let c=0;c<o.byteLength;c++)i[c+1]=a[c];i[0]=0}return n}t*=Math.pow(2,8)}return new ArrayBuffer(0)}function Wa(s,e){if(s.byteLength!==e.byteLength)return!1;let t=new Uint8Array(s),r=new Uint8Array(e);for(let n=0;n<t.length;n++)if(t[n]!==r[n])return!1;return!0}function Ne(s,e){let t=s.toString(10);if(e<t.length)return"";let r=e-t.length,n=new Array(r);for(let o=0;o<r;o++)n[o]="0";return n.join("").concat(t)}var B0=Math.log(2);function Nr(){if(typeof BigInt>"u")throw new Error("BigInt is not defined. Your environment doesn't implement BigInt.")}function ao(s){let e=0,t=0;for(let n=0;n<s.length;n++){let i=s[n];e+=i.byteLength}let r=new Uint8Array(e);for(let n=0;n<s.length;n++){let i=s[n];r.set(new Uint8Array(i),t),t+=i.byteLength}return r.buffer}function yt(s,e,t,r){return e instanceof Uint8Array?e.byteLength?t<0?(s.error="Wrong parameter: inputOffset less than zero",!1):r<0?(s.error="Wrong parameter: inputLength less than zero",!1):e.byteLength-t-r<0?(s.error="End of input reached before message was fully decoded (inconsistent offset and length values)",!1):!0:(s.error="Wrong parameter: inputBuffer has zero length",!1):(s.error="Wrong parameter: inputBuffer must be 'Uint8Array'",!1)}var Ws=class{constructor(){this.items=[]}write(e){this.items.push(e)}final(){return ao(this.items)}},qs=[new Uint8Array([1])],$a="0123456789";var vs="",Je=new ArrayBuffer(0),co=new Uint8Array(0),$s="EndOfContent",Za="OCTET STRING",Ja="BIT STRING";function wt(s){var e;return e=class extends s{constructor(...r){var n;super(...r);let i=r[0]||{};this.isHexOnly=(n=i.isHexOnly)!==null&&n!==void 0?n:!1,this.valueHexView=i.valueHex?V.BufferSourceConverter.toUint8Array(i.valueHex):co}get valueHex(){return this.valueHexView.slice().buffer}set valueHex(r){this.valueHexView=new Uint8Array(r)}fromBER(r,n,i){let o=r instanceof ArrayBuffer?new Uint8Array(r):r;if(!yt(this,o,n,i))return-1;let a=n+i;return this.valueHexView=o.subarray(n,a),this.valueHexView.length?(this.blockLength=i,a):(this.warnings.push("Zero buffer length"),n)}toBER(r=!1){return this.isHexOnly?r?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.byteLength===this.valueHexView.buffer.byteLength?this.valueHexView.buffer:this.valueHexView.slice().buffer:(this.error="Flag 'isHexOnly' is not set, abort",Je)}toJSON(){return{...super.toJSON(),isHexOnly:this.isHexOnly,valueHex:V.Convert.ToHex(this.valueHexView)}}},e.NAME="hexBlock",e}var gt=class{constructor({blockLength:e=0,error:t=vs,warnings:r=[],valueBeforeDecode:n=co}={}){this.blockLength=e,this.error=t,this.warnings=r,this.valueBeforeDecodeView=V.BufferSourceConverter.toUint8Array(n)}static blockName(){return this.NAME}get valueBeforeDecode(){return this.valueBeforeDecodeView.slice().buffer}set valueBeforeDecode(e){this.valueBeforeDecodeView=new Uint8Array(e)}toJSON(){return{blockName:this.constructor.NAME,blockLength:this.blockLength,error:this.error,warnings:this.warnings,valueBeforeDecode:V.Convert.ToHex(this.valueBeforeDecodeView)}}};gt.NAME="baseBlock";var be=class extends gt{fromBER(e,t,r){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}toBER(e,t){throw TypeError("User need to make a specific function in a class which extends 'ValueBlock'")}};be.NAME="valueBlock";var Lr=class extends wt(gt){constructor({idBlock:e={}}={}){var t,r,n,i;super(),e?(this.isHexOnly=(t=e.isHexOnly)!==null&&t!==void 0?t:!1,this.valueHexView=e.valueHex?V.BufferSourceConverter.toUint8Array(e.valueHex):co,this.tagClass=(r=e.tagClass)!==null&&r!==void 0?r:-1,this.tagNumber=(n=e.tagNumber)!==null&&n!==void 0?n:-1,this.isConstructed=(i=e.isConstructed)!==null&&i!==void 0?i:!1):(this.tagClass=-1,this.tagNumber=-1,this.isConstructed=!1)}toBER(e=!1){let t=0;switch(this.tagClass){case 1:t|=0;break;case 2:t|=64;break;case 3:t|=128;break;case 4:t|=192;break;default:return this.error="Unknown tag class",Je}if(this.isConstructed&&(t|=32),this.tagNumber<31&&!this.isHexOnly){let n=new Uint8Array(1);if(!e){let i=this.tagNumber;i&=31,t|=i,n[0]=t}return n.buffer}if(!this.isHexOnly){let n=Rt(this.tagNumber,7),i=new Uint8Array(n),o=n.byteLength,a=new Uint8Array(o+1);if(a[0]=t|31,!e){for(let c=0;c<o-1;c++)a[c+1]=i[c]|128;a[o]=i[o-1]}return a.buffer}let r=new Uint8Array(this.valueHexView.byteLength+1);if(r[0]=t|31,!e){let n=this.valueHexView;for(let i=0;i<n.length-1;i++)r[i+1]=n[i]|128;r[this.valueHexView.byteLength]=n[n.length-1]}return r.buffer}fromBER(e,t,r){let n=V.BufferSourceConverter.toUint8Array(e);if(!yt(this,n,t,r))return-1;let i=n.subarray(t,t+r);if(i.length===0)return this.error="Zero buffer length",-1;switch(i[0]&192){case 0:this.tagClass=1;break;case 64:this.tagClass=2;break;case 128:this.tagClass=3;break;case 192:this.tagClass=4;break;default:return this.error="Unknown tag class",-1}this.isConstructed=(i[0]&32)===32,this.isHexOnly=!1;let a=i[0]&31;if(a!==31)this.tagNumber=a,this.blockLength=1;else{let c=1,f=this.valueHexView=new Uint8Array(255),l=255;for(;i[c]&128;){if(f[c-1]=i[c]&127,c++,c>=i.length)return this.error="End of input reached before message was fully decoded",-1;if(c===l){l+=255;let h=new Uint8Array(l);for(let p=0;p<f.length;p++)h[p]=f[p];f=this.valueHexView=new Uint8Array(l)}}this.blockLength=c+1,f[c-1]=i[c]&127;let u=new Uint8Array(c);for(let h=0;h<c;h++)u[h]=f[h];f=this.valueHexView=new Uint8Array(c),f.set(u),this.blockLength<=9?this.tagNumber=Zt(f,7):(this.isHexOnly=!0,this.warnings.push("Tag too long, represented as hex-coded"))}if(this.tagClass===1&&this.isConstructed)switch(this.tagNumber){case 1:case 2:case 5:case 6:case 9:case 13:case 14:case 23:case 24:case 31:case 32:case 33:case 34:return this.error="Constructed encoding used for primitive type",-1}return t+this.blockLength}toJSON(){return{...super.toJSON(),tagClass:this.tagClass,tagNumber:this.tagNumber,isConstructed:this.isConstructed}}};Lr.NAME="identificationBlock";var Ur=class extends gt{constructor({lenBlock:e={}}={}){var t,r,n;super(),this.isIndefiniteForm=(t=e.isIndefiniteForm)!==null&&t!==void 0?t:!1,this.longFormUsed=(r=e.longFormUsed)!==null&&r!==void 0?r:!1,this.length=(n=e.length)!==null&&n!==void 0?n:0}fromBER(e,t,r){let n=V.BufferSourceConverter.toUint8Array(e);if(!yt(this,n,t,r))return-1;let i=n.subarray(t,t+r);if(i.length===0)return this.error="Zero buffer length",-1;if(i[0]===255)return this.error="Length block 0xFF is reserved by standard",-1;if(this.isIndefiniteForm=i[0]===128,this.isIndefiniteForm)return this.blockLength=1,t+this.blockLength;if(this.longFormUsed=!!(i[0]&128),this.longFormUsed===!1)return this.length=i[0],this.blockLength=1,t+this.blockLength;let o=i[0]&127;if(o>8)return this.error="Too big integer",-1;if(o+1>i.length)return this.error="End of input reached before message was fully decoded",-1;let a=t+1,c=n.subarray(a,a+o);return c[o-1]===0&&this.warnings.push("Needlessly long encoded length"),this.length=Zt(c,8),this.longFormUsed&&this.length<=127&&this.warnings.push("Unnecessary usage of long length form"),this.blockLength=o+1,t+this.blockLength}toBER(e=!1){let t,r;if(this.length>127&&(this.longFormUsed=!0),this.isIndefiniteForm)return t=new ArrayBuffer(1),e===!1&&(r=new Uint8Array(t),r[0]=128),t;if(this.longFormUsed){let n=Rt(this.length,8);if(n.byteLength>127)return this.error="Too big length",Je;if(t=new ArrayBuffer(n.byteLength+1),e)return t;let i=new Uint8Array(n);r=new Uint8Array(t),r[0]=n.byteLength|128;for(let o=0;o<n.byteLength;o++)r[o+1]=i[o];return t}return t=new ArrayBuffer(1),e===!1&&(r=new Uint8Array(t),r[0]=this.length),t}toJSON(){return{...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,longFormUsed:this.longFormUsed,length:this.length}}};Ur.NAME="lengthBlock";var T={},de=class extends gt{constructor({name:e=vs,optional:t=!1,primitiveSchema:r,...n}={},i){super(n),this.name=e,this.optional=t,r&&(this.primitiveSchema=r),this.idBlock=new Lr(n),this.lenBlock=new Ur(n),this.valueBlock=i?new i(n):new be(n)}fromBER(e,t,r){let n=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return n===-1?(this.error=this.valueBlock.error,n):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),n)}toBER(e,t){let r=t||new Ws;t||Xa(this);let n=this.idBlock.toBER(e);if(r.write(n),this.lenBlock.isIndefiniteForm)r.write(new Uint8Array([128]).buffer),this.valueBlock.toBER(e,r),r.write(new ArrayBuffer(2));else{let i=this.valueBlock.toBER(e);this.lenBlock.length=i.byteLength;let o=this.lenBlock.toBER(e);r.write(o),r.write(i)}return t?Je:r.final()}toJSON(){let e={...super.toJSON(),idBlock:this.idBlock.toJSON(),lenBlock:this.lenBlock.toJSON(),valueBlock:this.valueBlock.toJSON(),name:this.name,optional:this.optional};return this.primitiveSchema&&(e.primitiveSchema=this.primitiveSchema.toJSON()),e}toString(e="ascii"){return e==="ascii"?this.onAsciiEncoding():V.Convert.ToHex(this.toBER())}onAsciiEncoding(){return`${this.constructor.NAME} : ${V.Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`}isEqual(e){if(this===e)return!0;if(!(e instanceof this.constructor))return!1;let t=this.toBER(),r=e.toBER();return Wa(t,r)}};de.NAME="BaseBlock";function Xa(s){if(s instanceof T.Constructed)for(let e of s.valueBlock.value)Xa(e)&&(s.lenBlock.isIndefiniteForm=!0);return!!s.lenBlock.isIndefiniteForm}var Fr=class extends de{constructor({value:e=vs,...t}={},r){super(t,r),e&&this.fromString(e)}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}fromBER(e,t,r){let n=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return n===-1?(this.error=this.valueBlock.error,n):(this.fromBuffer(this.valueBlock.valueHexView),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),n)}onAsciiEncoding(){return`${this.constructor.NAME} : '${this.valueBlock.value}'`}};Fr.NAME="BaseStringBlock";var Vr=class extends wt(be){constructor({isHexOnly:e=!0,...t}={}){super(t),this.isHexOnly=e}};Vr.NAME="PrimitiveValueBlock";var Ya,Or=class extends de{constructor(e={}){super(e,Vr),this.idBlock.isConstructed=!1}};Ya=Or;T.Primitive=Ya;Or.NAME="PRIMITIVE";function Ff(s,e){if(s instanceof e)return s;let t=new e;return t.idBlock=s.idBlock,t.lenBlock=s.lenBlock,t.warnings=s.warnings,t.valueBeforeDecodeView=s.valueBeforeDecodeView,t}function vn(s,e=0,t=s.length){let r=e,n=new de({},be),i=new gt;if(!yt(i,s,e,t))return n.error=i.error,{offset:-1,result:n};if(!s.subarray(e,e+t).length)return n.error="Zero buffer length",{offset:-1,result:n};let a=n.idBlock.fromBER(s,e,t);if(n.idBlock.warnings.length&&n.warnings.concat(n.idBlock.warnings),a===-1)return n.error=n.idBlock.error,{offset:-1,result:n};if(e=a,t-=n.idBlock.blockLength,a=n.lenBlock.fromBER(s,e,t),n.lenBlock.warnings.length&&n.warnings.concat(n.lenBlock.warnings),a===-1)return n.error=n.lenBlock.error,{offset:-1,result:n};if(e=a,t-=n.lenBlock.blockLength,!n.idBlock.isConstructed&&n.lenBlock.isIndefiniteForm)return n.error="Indefinite length form used for primitive encoding form",{offset:-1,result:n};let c=de;switch(n.idBlock.tagClass){case 1:if(n.idBlock.tagNumber>=37&&n.idBlock.isHexOnly===!1)return n.error="UNIVERSAL 37 and upper tags are reserved by ASN.1 standard",{offset:-1,result:n};switch(n.idBlock.tagNumber){case 0:if(n.idBlock.isConstructed&&n.lenBlock.length>0)return n.error="Type [UNIVERSAL 0] is reserved",{offset:-1,result:n};c=T.EndOfContent;break;case 1:c=T.Boolean;break;case 2:c=T.Integer;break;case 3:c=T.BitString;break;case 4:c=T.OctetString;break;case 5:c=T.Null;break;case 6:c=T.ObjectIdentifier;break;case 10:c=T.Enumerated;break;case 12:c=T.Utf8String;break;case 13:c=T.RelativeObjectIdentifier;break;case 14:c=T.TIME;break;case 15:return n.error="[UNIVERSAL 15] is reserved by ASN.1 standard",{offset:-1,result:n};case 16:c=T.Sequence;break;case 17:c=T.Set;break;case 18:c=T.NumericString;break;case 19:c=T.PrintableString;break;case 20:c=T.TeletexString;break;case 21:c=T.VideotexString;break;case 22:c=T.IA5String;break;case 23:c=T.UTCTime;break;case 24:c=T.GeneralizedTime;break;case 25:c=T.GraphicString;break;case 26:c=T.VisibleString;break;case 27:c=T.GeneralString;break;case 28:c=T.UniversalString;break;case 29:c=T.CharacterString;break;case 30:c=T.BmpString;break;case 31:c=T.DATE;break;case 32:c=T.TimeOfDay;break;case 33:c=T.DateTime;break;case 34:c=T.Duration;break;default:{let f=n.idBlock.isConstructed?new T.Constructed:new T.Primitive;f.idBlock=n.idBlock,f.lenBlock=n.lenBlock,f.warnings=n.warnings,n=f}}break;case 2:case 3:case 4:default:c=n.idBlock.isConstructed?T.Constructed:T.Primitive}return n=Ff(n,c),a=n.fromBER(s,e,n.lenBlock.isIndefiniteForm?t:n.lenBlock.length),n.valueBeforeDecodeView=s.subarray(r,r+n.blockLength),{offset:a,result:n}}function xs(s){if(!s.byteLength){let e=new de({},be);return e.error="Input buffer has zero length",{offset:-1,result:e}}return vn(V.BufferSourceConverter.toUint8Array(s).slice(),0,s.byteLength)}function Vf(s,e){return s?1:e}var st=class extends be{constructor({value:e=[],isIndefiniteForm:t=!1,...r}={}){super(r),this.value=e,this.isIndefiniteForm=t}fromBER(e,t,r){let n=V.BufferSourceConverter.toUint8Array(e);if(!yt(this,n,t,r))return-1;if(this.valueBeforeDecodeView=n.subarray(t,t+r),this.valueBeforeDecodeView.length===0)return this.warnings.push("Zero buffer length"),t;let i=t;for(;Vf(this.isIndefiniteForm,r)>0;){let o=vn(n,i,r);if(o.offset===-1)return this.error=o.result.error,this.warnings.concat(o.result.warnings),-1;if(i=o.offset,this.blockLength+=o.result.blockLength,r-=o.result.blockLength,this.value.push(o.result),this.isIndefiniteForm&&o.result.constructor.NAME===$s)break}return this.isIndefiniteForm&&(this.value[this.value.length-1].constructor.NAME===$s?this.value.pop():this.warnings.push("No EndOfContent block encoded")),i}toBER(e,t){let r=t||new Ws;for(let n=0;n<this.value.length;n++)this.value[n].toBER(e,r);return t?Je:r.final()}toJSON(){let e={...super.toJSON(),isIndefiniteForm:this.isIndefiniteForm,value:[]};for(let t of this.value)e.value.push(t.toJSON());return e}};st.NAME="ConstructedValueBlock";var Qa,Nt=class extends de{constructor(e={}){super(e,st),this.idBlock.isConstructed=!0}fromBER(e,t,r){this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm;let n=this.valueBlock.fromBER(e,t,this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return n===-1?(this.error=this.valueBlock.error,n):(this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.valueBlock.error.length||(this.blockLength+=this.valueBlock.blockLength),n)}onAsciiEncoding(){let e=[];for(let r of this.valueBlock.value)e.push(r.toString("ascii").split(`
 `).map(n=>`  ${n}`).join(`
 `));let t=this.idBlock.tagClass===3?`[${this.idBlock.tagNumber}]`:this.constructor.NAME;return e.length?`${t} :
 ${e.join(`
-`)}`:`${t} :`}};Ac=Vt;k.Constructed=Ac;Vt.NAME="CONSTRUCTED";var cn=class extends _e{fromBER(e,t,r){return t}toBER(e){return je}};cn.override="EndOfContentValueBlock";var kc,ln=class extends pe{constructor(e={}){super(e,cn),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}};kc=ln;k.EndOfContent=kc;ln.NAME=nr;var Tc,Ot=class extends pe{constructor(e={}){super(e,_e),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}fromBER(e,t,r){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=r,t+r>e.byteLength?(this.error="End of input reached before message was fully decoded (inconsistent offset and length values)",-1):t+r}toBER(e,t){let r=new ArrayBuffer(2);if(!e){let n=new Uint8Array(r);n[0]=5,n[1]=0}return t&&t.write(r),r}onAsciiEncoding(){return`${this.constructor.NAME}`}};Tc=Ot;k.Null=Tc;Ot.NAME="NULL";var un=class extends _t(_e){constructor({value:e,...t}={}){super(t),t.valueHex?this.valueHexView=H.BufferSourceConverter.toUint8Array(t.valueHex):this.valueHexView=new Uint8Array(1),e&&(this.value=e)}get value(){for(let e of this.valueHexView)if(e>0)return!0;return!1}set value(e){this.valueHexView[0]=e?255:0}fromBER(e,t,r){let n=H.BufferSourceConverter.toUint8Array(e);return Et(this,n,t,r)?(this.valueHexView=n.subarray(t,t+r),r>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.isHexOnly=!0,lo.call(this),this.blockLength=r,t+r):-1}toBER(){return this.valueHexView.slice()}toJSON(){return{...super.toJSON(),value:this.value}}};un.NAME="BooleanValueBlock";var Pc,hn=class extends pe{constructor(e={}){super(e,un),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.getValue}`}};Pc=hn;k.Boolean=Pc;hn.NAME="BOOLEAN";var fn=class extends _t(tt){constructor({isConstructed:e=!1,...t}={}){super(t),this.isConstructed=e}fromBER(e,t,r){let n=0;if(this.isConstructed){if(this.isHexOnly=!1,n=tt.prototype.fromBER.call(this,e,t,r),n===-1)return n;for(let i=0;i<this.value.length;i++){let o=this.value[i].constructor.NAME;if(o===nr){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(o!==_c)return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,n=super.fromBER(e,t,r),this.blockLength=r;return n}toBER(e,t){return this.isConstructed?tt.prototype.toBER.call(this,e,t):e?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),isConstructed:this.isConstructed}}};fn.NAME="OctetStringValueBlock";var Rc,vt=class s extends pe{constructor({idBlock:e={},lenBlock:t={},...r}={}){var n,i;(n=r.isConstructed)!==null&&n!==void 0||(r.isConstructed=!!(!((i=r.value)===null||i===void 0)&&i.length)),super({idBlock:{isConstructed:r.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!r.isIndefiniteForm},...r},fn),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(e,t,r){if(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,r===0)return this.idBlock.error.length===0&&(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length===0&&(this.blockLength+=this.lenBlock.blockLength),t;if(!this.valueBlock.isConstructed){let i=(e instanceof ArrayBuffer?new Uint8Array(e):e).subarray(t,t+r);try{if(i.byteLength){let o=Fn(i,0,i.byteLength);o.offset!==-1&&o.offset===r&&(this.valueBlock.value=[o.result])}}catch{}}return super.fromBER(e,t,r)}onAsciiEncoding(){return this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length?Vt.prototype.onAsciiEncoding.call(this):`${this.constructor.NAME} : ${H.Convert.ToHex(this.valueBlock.valueHexView)}`}getValue(){if(!this.idBlock.isConstructed)return this.valueBlock.valueHexView.slice().buffer;let e=[];for(let t of this.valueBlock.value)t instanceof s&&e.push(t.valueBlock.valueHexView);return H.BufferSourceConverter.concat(e)}};Rc=vt;k.OctetString=Rc;vt.NAME=_c;var dn=class extends _t(tt){constructor({unusedBits:e=0,isConstructed:t=!1,...r}={}){super(r),this.unusedBits=e,this.isConstructed=t,this.blockLength=this.valueHexView.byteLength}fromBER(e,t,r){if(!r)return t;let n=-1;if(this.isConstructed){if(n=tt.prototype.fromBER.call(this,e,t,r),n===-1)return n;for(let a of this.value){let c=a.constructor.NAME;if(c===nr){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(c!==Bc)return this.error="BIT STRING may consists of BIT STRINGs only",-1;let f=a.valueBlock;if(this.unusedBits>0&&f.unusedBits>0)return this.error='Using of "unused bits" inside constructive BIT STRING allowed for least one only',-1;this.unusedBits=f.unusedBits}return n}let i=H.BufferSourceConverter.toUint8Array(e);if(!Et(this,i,t,r))return-1;let o=i.subarray(t,t+r);if(this.unusedBits=o[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;if(!this.unusedBits){let a=o.subarray(1);try{if(a.byteLength){let c=Fn(a,0,a.byteLength);c.offset!==-1&&c.offset===r-1&&(this.value=[c.result])}}catch{}}return this.valueHexView=o.subarray(1),this.blockLength=o.length,t+r}toBER(e,t){if(this.isConstructed)return tt.prototype.toBER.call(this,e,t);if(e)return new ArrayBuffer(this.valueHexView.byteLength+1);if(!this.valueHexView.byteLength)return je;let r=new Uint8Array(this.valueHexView.length+1);return r[0]=this.unusedBits,r.set(this.valueHexView,1),r.buffer}toJSON(){return{...super.toJSON(),unusedBits:this.unusedBits,isConstructed:this.isConstructed}}};dn.NAME="BitStringValueBlock";var Mc,Ns=class extends pe{constructor({idBlock:e={},lenBlock:t={},...r}={}){var n,i;(n=r.isConstructed)!==null&&n!==void 0||(r.isConstructed=!!(!((i=r.value)===null||i===void 0)&&i.length)),super({idBlock:{isConstructed:r.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!r.isIndefiniteForm},...r},dn),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}fromBER(e,t,r){return this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(e,t,r)}onAsciiEncoding(){if(this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length)return Vt.prototype.onAsciiEncoding.call(this);{let e=[],t=this.valueBlock.valueHexView;for(let n of t)e.push(n.toString(2).padStart(8,"0"));let r=e.join("");return`${this.constructor.NAME} : ${r.substring(0,r.length-this.valueBlock.unusedBits)}`}}};Mc=Ns;k.BitString=Mc;Ns.NAME=Bc;var Dc;function ad(s,e){let t=new Uint8Array([0]),r=new Uint8Array(s),n=new Uint8Array(e),i=r.slice(0),o=i.length-1,a=n.slice(0),c=a.length-1,f=0,l=c<o?o:c,u=0;for(let h=l;h>=0;h--,u++){switch(!0){case u<a.length:f=i[o-u]+a[c-u]+t[0];break;default:f=i[o-u]+t[0]}switch(t[0]=f/10,!0){case u>=i.length:i=en(new Uint8Array([f%10]),i);break;default:i[o-u]=f%10}}return t[0]>0&&(i=en(t,i)),i}function Ec(s){if(s>=sr.length)for(let e=sr.length;e<=s;e++){let t=new Uint8Array([0]),r=sr[e-1].slice(0);for(let n=r.length-1;n>=0;n--){let i=new Uint8Array([(r[n]<<1)+t[0]]);t[0]=i[0]/10,r[n]=i[0]%10}t[0]>0&&(r=en(t,r)),sr.push(r)}return sr[s]}function cd(s,e){let t=0,r=new Uint8Array(s),n=new Uint8Array(e),i=r.slice(0),o=i.length-1,a=n.slice(0),c=a.length-1,f,l=0;for(let u=c;u>=0;u--,l++)switch(f=i[o-l]-a[c-l]-t,!0){case f<0:t=1,i[o-l]=f+10;break;default:t=0,i[o-l]=f}if(t>0)for(let u=o-c+1;u>=0;u--,l++)if(f=i[o-l]-t,f<0)t=1,i[o-l]=f+10;else{t=0,i[o-l]=f;break}return i.slice()}var ir=class extends _t(_e){constructor({value:e,...t}={}){super(t),this._valueDec=0,t.valueHex&&this.setValueHex(),e!==void 0&&(this.valueDec=e)}setValueHex(){this.valueHexView.length>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,this.valueHexView.length>0&&(this._valueDec=lo.call(this)))}set valueDec(e){this._valueDec=e,this.isHexOnly=!1,this.valueHexView=new Uint8Array(wc(e))}get valueDec(){return this._valueDec}fromDER(e,t,r,n=0){let i=this.fromBER(e,t,r);if(i===-1)return i;let o=this.valueHexView;return o[0]===0&&o[1]&128?this.valueHexView=o.subarray(1):n!==0&&o.length<n&&(n-o.length>1&&(n=o.length+1),this.valueHexView=o.subarray(n-o.length)),i}toDER(e=!1){let t=this.valueHexView;switch(!0){case(t[0]&128)!==0:{let r=new Uint8Array(this.valueHexView.length+1);r[0]=0,r.set(t,1),this.valueHexView=r}break;case(t[0]===0&&(t[1]&128)===0):this.valueHexView=this.valueHexView.subarray(1);break}return this.toBER(e)}fromBER(e,t,r){let n=super.fromBER(e,t,r);return n===-1||this.setValueHex(),n}toBER(e){return e?new ArrayBuffer(this.valueHexView.length):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}toString(){let e=this.valueHexView.length*8-1,t=new Uint8Array(this.valueHexView.length*8/3),r=0,n,i=this.valueHexView,o="",a=!1;for(let c=i.byteLength-1;c>=0;c--){n=i[c];for(let f=0;f<8;f++){if((n&1)===1)switch(r){case e:t=cd(Ec(r),t),o="-";break;default:t=ad(t,Ec(r))}r++,n>>=1}}for(let c=0;c<t.length;c++)t[c]&&(a=!0),a&&(o+=xc.charAt(t[c]));return a===!1&&(o+=xc.charAt(0)),o}};Dc=ir;ir.NAME="IntegerValueBlock";Object.defineProperty(Dc.prototype,"valueHex",{set:function(s){this.valueHexView=new Uint8Array(s),this.setValueHex()},get:function(){return this.valueHexView.slice().buffer}});var Nc,oe=class s extends pe{constructor(e={}){super(e,ir),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}toBigInt(){return tn(),BigInt(this.valueBlock.toString())}static fromBigInt(e){tn();let t=BigInt(e),r=new rr,n=t.toString(16).replace(/^-/,""),i=new Uint8Array(H.Convert.FromHex(n));if(t<0){let a=new Uint8Array(i.length+(i[0]&128?1:0));a[0]|=128;let f=BigInt(`0x${H.Convert.ToHex(a)}`)+t,l=H.BufferSourceConverter.toUint8Array(H.Convert.FromHex(f.toString(16)));l[0]|=128,r.write(l)}else i[0]&128&&r.write(new Uint8Array([0])),r.write(i);return new s({valueHex:r.final()})}convertToDER(){let e=new s({valueHex:this.valueBlock.valueHexView});return e.valueBlock.toDER(),e}convertFromDER(){return new s({valueHex:this.valueBlock.valueHexView[0]===0?this.valueBlock.valueHexView.subarray(1):this.valueBlock.valueHexView})}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()}`}};Nc=oe;k.Integer=Nc;oe.NAME="INTEGER";var Cc,pn=class extends oe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}};Cc=pn;k.Enumerated=Cc;pn.NAME="ENUMERATED";var or=class extends _t(_e){constructor({valueDec:e=-1,isFirstSid:t=!1,...r}={}){super(r),this.valueDec=e,this.isFirstSid=t}fromBER(e,t,r){if(!r)return t;let n=H.BufferSourceConverter.toUint8Array(e);if(!Et(this,n,t,r))return-1;let i=n.subarray(t,t+r);this.valueHexView=new Uint8Array(r);for(let a=0;a<r&&(this.valueHexView[a]=i[a]&127,this.blockLength++,!!(i[a]&128));a++);let o=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)o[a]=this.valueHexView[a];return this.valueHexView=o,i[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=ts(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}set valueBigInt(e){tn();let t=BigInt(e).toString(2);for(;t.length%7;)t="0"+t;let r=new Uint8Array(t.length/7);for(let n=0;n<r.length;n++)r[n]=parseInt(t.slice(n*7,n*7+7),2)+(n+1<r.length?128:0);this.fromBER(r.buffer,0,r.length)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let n=this.valueHexView,i=new Uint8Array(this.blockLength);for(let o=0;o<this.blockLength-1;o++)i[o]=n[o]|128;return i[this.blockLength-1]=n[this.blockLength-1],i.buffer}let t=Ut(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",je;let r=new Uint8Array(t.byteLength);if(!e){let n=new Uint8Array(t),i=t.byteLength-1;for(let o=0;o<i;o++)r[o]=n[o]|128;r[i]=n[i]}return r}toString(){let e="";if(this.isHexOnly)e=H.Convert.ToHex(this.valueHexView);else if(this.isFirstSid){let t=this.valueDec;this.valueDec<=39?e="0.":this.valueDec<=79?(e="1.",t-=40):(e="2.",t-=80),e+=t.toString()}else e=this.valueDec.toString();return e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec,isFirstSid:this.isFirstSid}}};or.NAME="sidBlock";var gn=class extends _e{constructor({value:e=Cs,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,r){let n=t;for(;r>0;){let i=new or;if(n=i.fromBER(e,n,r),n===-1)return this.blockLength=0,this.error=i.error,n;this.value.length===0&&(i.isFirstSid=!0),this.blockLength+=i.blockLength,r-=i.blockLength,this.value.push(i)}return n}toBER(e){let t=[];for(let r=0;r<this.value.length;r++){let n=this.value[r].toBER(e);if(n.byteLength===0)return this.error=this.value[r].error,je;t.push(n)}return uo(t)}fromString(e){this.value=[];let t=0,r=0,n="",i=!1;do if(r=e.indexOf(".",t),r===-1?n=e.substring(t):n=e.substring(t,r),t=r+1,i){let o=this.value[0],a=0;switch(o.valueDec){case 0:break;case 1:a=40;break;case 2:a=80;break;default:this.value=[];return}let c=parseInt(n,10);if(isNaN(c))return;o.valueDec=c+a,i=!1}else{let o=new or;if(n>Number.MAX_SAFE_INTEGER){tn();let a=BigInt(n);o.valueBigInt=a}else if(o.valueDec=parseInt(n,10),isNaN(o.valueDec))return;this.value.length||(o.isFirstSid=!0,i=!0),this.value.push(o)}while(r!==-1)}toString(){let e="",t=!1;for(let r=0;r<this.value.length;r++){t=this.value[r].isHexOnly;let n=this.value[r].toString();r!==0&&(e=`${e}.`),t?(n=`{${n}}`,this.value[r].isFirstSid?e=`2.{${n} - 80}`:e+=n):e+=n}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};gn.NAME="ObjectIdentifierValueBlock";var Lc,$e=class extends pe{constructor(e={}){super(e,gn),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};Lc=$e;k.ObjectIdentifier=Lc;$e.NAME="OBJECT IDENTIFIER";var ar=class extends _t(wt){constructor({valueDec:e=0,...t}={}){super(t),this.valueDec=e}fromBER(e,t,r){if(r===0)return t;let n=H.BufferSourceConverter.toUint8Array(e);if(!Et(this,n,t,r))return-1;let i=n.subarray(t,t+r);this.valueHexView=new Uint8Array(r);for(let a=0;a<r&&(this.valueHexView[a]=i[a]&127,this.blockLength++,!!(i[a]&128));a++);let o=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)o[a]=this.valueHexView[a];return this.valueHexView=o,i[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=ts(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let n=this.valueHexView,i=new Uint8Array(this.blockLength);for(let o=0;o<this.blockLength-1;o++)i[o]=n[o]|128;return i[this.blockLength-1]=n[this.blockLength-1],i.buffer}let t=Ut(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",je;let r=new Uint8Array(t.byteLength);if(!e){let n=new Uint8Array(t),i=t.byteLength-1;for(let o=0;o<i;o++)r[o]=n[o]|128;r[i]=n[i]}return r.buffer}toString(){let e="";return this.isHexOnly?e=H.Convert.ToHex(this.valueHexView):e=this.valueDec.toString(),e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}};ar.NAME="relativeSidBlock";var mn=class extends _e{constructor({value:e=Cs,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,r){let n=t;for(;r>0;){let i=new ar;if(n=i.fromBER(e,n,r),n===-1)return this.blockLength=0,this.error=i.error,n;this.blockLength+=i.blockLength,r-=i.blockLength,this.value.push(i)}return n}toBER(e,t){let r=[];for(let n=0;n<this.value.length;n++){let i=this.value[n].toBER(e);if(i.byteLength===0)return this.error=this.value[n].error,je;r.push(i)}return uo(r)}fromString(e){this.value=[];let t=0,r=0,n="";do{r=e.indexOf(".",t),r===-1?n=e.substring(t):n=e.substring(t,r),t=r+1;let i=new ar;if(i.valueDec=parseInt(n,10),isNaN(i.valueDec))return!0;this.value.push(i)}while(r!==-1);return!0}toString(){let e="",t=!1;for(let r=0;r<this.value.length;r++){t=this.value[r].isHexOnly;let n=this.value[r].toString();r!==0&&(e=`${e}.`),t&&(n=`{${n}}`),e+=n}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};mn.NAME="RelativeObjectIdentifierValueBlock";var Uc,bn=class extends pe{constructor(e={}){super(e,mn),this.idBlock.tagClass=1,this.idBlock.tagNumber=13}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};Uc=bn;k.RelativeObjectIdentifier=Uc;bn.NAME="RelativeObjectIdentifier";var Vc,he=class extends Vt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}};Vc=he;k.Sequence=Vc;he.NAME="SEQUENCE";var Oc,yn=class extends Vt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}};Oc=yn;k.Set=Oc;yn.NAME="SET";var wn=class extends _t(_e){constructor({...e}={}){super(e),this.isHexOnly=!0,this.value=Cs}toJSON(){return{...super.toJSON(),value:this.value}}};wn.NAME="StringValueBlock";var vn=class extends wn{};vn.NAME="SimpleStringValueBlock";var Pe=class extends nn{constructor({...e}={}){super(e,vn)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,H.BufferSourceConverter.toUint8Array(e))}fromString(e){let t=e.length,r=this.valueBlock.valueHexView=new Uint8Array(t);for(let n=0;n<t;n++)r[n]=e.charCodeAt(n);this.valueBlock.value=e}};Pe.NAME="SIMPLE STRING";var xn=class extends Pe{fromBuffer(e){this.valueBlock.valueHexView=H.BufferSourceConverter.toUint8Array(e);try{this.valueBlock.value=H.Convert.ToUtf8String(e)}catch(t){this.warnings.push(`Error during "decodeURIComponent": ${t}, using raw string`),this.valueBlock.value=H.Convert.ToBinary(e)}}fromString(e){this.valueBlock.valueHexView=new Uint8Array(H.Convert.FromUtf8String(e)),this.valueBlock.value=e}};xn.NAME="Utf8StringValueBlock";var Fc,xt=class extends xn{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}};Fc=xt;k.Utf8String=Fc;xt.NAME="UTF8String";var En=class extends Pe{fromBuffer(e){this.valueBlock.value=H.Convert.ToUtf16String(e),this.valueBlock.valueHexView=H.BufferSourceConverter.toUint8Array(e)}fromString(e){this.valueBlock.value=e,this.valueBlock.valueHexView=new Uint8Array(H.Convert.FromUtf16String(e))}};En.NAME="BmpStringValueBlock";var Hc,_n=class extends En{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}};Hc=_n;k.BmpString=Hc;_n.NAME="BMPString";var Bn=class extends Pe{fromBuffer(e){let t=ArrayBuffer.isView(e)?e.slice().buffer:e.slice(0),r=new Uint8Array(t);for(let n=0;n<r.length;n+=4)r[n]=r[n+3],r[n+1]=r[n+2],r[n+2]=0,r[n+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(t))}fromString(e){let t=e.length,r=this.valueBlock.valueHexView=new Uint8Array(t*4);for(let n=0;n<t;n++){let i=Ut(e.charCodeAt(n),8),o=new Uint8Array(i);if(o.length>4)continue;let a=4-o.length;for(let c=o.length-1;c>=0;c--)r[n*4+c+a]=o[c]}this.valueBlock.value=e}};Bn.NAME="UniversalStringValueBlock";var Gc,Sn=class extends Bn{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}};Gc=Sn;k.UniversalString=Gc;Sn.NAME="UniversalString";var Kc,In=class extends Pe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}};Kc=In;k.NumericString=Kc;In.NAME="NumericString";var zc,An=class extends Pe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}};zc=An;k.PrintableString=zc;An.NAME="PrintableString";var qc,kn=class extends Pe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}};qc=kn;k.TeletexString=qc;kn.NAME="TeletexString";var Wc,Tn=class extends Pe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}};Wc=Tn;k.VideotexString=Wc;Tn.NAME="VideotexString";var $c,Pn=class extends Pe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}};$c=Pn;k.IA5String=$c;Pn.NAME="IA5String";var jc,Rn=class extends Pe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}};jc=Rn;k.GraphicString=jc;Rn.NAME="GraphicString";var Zc,cr=class extends Pe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}};Zc=cr;k.VisibleString=Zc;cr.NAME="VisibleString";var Yc,Mn=class extends Pe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}};Yc=Mn;k.GeneralString=Yc;Mn.NAME="GeneralString";var Xc,Dn=class extends Pe{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}};Xc=Dn;k.CharacterString=Xc;Dn.NAME="CharacterString";var Jc,lr=class extends cr{constructor({value:e,valueDate:t,...r}={}){if(super(r),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,e){this.fromString(e),this.valueBlock.valueHexView=new Uint8Array(e.length);for(let n=0;n<e.length;n++)this.valueBlock.valueHexView[n]=e.charCodeAt(n)}t&&(this.fromDate(t),this.valueBlock.valueHexView=new Uint8Array(this.toBuffer())),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,H.BufferSourceConverter.toUint8Array(e)))}toBuffer(){let e=this.toString(),t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let n=0;n<e.length;n++)r[n]=e.charCodeAt(n);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(e){let r=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/ig.exec(e);if(r===null){this.error="Wrong input string for conversion";return}let n=parseInt(r[1],10);n>=50?this.year=1900+n:this.year=2e3+n,this.month=parseInt(r[2],10),this.day=parseInt(r[3],10),this.hour=parseInt(r[4],10),this.minute=parseInt(r[5],10),this.second=parseInt(r[6],10)}toString(e="iso"){if(e==="iso"){let t=new Array(7);return t[0]=Ne(this.year<2e3?this.year-1900:this.year-2e3,2),t[1]=Ne(this.month,2),t[2]=Ne(this.day,2),t[3]=Ne(this.hour,2),t[4]=Ne(this.minute,2),t[5]=Ne(this.second,2),t[6]="Z",t.join("")}return super.toString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.toDate().toISOString()}`}toJSON(){return{...super.toJSON(),year:this.year,month:this.month,day:this.day,hour:this.hour,minute:this.minute,second:this.second}}};Jc=lr;k.UTCTime=Jc;lr.NAME="UTCTime";var Qc,Nn=class extends lr{constructor(e={}){var t;super(e),(t=this.millisecond)!==null&&t!==void 0||(this.millisecond=0),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromDate(e){super.fromDate(e),this.millisecond=e.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(e){let t=!1,r="",n="",i=0,o,a=0,c=0;if(e[e.length-1]==="Z")r=e.substring(0,e.length-1),t=!0;else{let u=new Number(e[e.length-1]);if(isNaN(u.valueOf()))throw new Error("Wrong input string for conversion");r=e}if(t){if(r.indexOf("+")!==-1)throw new Error("Wrong input string for conversion");if(r.indexOf("-")!==-1)throw new Error("Wrong input string for conversion")}else{let u=1,h=r.indexOf("+"),p="";if(h===-1&&(h=r.indexOf("-"),u=-1),h!==-1){if(p=r.substring(h+1),r=r.substring(0,h),p.length!==2&&p.length!==4)throw new Error("Wrong input string for conversion");let g=parseInt(p.substring(0,2),10);if(isNaN(g.valueOf()))throw new Error("Wrong input string for conversion");if(a=u*g,p.length===4){if(g=parseInt(p.substring(2,4),10),isNaN(g.valueOf()))throw new Error("Wrong input string for conversion");c=u*g}}}let f=r.indexOf(".");if(f===-1&&(f=r.indexOf(",")),f!==-1){let u=new Number(`0${r.substring(f)}`);if(isNaN(u.valueOf()))throw new Error("Wrong input string for conversion");i=u.valueOf(),n=r.substring(0,f)}else n=r;switch(!0){case n.length===8:if(o=/(\d{4})(\d{2})(\d{2})/ig,f!==-1)throw new Error("Wrong input string for conversion");break;case n.length===10:if(o=/(\d{4})(\d{2})(\d{2})(\d{2})/ig,f!==-1){let u=60*i;this.minute=Math.floor(u),u=60*(u-this.minute),this.second=Math.floor(u),u=1e3*(u-this.second),this.millisecond=Math.floor(u)}break;case n.length===12:if(o=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/ig,f!==-1){let u=60*i;this.second=Math.floor(u),u=1e3*(u-this.second),this.millisecond=Math.floor(u)}break;case n.length===14:if(o=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/ig,f!==-1){let u=1e3*i;this.millisecond=Math.floor(u)}break;default:throw new Error("Wrong input string for conversion")}let l=o.exec(n);if(l===null)throw new Error("Wrong input string for conversion");for(let u=1;u<l.length;u++)switch(u){case 1:this.year=parseInt(l[u],10);break;case 2:this.month=parseInt(l[u],10);break;case 3:this.day=parseInt(l[u],10);break;case 4:this.hour=parseInt(l[u],10)+a;break;case 5:this.minute=parseInt(l[u],10)+c;break;case 6:this.second=parseInt(l[u],10);break;default:throw new Error("Wrong input string for conversion")}if(t===!1){let u=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=u.getUTCFullYear(),this.month=u.getUTCMonth(),this.day=u.getUTCDay(),this.hour=u.getUTCHours(),this.minute=u.getUTCMinutes(),this.second=u.getUTCSeconds(),this.millisecond=u.getUTCMilliseconds()}}toString(e="iso"){if(e==="iso"){let t=[];return t.push(Ne(this.year,4)),t.push(Ne(this.month,2)),t.push(Ne(this.day,2)),t.push(Ne(this.hour,2)),t.push(Ne(this.minute,2)),t.push(Ne(this.second,2)),this.millisecond!==0&&(t.push("."),t.push(Ne(this.millisecond,3))),t.push("Z"),t.join("")}return super.toString(e)}toJSON(){return{...super.toJSON(),millisecond:this.millisecond}}};Qc=Nn;k.GeneralizedTime=Qc;Nn.NAME="GeneralizedTime";var el,Cn=class extends xt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}};el=Cn;k.DATE=el;Cn.NAME="DATE";var tl,Ln=class extends xt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}};tl=Ln;k.TimeOfDay=tl;Ln.NAME="TimeOfDay";var sl,Un=class extends xt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}};sl=Un;k.DateTime=sl;Un.NAME="DateTime";var rl,Vn=class extends xt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}};rl=Vn;k.Duration=rl;Vn.NAME="Duration";var nl,On=class extends xt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}};nl=On;k.TIME=nl;On.NAME="TIME";function ud(s){let{result:e}=Ls(s),t=e.valueBlock.value;return{n:W(st(t[1].toBigInt()),"base64url"),e:W(st(t[2].toBigInt()),"base64url"),d:W(st(t[3].toBigInt()),"base64url"),p:W(st(t[4].toBigInt()),"base64url"),q:W(st(t[5].toBigInt()),"base64url"),dp:W(st(t[6].toBigInt()),"base64url"),dq:W(st(t[7].toBigInt()),"base64url"),qi:W(st(t[8].toBigInt()),"base64url"),kty:"RSA",alg:"RS256"}}function hd(s){if(s.n==null||s.e==null||s.d==null||s.p==null||s.q==null||s.dp==null||s.dq==null||s.qi==null)throw new T("JWK was missing components","ERR_INVALID_PARAMETERS");let t=new he({value:[new oe({value:0}),oe.fromBigInt(rt(Z(s.n,"base64url"))),oe.fromBigInt(rt(Z(s.e,"base64url"))),oe.fromBigInt(rt(Z(s.d,"base64url"))),oe.fromBigInt(rt(Z(s.p,"base64url"))),oe.fromBigInt(rt(Z(s.q,"base64url"))),oe.fromBigInt(rt(Z(s.dp,"base64url"))),oe.fromBigInt(rt(Z(s.dq,"base64url"))),oe.fromBigInt(rt(Z(s.qi,"base64url")))]}).toBER();return new Uint8Array(t,0,t.byteLength)}function fd(s){let{result:e}=Ls(s),t=e.valueBlock.value[1].valueBlock.value[0].valueBlock.value;return{kty:"RSA",n:W(st(t[0].toBigInt()),"base64url"),e:W(st(t[1].toBigInt()),"base64url")}}function dd(s){if(s.n==null||s.e==null)throw new T("JWK was missing components","ERR_INVALID_PARAMETERS");let t=new he({value:[new he({value:[new $e({value:"1.2.840.113549.1.1.1"}),new Ot]}),new Ns({valueHex:new he({value:[oe.fromBigInt(rt(Z(s.n,"base64url"))),oe.fromBigInt(rt(Z(s.e,"base64url")))]}).toBER()})]}).toBER();return new Uint8Array(t,0,t.byteLength)}function st(s){let e=s.toString(16);e.length%2>0&&(e=`0${e}`);let t=e.length/2,r=new Uint8Array(t),n=0,i=0;for(;n<t;)r[n]=parseInt(e.slice(i,i+2),16),n+=1,i+=2;return r}function rt(s){let e=[];return s.forEach(function(t){let r=t.toString(16);r.length%2>0&&(r=`0${r}`),e.push(r)}),BigInt("0x"+e.join(""))}var pd=16,fo=32,po=1e4;async function gd(s,e){let t=Te.get(),n=new he({value:[new oe({value:0}),new he({value:[new $e({value:"1.2.840.113549.1.1.1"}),new Ot]}),new vt({valueHex:s.marshal()})]}).toBER(),i=new Uint8Array(n,0,n.byteLength),o=et(pd),a=await ao(As,e,o,{c:po,dkLen:fo}),c=et(16),f=await t.subtle.importKey("raw",a,"AES-CBC",!1,["encrypt"]),l=await t.subtle.encrypt({name:"AES-CBC",iv:c},f,i),u=new he({value:[new vt({valueHex:o}),new oe({value:po}),new oe({value:fo}),new he({value:[new $e({value:"1.2.840.113549.2.11"}),new Ot]})]}),h=new he({value:[new $e({value:"1.2.840.113549.1.5.13"}),new he({value:[new he({value:[new $e({value:"1.2.840.113549.1.5.12"}),u]}),new he({value:[new $e({value:"2.16.840.1.101.3.4.1.42"}),new vt({valueHex:c})]})]})]}),g=new he({value:[h,new vt({valueHex:l})]}).toBER(),d=new Uint8Array(g,0,g.byteLength);return["-----BEGIN ENCRYPTED PRIVATE KEY-----",...W(d,"base64pad").split(/(.{64})/).filter(Boolean),"-----END ENCRYPTED PRIVATE KEY-----"].join(`
-`)}async function md(s,e){let t=Te.get(),r;if(s.includes("-----BEGIN ENCRYPTED PRIVATE KEY-----")){let n=Z(s.replace("-----BEGIN ENCRYPTED PRIVATE KEY-----","").replace("-----END ENCRYPTED PRIVATE KEY-----","").replace(/\n/g,"").trim(),"base64pad"),{result:i}=Ls(n),{iv:o,salt:a,iterations:c,keySize:f,cipherText:l}=bd(i),u=await ao(As,e,a,{c,dkLen:f}),h=await t.subtle.importKey("raw",u,"AES-CBC",!1,["decrypt"]),p=ur(await t.subtle.decrypt({name:"AES-CBC",iv:o},h,l)),{result:g}=Ls(p);r=il(g)}else if(s.includes("-----BEGIN PRIVATE KEY-----")){let n=Z(s.replace("-----BEGIN PRIVATE KEY-----","").replace("-----END PRIVATE KEY-----","").replace(/\n/g,"").trim(),"base64pad"),{result:i}=Ls(n);r=il(i)}else throw new T("Could not parse private key from PEM data","ERR_INVALID_PARAMETERS");return go(r)}function bd(s){let e=s.valueBlock.value[0];if(e.valueBlock.value[0].toString()!=="OBJECT IDENTIFIER : 1.2.840.113549.1.5.13")throw new T("Only pkcs5PBES2 encrypted private keys are supported","ERR_INVALID_PARAMS");let r=e.valueBlock.value[1].valueBlock.value[0];if(r.valueBlock.value[0].toString()!=="OBJECT IDENTIFIER : 1.2.840.113549.1.5.12")throw new T("Only pkcs5PBKDF2 key derivation functions are supported","ERR_INVALID_PARAMS");let i=r.valueBlock.value[1],o=ur(i.valueBlock.value[0].getValue()),a=po,c=fo;if(i.valueBlock.value.length===3)a=Number(i.valueBlock.value[1].toBigInt()),c=Number(i.valueBlock.value[2].toBigInt());else if(i.valueBlock.value.length===2)throw new T("Could not derive key size and iterations from PEM file - please use @libp2p/rsa to re-import your key","ERR_INVALID_PARAMS");let f=e.valueBlock.value[1].valueBlock.value[1],l=f.valueBlock.value[0].toString();if(l!=="OBJECT IDENTIFIER : 1.2.840.113549.3.7"){if(l!=="OBJECT IDENTIFIER : 1.3.14.3.2.7"){if(l!=="OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.2"){if(l!=="OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.22"){if(l!=="OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.42")throw new T("Only AES-CBC encryption schemes are supported","ERR_INVALID_PARAMS")}}}}let u=ur(f.valueBlock.value[1].getValue());return{cipherText:ur(s.valueBlock.value[1].getValue()),salt:o,iterations:a,keySize:c,iv:u}}function il(s){return ur(s.valueBlock.value[2].getValue())}function ur(s){return new Uint8Array(s,0,s.byteLength)}async function ol(s){let e=await Te.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:s,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await ll(e);return{privateKey:t[0],publicKey:t[1]}}async function mo(s){let t=[await Te.get().subtle.importKey("jwk",s,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await yd(s)],r=await ll({privateKey:t[0],publicKey:t[1]});return{privateKey:r[0],publicKey:r[1]}}async function al(s,e){let t=await Te.get().subtle.importKey("jwk",s,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),r=await Te.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,e instanceof Uint8Array?e:e.subarray());return new Uint8Array(r,0,r.byteLength)}async function cl(s,e,t){let r=await Te.get().subtle.importKey("jwk",s,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return Te.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},r,e,t instanceof Uint8Array?t:t.subarray())}async function ll(s){if(s.privateKey==null||s.publicKey==null)throw new T("Private and public key are required","ERR_INVALID_PARAMETERS");return Promise.all([Te.get().subtle.exportKey("jwk",s.privateKey),Te.get().subtle.exportKey("jwk",s.publicKey)])}async function yd(s){return Te.get().subtle.importKey("jwk",{kty:s.kty,n:s.n,e:s.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}function Hn(s){if(s.kty!=="RSA")throw new T("invalid key type","ERR_INVALID_KEY_TYPE");if(s.n==null)throw new T("invalid key modulus","ERR_INVALID_KEY_MODULUS");return Z(s.n,"base64url").length*8}var fr=8192,hr=class{_key;constructor(e){this._key=e}verify(e,t){return cl(this._key,t,e)}marshal(){return Ft.jwkToPkix(this._key)}get bytes(){return Je.encode({Type:J.RSA,Data:this.marshal()}).subarray()}equals(e){return be(this.bytes,e.bytes)}hash(){let e=ce.digest(this.bytes);return Fe(e)?e.then(({bytes:t})=>t):e.bytes}},Us=class{_key;_publicKey;constructor(e,t){this._key=e,this._publicKey=t}genSecret(){return et(16)}sign(e){return al(this._key,e)}get public(){if(this._publicKey==null)throw new T("public key not provided","ERR_PUBKEY_NOT_PROVIDED");return new hr(this._publicKey)}marshal(){return Ft.jwkToPkcs1(this._key)}get bytes(){return Qe.encode({Type:J.RSA,Data:this.marshal()}).subarray()}equals(e){return be(this.bytes,e.bytes)}hash(){let e=ce.digest(this.bytes);return Fe(e)?e.then(({bytes:t})=>t):e.bytes}async id(){let e=await this.public.hash();return W(e,"base58btc")}async export(e,t="pkcs-8"){if(t==="pkcs-8")return Ft.exportToPem(this,e);if(t==="libp2p-key")return Rs(this.bytes,e);throw new T(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};async function go(s){let e=Ft.pkcs1ToJwk(s);if(Hn(e)>fr)throw new T("key size is too large","ERR_KEY_SIZE_TOO_LARGE");let t=await mo(e);return new Us(t.privateKey,t.publicKey)}function vd(s){let e=Ft.pkixToJwk(s);if(Hn(e)>fr)throw new T("key size is too large","ERR_KEY_SIZE_TOO_LARGE");return new hr(e)}async function xd(s){if(Hn(s)>fr)throw new T("key size is too large","ERR_KEY_SIZE_TOO_LARGE");let e=await mo(s);return new Us(e.privateKey,e.publicKey)}async function Ed(s){if(s>fr)throw new T("key size is too large","ERR_KEY_SIZE_TOO_LARGE");let e=await ol(s);return new Us(e.privateKey,e.publicKey)}var Eo={};ue(Eo,{Secp256k1PrivateKey:()=>pr,Secp256k1PublicKey:()=>dr,generateKeyPair:()=>Cd,unmarshalSecp256k1PrivateKey:()=>Dd,unmarshalSecp256k1PublicKey:()=>Nd});var _d=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Ht=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Gt=new Uint32Array(64),yo=class extends Is{constructor(){super(64,32,8,!1),this.A=Ht[0]|0,this.B=Ht[1]|0,this.C=Ht[2]|0,this.D=Ht[3]|0,this.E=Ht[4]|0,this.F=Ht[5]|0,this.G=Ht[6]|0,this.H=Ht[7]|0}get(){let{A:e,B:t,C:r,D:n,E:i,F:o,G:a,H:c}=this;return[e,t,r,n,i,o,a,c]}set(e,t,r,n,i,o,a,c){this.A=e|0,this.B=t|0,this.C=r|0,this.D=n|0,this.E=i|0,this.F=o|0,this.G=a|0,this.H=c|0}process(e,t){for(let u=0;u<16;u++,t+=4)Gt[u]=e.getUint32(t,!1);for(let u=16;u<64;u++){let h=Gt[u-15],p=Gt[u-2],g=qe(h,7)^qe(h,18)^h>>>3,d=qe(p,17)^qe(p,19)^p>>>10;Gt[u]=d+Gt[u-7]+g+Gt[u-16]|0}let{A:r,B:n,C:i,D:o,E:a,F:c,G:f,H:l}=this;for(let u=0;u<64;u++){let h=qe(a,6)^qe(a,11)^qe(a,25),p=l+h+ja(a,c,f)+_d[u]+Gt[u]|0,d=(qe(r,2)^qe(r,13)^qe(r,22))+Za(r,n,i)|0;l=f,f=c,c=a,a=o+p|0,o=i,i=n,n=r,r=p+d|0}r=r+this.A|0,n=n+this.B|0,i=i+this.C|0,o=o+this.D|0,a=a+this.E|0,c=c+this.F|0,f=f+this.G|0,l=l+this.H|0,this.set(r,n,i,o,a,c,f,l)}roundClean(){Gt.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}};var ul=Fr(()=>new yo);function Bd(s){let e=Qs(s);Xe(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:t,Fp:r,a:n}=e;if(t){if(!r.eql(n,r.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if(typeof t!="object"||typeof t.beta!="bigint"||typeof t.splitScalar!="function")throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...e})}var{bytesToNumberBE:Sd,hexToBytes:Id}=Kr,ss={Err:class extends Error{constructor(e=""){super(e)}},_parseInt(s){let{Err:e}=ss;if(s.length<2||s[0]!==2)throw new e("Invalid signature integer tag");let t=s[1],r=s.subarray(2,t+2);if(!t||r.length!==t)throw new e("Invalid signature integer: wrong length");if(r[0]&128)throw new e("Invalid signature integer: negative");if(r[0]===0&&!(r[1]&128))throw new e("Invalid signature integer: unnecessary leading zero");return{d:Sd(r),l:s.subarray(t+2)}},toSig(s){let{Err:e}=ss,t=typeof s=="string"?Id(s):s;ks(t);let r=t.length;if(r<2||t[0]!=48)throw new e("Invalid signature tag");if(t[1]!==r-2)throw new e("Invalid signature: incorrect length");let{d:n,l:i}=ss._parseInt(t.subarray(2)),{d:o,l:a}=ss._parseInt(i);if(a.length)throw new e("Invalid signature: left bytes after parsing");return{r:n,s:o}},hexFromSig(s){let e=f=>Number.parseInt(f[0],16)&8?"00"+f:f,t=f=>{let l=f.toString(16);return l.length&1?`0${l}`:l},r=e(t(s.s)),n=e(t(s.r)),i=r.length/2,o=n.length/2,a=t(i),c=t(o);return`30${t(o+i+4)}02${c}${n}02${a}${r}`}},Bt=BigInt(0),Ge=BigInt(1),Ry=BigInt(2),hl=BigInt(3),My=BigInt(4);function Ad(s){let e=Bd(s),{Fp:t}=e,r=e.toBytes||((g,d,m)=>{let b=d.toAffine();return gt(Uint8Array.from([4]),t.toBytes(b.x),t.toBytes(b.y))}),n=e.fromBytes||(g=>{let d=g.subarray(1),m=t.fromBytes(d.subarray(0,t.BYTES)),b=t.fromBytes(d.subarray(t.BYTES,2*t.BYTES));return{x:m,y:b}});function i(g){let{a:d,b:m}=e,b=t.sqr(g),_=t.mul(b,g);return t.add(t.add(_,t.mul(g,d)),m)}if(!t.eql(t.sqr(e.Gy),i(e.Gx)))throw new Error("bad generator point: equation left != right");function o(g){return typeof g=="bigint"&&Bt<g&&g<e.n}function a(g){if(!o(g))throw new Error("Expected valid bigint: 0 < bigint < curve.n")}function c(g){let{allowedPrivateKeyLengths:d,nByteLength:m,wrapPrivateKey:b,n:_}=e;if(d&&typeof g!="bigint"){if(Nt(g)&&(g=dt(g)),typeof g!="string"||!d.includes(g.length))throw new Error("Invalid key");g=g.padStart(m*2,"0")}let w;try{w=typeof g=="bigint"?g:pt(se("private key",g,m))}catch{throw new Error(`private key must be ${m} bytes, hex or bigint, not ${typeof g}`)}return b&&(w=j(w,_)),a(w),w}let f=new Map;function l(g){if(!(g instanceof u))throw new Error("ProjectivePoint expected")}class u{constructor(d,m,b){if(this.px=d,this.py=m,this.pz=b,d==null||!t.isValid(d))throw new Error("x required");if(m==null||!t.isValid(m))throw new Error("y required");if(b==null||!t.isValid(b))throw new Error("z required")}static fromAffine(d){let{x:m,y:b}=d||{};if(!d||!t.isValid(m)||!t.isValid(b))throw new Error("invalid affine point");if(d instanceof u)throw new Error("projective point not allowed");let _=w=>t.eql(w,t.ZERO);return _(m)&&_(b)?u.ZERO:new u(m,b,t.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(d){let m=t.invertBatch(d.map(b=>b.pz));return d.map((b,_)=>b.toAffine(m[_])).map(u.fromAffine)}static fromHex(d){let m=u.fromAffine(n(se("pointHex",d)));return m.assertValidity(),m}static fromPrivateKey(d){return u.BASE.multiply(c(d))}_setWindowSize(d){this._WINDOW_SIZE=d,f.delete(this)}assertValidity(){if(this.is0()){if(e.allowInfinityPoint&&!t.is0(this.py))return;throw new Error("bad point: ZERO")}let{x:d,y:m}=this.toAffine();if(!t.isValid(d)||!t.isValid(m))throw new Error("bad point: x or y not FE");let b=t.sqr(m),_=i(d);if(!t.eql(b,_))throw new Error("bad point: equation left != right");if(!this.isTorsionFree())throw new Error("bad point: not in prime-order subgroup")}hasEvenY(){let{y:d}=this.toAffine();if(t.isOdd)return!t.isOdd(d);throw new Error("Field doesn't support isOdd")}equals(d){l(d);let{px:m,py:b,pz:_}=this,{px:w,py:A,pz:y}=d,x=t.eql(t.mul(m,y),t.mul(w,_)),E=t.eql(t.mul(b,y),t.mul(A,_));return x&&E}negate(){return new u(this.px,t.neg(this.py),this.pz)}double(){let{a:d,b:m}=e,b=t.mul(m,hl),{px:_,py:w,pz:A}=this,y=t.ZERO,x=t.ZERO,E=t.ZERO,B=t.mul(_,_),D=t.mul(w,w),N=t.mul(A,A),L=t.mul(_,w);return L=t.add(L,L),E=t.mul(_,A),E=t.add(E,E),y=t.mul(d,E),x=t.mul(b,N),x=t.add(y,x),y=t.sub(D,x),x=t.add(D,x),x=t.mul(y,x),y=t.mul(L,y),E=t.mul(b,E),N=t.mul(d,N),L=t.sub(B,N),L=t.mul(d,L),L=t.add(L,E),E=t.add(B,B),B=t.add(E,B),B=t.add(B,N),B=t.mul(B,L),x=t.add(x,B),N=t.mul(w,A),N=t.add(N,N),B=t.mul(N,L),y=t.sub(y,B),E=t.mul(N,D),E=t.add(E,E),E=t.add(E,E),new u(y,x,E)}add(d){l(d);let{px:m,py:b,pz:_}=this,{px:w,py:A,pz:y}=d,x=t.ZERO,E=t.ZERO,B=t.ZERO,D=e.a,N=t.mul(e.b,hl),L=t.mul(m,w),ne=t.mul(b,A),re=t.mul(_,y),Ve=t.add(m,b),S=t.add(w,A);Ve=t.mul(Ve,S),S=t.add(L,ne),Ve=t.sub(Ve,S),S=t.add(m,_);let R=t.add(w,y);return S=t.mul(S,R),R=t.add(L,re),S=t.sub(S,R),R=t.add(b,_),x=t.add(A,y),R=t.mul(R,x),x=t.add(ne,re),R=t.sub(R,x),B=t.mul(D,S),x=t.mul(N,re),B=t.add(x,B),x=t.sub(ne,B),B=t.add(ne,B),E=t.mul(x,B),ne=t.add(L,L),ne=t.add(ne,L),re=t.mul(D,re),S=t.mul(N,S),ne=t.add(ne,re),re=t.sub(L,re),re=t.mul(D,re),S=t.add(S,re),L=t.mul(ne,S),E=t.add(E,L),L=t.mul(R,S),x=t.mul(Ve,x),x=t.sub(x,L),L=t.mul(Ve,ne),B=t.mul(R,B),B=t.add(B,L),new u(x,E,B)}subtract(d){return this.add(d.negate())}is0(){return this.equals(u.ZERO)}wNAF(d){return p.wNAFCached(this,f,d,m=>{let b=t.invertBatch(m.map(_=>_.pz));return m.map((_,w)=>_.toAffine(b[w])).map(u.fromAffine)})}multiplyUnsafe(d){let m=u.ZERO;if(d===Bt)return m;if(a(d),d===Ge)return this;let{endo:b}=e;if(!b)return p.unsafeLadder(this,d);let{k1neg:_,k1:w,k2neg:A,k2:y}=b.splitScalar(d),x=m,E=m,B=this;for(;w>Bt||y>Bt;)w&Ge&&(x=x.add(B)),y&Ge&&(E=E.add(B)),B=B.double(),w>>=Ge,y>>=Ge;return _&&(x=x.negate()),A&&(E=E.negate()),E=new u(t.mul(E.px,b.beta),E.py,E.pz),x.add(E)}multiply(d){a(d);let m=d,b,_,{endo:w}=e;if(w){let{k1neg:A,k1:y,k2neg:x,k2:E}=w.splitScalar(m),{p:B,f:D}=this.wNAF(y),{p:N,f:L}=this.wNAF(E);B=p.constTimeNegate(A,B),N=p.constTimeNegate(x,N),N=new u(t.mul(N.px,w.beta),N.py,N.pz),b=B.add(N),_=D.add(L)}else{let{p:A,f:y}=this.wNAF(m);b=A,_=y}return u.normalizeZ([b,_])[0]}multiplyAndAddUnsafe(d,m,b){let _=u.BASE,w=(y,x)=>x===Bt||x===Ge||!y.equals(_)?y.multiplyUnsafe(x):y.multiply(x),A=w(this,m).add(w(d,b));return A.is0()?void 0:A}toAffine(d){let{px:m,py:b,pz:_}=this,w=this.is0();d==null&&(d=w?t.ONE:t.inv(_));let A=t.mul(m,d),y=t.mul(b,d),x=t.mul(_,d);if(w)return{x:t.ZERO,y:t.ZERO};if(!t.eql(x,t.ONE))throw new Error("invZ was invalid");return{x:A,y}}isTorsionFree(){let{h:d,isTorsionFree:m}=e;if(d===Ge)return!0;if(m)return m(u,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:d,clearCofactor:m}=e;return d===Ge?this:m?m(u,this):this.multiplyUnsafe(e.h)}toRawBytes(d=!0){return this.assertValidity(),r(u,this,d)}toHex(d=!0){return dt(this.toRawBytes(d))}}u.BASE=new u(e.Gx,e.Gy,t.ONE),u.ZERO=new u(t.ZERO,t.ONE,t.ZERO);let h=e.nBitLength,p=Wr(u,e.endo?Math.ceil(h/2):h);return{CURVE:e,ProjectivePoint:u,normPrivateKeyToScalar:c,weierstrassEquation:i,isWithinCurveOrder:o}}function kd(s){let e=Qs(s);return Xe(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}function fl(s){let e=kd(s),{Fp:t,n:r}=e,n=t.BYTES+1,i=2*t.BYTES+1;function o(S){return Bt<S&&S<t.ORDER}function a(S){return j(S,r)}function c(S){return zr(S,r)}let{ProjectivePoint:f,normPrivateKeyToScalar:l,weierstrassEquation:u,isWithinCurveOrder:h}=Ad({...e,toBytes(S,R,V){let I=R.toAffine(),v=t.toBytes(I.x),P=gt;return V?P(Uint8Array.from([R.hasEvenY()?2:3]),v):P(Uint8Array.from([4]),v,t.toBytes(I.y))},fromBytes(S){let R=S.length,V=S[0],I=S.subarray(1);if(R===n&&(V===2||V===3)){let v=pt(I);if(!o(v))throw new Error("Point is not on curve");let P=u(v),M;try{M=t.sqrt(P)}catch(F){let z=F instanceof Error?": "+F.message:"";throw new Error("Point is not on curve"+z)}let C=(M&Ge)===Ge;return(V&1)===1!==C&&(M=t.neg(M)),{x:v,y:M}}else if(R===i&&V===4){let v=t.fromBytes(I.subarray(0,t.BYTES)),P=t.fromBytes(I.subarray(t.BYTES,2*t.BYTES));return{x:v,y:P}}else throw new Error(`Point of length ${R} was invalid. Expected ${n} compressed bytes or ${i} uncompressed bytes`)}}),p=S=>dt(Lt(S,e.nByteLength));function g(S){let R=r>>Ge;return S>R}function d(S){return g(S)?a(-S):S}let m=(S,R,V)=>pt(S.slice(R,V));class b{constructor(R,V,I){this.r=R,this.s=V,this.recovery=I,this.assertValidity()}static fromCompact(R){let V=e.nByteLength;return R=se("compactSignature",R,V*2),new b(m(R,0,V),m(R,V,2*V))}static fromDER(R){let{r:V,s:I}=ss.toSig(se("DER",R));return new b(V,I)}assertValidity(){if(!h(this.r))throw new Error("r must be 0 < r < CURVE.n");if(!h(this.s))throw new Error("s must be 0 < s < CURVE.n")}addRecoveryBit(R){return new b(this.r,this.s,R)}recoverPublicKey(R){let{r:V,s:I,recovery:v}=this,P=E(se("msgHash",R));if(v==null||![0,1,2,3].includes(v))throw new Error("recovery id invalid");let M=v===2||v===3?V+e.n:V;if(M>=t.ORDER)throw new Error("recovery id 2 or 3 invalid");let C=v&1?"03":"02",O=f.fromHex(C+p(M)),F=c(M),z=a(-P*F),G=a(I*F),K=f.BASE.multiplyAndAddUnsafe(O,z,G);if(!K)throw new Error("point at infinify");return K.assertValidity(),K}hasHighS(){return g(this.s)}normalizeS(){return this.hasHighS()?new b(this.r,a(-this.s),this.recovery):this}toDERRawBytes(){return Xt(this.toDERHex())}toDERHex(){return ss.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return Xt(this.toCompactHex())}toCompactHex(){return p(this.r)+p(this.s)}}let _={isValidPrivateKey(S){try{return l(S),!0}catch{return!1}},normPrivateKeyToScalar:l,randomPrivateKey:()=>{let S=Qi(e.n);return oc(e.randomBytes(S),e.n)},precompute(S=8,R=f.BASE){return R._setWindowSize(S),R.multiply(BigInt(3)),R}};function w(S,R=!0){return f.fromPrivateKey(S).toRawBytes(R)}function A(S){let R=Nt(S),V=typeof S=="string",I=(R||V)&&S.length;return R?I===n||I===i:V?I===2*n||I===2*i:S instanceof f}function y(S,R,V=!0){if(A(S))throw new Error("first arg must be private key");if(!A(R))throw new Error("second arg must be public key");return f.fromHex(R).multiply(l(S)).toRawBytes(V)}let x=e.bits2int||function(S){let R=pt(S),V=S.length*8-e.nBitLength;return V>0?R>>BigInt(V):R},E=e.bits2int_modN||function(S){return a(x(S))},B=Js(e.nBitLength);function D(S){if(typeof S!="bigint")throw new Error("bigint expected");if(!(Bt<=S&&S<B))throw new Error(`bigint expected < 2^${e.nBitLength}`);return Lt(S,e.nByteLength)}function N(S,R,V=L){if(["recovered","canonical"].some(ee=>ee in V))throw new Error("sign() legacy options not supported");let{hash:I,randomBytes:v}=e,{lowS:P,prehash:M,extraEntropy:C}=V;P==null&&(P=!0),S=se("msgHash",S),M&&(S=se("prehashed msgHash",I(S)));let O=E(S),F=l(R),z=[D(F),D(O)];if(C!=null&&C!==!1){let ee=C===!0?v(t.BYTES):C;z.push(se("extraEntropy",ee))}let G=gt(...z),K=O;function ie(ee){let fe=x(ee);if(!h(fe))return;let de=c(fe),ae=f.BASE.multiply(fe).toAffine(),ge=a(ae.x);if(ge===Bt)return;let ot=a(de*a(K+ge*F));if(ot===Bt)return;let zt=(ae.x===ge?0:2)|Number(ae.y&Ge),Fs=ot;return P&&g(ot)&&(Fs=d(ot),zt^=1),new b(ge,Fs,zt)}return{seed:G,k2sig:ie}}let L={lowS:e.lowS,prehash:!1},ne={lowS:e.lowS,prehash:!1};function re(S,R,V=L){let{seed:I,k2sig:v}=N(S,R,V),P=e;return Zi(P.hash.outputLen,P.nByteLength,P.hmac)(I,v)}f.BASE._setWindowSize(8);function Ve(S,R,V,I=ne){let v=S;if(R=se("msgHash",R),V=se("publicKey",V),"strict"in I)throw new Error("options.strict was renamed to lowS");let{lowS:P,prehash:M}=I,C,O;try{if(typeof v=="string"||Nt(v))try{C=b.fromDER(v)}catch(ae){if(!(ae instanceof ss.Err))throw ae;C=b.fromCompact(v)}else if(typeof v=="object"&&typeof v.r=="bigint"&&typeof v.s=="bigint"){let{r:ae,s:ge}=v;C=new b(ae,ge)}else throw new Error("PARSE");O=f.fromHex(V)}catch(ae){if(ae.message==="PARSE")throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(P&&C.hasHighS())return!1;M&&(R=e.hash(R));let{r:F,s:z}=C,G=E(R),K=c(z),ie=a(G*K),ee=a(F*K),fe=f.BASE.multiplyAndAddUnsafe(O,ie,ee)?.toAffine();return fe?a(fe.x)===F:!1}return{CURVE:e,getPublicKey:w,getSharedSecret:y,sign:re,verify:Ve,ProjectivePoint:f,Signature:b,utils:_}}function Td(s){return{hash:s,hmac:(e,...t)=>tr(s,e,Or(...t)),randomBytes:Ss}}function dl(s,e){let t=r=>fl({...s,...Td(r)});return Object.freeze({...t(e),create:t})}var ml=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),pl=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Pd=BigInt(1),wo=BigInt(2),gl=(s,e)=>(s+e/wo)/e;function Rd(s){let e=ml,t=BigInt(3),r=BigInt(6),n=BigInt(11),i=BigInt(22),o=BigInt(23),a=BigInt(44),c=BigInt(88),f=s*s*s%e,l=f*f*s%e,u=X(l,t,e)*l%e,h=X(u,t,e)*l%e,p=X(h,wo,e)*f%e,g=X(p,n,e)*p%e,d=X(g,i,e)*g%e,m=X(d,a,e)*d%e,b=X(m,c,e)*m%e,_=X(b,a,e)*d%e,w=X(_,t,e)*l%e,A=X(w,o,e)*g%e,y=X(A,r,e)*f%e,x=X(y,wo,e);if(!vo.eql(vo.sqr(x),s))throw new Error("Cannot find square root");return x}var vo=qr(ml,void 0,void 0,{sqrt:Rd}),Ze=dl({a:BigInt(0),b:BigInt(7),Fp:vo,n:pl,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:s=>{let e=pl,t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-Pd*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),n=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=t,o=BigInt("0x100000000000000000000000000000000"),a=gl(i*s,e),c=gl(-r*s,e),f=j(s-a*t-c*n,e),l=j(-a*r-c*i,e),u=f>o,h=l>o;if(u&&(f=e-f),h&&(l=e-l),f>o||l>o)throw new Error("splitScalar: Endomorphism failed, k="+s);return{k1neg:u,k1:f,k2neg:h,k2:l}}}},ul),Hy=BigInt(0);var Gy=Ze.ProjectivePoint;function bl(){return Ze.utils.randomPrivateKey()}function yl(s,e){let t=ce.digest(e instanceof Uint8Array?e:e.subarray());if(Fe(t))return t.then(({digest:r})=>Ze.sign(r,s).toDERRawBytes()).catch(r=>{throw new T(String(r),"ERR_INVALID_INPUT")});try{return Ze.sign(t.digest,s).toDERRawBytes()}catch(r){throw new T(String(r),"ERR_INVALID_INPUT")}}function wl(s,e,t){let r=ce.digest(t instanceof Uint8Array?t:t.subarray());if(Fe(r))return r.then(({digest:n})=>Ze.verify(e,n,s)).catch(n=>{throw new T(String(n),"ERR_INVALID_INPUT")});try{return Ze.verify(e,r.digest,s)}catch(n){throw new T(String(n),"ERR_INVALID_INPUT")}}function vl(s){return Ze.ProjectivePoint.fromHex(s).toRawBytes(!0)}function xl(s){try{Ze.getPublicKey(s,!0)}catch(e){throw new T(String(e),"ERR_INVALID_PRIVATE_KEY")}}function xo(s){try{Ze.ProjectivePoint.fromHex(s)}catch(e){throw new T(String(e),"ERR_INVALID_PUBLIC_KEY")}}function El(s){try{return Ze.getPublicKey(s,!0)}catch(e){throw new T(String(e),"ERR_INVALID_PRIVATE_KEY")}}var dr=class{_key;constructor(e){xo(e),this._key=e}verify(e,t){return wl(this._key,t,e)}marshal(){return vl(this._key)}get bytes(){return Je.encode({Type:J.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return be(this.bytes,e.bytes)}async hash(){let e=ce.digest(this.bytes),t;return Fe(e)?{bytes:t}=await e:t=e.bytes,t}},pr=class{_key;_publicKey;constructor(e,t){this._key=e,this._publicKey=t??El(e),xl(this._key),xo(this._publicKey)}sign(e){return yl(this._key,e)}get public(){return new dr(this._publicKey)}marshal(){return this._key}get bytes(){return Qe.encode({Type:J.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return be(this.bytes,e.bytes)}hash(){let e=ce.digest(this.bytes);return Fe(e)?e.then(({bytes:t})=>t):e.bytes}async id(){let e=await this.public.hash();return W(e,"base58btc")}async export(e,t="libp2p-key"){if(t==="libp2p-key")return Rs(this.bytes,e);throw new T(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function Dd(s){return new pr(s)}function Nd(s){return new dr(s)}async function Cd(){let s=bl();return new pr(s)}var Kt={rsa:bo,ed25519:oo,secp256k1:Eo};function _o(s){let e=Object.keys(Kt).join(" / ");return new T(`invalid or unsupported key type ${s}. Must be ${e}`,"ERR_UNSUPPORTED_KEY_TYPE")}function Ld(s){if(s=s.toLowerCase(),s==="rsa"||s==="ed25519"||s==="secp256k1")return Kt[s];throw _o(s)}function Bo(s){let e=Je.decode(s),t=e.Data??new Uint8Array;switch(e.Type){case J.RSA:return Kt.rsa.unmarshalRsaPublicKey(t);case J.Ed25519:return Kt.ed25519.unmarshalEd25519PublicKey(t);case J.Secp256k1:return Kt.secp256k1.unmarshalSecp256k1PublicKey(t);default:throw _o(e.Type??"unknown")}}function _l(s,e){return e=(e??"rsa").toLowerCase(),Ld(e),s.bytes}async function Bl(s){let e=Qe.decode(s),t=e.Data??new Uint8Array;switch(e.Type){case J.RSA:return Kt.rsa.unmarshalRsaPrivateKey(t);case J.Ed25519:return Kt.ed25519.unmarshalEd25519PrivateKey(t);case J.Secp256k1:return Kt.secp256k1.unmarshalSecp256k1PrivateKey(t);default:throw _o(e.Type??"RSA")}}var Sl=Z("libp2p-pubsub:");async function Il(s,e,t,r){switch(s.type){case Pt.Signing:{let n={from:s.author.toBytes(),data:r,seqno:et(8),topic:e,signature:void 0,key:void 0},i=Ye([Sl,ht.Message.encode(n)]);n.signature=await s.privateKey.sign(i),n.key=s.key;let o={type:"signed",from:s.author,data:t,sequenceNumber:BigInt(`0x${W(n.seqno,"base16")}`),topic:e,signature:n.signature,key:n.key};return{raw:n,msg:o}}case Pt.Anonymous:return{raw:{from:void 0,data:r,seqno:void 0,topic:e,signature:void 0,key:void 0},msg:{type:"unsigned",data:t,topic:e}};default:throw new Error("Unreachable")}}async function Al(s,e){switch(s){case rs:return e.signature!=null?{valid:!1,error:xe.SignaturePresent}:e.seqno!=null?{valid:!1,error:xe.SeqnoPresent}:e.key!=null?{valid:!1,error:xe.FromPresent}:{valid:!0,message:{type:"unsigned",topic:e.topic,data:e.data??new Uint8Array(0)}};case qt:{if(e.seqno==null)return{valid:!1,error:xe.InvalidSeqno};if(e.seqno.length!==8)return{valid:!1,error:xe.InvalidSeqno};if(e.signature==null)return{valid:!1,error:xe.InvalidSignature};if(e.from==null)return{valid:!1,error:xe.InvalidPeerId};let t;try{t=js(e.from)}catch{return{valid:!1,error:xe.InvalidPeerId}}let r;if(e.key!=null){if(r=Bo(e.key),t.publicKey!==void 0&&!be(r.bytes,t.publicKey))return{valid:!1,error:xe.InvalidPeerId}}else{if(t.publicKey==null)return{valid:!1,error:xe.InvalidPeerId};r=Bo(t.publicKey)}let n={from:e.from,data:e.data,seqno:e.seqno,topic:e.topic,signature:void 0,key:void 0},i=Ye([Sl,ht.Message.encode(n)]);return await r.verify(i,e.signature)?{valid:!0,message:{type:"signed",from:t,data:e.data??new Uint8Array(0),sequenceNumber:BigInt(`0x${W(e.seqno,"base16")}`),topic:e.topic,signature:e.signature,key:e.key??_l(r)}}:{valid:!1,error:xe.InvalidSignature}}default:throw new Error("Unreachable")}}function nt(s=[],e){return{subscriptions:[],messages:s,control:e!==void 0?{graft:e.graft??[],prune:e.prune??[],ihave:e.ihave??[],iwant:e.iwant??[]}:void 0}}function So(s){return s.control===void 0&&(s.control={graft:[],prune:[],ihave:[],iwant:[]}),s}function it(s){if(s.length<=1)return s;let e=()=>Math.floor(Math.random()*Math.floor(s.length));for(let t=0;t<s.length;t++){let r=e(),n=s[t];s[t]=s[r],s[r]=n}return s}function kl(s){return W(s,"base64")}async function Tl(s,e){switch(s){case qt:{if(e==null)throw Error("Must provide PeerId");if(e.privateKey==null)throw Error("Cannot sign message, no private key present");if(e.publicKey==null)throw Error("Cannot sign message, no public key present");let t=await Bl(e.privateKey);return{type:Pt.Signing,author:e,key:e.publicKey,privateKey:t}}case rs:return{type:Pt.Anonymous};default:throw new Error(`Unknown signature policy "${s}"`)}}var Pl=(s,e)=>{let t=Z(e.toString(16).padStart(16,"0"),"base16"),r=new Uint8Array(s.length+t.length);return r.set(s,0),r.set(t,s.length),r};function Rl(s){if(s.type!=="signed")throw new Error("expected signed message type");if(s.sequenceNumber==null)throw Error("missing seqno field");return Pl(s.from.toBytes(),s.sequenceNumber)}async function Ml(s){return ce.encode(s.data)}var Gn=class{index=0;input="";new(e){return this.index=0,this.input=e,this}readAtomically(e){let t=this.index,r=e();return r===void 0&&(this.index=t),r}parseWith(e){let t=e();if(this.index===this.input.length)return t}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(e){return this.readAtomically(()=>{let t=this.readChar();if(t===e)return t})}readSeparator(e,t,r){return this.readAtomically(()=>{if(!(t>0&&this.readGivenChar(e)===void 0))return r()})}readNumber(e,t,r,n){return this.readAtomically(()=>{let i=0,o=0,a=this.peekChar();if(a===void 0)return;let c=a==="0",f=2**(8*n)-1;for(;;){let l=this.readAtomically(()=>{let u=this.readChar();if(u===void 0)return;let h=Number.parseInt(u,e);if(!Number.isNaN(h))return h});if(l===void 0)break;if(i*=e,i+=l,i>f||(o+=1,t!==void 0&&o>t))return}if(o!==0)return!r&&c&&o>1?void 0:i})}readIPv4Addr(){return this.readAtomically(()=>{let e=new Uint8Array(4);for(let t=0;t<e.length;t++){let r=this.readSeparator(".",t,()=>this.readNumber(10,3,!1,1));if(r===void 0)return;e[t]=r}return e})}readIPv6Addr(){let e=t=>{for(let r=0;r<t.length/2;r++){let n=r*2;if(r<t.length-3){let o=this.readSeparator(":",r,()=>this.readIPv4Addr());if(o!==void 0)return t[n]=o[0],t[n+1]=o[1],t[n+2]=o[2],t[n+3]=o[3],[n+4,!0]}let i=this.readSeparator(":",r,()=>this.readNumber(16,4,!0,2));if(i===void 0)return[n,!1];t[n]=i>>8,t[n+1]=i&255}return[t.length,!1]};return this.readAtomically(()=>{let t=new Uint8Array(16),[r,n]=e(t);if(r===16)return t;if(n||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;let i=new Uint8Array(14),o=16-(r+2),[a]=e(i.subarray(0,o));return t.set(i.subarray(0,a),16-a),t})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}};var Ud=45;var Dl=new Gn;function Kn(s){if(s.includes("%")&&(s=s.split("%")[0]),!(s.length>Ud))return Dl.new(s).parseWith(()=>Dl.readIPAddr())}var Ow=parseInt("0xFFFF",16),Fw=new Uint8Array([0,0,0,0,0,0,0,0,0,0,255,255]);function Io(s){return!!Kn(s)}var Ll=function(s,e=0,t){e=~~e,t=t??s.length-e;let r=new DataView(s.buffer);if(t===4){let n=[];for(let i=0;i<t;i++)n.push(s[e+i]);return n.join(".")}if(t===16){let n=[];for(let i=0;i<t;i+=2)n.push(r.getUint16(e+i).toString(16));return n.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""};var Ao={},ko={},qd=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,-1,"ip6zone"],[43,8,"ipcidr"],[53,-1,"dns",!0],[54,-1,"dns4",!0],[55,-1,"dns6",!0],[56,-1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,-1,"unix",!1,!0],[421,-1,"ipfs"],[421,-1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,-1,"garlic64"],[448,0,"tls"],[449,-1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,-1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[481,-1,"http-path"],[777,-1,"memory"]];qd.forEach(s=>{let e=Wd(...s);ko[e.code]=e,Ao[e.name]=e});function Wd(s,e,t,r,n){return{code:s,size:e,name:t,resolvable:!!r,path:!!n}}function gr(s){if(typeof s=="number"){if(ko[s]!=null)return ko[s];throw new Error(`no protocol with code: ${s}`)}else if(typeof s=="string"){if(Ao[s]!=null)return Ao[s];throw new Error(`no protocol with name: ${s}`)}throw new Error(`invalid protocol id type: ${typeof s}`)}var Iv=gr("ip4"),Av=gr("ip6"),kv=gr("ipcidr");function Vl(s,e){switch(gr(s).code){case 4:case 41:return $d(e);case 42:return Po(e);case 6:case 273:case 33:case 132:return Ol(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return Po(e);case 421:return Zd(e);case 444:return Ul(e);case 445:return Ul(e);case 466:return jd(e);case 481:return globalThis.encodeURIComponent(Po(e));default:return W(e,"base16")}}var To=Object.values(kt).map(s=>s.decoder),Tv=function(){let s=To[0].or(To[1]);return To.slice(2).forEach(e=>s=s.or(e)),s}();function $d(s){let e=Ll(s,0,s.length);if(e==null)throw new Error("ipBuff is required");if(!Io(e))throw new Error("invalid ip address");return e}function Ol(s){return new DataView(s.buffer).getUint16(s.byteOffset)}function Po(s){let e=us(s);if(s=s.slice(Se(e)),s.length!==e)throw new Error("inconsistent lengths");return W(s)}function jd(s){let e=us(s),t=s.slice(Se(e));if(t.length!==e)throw new Error("inconsistent lengths");return"u"+W(t,"base64url")}function Zd(s){let e=us(s),t=s.slice(Se(e));if(t.length!==e)throw new Error("inconsistent lengths");return W(t,"base58btc")}function Ul(s){let e=s.slice(0,s.length-2),t=s.slice(s.length-2),r=W(e,"base32"),n=Ol(t);return`${r}:${n}`}var zn;(function(s){s[s.ip4=4]="ip4",s[s.ip6=41]="ip6"})(zn||(zn={}));function Fl(s){for(let e of s.tuples())switch(e[0]){case zn.ip4:case zn.ip6:return Vl(e[0],e[1]);default:break}return null}var Vs=class{entries=new Map;validityMs;constructor(e){this.validityMs=e.validityMs}get size(){return this.entries.size}put(e,t){return this.entries.has(e)?!0:(this.entries.set(e,{value:t,validUntilMs:Date.now()+this.validityMs}),!1)}prune(){let e=Date.now();for(let[t,r]of this.entries.entries())if(r.validUntilMs<e)this.entries.delete(t);else break}has(e){return this.entries.has(e)}get(e){let t=this.entries.get(e);return t!=null&&t.validUntilMs>=Date.now()?t.value:void 0}clear(){this.entries.clear()}};var xp=Br,Ue;(function(s){s[s.started=0]="started",s[s.stopped=1]="stopped"})(Ue||(Ue={}));var qn=class extends br{globalSignaturePolicy;multicodecs=[Br,Ti];publishConfig;dataTransform;peers=new Set;streamsInbound=new Map;streamsOutbound=new Map;outboundInflightQueue=ut({objectMode:!0});direct=new Set;floodsubPeers=new Set;seenCache;acceptFromWhitelist=new Map;topics=new Map;subscriptions=new Set;mesh=new Map;fanout=new Map;fanoutLastpub=new Map;gossip=new Map;control=new Map;peerhave=new Map;iasked=new Map;backoff=new Map;outbound=new Map;msgIdFn;fastMsgIdFn;msgIdToStrFn;fastMsgIdCache;publishedMessageIds;mcache;score;topicValidators=new Map;log;heartbeatTicks=0;gossipTracer;components;directPeerInitial=null;static multicodec=Br;opts;decodeRpcLimits;metrics;status={code:Ue.stopped};maxInboundStreams;maxOutboundStreams;runOnTransientConnection;allowedTopics;heartbeatTimer=null;constructor(e,t={}){super();let r={fallbackToFloodsub:!0,floodPublish:!0,batchPublish:!1,tagMeshPeers:!0,doPX:!1,directPeers:[],D:6,Dlo:4,Dhi:12,Dscore:4,Dout:2,Dlazy:6,heartbeatInterval:1e3,fanoutTTL:6e4,mcacheLength:5,mcacheGossip:3,seenTTL:12e4,gossipsubIWantFollowupMs:3e3,prunePeers:16,pruneBackoff:6e4,unsubcribeBackoff:1e4,graftFloodThreshold:1e4,opportunisticGraftPeers:2,opportunisticGraftTicks:60,directConnectTicks:300,gossipFactor:.25,...t,scoreParams:La(t.scoreParams),scoreThresholds:Va(t.scoreThresholds)};if(this.components=e,this.decodeRpcLimits=r.decodeRpcLimits??Ea,this.globalSignaturePolicy=r.globalSignaturePolicy??qt,r.fallbackToFloodsub&&this.multicodecs.push(ki),this.log=e.logger.forComponent(r.debugName??"libp2p:gossipsub"),this.opts=r,this.direct=new Set(r.directPeers.map(n=>n.id.toString())),this.seenCache=new Vs({validityMs:r.seenTTL}),this.publishedMessageIds=new Vs({validityMs:r.seenTTL}),t.msgIdFn!=null)this.msgIdFn=t.msgIdFn;else switch(this.globalSignaturePolicy){case qt:this.msgIdFn=Rl;break;case rs:this.msgIdFn=Ml;break;default:throw new Error(`Invalid globalSignaturePolicy: ${this.globalSignaturePolicy}`)}if(t.fastMsgIdFn!=null&&(this.fastMsgIdFn=t.fastMsgIdFn,this.fastMsgIdCache=new Vs({validityMs:r.seenTTL})),this.msgIdToStrFn=t.msgIdToStrFn??kl,this.mcache=t.messageCache??new Tr(r.mcacheGossip,r.mcacheLength,this.msgIdToStrFn),t.dataTransform!=null&&(this.dataTransform=t.dataTransform),t.metricsRegister!=null){if(t.metricsTopicStrToLabel==null)throw Error("Must set metricsTopicStrToLabel with metrics");let n=Math.max(...Object.values(r.scoreParams.topics).map(o=>o.meshMessageDeliveriesWindow),1e3),i=Ca(t.metricsRegister,t.metricsTopicStrToLabel,{gossipPromiseExpireSec:this.opts.gossipsubIWantFollowupMs/1e3,behaviourPenaltyThreshold:r.scoreParams.behaviourPenaltyThreshold,maxMeshMessageDeliveriesWindowSec:n/1e3});i.mcacheSize.addCollect(()=>{this.onScrapeMetrics(i)});for(let o of this.multicodecs)i.protocolsEnabled.set({protocol:o},1);this.metrics=i}else this.metrics=null;this.gossipTracer=new Lr(this.opts.gossipsubIWantFollowupMs,this.msgIdToStrFn,this.metrics),this.score=new Dr(this.opts.scoreParams,this.metrics,this.components.logger,{scoreCacheValidityMs:r.heartbeatInterval}),this.maxInboundStreams=t.maxInboundStreams,this.maxOutboundStreams=t.maxOutboundStreams,this.runOnTransientConnection=t.runOnTransientConnection,this.allowedTopics=r.allowedTopics!=null?new Set(r.allowedTopics):null}[Symbol.toStringTag]="@chainsafe/libp2p-gossipsub";[Go]=["@libp2p/pubsub"];[Ko]=["@libp2p/identify"];getPeers(){return[...this.peers.keys()].map(e=>ct(e))}isStarted(){return this.status.code===Ue.started}async start(){if(this.isStarted())return;this.log("starting"),this.publishConfig=await Tl(this.globalSignaturePolicy,this.components.peerId),this.outboundInflightQueue=ut({objectMode:!0}),gs(this.outboundInflightQueue,async i=>{for await(let{peerId:o,connection:a}of i)await this.createOutboundStream(o,a)}).catch(i=>{this.log.error("outbound inflight queue error",i)}),await Promise.all(this.opts.directPeers.map(async i=>{await this.components.peerStore.merge(i.id,{multiaddrs:i.addrs})}));let e=this.components.registrar;await Promise.all(this.multicodecs.map(async i=>e.handle(i,this.onIncomingStream.bind(this),{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams,runOnTransientConnection:this.runOnTransientConnection})));let t={onConnect:this.onPeerConnected.bind(this),onDisconnect:this.onPeerDisconnected.bind(this),notifyOnTransient:this.runOnTransientConnection},r=await Promise.all(this.multicodecs.map(async i=>e.register(i,t))),n=setTimeout(this.runHeartbeat,100);this.status={code:Ue.started,registrarTopologyIds:r,heartbeatTimeout:n,hearbeatStartMs:Date.now()+100},this.score.start(),this.directPeerInitial=setTimeout(()=>{Promise.resolve().then(async()=>{await Promise.all(Array.from(this.direct).map(async i=>this.connect(i)))}).catch(i=>{this.log(i)})},1e3),this.opts.tagMeshPeers&&(this.addEventListener("gossipsub:graft",this.tagMeshPeer),this.addEventListener("gossipsub:prune",this.untagMeshPeer)),this.log("started")}async stop(){if(this.log("stopping"),this.status.code!==Ue.started)return;let{registrarTopologyIds:e}=this.status;this.status={code:Ue.stopped},this.opts.tagMeshPeers&&(this.removeEventListener("gossipsub:graft",this.tagMeshPeer),this.removeEventListener("gossipsub:prune",this.untagMeshPeer));let t=this.components.registrar;await Promise.all(this.multicodecs.map(async n=>t.unhandle(n))),e.forEach(n=>{t.unregister(n)}),this.outboundInflightQueue.end();let r=[];for(let n of this.streamsOutbound.values())r.push(n.close());this.streamsOutbound.clear();for(let n of this.streamsInbound.values())r.push(n.close());this.streamsInbound.clear(),await Promise.all(r),this.peers.clear(),this.subscriptions.clear(),this.heartbeatTimer!=null&&(this.heartbeatTimer.cancel(),this.heartbeatTimer=null),this.score.stop(),this.mesh.clear(),this.fanout.clear(),this.fanoutLastpub.clear(),this.gossip.clear(),this.control.clear(),this.peerhave.clear(),this.iasked.clear(),this.backoff.clear(),this.outbound.clear(),this.gossipTracer.clear(),this.seenCache.clear(),this.fastMsgIdCache!=null&&this.fastMsgIdCache.clear(),this.directPeerInitial!=null&&clearTimeout(this.directPeerInitial),this.log("stopped")}dumpPeerScoreStats(){return this.score.dumpPeerScoreStats()}onIncomingStream({stream:e,connection:t}){if(!this.isStarted())return;let r=t.remotePeer;this.addPeer(r,t.direction,t.remoteAddr),this.createInboundStream(r,e),this.outboundInflightQueue.push({peerId:r,connection:t})}onPeerConnected(e,t){this.metrics?.newConnectionCount.inc({status:t.status}),!(!this.isStarted()||t.status!=="open")&&(this.addPeer(e,t.direction,t.remoteAddr),this.outboundInflightQueue.push({peerId:e,connection:t}))}onPeerDisconnected(e){this.log("connection ended %p",e),this.removePeer(e)}async createOutboundStream(e,t){if(!this.isStarted())return;let r=e.toString();if(this.peers.has(r)&&!this.streamsOutbound.has(r))try{let n=new Nr(await t.newStream(this.multicodecs,{runOnTransientConnection:this.runOnTransientConnection}),o=>{this.log.error("outbound pipe error",o)},{maxBufferSize:this.opts.maxOutboundBufferSize});this.log("create outbound stream %p",e),this.streamsOutbound.set(r,n);let i=n.protocol;i===ki&&this.floodsubPeers.add(r),this.metrics?.peersPerProtocol.inc({protocol:i},1),this.subscriptions.size>0&&(this.log("send subscriptions to",r),this.sendSubscriptions(r,Array.from(this.subscriptions),!0))}catch(n){this.log.error("createOutboundStream error",n)}}createInboundStream(e,t){if(!this.isStarted())return;let r=e.toString();if(!this.peers.has(r))return;let n=this.streamsInbound.get(r);n!==void 0&&(this.log("replacing existing inbound steam %s",r),n.close().catch(o=>{this.log.error(o)})),this.log("create inbound stream %s",r);let i=new Cr(t,{maxDataLength:this.opts.maxInboundDataLength});this.streamsInbound.set(r,i),this.pipePeerReadStream(e,i.source).catch(o=>{this.log(o)})}addPeer(e,t,r){let n=e.toString();if(!this.peers.has(n)){this.log("new peer %p",e),this.peers.add(n),this.score.addPeer(n);let i=Fl(r);i!==null?this.score.addIP(n,i):this.log("Added peer has no IP in current address %s %s",n,r.toString()),this.outbound.has(n)||this.outbound.set(n,t==="outbound")}}removePeer(e){let t=e.toString();if(!this.peers.has(t))return;this.log("delete peer %p",e),this.peers.delete(t);let r=this.streamsOutbound.get(t),n=this.streamsInbound.get(t);r!=null&&this.metrics?.peersPerProtocol.inc({protocol:r.protocol},-1),r?.close().catch(i=>{this.log.error(i)}),n?.close().catch(i=>{this.log.error(i)}),this.streamsOutbound.delete(t),this.streamsInbound.delete(t);for(let i of this.topics.values())i.delete(t);for(let[i,o]of this.mesh)o.delete(t)&&this.metrics?.onRemoveFromMesh(i,ze.Dc,1);for(let i of this.fanout.values())i.delete(t);this.floodsubPeers.delete(t),this.gossip.delete(t),this.control.delete(t),this.outbound.delete(t),this.score.removePeer(t),this.acceptFromWhitelist.delete(t)}get started(){return this.status.code===Ue.started}getMeshPeers(e){let t=this.mesh.get(e);return t!=null?Array.from(t):[]}getSubscribers(e){let t=this.topics.get(e);return(t!=null?Array.from(t):[]).map(r=>ct(r))}getTopics(){return Array.from(this.subscriptions)}async pipePeerReadStream(e,t){try{await gs(t,async r=>{for await(let n of r)try{let i=n.subarray(),o=ht.decode(i,{limits:{subscriptions:this.decodeRpcLimits.maxSubscriptions,messages:this.decodeRpcLimits.maxMessages,control$:{ihave:this.decodeRpcLimits.maxIhaveMessageIDs,iwant:this.decodeRpcLimits.maxIwantMessageIDs,graft:this.decodeRpcLimits.maxControlMessages,prune:this.decodeRpcLimits.maxControlMessages,prune$:{peers:this.decodeRpcLimits.maxPeerInfos}}}});if(this.metrics?.onRpcRecv(o,i.length),this.opts.awaitRpcHandler)try{await this.handleReceivedRpc(e,o)}catch(a){this.metrics?.onRpcRecvError(),this.log(a)}else this.handleReceivedRpc(e,o).catch(a=>{this.metrics?.onRpcRecvError(),this.log(a)})}catch(i){this.metrics?.onRpcDataError(),this.log(i)}})}catch(r){this.metrics?.onPeerReadStreamError(),this.handlePeerReadStreamError(r,e)}}handlePeerReadStreamError(e,t){this.log.error(e),this.onPeerDisconnected(t)}async handleReceivedRpc(e,t){if(!this.acceptFrom(e.toString())){this.log("received message from unacceptable peer %p",e),this.metrics?.rpcRecvNotAccepted.inc();return}let r=t.subscriptions!=null?t.subscriptions.length:0,n=t.messages!=null?t.messages.length:0,i=0,o=0,a=0,c=0;if(t.control!=null&&(t.control.ihave!=null&&(i=t.control.ihave.length),t.control.iwant!=null&&(o=t.control.iwant.length),t.control.graft!=null&&(a=t.control.graft.length),t.control.prune!=null&&(c=t.control.prune.length)),this.log(`rpc.from ${e.toString()} subscriptions ${r} messages ${n} ihave ${i} iwant ${o} graft ${a} prune ${c}`),t.subscriptions!=null&&t.subscriptions.length>0){let f=[];t.subscriptions.forEach(l=>{let u=l.topic,h=l.subscribe===!0;if(u!=null){if(this.allowedTopics!=null&&!this.allowedTopics.has(u))return;this.handleReceivedSubscription(e,u,h),f.push({topic:u,subscribe:h})}}),this.safeDispatchEvent("subscription-change",{detail:{peerId:e,subscriptions:f}})}for(let f of t.messages){if(this.allowedTopics!=null&&!this.allowedTopics.has(f.topic))continue;let l=this.handleReceivedMessage(e,f).catch(u=>{this.metrics?.onMsgRecvError(f.topic),this.log(u)});this.opts.awaitRpcMessageHandler&&await l}t.control!=null&&await this.handleControlMessage(e.toString(),t.control)}handleReceivedSubscription(e,t,r){this.log("subscription update from %p topic %s",e,t);let n=this.topics.get(t);n==null&&(n=new Set,this.topics.set(t,n)),r?n.add(e.toString()):n.delete(e.toString())}async handleReceivedMessage(e,t){this.metrics?.onMsgRecvPreValidation(t.topic);let r=await this.validateReceivedMessage(e,t);this.metrics?.onPrevalidationResult(t.topic,r.code);let n=r.code;switch(n){case Ee.duplicate:this.score.duplicateMessage(e.toString(),r.msgIdStr,t.topic),this.gossipTracer.deliverMessage(r.msgIdStr,!0),this.mcache.observeDuplicate(r.msgIdStr,e.toString());return;case Ee.invalid:if(r.msgIdStr!=null){let i=r.msgIdStr;this.score.rejectMessage(e.toString(),i,t.topic,r.reason),this.gossipTracer.rejectMessage(i,r.reason)}else this.score.rejectInvalidMessage(e.toString(),t.topic);this.metrics?.onMsgRecvInvalid(t.topic,r);return;case Ee.valid:this.score.validateMessage(r.messageId.msgIdStr),this.gossipTracer.deliverMessage(r.messageId.msgIdStr),this.mcache.put(r.messageId,t,!this.opts.asyncValidation),this.subscriptions.has(t.topic)&&(!this.components.peerId.equals(e)||this.opts.emitSelf)&&(super.dispatchEvent(new CustomEvent("gossipsub:message",{detail:{propagationSource:e,msgId:r.messageId.msgIdStr,msg:r.msg}})),super.dispatchEvent(new CustomEvent("message",{detail:r.msg}))),this.opts.asyncValidation||this.forwardMessage(r.messageId.msgIdStr,t,e.toString());break;default:throw new Error(`Invalid validation result: ${n}`)}}async validateReceivedMessage(e,t){let r=this.fastMsgIdFn?.(t),n=r!==void 0?this.fastMsgIdCache?.get(r):void 0;if(n!=null)return{code:Ee.duplicate,msgIdStr:n};let i=await Al(this.globalSignaturePolicy,t);if(!i.valid)return{code:Ee.invalid,reason:Ie.Error,error:i.error};let o=i.message;try{this.dataTransform!=null&&(o.data=this.dataTransform.inboundTransform(t.topic,o.data))}catch(u){return this.log("Invalid message, transform failed",u),{code:Ee.invalid,reason:Ie.Error,error:xe.TransformFailed}}let a=await this.msgIdFn(o),c=this.msgIdToStrFn(a),f={msgId:a,msgIdStr:c};if(r!==void 0&&this.fastMsgIdCache!=null&&this.fastMsgIdCache.put(r,c)&&this.metrics?.fastMsgIdCacheCollision.inc(),this.seenCache.has(c))return{code:Ee.duplicate,msgIdStr:c};this.seenCache.put(c);let l=this.topicValidators.get(t.topic);if(l!=null){let u;try{u=await l(e,o)}catch(h){let p=h.code;p===xa&&(u=Be.Ignore),p===va?u=Be.Reject:u=Be.Ignore}if(u!==Be.Accept)return{code:Ee.invalid,reason:Ki(u),msgIdStr:c}}return{code:Ee.valid,messageId:f,msg:o}}getScore(e){return this.score.score(e)}sendSubscriptions(e,t,r){this.sendRpc(e,{subscriptions:t.map(n=>({topic:n,subscribe:r})),messages:[]})}async handleControlMessage(e,t){if(t===void 0)return;let r=t.ihave!=null?this.handleIHave(e,t.ihave):[],n=t.iwant!=null?this.handleIWant(e,t.iwant):[],i=t.graft!=null?await this.handleGraft(e,t.graft):[];if(t.prune!=null&&await this.handlePrune(e,t.prune),r.length===0&&n.length===0&&i.length===0)return;let o=this.sendRpc(e,nt(n,{iwant:r,prune:i})),a=r[0]?.messageIDs;a!=null&&(o?this.gossipTracer.addPromise(e,a):this.metrics?.iwantPromiseUntracked.inc(1))}acceptFrom(e){if(this.direct.has(e))return!0;let t=Date.now(),r=this.acceptFromWhitelist.get(e);if(r!=null&&r.messagesAccepted<128&&r.acceptUntil>=t)return r.messagesAccepted+=1,!0;let n=this.score.score(e);return n>=0?this.acceptFromWhitelist.set(e,{messagesAccepted:0,acceptUntil:t+1e3}):this.acceptFromWhitelist.delete(e),n>=this.opts.scoreThresholds.graylistThreshold}handleIHave(e,t){if(t.length===0)return[];let r=this.score.score(e);if(r<this.opts.scoreThresholds.gossipThreshold)return this.log("IHAVE: ignoring peer %s with score below threshold [ score = %d ]",e,r),this.metrics?.ihaveRcvIgnored.inc({reason:ws.LowScore}),[];let n=(this.peerhave.get(e)??0)+1;if(this.peerhave.set(e,n),n>10)return this.log("IHAVE: peer %s has advertised too many times (%d) within this heartbeat interval; ignoring",e,n),this.metrics?.ihaveRcvIgnored.inc({reason:ws.MaxIhave}),[];let i=this.iasked.get(e)??0;if(i>=5e3)return this.log("IHAVE: peer %s has already advertised too many messages (%d); ignoring",e,i),this.metrics?.ihaveRcvIgnored.inc({reason:ws.MaxIasked}),[];let o=new Map;if(t.forEach(({topicID:f,messageIDs:l})=>{if(f==null||l==null||!this.mesh.has(f))return;let u=0;l.forEach(h=>{let p=this.msgIdToStrFn(h);this.seenCache.has(p)||(o.set(p,h),u++)}),this.metrics?.onIhaveRcv(f,l.length,u)}),o.size===0)return[];let a=o.size;a+i>5e3&&(a=5e3-i),this.log("IHAVE: Asking for %d out of %d messages from %s",a,o.size,e);let c=Array.from(o.values());return it(c),c=c.slice(0,a),this.iasked.set(e,i+a),[{messageIDs:c}]}handleIWant(e,t){if(t.length===0)return[];let r=this.score.score(e);if(r<this.opts.scoreThresholds.gossipThreshold)return this.log("IWANT: ignoring peer %s with score below threshold [score = %d]",e,r),[];let n=new Map,i=new Map,o=0;return t.forEach(({messageIDs:a})=>{a?.forEach(c=>{let f=this.msgIdToStrFn(c),l=this.mcache.getWithIWantCount(f,e);if(l==null){o++;return}if(i.set(l.msg.topic,1+(i.get(l.msg.topic)??0)),l.count>3){this.log("IWANT: Peer %s has asked for message %s too many times: ignoring request",e,c);return}n.set(f,l.msg)})}),this.metrics?.onIwantRcv(i,o),n.size===0?(this.log("IWANT: Could not provide any wanted messages to %s",e),[]):(this.log("IWANT: Sending %d messages to %s",n.size,e),Array.from(n.values()))}async handleGraft(e,t){let r=[],n=this.score.score(e),i=Date.now(),o=this.opts.doPX;if(t.forEach(({topicID:c})=>{if(c==null)return;let f=this.mesh.get(c);if(f==null){o=!1;return}if(f.has(e))return;let l=this.backoff.get(c)?.get(e);if(this.direct.has(e))this.log("GRAFT: ignoring request from direct peer %s",e),r.push(c),o=!1;else if(typeof l=="number"&&i<l){this.log("GRAFT: ignoring backed off peer %s",e),this.score.addPenalty(e,1,ys.GraftBackoff),o=!1;let u=l+this.opts.graftFloodThreshold-this.opts.pruneBackoff;i<u&&this.score.addPenalty(e,1,ys.GraftBackoff),this.addBackoff(e,c),r.push(c)}else n<0?(this.log("GRAFT: ignoring peer %s with negative score: score=%d, topic=%s",e,n,c),r.push(c),o=!1,this.addBackoff(e,c)):f.size>=this.opts.Dhi&&!(this.outbound.get(e)??!1)?(r.push(c),this.addBackoff(e,c)):(this.log("GRAFT: Add mesh link from %s in %s",e,c),this.score.graft(e,c),f.add(e),this.metrics?.onAddToMesh(c,Ae.Subscribed,1));this.safeDispatchEvent("gossipsub:graft",{detail:{peerId:e,topic:c,direction:"inbound"}})}),r.length===0)return[];let a=!1;return Promise.all(r.map(async c=>this.makePrune(e,c,o,a)))}async handlePrune(e,t){let r=this.score.score(e);for(let{topicID:n,backoff:i,peers:o}of t){if(n==null)continue;let a=this.mesh.get(n);if(a==null)return;this.log("PRUNE: Remove mesh link to %s in %s",e,n),this.score.prune(e,n),a.has(e)&&(a.delete(e),this.metrics?.onRemoveFromMesh(n,ze.Prune,1)),typeof i=="number"&&i>0?this.doAddBackoff(e,n,i*1e3):this.addBackoff(e,n),o!=null&&o.length>0&&(r<this.opts.scoreThresholds.acceptPXThreshold?this.log("PRUNE: ignoring PX from peer %s with insufficient score [score = %d, topic = %s]",e,r,n):await this.pxConnect(o)),this.safeDispatchEvent("gossipsub:prune",{detail:{peerId:e,topic:n,direction:"inbound"}})}}addBackoff(e,t){this.doAddBackoff(e,t,this.opts.pruneBackoff)}doAddBackoff(e,t,r){let n=this.backoff.get(t);n==null&&(n=new Map,this.backoff.set(t,n));let i=Date.now()+r;(n.get(e)??0)<i&&n.set(e,i)}applyIwantPenalties(){this.gossipTracer.getBrokenPromises().forEach((e,t)=>{this.log("peer %s didn't follow up in %d IWANT requests; adding penalty",t,e),this.score.addPenalty(t,e,ys.BrokenPromise)})}clearBackoff(){if(this.heartbeatTicks%15!==0)return;let e=Date.now();this.backoff.forEach((t,r)=>{t.forEach((n,i)=>{n+1*this.opts.heartbeatInterval<e&&t.delete(i)}),t.size===0&&this.backoff.delete(r)})}async directConnect(){let e=[];this.direct.forEach(t=>{this.streamsOutbound.has(t)||e.push(t)}),await Promise.all(e.map(async t=>this.connect(t)))}async pxConnect(e){e.length>this.opts.prunePeers&&(it(e),e=e.slice(0,this.opts.prunePeers));let t=[];await Promise.all(e.map(async r=>{if(r.peerID==null)return;let n=js(r.peerID),i=n.toString();if(!this.peers.has(i)){if(r.signedPeerRecord==null){t.push(i);return}try{if(!await this.components.peerStore.consumePeerRecord(r.signedPeerRecord,n)){this.log("bogus peer record obtained through px: could not add peer record to address book");return}t.push(i)}catch{this.log("bogus peer record obtained through px: invalid signature or not a peer record")}}})),t.length!==0&&await Promise.all(t.map(async r=>this.connect(r)))}async connect(e){this.log("Initiating connection with %s",e);let t=ct(e),r=await this.components.connectionManager.openConnection(t);for(let n of this.multicodecs)for(let i of this.components.registrar.getTopologies(n))i.onConnect?.(t,r)}subscribe(e){if(this.status.code!==Ue.started)throw new Error("Pubsub has not started");if(!this.subscriptions.has(e)){this.subscriptions.add(e);for(let t of this.peers.keys())this.sendSubscriptions(t,[e],!0)}this.join(e)}unsubscribe(e){if(this.status.code!==Ue.started)throw new Error("Pubsub is not started");let t=this.subscriptions.delete(e);if(this.log("unsubscribe from %s - am subscribed %s",e,t),t)for(let r of this.peers.keys())this.sendSubscriptions(r,[e],!1);this.leave(e)}join(e){if(this.status.code!==Ue.started)throw new Error("Gossipsub has not started");if(this.mesh.has(e))return;this.log("JOIN %s",e),this.metrics?.onJoin(e);let t=new Set,r=this.backoff.get(e),n=this.fanout.get(e);if(n!=null&&(this.fanout.delete(e),this.fanoutLastpub.delete(e),n.forEach(i=>{!this.direct.has(i)&&this.score.score(i)>=0&&(r==null||!r.has(i))&&t.add(i)}),this.metrics?.onAddToMesh(e,Ae.Fanout,t.size)),t.size<this.opts.D){let i=t.size;this.getRandomGossipPeers(e,this.opts.D,a=>!t.has(a)&&!this.direct.has(a)&&this.score.score(a)>=0&&(r==null||!r.has(a))).forEach(a=>{t.add(a)}),this.metrics?.onAddToMesh(e,Ae.Random,t.size-i)}this.mesh.set(e,t),t.forEach(i=>{this.log("JOIN: Add mesh link to %s in %s",i,e),this.sendGraft(i,e)})}leave(e){if(this.status.code!==Ue.started)throw new Error("Gossipsub has not started");this.log("LEAVE %s",e),this.metrics?.onLeave(e);let t=this.mesh.get(e);t!=null&&(Promise.all(Array.from(t).map(async r=>{this.log("LEAVE: Remove mesh link to %s in %s",r,e),await this.sendPrune(r,e)})).catch(r=>{this.log("Error sending prunes to mesh peers",r)}),this.mesh.delete(e))}selectPeersToForward(e,t,r){let n=new Set,i=this.topics.get(e);i!=null&&(this.direct.forEach(a=>{i.has(a)&&t!==a&&!(r?.has(a)??!1)&&n.add(a)}),this.floodsubPeers.forEach(a=>{i.has(a)&&t!==a&&!(r?.has(a)??!1)&&this.score.score(a)>=this.opts.scoreThresholds.publishThreshold&&n.add(a)}));let o=this.mesh.get(e);return o!=null&&o.size>0&&o.forEach(a=>{t!==a&&!(r?.has(a)??!1)&&n.add(a)}),n}selectPeersToPublish(e){let t=new Set,r={direct:0,floodsub:0,mesh:0,fanout:0},n=this.topics.get(e);if(n!=null)if(this.opts.floodPublish)n.forEach(i=>{this.direct.has(i)?(t.add(i),r.direct++):this.score.score(i)>=this.opts.scoreThresholds.publishThreshold&&(t.add(i),r.floodsub++)});else{this.direct.forEach(o=>{n.has(o)&&(t.add(o),r.direct++)}),this.floodsubPeers.forEach(o=>{n.has(o)&&this.score.score(o)>=this.opts.scoreThresholds.publishThreshold&&(t.add(o),r.floodsub++)});let i=this.mesh.get(e);if(i!=null&&i.size>0)i.forEach(o=>{t.add(o),r.mesh++}),i.size<this.opts.D&&this.getRandomGossipPeers(e,this.opts.D-i.size,a=>!i.has(a)&&!this.direct.has(a)&&!this.floodsubPeers.has(a)&&this.score.score(a)>=this.opts.scoreThresholds.publishThreshold).forEach(a=>{t.add(a),r.mesh++});else{let o=this.fanout.get(e);if(o!=null&&o.size>0)o.forEach(a=>{t.add(a),r.fanout++});else{let a=this.getRandomGossipPeers(e,this.opts.D,c=>this.score.score(c)>=this.opts.scoreThresholds.publishThreshold);a.size>0&&(this.fanout.set(e,a),a.forEach(c=>{t.add(c),r.fanout++}))}this.fanoutLastpub.set(e,Date.now())}}return{tosend:t,tosendCount:r}}forwardMessage(e,t,r,n){r!=null&&this.score.deliverMessage(r,e,t.topic);let i=this.selectPeersToForward(t.topic,r,n);i.forEach(o=>{this.sendRpc(o,nt([t]))}),this.metrics?.onForwardMsg(t.topic,i.size)}async publish(e,t,r){let n=Date.now(),i=this.dataTransform!=null?this.dataTransform.outboundTransform(e,t):t;if(this.publishConfig==null)throw Error("PublishError.Uninitialized");let{raw:o,msg:a}=await Il(this.publishConfig,e,t,i),c=await this.msgIdFn(a),f=this.msgIdToStrFn(c),l=r?.ignoreDuplicatePublishError??this.opts.ignoreDuplicatePublishError;if(this.seenCache.has(f)){if(l)return this.metrics?.onPublishDuplicateMsg(e),{recipients:[]};throw Error("PublishError.Duplicate")}let{tosend:u,tosendCount:h}=this.selectPeersToPublish(e),p=this.opts.emitSelf&&this.subscriptions.has(e),g=r?.allowPublishToZeroTopicPeers??this.opts.allowPublishToZeroTopicPeers;if(u.size===0&&!g&&!p)throw Error("PublishError.NoPeersSubscribedToTopic");this.seenCache.put(f),this.mcache.put({msgId:c,msgIdStr:f},o,!0),this.publishedMessageIds.put(f);let d=r?.batchPublish??this.opts.batchPublish,m=nt([o]);if(d)this.sendRpcInBatch(u,m);else for(let _ of u)this.sendRpc(_,m)||u.delete(_);let b=Date.now()-n;return this.metrics?.onPublishMsg(e,h,u.size,o.data!=null?o.data.length:0,b),p&&(u.add(this.components.peerId.toString()),super.dispatchEvent(new CustomEvent("gossipsub:message",{detail:{propagationSource:this.components.peerId,msgId:f,msg:a}})),super.dispatchEvent(new CustomEvent("message",{detail:a}))),{recipients:Array.from(u.values()).map(_=>ct(_))}}sendRpcInBatch(e,t){let r=ht.encode(t),n=fs.single(r);for(let i of e){let o=this.streamsOutbound.get(i);if(o==null){this.log(`Cannot send RPC to ${i} as there is no open stream to it available`),e.delete(i);continue}try{o.pushPrefixed(n)}catch(a){e.delete(i),this.log.error(`Cannot send rpc to ${i}`,a)}this.metrics?.onRpcSent(t,r.length)}}reportMessageValidationResult(e,t,r){let n;if(r===Be.Accept){if(n=this.mcache.validate(e),n!=null){let{message:o,originatingPeers:a}=n;this.score.deliverMessage(t,e,o.topic),this.forwardMessage(e,n.message,t,a)}}else if(n=this.mcache.remove(e),n!=null){let o=Ki(r),{message:a,originatingPeers:c}=n;this.score.rejectMessage(t,e,a.topic,o);for(let f of c)this.score.rejectMessage(f,e,a.topic,o)}let i=this.score.messageFirstSeenTimestampMs(e);this.metrics?.onReportValidation(n,r,i)}sendGraft(e,t){let n=nt([],{graft:[{topicID:t}]});this.sendRpc(e,n)}async sendPrune(e,t){let n=[await this.makePrune(e,t,this.opts.doPX,!0)],i=nt([],{prune:n});this.sendRpc(e,i)}sendRpc(e,t){let r=this.streamsOutbound.get(e);if(r==null)return this.log(`Cannot send RPC to ${e} as there is no open stream to it available`),!1;let n=this.control.get(e);n!=null&&(this.piggybackControl(e,t,n),this.control.delete(e));let i=this.gossip.get(e);i!=null&&(this.piggybackGossip(e,t,i),this.gossip.delete(e));let o=ht.encode(t);try{r.push(o)}catch(a){return this.log.error(`Cannot send rpc to ${e}`,a),n!=null&&this.control.set(e,n),i!=null&&this.gossip.set(e,i),!1}if(this.metrics?.onRpcSent(t,o.length),t.control?.graft!=null)for(let a of t.control?.graft)a.topicID!=null&&this.safeDispatchEvent("gossipsub:graft",{detail:{peerId:e,topic:a.topicID,direction:"outbound"}});if(t.control?.prune!=null)for(let a of t.control?.prune)a.topicID!=null&&this.safeDispatchEvent("gossipsub:prune",{detail:{peerId:e,topic:a.topicID,direction:"outbound"}});return!0}piggybackControl(e,t,r){let n=So(t);for(let i of r.graft)i.topicID!=null&&(this.mesh.get(i.topicID)?.has(e)??!1)&&n.control.graft.push(i);for(let i of r.prune)i.topicID!=null&&!(this.mesh.get(i.topicID)?.has(e)??!1)&&n.control.prune.push(i)}piggybackGossip(e,t,r){let n=So(t);n.control.ihave=r}async sendGraftPrune(e,t,r){let n=this.opts.doPX,i=!1;for(let[o,a]of e){let c=a.map(u=>({topicID:u})),f=[],l=t.get(o);l!=null&&(f=await Promise.all(l.map(async u=>this.makePrune(o,u,n&&!(r.get(o)??!1),i))),t.delete(o)),this.sendRpc(o,nt([],{graft:c,prune:f}))}for(let[o,a]of t){let c=await Promise.all(a.map(async f=>this.makePrune(o,f,n&&!(r.get(o)??!1),i)));this.sendRpc(o,nt([],{prune:c}))}}emitGossip(e){let t=this.mcache.getGossipIDs(new Set(e.keys()));for(let[r,n]of e)this.doEmitGossip(r,n,t.get(r)??[])}doEmitGossip(e,t,r){if(r.length===0||(it(r),r.length>5e3&&this.log("too many messages for gossip; will truncate IHAVE list (%d messages)",r.length),t.size===0))return;let n=this.opts.Dlazy,o=this.opts.gossipFactor*t.size,a=t;o>n&&(n=o),n>a.size?n=a.size:a=it(Array.from(a)).slice(0,n),a.forEach(c=>{let f=r;r.length>5e3&&(f=it(f.slice()).slice(0,5e3)),this.pushGossip(c,{topicID:e,messageIDs:f})})}flush(){for(let[e,t]of this.gossip.entries())this.gossip.delete(e),this.sendRpc(e,nt([],{ihave:t}));for(let[e,t]of this.control.entries()){this.control.delete(e);let r=nt([],{graft:t.graft,prune:t.prune});this.sendRpc(e,r)}}pushGossip(e,t){this.log("Add gossip to %s",e);let r=this.gossip.get(e)??[];this.gossip.set(e,r.concat(t))}async makePrune(e,t,r,n){if(this.score.prune(e,t),this.streamsOutbound.get(e)?.protocol===Ti)return{topicID:t,peers:[]};let i=n?this.opts.unsubcribeBackoff:this.opts.pruneBackoff,o=i/1e3;if(this.doAddBackoff(e,t,i),!r)return{topicID:t,peers:[],backoff:o};let a=this.getRandomGossipPeers(t,this.opts.prunePeers,f=>f!==e&&this.score.score(f)>=0),c=await Promise.all(Array.from(a).map(async f=>{let l=ct(f),u;try{u=await this.components.peerStore.get(l)}catch(h){if(h.code!=="ERR_NOT_FOUND")throw h}return{peerID:l.toBytes(),signedPeerRecord:u?.peerRecordEnvelope}}));return{topicID:t,peers:c,backoff:o}}runHeartbeat=()=>{let e=this.metrics?.heartbeatDuration.startTimer();this.heartbeat().catch(t=>{this.log("Error running heartbeat",t)}).finally(()=>{if(e?.(),this.status.code===Ue.started){clearTimeout(this.status.heartbeatTimeout);let t=this.opts.heartbeatInterval-(Date.now()-this.status.hearbeatStartMs)%this.opts.heartbeatInterval;t<this.opts.heartbeatInterval*.25&&(t+=this.opts.heartbeatInterval,this.metrics?.heartbeatSkipped.inc()),this.status.heartbeatTimeout=setTimeout(this.runHeartbeat,t)}})};async heartbeat(){let{D:e,Dlo:t,Dhi:r,Dscore:n,Dout:i,fanoutTTL:o}=this.opts;this.heartbeatTicks++;let a=new Map,c=g=>{let d=a.get(g);return d===void 0&&(d=this.score.score(g),a.set(g,d)),d},f=new Map,l=new Map,u=new Map;this.clearBackoff(),this.peerhave.clear(),this.metrics?.cacheSize.set({cache:"iasked"},this.iasked.size),this.iasked.clear(),this.applyIwantPenalties(),this.heartbeatTicks%this.opts.directConnectTicks===0&&await this.directConnect(),this.fastMsgIdCache?.prune(),this.seenCache.prune(),this.gossipTracer.prune(),this.publishedMessageIds.prune();let h=new Map;this.mesh.forEach((g,d)=>{let m=this.topics.get(d),b=new Set,_=new Set;if(h.set(d,_),m!=null){let y=it(Array.from(m)),x=this.backoff.get(d);for(let E of y){let B=this.streamsOutbound.get(E);if(B!=null&&this.multicodecs.includes(B.protocol)&&!g.has(E)&&!this.direct.has(E)){let D=c(E);(x==null||!x.has(E))&&D>=0&&b.add(E),D>=this.opts.scoreThresholds.gossipThreshold&&_.add(E)}}}let w=(y,x)=>{this.log("HEARTBEAT: Remove mesh link to %s in %s",y,d),this.addBackoff(y,d),g.delete(y),c(y)>=this.opts.scoreThresholds.gossipThreshold&&_.add(y),this.metrics?.onRemoveFromMesh(d,x,1);let E=l.get(y);E==null?l.set(y,[d]):E.push(d)},A=(y,x)=>{this.log("HEARTBEAT: Add mesh link to %s in %s",y,d),this.score.graft(y,d),g.add(y),_.delete(y),this.metrics?.onAddToMesh(d,x,1);let E=f.get(y);E==null?f.set(y,[d]):E.push(d)};if(g.forEach(y=>{let x=c(y);x<0&&(this.log("HEARTBEAT: Prune peer %s with negative score: score=%d, topic=%s",y,x,d),w(y,ze.BadScore),u.set(y,!0))}),g.size<t){let y=e-g.size;Oa(b,y).forEach(E=>{A(E,Ae.NotEnough)})}if(g.size>r){let y=Array.from(g);y.sort((E,B)=>c(B)-c(E)),y=y.slice(0,n).concat(it(y.slice(n)));let x=0;if(y.slice(0,e).forEach(E=>{(this.outbound.get(E)??!1)&&x++}),x<i){let E=D=>{let N=y[D];for(let L=D;L>0;L--)y[L]=y[L-1];y[0]=N};if(x>0){let D=x;for(let N=1;N<e&&D>0;N++)(this.outbound.get(y[N])??!1)&&(E(N),D--)}let B=e-x;for(let D=e;D<y.length&&B>0;D++)(this.outbound.get(y[D])??!1)&&(E(D),B--)}y.slice(e).forEach(E=>{w(E,ze.Excess)})}if(g.size>=t){let y=0;if(g.forEach(x=>{(this.outbound.get(x)??!1)&&y++}),y<i){let x=i-y;Rr(b,x,B=>this.outbound.get(B)===!0).forEach(B=>{A(B,Ae.Outbound)})}}if(this.heartbeatTicks%this.opts.opportunisticGraftTicks===0&&g.size>1){let y=Array.from(g).sort((B,D)=>c(B)-c(D)),x=Math.floor(g.size/2),E=c(y[x]);if(E<this.opts.scoreThresholds.opportunisticGraftThreshold){let B=this.opts.opportunisticGraftPeers,D=Rr(b,B,N=>c(N)>E);for(let N of D)this.log("HEARTBEAT: Opportunistically graft peer %s on topic %s",N,d),A(N,Ae.Opportunistic)}}});let p=Date.now();this.fanoutLastpub.forEach((g,d)=>{g+o<p&&(this.fanout.delete(d),this.fanoutLastpub.delete(d))}),this.fanout.forEach((g,d)=>{let m=this.topics.get(d);g.forEach(A=>{(!(m?.has(A)??!1)||c(A)<this.opts.scoreThresholds.publishThreshold)&&g.delete(A)});let b=this.topics.get(d),_=[],w=new Set;if(h.set(d,w),b!=null){let A=it(Array.from(b));for(let y of A){let x=this.streamsOutbound.get(y);if(x!=null&&this.multicodecs.includes(x.protocol)&&!g.has(y)&&!this.direct.has(y)){let E=c(y);E>=this.opts.scoreThresholds.publishThreshold&&_.push(y),E>=this.opts.scoreThresholds.gossipThreshold&&w.add(y)}}}if(g.size<e){let A=e-g.size;_.slice(0,A).forEach(y=>{g.add(y),w?.delete(y)})}}),this.emitGossip(h),await this.sendGraftPrune(f,l,u),this.flush(),this.mcache.shift(),this.dispatchEvent(new CustomEvent("gossipsub:heartbeat"))}getRandomGossipPeers(e,t,r=()=>!0){let n=this.topics.get(e);if(n==null)return new Set;let i=[];return n.forEach(o=>{let a=this.streamsOutbound.get(o);a!=null&&this.multicodecs.includes(a.protocol)&&r(o)&&i.push(o)}),i=it(i),t>0&&i.length>t&&(i=i.slice(0,t)),new Set(i)}onScrapeMetrics(e){e.mcacheSize.set(this.mcache.size),e.mcacheNotValidatedCount.set(this.mcache.notValidatedCount),e.cacheSize.set({cache:"direct"},this.direct.size),e.cacheSize.set({cache:"seenCache"},this.seenCache.size),e.cacheSize.set({cache:"fastMsgIdCache"},this.fastMsgIdCache?.size??0),e.cacheSize.set({cache:"publishedMessageIds"},this.publishedMessageIds.size),e.cacheSize.set({cache:"mcache"},this.mcache.size),e.cacheSize.set({cache:"score"},this.score.size),e.cacheSize.set({cache:"gossipTracer.promises"},this.gossipTracer.size),e.cacheSize.set({cache:"gossipTracer.requests"},this.gossipTracer.requestMsByMsgSize),e.cacheSize.set({cache:"topics"},this.topics.size),e.cacheSize.set({cache:"subscriptions"},this.subscriptions.size),e.cacheSize.set({cache:"mesh"},this.mesh.size),e.cacheSize.set({cache:"fanout"},this.fanout.size),e.cacheSize.set({cache:"peers"},this.peers.size),e.cacheSize.set({cache:"streamsOutbound"},this.streamsOutbound.size),e.cacheSize.set({cache:"streamsInbound"},this.streamsInbound.size),e.cacheSize.set({cache:"acceptFromWhitelist"},this.acceptFromWhitelist.size),e.cacheSize.set({cache:"gossip"},this.gossip.size),e.cacheSize.set({cache:"control"},this.control.size),e.cacheSize.set({cache:"peerhave"},this.peerhave.size),e.cacheSize.set({cache:"outbound"},this.outbound.size);let t=0,r=Date.now();e.connectedPeersBackoffSec.reset();for(let a of this.backoff.values()){t+=a.size;for(let[c,f]of a.entries())this.peers.has(c)&&e.connectedPeersBackoffSec.observe(Math.max(0,f-r)/1e3)}e.cacheSize.set({cache:"backoff"},t);for(let[a,c]of this.topics)e.topicPeersCount.set({topicStr:a},c.size);for(let[a,c]of this.mesh)e.meshPeerCounts.set({topicStr:a},c.size);let n=[],i=new Map;e.behaviourPenalty.reset();for(let a of this.peers.keys()){let c=this.score.score(a);n.push(c),i.set(a,c),e.behaviourPenalty.observe(this.score.peerStats.get(a)?.behaviourPenalty??0)}e.registerScores(n,this.opts.scoreThresholds),e.registerScorePerMesh(this.mesh,i);let o=za(this.peers.keys(),this.score.peerStats,this.score.params,this.score.peerIPs,e.topicStrToLabel);e.registerScoreWeights(o)}tagMeshPeer=e=>{let{peerId:t,topic:r}=e.detail;this.components.peerStore.merge(ct(t),{tags:{[r]:{value:100}}}).catch(n=>{this.log.error("Error tagging peer %s with topic %s",t,r,n)})};untagMeshPeer=e=>{let{peerId:t,topic:r}=e.detail;this.components.peerStore.merge(ct(t),{tags:{[r]:void 0}}).catch(n=>{this.log.error("Error untagging peer %s with topic %s",t,r,n)})}};function Ep(s={}){return e=>new qn(e,s)}return tu(_p);})();
+`)}`:`${t} :`}};Qa=Nt;T.Constructed=Qa;Nt.NAME="CONSTRUCTED";var Hr=class extends be{fromBER(e,t,r){return t}toBER(e){return Je}};Hr.override="EndOfContentValueBlock";var ec,Kr=class extends de{constructor(e={}){super(e,Hr),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}};ec=Kr;T.EndOfContent=ec;Kr.NAME=$s;var tc,Lt=class extends de{constructor(e={}){super(e,be),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}fromBER(e,t,r){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),this.idBlock.error.length||(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length||(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=r,t+r>e.byteLength?(this.error="End of input reached before message was fully decoded (inconsistent offset and length values)",-1):t+r}toBER(e,t){let r=new ArrayBuffer(2);if(!e){let n=new Uint8Array(r);n[0]=5,n[1]=0}return t&&t.write(r),r}onAsciiEncoding(){return`${this.constructor.NAME}`}};tc=Lt;T.Null=tc;Lt.NAME="NULL";var Gr=class extends wt(be){constructor({value:e,...t}={}){super(t),t.valueHex?this.valueHexView=V.BufferSourceConverter.toUint8Array(t.valueHex):this.valueHexView=new Uint8Array(1),e&&(this.value=e)}get value(){for(let e of this.valueHexView)if(e>0)return!0;return!1}set value(e){this.valueHexView[0]=e?255:0}fromBER(e,t,r){let n=V.BufferSourceConverter.toUint8Array(e);return yt(this,n,t,r)?(this.valueHexView=n.subarray(t,t+r),r>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.isHexOnly=!0,oo.call(this),this.blockLength=r,t+r):-1}toBER(){return this.valueHexView.slice()}toJSON(){return{...super.toJSON(),value:this.value}}};Gr.NAME="BooleanValueBlock";var sc,zr=class extends de{constructor(e={}){super(e,Gr),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}getValue(){return this.valueBlock.value}setValue(e){this.valueBlock.value=e}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.getValue}`}};sc=zr;T.Boolean=sc;zr.NAME="BOOLEAN";var qr=class extends wt(st){constructor({isConstructed:e=!1,...t}={}){super(t),this.isConstructed=e}fromBER(e,t,r){let n=0;if(this.isConstructed){if(this.isHexOnly=!1,n=st.prototype.fromBER.call(this,e,t,r),n===-1)return n;for(let i=0;i<this.value.length;i++){let o=this.value[i].constructor.NAME;if(o===$s){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(o!==Za)return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,n=super.fromBER(e,t,r),this.blockLength=r;return n}toBER(e,t){return this.isConstructed?st.prototype.toBER.call(this,e,t):e?new ArrayBuffer(this.valueHexView.byteLength):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),isConstructed:this.isConstructed}}};qr.NAME="OctetStringValueBlock";var rc,mt=class s extends de{constructor({idBlock:e={},lenBlock:t={},...r}={}){var n,i;(n=r.isConstructed)!==null&&n!==void 0||(r.isConstructed=!!(!((i=r.value)===null||i===void 0)&&i.length)),super({idBlock:{isConstructed:r.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!r.isIndefiniteForm},...r},qr),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(e,t,r){if(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,r===0)return this.idBlock.error.length===0&&(this.blockLength+=this.idBlock.blockLength),this.lenBlock.error.length===0&&(this.blockLength+=this.lenBlock.blockLength),t;if(!this.valueBlock.isConstructed){let i=(e instanceof ArrayBuffer?new Uint8Array(e):e).subarray(t,t+r);try{if(i.byteLength){let o=vn(i,0,i.byteLength);o.offset!==-1&&o.offset===r&&(this.valueBlock.value=[o.result])}}catch{}}return super.fromBER(e,t,r)}onAsciiEncoding(){return this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length?Nt.prototype.onAsciiEncoding.call(this):`${this.constructor.NAME} : ${V.Convert.ToHex(this.valueBlock.valueHexView)}`}getValue(){if(!this.idBlock.isConstructed)return this.valueBlock.valueHexView.slice().buffer;let e=[];for(let t of this.valueBlock.value)t instanceof s&&e.push(t.valueBlock.valueHexView);return V.BufferSourceConverter.concat(e)}};rc=mt;T.OctetString=rc;mt.NAME=Za;var Wr=class extends wt(st){constructor({unusedBits:e=0,isConstructed:t=!1,...r}={}){super(r),this.unusedBits=e,this.isConstructed=t,this.blockLength=this.valueHexView.byteLength}fromBER(e,t,r){if(!r)return t;let n=-1;if(this.isConstructed){if(n=st.prototype.fromBER.call(this,e,t,r),n===-1)return n;for(let a of this.value){let c=a.constructor.NAME;if(c===$s){if(this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(c!==Ja)return this.error="BIT STRING may consists of BIT STRINGs only",-1;let f=a.valueBlock;if(this.unusedBits>0&&f.unusedBits>0)return this.error='Using of "unused bits" inside constructive BIT STRING allowed for least one only',-1;this.unusedBits=f.unusedBits}return n}let i=V.BufferSourceConverter.toUint8Array(e);if(!yt(this,i,t,r))return-1;let o=i.subarray(t,t+r);if(this.unusedBits=o[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;if(!this.unusedBits){let a=o.subarray(1);try{if(a.byteLength){let c=vn(a,0,a.byteLength);c.offset!==-1&&c.offset===r-1&&(this.value=[c.result])}}catch{}}return this.valueHexView=o.subarray(1),this.blockLength=o.length,t+r}toBER(e,t){if(this.isConstructed)return st.prototype.toBER.call(this,e,t);if(e)return new ArrayBuffer(this.valueHexView.byteLength+1);if(!this.valueHexView.byteLength)return Je;let r=new Uint8Array(this.valueHexView.length+1);return r[0]=this.unusedBits,r.set(this.valueHexView,1),r.buffer}toJSON(){return{...super.toJSON(),unusedBits:this.unusedBits,isConstructed:this.isConstructed}}};Wr.NAME="BitStringValueBlock";var nc,ws=class extends de{constructor({idBlock:e={},lenBlock:t={},...r}={}){var n,i;(n=r.isConstructed)!==null&&n!==void 0||(r.isConstructed=!!(!((i=r.value)===null||i===void 0)&&i.length)),super({idBlock:{isConstructed:r.isConstructed,...e},lenBlock:{...t,isIndefiniteForm:!!r.isIndefiniteForm},...r},Wr),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}fromBER(e,t,r){return this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(e,t,r)}onAsciiEncoding(){if(this.valueBlock.isConstructed||this.valueBlock.value&&this.valueBlock.value.length)return Nt.prototype.onAsciiEncoding.call(this);{let e=[],t=this.valueBlock.valueHexView;for(let n of t)e.push(n.toString(2).padStart(8,"0"));let r=e.join("");return`${this.constructor.NAME} : ${r.substring(0,r.length-this.valueBlock.unusedBits)}`}}};nc=ws;T.BitString=nc;ws.NAME=Ja;var ic;function Of(s,e){let t=new Uint8Array([0]),r=new Uint8Array(s),n=new Uint8Array(e),i=r.slice(0),o=i.length-1,a=n.slice(0),c=a.length-1,f=0,l=c<o?o:c,u=0;for(let h=l;h>=0;h--,u++){switch(!0){case u<a.length:f=i[o-u]+a[c-u]+t[0];break;default:f=i[o-u]+t[0]}switch(t[0]=f/10,!0){case u>=i.length:i=Rr(new Uint8Array([f%10]),i);break;default:i[o-u]=f%10}}return t[0]>0&&(i=Rr(t,i)),i}function ja(s){if(s>=qs.length)for(let e=qs.length;e<=s;e++){let t=new Uint8Array([0]),r=qs[e-1].slice(0);for(let n=r.length-1;n>=0;n--){let i=new Uint8Array([(r[n]<<1)+t[0]]);t[0]=i[0]/10,r[n]=i[0]%10}t[0]>0&&(r=Rr(t,r)),qs.push(r)}return qs[s]}function Hf(s,e){let t=0,r=new Uint8Array(s),n=new Uint8Array(e),i=r.slice(0),o=i.length-1,a=n.slice(0),c=a.length-1,f,l=0;for(let u=c;u>=0;u--,l++)switch(f=i[o-l]-a[c-l]-t,!0){case f<0:t=1,i[o-l]=f+10;break;default:t=0,i[o-l]=f}if(t>0)for(let u=o-c+1;u>=0;u--,l++)if(f=i[o-l]-t,f<0)t=1,i[o-l]=f+10;else{t=0,i[o-l]=f;break}return i.slice()}var js=class extends wt(be){constructor({value:e,...t}={}){super(t),this._valueDec=0,t.valueHex&&this.setValueHex(),e!==void 0&&(this.valueDec=e)}setValueHex(){this.valueHexView.length>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,this.valueHexView.length>0&&(this._valueDec=oo.call(this)))}set valueDec(e){this._valueDec=e,this.isHexOnly=!1,this.valueHexView=new Uint8Array(qa(e))}get valueDec(){return this._valueDec}fromDER(e,t,r,n=0){let i=this.fromBER(e,t,r);if(i===-1)return i;let o=this.valueHexView;return o[0]===0&&o[1]&128?this.valueHexView=o.subarray(1):n!==0&&o.length<n&&(n-o.length>1&&(n=o.length+1),this.valueHexView=o.subarray(n-o.length)),i}toDER(e=!1){let t=this.valueHexView;switch(!0){case(t[0]&128)!==0:{let r=new Uint8Array(this.valueHexView.length+1);r[0]=0,r.set(t,1),this.valueHexView=r}break;case(t[0]===0&&(t[1]&128)===0):this.valueHexView=this.valueHexView.subarray(1);break}return this.toBER(e)}fromBER(e,t,r){let n=super.fromBER(e,t,r);return n===-1||this.setValueHex(),n}toBER(e){return e?new ArrayBuffer(this.valueHexView.length):this.valueHexView.slice().buffer}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}toString(){let e=this.valueHexView.length*8-1,t=new Uint8Array(this.valueHexView.length*8/3),r=0,n,i=this.valueHexView,o="",a=!1;for(let c=i.byteLength-1;c>=0;c--){n=i[c];for(let f=0;f<8;f++){if((n&1)===1)switch(r){case e:t=Hf(ja(r),t),o="-";break;default:t=Of(t,ja(r))}r++,n>>=1}}for(let c=0;c<t.length;c++)t[c]&&(a=!0),a&&(o+=$a.charAt(t[c]));return a===!1&&(o+=$a.charAt(0)),o}};ic=js;js.NAME="IntegerValueBlock";Object.defineProperty(ic.prototype,"valueHex",{set:function(s){this.valueHexView=new Uint8Array(s),this.setValueHex()},get:function(){return this.valueHexView.slice().buffer}});var oc,ie=class s extends de{constructor(e={}){super(e,js),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}toBigInt(){return Nr(),BigInt(this.valueBlock.toString())}static fromBigInt(e){Nr();let t=BigInt(e),r=new Ws,n=t.toString(16).replace(/^-/,""),i=new Uint8Array(V.Convert.FromHex(n));if(t<0){let a=new Uint8Array(i.length+(i[0]&128?1:0));a[0]|=128;let f=BigInt(`0x${V.Convert.ToHex(a)}`)+t,l=V.BufferSourceConverter.toUint8Array(V.Convert.FromHex(f.toString(16)));l[0]|=128,r.write(l)}else i[0]&128&&r.write(new Uint8Array([0])),r.write(i);return new s({valueHex:r.final()})}convertToDER(){let e=new s({valueHex:this.valueBlock.valueHexView});return e.valueBlock.toDER(),e}convertFromDER(){return new s({valueHex:this.valueBlock.valueHexView[0]===0?this.valueBlock.valueHexView.subarray(1):this.valueBlock.valueHexView})}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()}`}};oc=ie;T.Integer=oc;ie.NAME="INTEGER";var ac,$r=class extends ie{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}};ac=$r;T.Enumerated=ac;$r.NAME="ENUMERATED";var Zs=class extends wt(be){constructor({valueDec:e=-1,isFirstSid:t=!1,...r}={}){super(r),this.valueDec=e,this.isFirstSid=t}fromBER(e,t,r){if(!r)return t;let n=V.BufferSourceConverter.toUint8Array(e);if(!yt(this,n,t,r))return-1;let i=n.subarray(t,t+r);this.valueHexView=new Uint8Array(r);for(let a=0;a<r&&(this.valueHexView[a]=i[a]&127,this.blockLength++,!!(i[a]&128));a++);let o=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)o[a]=this.valueHexView[a];return this.valueHexView=o,i[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=Zt(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}set valueBigInt(e){Nr();let t=BigInt(e).toString(2);for(;t.length%7;)t="0"+t;let r=new Uint8Array(t.length/7);for(let n=0;n<r.length;n++)r[n]=parseInt(t.slice(n*7,n*7+7),2)+(n+1<r.length?128:0);this.fromBER(r.buffer,0,r.length)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let n=this.valueHexView,i=new Uint8Array(this.blockLength);for(let o=0;o<this.blockLength-1;o++)i[o]=n[o]|128;return i[this.blockLength-1]=n[this.blockLength-1],i.buffer}let t=Rt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",Je;let r=new Uint8Array(t.byteLength);if(!e){let n=new Uint8Array(t),i=t.byteLength-1;for(let o=0;o<i;o++)r[o]=n[o]|128;r[i]=n[i]}return r}toString(){let e="";if(this.isHexOnly)e=V.Convert.ToHex(this.valueHexView);else if(this.isFirstSid){let t=this.valueDec;this.valueDec<=39?e="0.":this.valueDec<=79?(e="1.",t-=40):(e="2.",t-=80),e+=t.toString()}else e=this.valueDec.toString();return e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec,isFirstSid:this.isFirstSid}}};Zs.NAME="sidBlock";var jr=class extends be{constructor({value:e=vs,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,r){let n=t;for(;r>0;){let i=new Zs;if(n=i.fromBER(e,n,r),n===-1)return this.blockLength=0,this.error=i.error,n;this.value.length===0&&(i.isFirstSid=!0),this.blockLength+=i.blockLength,r-=i.blockLength,this.value.push(i)}return n}toBER(e){let t=[];for(let r=0;r<this.value.length;r++){let n=this.value[r].toBER(e);if(n.byteLength===0)return this.error=this.value[r].error,Je;t.push(n)}return ao(t)}fromString(e){this.value=[];let t=0,r=0,n="",i=!1;do if(r=e.indexOf(".",t),r===-1?n=e.substring(t):n=e.substring(t,r),t=r+1,i){let o=this.value[0],a=0;switch(o.valueDec){case 0:break;case 1:a=40;break;case 2:a=80;break;default:this.value=[];return}let c=parseInt(n,10);if(isNaN(c))return;o.valueDec=c+a,i=!1}else{let o=new Zs;if(n>Number.MAX_SAFE_INTEGER){Nr();let a=BigInt(n);o.valueBigInt=a}else if(o.valueDec=parseInt(n,10),isNaN(o.valueDec))return;this.value.length||(o.isFirstSid=!0,i=!0),this.value.push(o)}while(r!==-1)}toString(){let e="",t=!1;for(let r=0;r<this.value.length;r++){t=this.value[r].isHexOnly;let n=this.value[r].toString();r!==0&&(e=`${e}.`),t?(n=`{${n}}`,this.value[r].isFirstSid?e=`2.{${n} - 80}`:e+=n):e+=n}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};jr.NAME="ObjectIdentifierValueBlock";var cc,Ze=class extends de{constructor(e={}){super(e,jr),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};cc=Ze;T.ObjectIdentifier=cc;Ze.NAME="OBJECT IDENTIFIER";var Js=class extends wt(gt){constructor({valueDec:e=0,...t}={}){super(t),this.valueDec=e}fromBER(e,t,r){if(r===0)return t;let n=V.BufferSourceConverter.toUint8Array(e);if(!yt(this,n,t,r))return-1;let i=n.subarray(t,t+r);this.valueHexView=new Uint8Array(r);for(let a=0;a<r&&(this.valueHexView[a]=i[a]&127,this.blockLength++,!!(i[a]&128));a++);let o=new Uint8Array(this.blockLength);for(let a=0;a<this.blockLength;a++)o[a]=this.valueHexView[a];return this.valueHexView=o,i[this.blockLength-1]&128?(this.error="End of input reached before message was fully decoded",-1):(this.valueHexView[0]===0&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=Zt(this.valueHexView,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}toBER(e){if(this.isHexOnly){if(e)return new ArrayBuffer(this.valueHexView.byteLength);let n=this.valueHexView,i=new Uint8Array(this.blockLength);for(let o=0;o<this.blockLength-1;o++)i[o]=n[o]|128;return i[this.blockLength-1]=n[this.blockLength-1],i.buffer}let t=Rt(this.valueDec,7);if(t.byteLength===0)return this.error="Error during encoding SID value",Je;let r=new Uint8Array(t.byteLength);if(!e){let n=new Uint8Array(t),i=t.byteLength-1;for(let o=0;o<i;o++)r[o]=n[o]|128;r[i]=n[i]}return r.buffer}toString(){let e="";return this.isHexOnly?e=V.Convert.ToHex(this.valueHexView):e=this.valueDec.toString(),e}toJSON(){return{...super.toJSON(),valueDec:this.valueDec}}};Js.NAME="relativeSidBlock";var Zr=class extends be{constructor({value:e=vs,...t}={}){super(t),this.value=[],e&&this.fromString(e)}fromBER(e,t,r){let n=t;for(;r>0;){let i=new Js;if(n=i.fromBER(e,n,r),n===-1)return this.blockLength=0,this.error=i.error,n;this.blockLength+=i.blockLength,r-=i.blockLength,this.value.push(i)}return n}toBER(e,t){let r=[];for(let n=0;n<this.value.length;n++){let i=this.value[n].toBER(e);if(i.byteLength===0)return this.error=this.value[n].error,Je;r.push(i)}return ao(r)}fromString(e){this.value=[];let t=0,r=0,n="";do{r=e.indexOf(".",t),r===-1?n=e.substring(t):n=e.substring(t,r),t=r+1;let i=new Js;if(i.valueDec=parseInt(n,10),isNaN(i.valueDec))return!0;this.value.push(i)}while(r!==-1);return!0}toString(){let e="",t=!1;for(let r=0;r<this.value.length;r++){t=this.value[r].isHexOnly;let n=this.value[r].toString();r!==0&&(e=`${e}.`),t&&(n=`{${n}}`),e+=n}return e}toJSON(){let e={...super.toJSON(),value:this.toString(),sidArray:[]};for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}};Zr.NAME="RelativeObjectIdentifierValueBlock";var lc,Jr=class extends de{constructor(e={}){super(e,Zr),this.idBlock.tagClass=1,this.idBlock.tagNumber=13}getValue(){return this.valueBlock.toString()}setValue(e){this.valueBlock.fromString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.valueBlock.toString()||"empty"}`}toJSON(){return{...super.toJSON(),value:this.getValue()}}};lc=Jr;T.RelativeObjectIdentifier=lc;Jr.NAME="RelativeObjectIdentifier";var uc,he=class extends Nt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}};uc=he;T.Sequence=uc;he.NAME="SEQUENCE";var hc,Xr=class extends Nt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}};hc=Xr;T.Set=hc;Xr.NAME="SET";var Yr=class extends wt(be){constructor({...e}={}){super(e),this.isHexOnly=!0,this.value=vs}toJSON(){return{...super.toJSON(),value:this.value}}};Yr.NAME="StringValueBlock";var Qr=class extends Yr{};Qr.NAME="SimpleStringValueBlock";var Be=class extends Fr{constructor({...e}={}){super(e,Qr)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,V.BufferSourceConverter.toUint8Array(e))}fromString(e){let t=e.length,r=this.valueBlock.valueHexView=new Uint8Array(t);for(let n=0;n<t;n++)r[n]=e.charCodeAt(n);this.valueBlock.value=e}};Be.NAME="SIMPLE STRING";var en=class extends Be{fromBuffer(e){this.valueBlock.valueHexView=V.BufferSourceConverter.toUint8Array(e);try{this.valueBlock.value=V.Convert.ToUtf8String(e)}catch(t){this.warnings.push(`Error during "decodeURIComponent": ${t}, using raw string`),this.valueBlock.value=V.Convert.ToBinary(e)}}fromString(e){this.valueBlock.valueHexView=new Uint8Array(V.Convert.FromUtf8String(e)),this.valueBlock.value=e}};en.NAME="Utf8StringValueBlock";var fc,bt=class extends en{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}};fc=bt;T.Utf8String=fc;bt.NAME="UTF8String";var tn=class extends Be{fromBuffer(e){this.valueBlock.value=V.Convert.ToUtf16String(e),this.valueBlock.valueHexView=V.BufferSourceConverter.toUint8Array(e)}fromString(e){this.valueBlock.value=e,this.valueBlock.valueHexView=new Uint8Array(V.Convert.FromUtf16String(e))}};tn.NAME="BmpStringValueBlock";var dc,sn=class extends tn{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}};dc=sn;T.BmpString=dc;sn.NAME="BMPString";var rn=class extends Be{fromBuffer(e){let t=ArrayBuffer.isView(e)?e.slice().buffer:e.slice(0),r=new Uint8Array(t);for(let n=0;n<r.length;n+=4)r[n]=r[n+3],r[n+1]=r[n+2],r[n+2]=0,r[n+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(t))}fromString(e){let t=e.length,r=this.valueBlock.valueHexView=new Uint8Array(t*4);for(let n=0;n<t;n++){let i=Rt(e.charCodeAt(n),8),o=new Uint8Array(i);if(o.length>4)continue;let a=4-o.length;for(let c=o.length-1;c>=0;c--)r[n*4+c+a]=o[c]}this.valueBlock.value=e}};rn.NAME="UniversalStringValueBlock";var pc,nn=class extends rn{constructor({...e}={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}};pc=nn;T.UniversalString=pc;nn.NAME="UniversalString";var gc,on=class extends Be{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}};gc=on;T.NumericString=gc;on.NAME="NumericString";var mc,an=class extends Be{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}};mc=an;T.PrintableString=mc;an.NAME="PrintableString";var bc,cn=class extends Be{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}};bc=cn;T.TeletexString=bc;cn.NAME="TeletexString";var yc,ln=class extends Be{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}};yc=ln;T.VideotexString=yc;ln.NAME="VideotexString";var wc,un=class extends Be{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}};wc=un;T.IA5String=wc;un.NAME="IA5String";var vc,hn=class extends Be{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}};vc=hn;T.GraphicString=vc;hn.NAME="GraphicString";var xc,Xs=class extends Be{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}};xc=Xs;T.VisibleString=xc;Xs.NAME="VisibleString";var Ec,fn=class extends Be{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}};Ec=fn;T.GeneralString=Ec;fn.NAME="GeneralString";var Sc,dn=class extends Be{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}};Sc=dn;T.CharacterString=Sc;dn.NAME="CharacterString";var Bc,Ys=class extends Xs{constructor({value:e,valueDate:t,...r}={}){if(super(r),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,e){this.fromString(e),this.valueBlock.valueHexView=new Uint8Array(e.length);for(let n=0;n<e.length;n++)this.valueBlock.valueHexView[n]=e.charCodeAt(n)}t&&(this.fromDate(t),this.valueBlock.valueHexView=new Uint8Array(this.toBuffer())),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,V.BufferSourceConverter.toUint8Array(e)))}toBuffer(){let e=this.toString(),t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let n=0;n<e.length;n++)r[n]=e.charCodeAt(n);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(e){let r=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/ig.exec(e);if(r===null){this.error="Wrong input string for conversion";return}let n=parseInt(r[1],10);n>=50?this.year=1900+n:this.year=2e3+n,this.month=parseInt(r[2],10),this.day=parseInt(r[3],10),this.hour=parseInt(r[4],10),this.minute=parseInt(r[5],10),this.second=parseInt(r[6],10)}toString(e="iso"){if(e==="iso"){let t=new Array(7);return t[0]=Ne(this.year<2e3?this.year-1900:this.year-2e3,2),t[1]=Ne(this.month,2),t[2]=Ne(this.day,2),t[3]=Ne(this.hour,2),t[4]=Ne(this.minute,2),t[5]=Ne(this.second,2),t[6]="Z",t.join("")}return super.toString(e)}onAsciiEncoding(){return`${this.constructor.NAME} : ${this.toDate().toISOString()}`}toJSON(){return{...super.toJSON(),year:this.year,month:this.month,day:this.day,hour:this.hour,minute:this.minute,second:this.second}}};Bc=Ys;T.UTCTime=Bc;Ys.NAME="UTCTime";var Ic,pn=class extends Ys{constructor(e={}){var t;super(e),(t=this.millisecond)!==null&&t!==void 0||(this.millisecond=0),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromDate(e){super.fromDate(e),this.millisecond=e.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(e){let t=!1,r="",n="",i=0,o,a=0,c=0;if(e[e.length-1]==="Z")r=e.substring(0,e.length-1),t=!0;else{let u=new Number(e[e.length-1]);if(isNaN(u.valueOf()))throw new Error("Wrong input string for conversion");r=e}if(t){if(r.indexOf("+")!==-1)throw new Error("Wrong input string for conversion");if(r.indexOf("-")!==-1)throw new Error("Wrong input string for conversion")}else{let u=1,h=r.indexOf("+"),p="";if(h===-1&&(h=r.indexOf("-"),u=-1),h!==-1){if(p=r.substring(h+1),r=r.substring(0,h),p.length!==2&&p.length!==4)throw new Error("Wrong input string for conversion");let g=parseInt(p.substring(0,2),10);if(isNaN(g.valueOf()))throw new Error("Wrong input string for conversion");if(a=u*g,p.length===4){if(g=parseInt(p.substring(2,4),10),isNaN(g.valueOf()))throw new Error("Wrong input string for conversion");c=u*g}}}let f=r.indexOf(".");if(f===-1&&(f=r.indexOf(",")),f!==-1){let u=new Number(`0${r.substring(f)}`);if(isNaN(u.valueOf()))throw new Error("Wrong input string for conversion");i=u.valueOf(),n=r.substring(0,f)}else n=r;switch(!0){case n.length===8:if(o=/(\d{4})(\d{2})(\d{2})/ig,f!==-1)throw new Error("Wrong input string for conversion");break;case n.length===10:if(o=/(\d{4})(\d{2})(\d{2})(\d{2})/ig,f!==-1){let u=60*i;this.minute=Math.floor(u),u=60*(u-this.minute),this.second=Math.floor(u),u=1e3*(u-this.second),this.millisecond=Math.floor(u)}break;case n.length===12:if(o=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/ig,f!==-1){let u=60*i;this.second=Math.floor(u),u=1e3*(u-this.second),this.millisecond=Math.floor(u)}break;case n.length===14:if(o=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/ig,f!==-1){let u=1e3*i;this.millisecond=Math.floor(u)}break;default:throw new Error("Wrong input string for conversion")}let l=o.exec(n);if(l===null)throw new Error("Wrong input string for conversion");for(let u=1;u<l.length;u++)switch(u){case 1:this.year=parseInt(l[u],10);break;case 2:this.month=parseInt(l[u],10);break;case 3:this.day=parseInt(l[u],10);break;case 4:this.hour=parseInt(l[u],10)+a;break;case 5:this.minute=parseInt(l[u],10)+c;break;case 6:this.second=parseInt(l[u],10);break;default:throw new Error("Wrong input string for conversion")}if(t===!1){let u=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=u.getUTCFullYear(),this.month=u.getUTCMonth(),this.day=u.getUTCDay(),this.hour=u.getUTCHours(),this.minute=u.getUTCMinutes(),this.second=u.getUTCSeconds(),this.millisecond=u.getUTCMilliseconds()}}toString(e="iso"){if(e==="iso"){let t=[];return t.push(Ne(this.year,4)),t.push(Ne(this.month,2)),t.push(Ne(this.day,2)),t.push(Ne(this.hour,2)),t.push(Ne(this.minute,2)),t.push(Ne(this.second,2)),this.millisecond!==0&&(t.push("."),t.push(Ne(this.millisecond,3))),t.push("Z"),t.join("")}return super.toString(e)}toJSON(){return{...super.toJSON(),millisecond:this.millisecond}}};Ic=pn;T.GeneralizedTime=Ic;pn.NAME="GeneralizedTime";var _c,gn=class extends bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}};_c=gn;T.DATE=_c;gn.NAME="DATE";var Ac,mn=class extends bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}};Ac=mn;T.TimeOfDay=Ac;mn.NAME="TimeOfDay";var kc,bn=class extends bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}};kc=bn;T.DateTime=kc;bn.NAME="DateTime";var Tc,yn=class extends bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}};Tc=yn;T.Duration=Tc;yn.NAME="Duration";var Pc,wn=class extends bt{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}};Pc=wn;T.TIME=Pc;wn.NAME="TIME";function z(s,e="utf8"){let t=Ir[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return t.encoder.encode(s).substring(1)}function Jt(s){if(isNaN(s)||s<=0)throw new j("random bytes length must be a Number bigger than 0");return fs(s)}async function Mc(s){let e=await Ee.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:s,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await Nc(e);return{privateKey:t[0],publicKey:t[1]}}async function Cc(s){let t=[await Ee.get().subtle.importKey("jwk",s,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await Gf(s)],r=await Nc({privateKey:t[0],publicKey:t[1]});return{privateKey:r[0],publicKey:r[1]}}async function Dc(s,e){let t=await Ee.get().subtle.importKey("jwk",s,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),r=await Ee.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,e instanceof Uint8Array?e:e.subarray());return new Uint8Array(r,0,r.byteLength)}async function Rc(s,e,t){let r=await Ee.get().subtle.importKey("jwk",s,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return Ee.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},r,e,t instanceof Uint8Array?t:t.subarray())}async function Nc(s){if(s.privateKey==null||s.publicKey==null)throw new j("Private and public key are required");return Promise.all([Ee.get().subtle.exportKey("jwk",s.privateKey),Ee.get().subtle.exportKey("jwk",s.publicKey)])}async function Gf(s){return Ee.get().subtle.importKey("jwk",{kty:s.kty,n:s.n,e:s.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}function lo(s){if(s.kty!=="RSA")throw new j("invalid key type");if(s.n==null)throw new j("invalid key modulus");return W(s.n,"base64url").length*8}var Es=class{type="RSA";_key;_raw;_multihash;constructor(e,t){this._key=e,this._multihash=t}get raw(){return this._raw==null&&(this._raw=Qs.jwkToPkix(this._key)),this._raw}toMultihash(){return this._multihash}toCID(){return Te.createV1(114,this._multihash)}toString(){return se.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:Fe(this.raw,e.raw)}verify(e,t){return Rc(this._key,t,e)}},er=class{type="RSA";_key;_raw;publicKey;constructor(e,t){this._key=e,this.publicKey=t}get raw(){return this._raw==null&&(this._raw=Qs.jwkToPkcs1(this._key)),this._raw}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:Fe(this.raw,e.raw)}sign(e){return Dc(this._key,e)}};var xn=8192,fo=18;function Uc(s){let{result:e}=xs(s),t=e.valueBlock.value;return{n:z(rt(t[1].toBigInt()),"base64url"),e:z(rt(t[2].toBigInt()),"base64url"),d:z(rt(t[3].toBigInt()),"base64url"),p:z(rt(t[4].toBigInt()),"base64url"),q:z(rt(t[5].toBigInt()),"base64url"),dp:z(rt(t[6].toBigInt()),"base64url"),dq:z(rt(t[7].toBigInt()),"base64url"),qi:z(rt(t[8].toBigInt()),"base64url"),kty:"RSA",alg:"RS256"}}function zf(s){if(s.n==null||s.e==null||s.d==null||s.p==null||s.q==null||s.dp==null||s.dq==null||s.qi==null)throw new j("JWK was missing components");let t=new he({value:[new ie({value:0}),ie.fromBigInt(nt(W(s.n,"base64url"))),ie.fromBigInt(nt(W(s.e,"base64url"))),ie.fromBigInt(nt(W(s.d,"base64url"))),ie.fromBigInt(nt(W(s.p,"base64url"))),ie.fromBigInt(nt(W(s.q,"base64url"))),ie.fromBigInt(nt(W(s.dp,"base64url"))),ie.fromBigInt(nt(W(s.dq,"base64url"))),ie.fromBigInt(nt(W(s.qi,"base64url")))]}).toBER();return new Uint8Array(t,0,t.byteLength)}function Fc(s){let{result:e}=xs(s),t=e.valueBlock.value[1].valueBlock.value[0].valueBlock.value;return{kty:"RSA",n:z(rt(t[0].toBigInt()),"base64url"),e:z(rt(t[1].toBigInt()),"base64url")}}function po(s){if(s.n==null||s.e==null)throw new j("JWK was missing components");let t=new he({value:[new he({value:[new Ze({value:"1.2.840.113549.1.1.1"}),new Lt]}),new ws({valueHex:new he({value:[ie.fromBigInt(nt(W(s.n,"base64url"))),ie.fromBigInt(nt(W(s.e,"base64url")))]}).toBER()})]}).toBER();return new Uint8Array(t,0,t.byteLength)}function rt(s){let e=s.toString(16);e.length%2>0&&(e=`0${e}`);let t=e.length/2,r=new Uint8Array(t),n=0,i=0;for(;n<t;)r[n]=parseInt(e.slice(i,i+2),16),n+=1,i+=2;return r}function nt(s){let e=[];return s.forEach(function(t){let r=t.toString(16);r.length%2>0&&(r=`0${r}`),e.push(r)}),BigInt("0x"+e.join(""))}var qf=16,uo=32,ho=1e4;async function Vc(s,e){let t=Ee.get(),n=new he({value:[new ie({value:0}),new he({value:[new Ze({value:"1.2.840.113549.1.1.1"}),new Lt]}),new mt({valueHex:s.raw})]}).toBER(),i=new Uint8Array(n,0,n.byteLength),o=Jt(qf),a=await ro(Ls,e,o,{c:ho,dkLen:uo}),c=Jt(16),f=await t.subtle.importKey("raw",a,"AES-CBC",!1,["encrypt"]),l=await t.subtle.encrypt({name:"AES-CBC",iv:c},f,i),u=new he({value:[new mt({valueHex:o}),new ie({value:ho}),new ie({value:uo}),new he({value:[new Ze({value:"1.2.840.113549.2.11"}),new Lt]})]}),h=new he({value:[new Ze({value:"1.2.840.113549.1.5.13"}),new he({value:[new he({value:[new Ze({value:"1.2.840.113549.1.5.12"}),u]}),new he({value:[new Ze({value:"2.16.840.1.101.3.4.1.42"}),new mt({valueHex:c})]})]})]}),g=new he({value:[h,new mt({valueHex:l})]}).toBER(),d=new Uint8Array(g,0,g.byteLength);return["-----BEGIN ENCRYPTED PRIVATE KEY-----",...z(d,"base64pad").split(/(.{64})/).filter(Boolean),"-----END ENCRYPTED PRIVATE KEY-----"].join(`
+`)}async function Oc(s,e){let t=Ee.get(),r;if(s.includes("-----BEGIN ENCRYPTED PRIVATE KEY-----")){let n=W(s.replace("-----BEGIN ENCRYPTED PRIVATE KEY-----","").replace("-----END ENCRYPTED PRIVATE KEY-----","").replace(/\n/g,"").trim(),"base64pad"),{result:i}=xs(n),{iv:o,salt:a,iterations:c,keySize:f,cipherText:l}=Wf(i),u=await ro(Ls,e,a,{c,dkLen:f}),h=await t.subtle.importKey("raw",u,"AES-CBC",!1,["decrypt"]),p=tr(await t.subtle.decrypt({name:"AES-CBC",iv:o},h,l)),{result:g}=xs(p);r=Lc(g)}else if(s.includes("-----BEGIN PRIVATE KEY-----")){let n=W(s.replace("-----BEGIN PRIVATE KEY-----","").replace("-----END PRIVATE KEY-----","").replace(/\n/g,"").trim(),"base64pad"),{result:i}=xs(n);r=Lc(i)}else throw new j("Could not parse private key from PEM data");return go(r)}function Wf(s){let e=s.valueBlock.value[0];if(e.valueBlock.value[0].toString()!=="OBJECT IDENTIFIER : 1.2.840.113549.1.5.13")throw new j("Only pkcs5PBES2 encrypted private keys are supported");let r=e.valueBlock.value[1].valueBlock.value[0];if(r.valueBlock.value[0].toString()!=="OBJECT IDENTIFIER : 1.2.840.113549.1.5.12")throw new j("Only pkcs5PBKDF2 key derivation functions are supported");let i=r.valueBlock.value[1],o=tr(i.valueBlock.value[0].getValue()),a=ho,c=uo;if(i.valueBlock.value.length===3)a=Number(i.valueBlock.value[1].toBigInt()),c=Number(i.valueBlock.value[2].toBigInt());else if(i.valueBlock.value.length===2)throw new j("Could not derive key size and iterations from PEM file - please use @libp2p/rsa to re-import your key");let f=e.valueBlock.value[1].valueBlock.value[1],l=f.valueBlock.value[0].toString();if(l!=="OBJECT IDENTIFIER : 1.2.840.113549.3.7"){if(l!=="OBJECT IDENTIFIER : 1.3.14.3.2.7"){if(l!=="OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.2"){if(l!=="OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.22"){if(l!=="OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.42")throw new j("Only AES-CBC encryption schemes are supported")}}}}let u=tr(f.valueBlock.value[1].getValue());return{cipherText:tr(s.valueBlock.value[1].getValue()),salt:o,iterations:a,keySize:c,iv:u}}function Lc(s){return tr(s.valueBlock.value[2].getValue())}function tr(s){return new Uint8Array(s,0,s.byteLength)}async function Hc(s,e,t="pkcs-8"){if(t==="pkcs-8")return Vc(s,e);if(t==="libp2p-key")return Ra(zc(s),e);throw new j("Export format is not supported")}async function go(s){let e=Uc(s);return Kc(e)}function mo(s){let e=Fc(s);if(lo(e)>xn)throw new ts("Key size is too large");let t=bs(tt.encode({Type:ne.RSA,Data:s})),r=Ge(fo,t);return new Es(e,r)}async function Kc(s){if(lo(s)>xn)throw new j("Key size is too large");let e=await Cc(s),t=bs(tt.encode({Type:ne.RSA,Data:po(e.publicKey)})),r=Ge(fo,t);return new er(e.privateKey,new Es(e.publicKey,r))}async function Gc(s){if(s>xn)throw new j("Key size is too large");let e=await Mc(s),t=bs(tt.encode({Type:ne.RSA,Data:po(e.publicKey)})),r=Ge(fo,t);return new er(e.privateKey,new Es(e.publicKey,r))}function qc(s){s.lowS!==void 0&&We("lowS",s.lowS),s.prehash!==void 0&&We("prehash",s.prehash)}function $f(s){let e=Vs(s);Qe(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:t,Fp:r,a:n}=e;if(t){if(!r.eql(n,r.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if(typeof t!="object"||typeof t.beta!="bigint"||typeof t.splitScalar!="function")throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...e})}var{bytesToNumberBE:jf,hexToBytes:Zf}=yr,Xt={Err:class extends Error{constructor(e=""){super(e)}},_parseInt(s){let{Err:e}=Xt;if(s.length<2||s[0]!==2)throw new e("Invalid signature integer tag");let t=s[1],r=s.subarray(2,t+2);if(!t||r.length!==t)throw new e("Invalid signature integer: wrong length");if(r[0]&128)throw new e("Invalid signature integer: negative");if(r[0]===0&&!(r[1]&128))throw new e("Invalid signature integer: unnecessary leading zero");return{d:jf(r),l:s.subarray(t+2)}},toSig(s){let{Err:e}=Xt,t=typeof s=="string"?Zf(s):s;ps(t);let r=t.length;if(r<2||t[0]!=48)throw new e("Invalid signature tag");if(t[1]!==r-2)throw new e("Invalid signature: incorrect length");let{d:n,l:i}=Xt._parseInt(t.subarray(2)),{d:o,l:a}=Xt._parseInt(i);if(a.length)throw new e("Invalid signature: left bytes after parsing");return{r:n,s:o}},hexFromSig(s){let e=f=>Number.parseInt(f[0],16)&8?"00"+f:f,t=f=>{let l=f.toString(16);return l.length&1?`0${l}`:l},r=e(t(s.s)),n=e(t(s.r)),i=r.length/2,o=n.length/2,a=t(i),c=t(o);return`30${t(o+i+4)}02${c}${n}02${a}${r}`}},Ut=BigInt(0),fe=BigInt(1),rb=BigInt(2),Wc=BigInt(3),nb=BigInt(4);function Jf(s){let e=$f(s),{Fp:t}=e,r=e.toBytes||((g,d,m)=>{let b=d.toAffine();return ft(Uint8Array.from([4]),t.toBytes(b.x),t.toBytes(b.y))}),n=e.fromBytes||(g=>{let d=g.subarray(1),m=t.fromBytes(d.subarray(0,t.BYTES)),b=t.fromBytes(d.subarray(t.BYTES,2*t.BYTES));return{x:m,y:b}});function i(g){let{a:d,b:m}=e,b=t.sqr(g),v=t.mul(b,g);return t.add(t.add(v,t.mul(g,d)),m)}if(!t.eql(t.sqr(e.Gy),i(e.Gx)))throw new Error("bad generator point: equation left != right");function o(g){return Us(g,fe,e.n)}function a(g){let{allowedPrivateKeyLengths:d,nByteLength:m,wrapPrivateKey:b,n:v}=e;if(d&&typeof g!="bigint"){if(_t(g)&&(g=ut(g)),typeof g!="string"||!d.includes(g.length))throw new Error("Invalid key");g=g.padStart(m*2,"0")}let E;try{E=typeof g=="bigint"?g:ht(te("private key",g,m))}catch{throw new Error(`private key must be ${m} bytes, hex or bigint, not ${typeof g}`)}return b&&(E=q(E,v)),Pe("private key",E,fe,v),E}function c(g){if(!(g instanceof u))throw new Error("ProjectivePoint expected")}let f=qt((g,d)=>{let{px:m,py:b,pz:v}=g;if(t.eql(v,t.ONE))return{x:m,y:b};let E=g.is0();d==null&&(d=E?t.ONE:t.inv(v));let A=t.mul(m,d),w=t.mul(b,d),S=t.mul(v,d);if(E)return{x:t.ZERO,y:t.ZERO};if(!t.eql(S,t.ONE))throw new Error("invZ was invalid");return{x:A,y:w}}),l=qt(g=>{if(g.is0()){if(e.allowInfinityPoint&&!t.is0(g.py))return;throw new Error("bad point: ZERO")}let{x:d,y:m}=g.toAffine();if(!t.isValid(d)||!t.isValid(m))throw new Error("bad point: x or y not FE");let b=t.sqr(m),v=i(d);if(!t.eql(b,v))throw new Error("bad point: equation left != right");if(!g.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0});class u{constructor(d,m,b){if(this.px=d,this.py=m,this.pz=b,d==null||!t.isValid(d))throw new Error("x required");if(m==null||!t.isValid(m))throw new Error("y required");if(b==null||!t.isValid(b))throw new Error("z required");Object.freeze(this)}static fromAffine(d){let{x:m,y:b}=d||{};if(!d||!t.isValid(m)||!t.isValid(b))throw new Error("invalid affine point");if(d instanceof u)throw new Error("projective point not allowed");let v=E=>t.eql(E,t.ZERO);return v(m)&&v(b)?u.ZERO:new u(m,b,t.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(d){let m=t.invertBatch(d.map(b=>b.pz));return d.map((b,v)=>b.toAffine(m[v])).map(u.fromAffine)}static fromHex(d){let m=u.fromAffine(n(te("pointHex",d)));return m.assertValidity(),m}static fromPrivateKey(d){return u.BASE.multiply(a(d))}_setWindowSize(d){p.setWindowSize(this,d)}assertValidity(){l(this)}hasEvenY(){let{y:d}=this.toAffine();if(t.isOdd)return!t.isOdd(d);throw new Error("Field doesn't support isOdd")}equals(d){c(d);let{px:m,py:b,pz:v}=this,{px:E,py:A,pz:w}=d,S=t.eql(t.mul(m,w),t.mul(E,v)),B=t.eql(t.mul(b,w),t.mul(A,v));return S&&B}negate(){return new u(this.px,t.neg(this.py),this.pz)}double(){let{a:d,b:m}=e,b=t.mul(m,Wc),{px:v,py:E,pz:A}=this,w=t.ZERO,S=t.ZERO,B=t.ZERO,I=t.mul(v,v),M=t.mul(E,E),D=t.mul(A,A),U=t.mul(v,E);return U=t.add(U,U),B=t.mul(v,A),B=t.add(B,B),w=t.mul(d,B),S=t.mul(b,D),S=t.add(w,S),w=t.sub(M,S),S=t.add(M,S),S=t.mul(w,S),w=t.mul(U,w),B=t.mul(b,B),D=t.mul(d,D),U=t.sub(I,D),U=t.mul(d,U),U=t.add(U,B),B=t.add(I,I),I=t.add(B,I),I=t.add(I,D),I=t.mul(I,U),S=t.add(S,I),D=t.mul(E,A),D=t.add(D,D),I=t.mul(D,U),w=t.sub(w,I),B=t.mul(D,M),B=t.add(B,B),B=t.add(B,B),new u(w,S,B)}add(d){c(d);let{px:m,py:b,pz:v}=this,{px:E,py:A,pz:w}=d,S=t.ZERO,B=t.ZERO,I=t.ZERO,M=e.a,D=t.mul(e.b,Wc),U=t.mul(m,E),re=t.mul(b,A),oe=t.mul(v,w),P=t.add(m,b),x=t.add(E,A);P=t.mul(P,x),x=t.add(U,re),P=t.sub(P,x),x=t.add(m,v);let y=t.add(E,w);return x=t.mul(x,y),y=t.add(U,oe),x=t.sub(x,y),y=t.add(b,v),S=t.add(A,w),y=t.mul(y,S),S=t.add(re,oe),y=t.sub(y,S),I=t.mul(M,x),S=t.mul(D,oe),I=t.add(S,I),S=t.sub(re,I),I=t.add(re,I),B=t.mul(S,I),re=t.add(U,U),re=t.add(re,U),oe=t.mul(M,oe),x=t.mul(D,x),re=t.add(re,oe),oe=t.sub(U,oe),oe=t.mul(M,oe),x=t.add(x,oe),U=t.mul(re,x),B=t.add(B,U),U=t.mul(y,x),S=t.mul(P,S),S=t.sub(S,U),U=t.mul(P,re),I=t.mul(y,I),I=t.add(I,U),new u(S,B,I)}subtract(d){return this.add(d.negate())}is0(){return this.equals(u.ZERO)}wNAF(d){return p.wNAFCached(this,d,u.normalizeZ)}multiplyUnsafe(d){Pe("scalar",d,Ut,e.n);let m=u.ZERO;if(d===Ut)return m;if(d===fe)return this;let{endo:b}=e;if(!b)return p.unsafeLadder(this,d);let{k1neg:v,k1:E,k2neg:A,k2:w}=b.splitScalar(d),S=m,B=m,I=this;for(;E>Ut||w>Ut;)E&fe&&(S=S.add(I)),w&fe&&(B=B.add(I)),I=I.double(),E>>=fe,w>>=fe;return v&&(S=S.negate()),A&&(B=B.negate()),B=new u(t.mul(B.px,b.beta),B.py,B.pz),S.add(B)}multiply(d){let{endo:m,n:b}=e;Pe("scalar",d,fe,b);let v,E;if(m){let{k1neg:A,k1:w,k2neg:S,k2:B}=m.splitScalar(d),{p:I,f:M}=this.wNAF(w),{p:D,f:U}=this.wNAF(B);I=p.constTimeNegate(A,I),D=p.constTimeNegate(S,D),D=new u(t.mul(D.px,m.beta),D.py,D.pz),v=I.add(D),E=M.add(U)}else{let{p:A,f:w}=this.wNAF(d);v=A,E=w}return u.normalizeZ([v,E])[0]}multiplyAndAddUnsafe(d,m,b){let v=u.BASE,E=(w,S)=>S===Ut||S===fe||!w.equals(v)?w.multiplyUnsafe(S):w.multiply(S),A=E(this,m).add(E(d,b));return A.is0()?void 0:A}toAffine(d){return f(this,d)}isTorsionFree(){let{h:d,isTorsionFree:m}=e;if(d===fe)return!0;if(m)return m(u,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:d,clearCofactor:m}=e;return d===fe?this:m?m(u,this):this.multiplyUnsafe(e.h)}toRawBytes(d=!0){return We("isCompressed",d),this.assertValidity(),r(u,this,d)}toHex(d=!0){return We("isCompressed",d),ut(this.toRawBytes(d))}}u.BASE=new u(e.Gx,e.Gy,t.ONE),u.ZERO=new u(t.ZERO,t.ONE,t.ZERO);let h=e.nBitLength,p=xr(u,e.endo?Math.ceil(h/2):h);return{CURVE:e,ProjectivePoint:u,normPrivateKeyToScalar:a,weierstrassEquation:i,isWithinCurveOrder:o}}function Xf(s){let e=Vs(s);return Qe(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}function $c(s){let e=Xf(s),{Fp:t,n:r}=e,n=t.BYTES+1,i=2*t.BYTES+1;function o(P){return q(P,r)}function a(P){return wr(P,r)}let{ProjectivePoint:c,normPrivateKeyToScalar:f,weierstrassEquation:l,isWithinCurveOrder:u}=Jf({...e,toBytes(P,x,y){let _=x.toAffine(),k=t.toBytes(_.x),C=ft;return We("isCompressed",y),y?C(Uint8Array.from([x.hasEvenY()?2:3]),k):C(Uint8Array.from([4]),k,t.toBytes(_.y))},fromBytes(P){let x=P.length,y=P[0],_=P.subarray(1);if(x===n&&(y===2||y===3)){let k=ht(_);if(!Us(k,fe,t.ORDER))throw new Error("Point is not on curve");let C=l(k),R;try{R=t.sqrt(C)}catch(F){let H=F instanceof Error?": "+F.message:"";throw new Error("Point is not on curve"+H)}let N=(R&fe)===fe;return(y&1)===1!==N&&(R=t.neg(R)),{x:k,y:R}}else if(x===i&&y===4){let k=t.fromBytes(_.subarray(0,t.BYTES)),C=t.fromBytes(_.subarray(t.BYTES,2*t.BYTES));return{x:k,y:C}}else throw new Error(`Point of length ${x} was invalid. Expected ${n} compressed bytes or ${i} uncompressed bytes`)}}),h=P=>ut(kt(P,e.nByteLength));function p(P){let x=r>>fe;return P>x}function g(P){return p(P)?o(-P):P}let d=(P,x,y)=>ht(P.slice(x,y));class m{constructor(x,y,_){this.r=x,this.s=y,this.recovery=_,this.assertValidity()}static fromCompact(x){let y=e.nByteLength;return x=te("compactSignature",x,y*2),new m(d(x,0,y),d(x,y,2*y))}static fromDER(x){let{r:y,s:_}=Xt.toSig(te("DER",x));return new m(y,_)}assertValidity(){Pe("r",this.r,fe,r),Pe("s",this.s,fe,r)}addRecoveryBit(x){return new m(this.r,this.s,x)}recoverPublicKey(x){let{r:y,s:_,recovery:k}=this,C=S(te("msgHash",x));if(k==null||![0,1,2,3].includes(k))throw new Error("recovery id invalid");let R=k===2||k===3?y+e.n:y;if(R>=t.ORDER)throw new Error("recovery id 2 or 3 invalid");let N=k&1?"03":"02",O=c.fromHex(N+h(R)),F=a(R),H=o(-C*F),X=o(_*F),Y=c.BASE.multiplyAndAddUnsafe(O,H,X);if(!Y)throw new Error("point at infinify");return Y.assertValidity(),Y}hasHighS(){return p(this.s)}normalizeS(){return this.hasHighS()?new m(this.r,o(-this.s),this.recovery):this}toDERRawBytes(){return Gt(this.toDERHex())}toDERHex(){return Xt.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return Gt(this.toCompactHex())}toCompactHex(){return h(this.r)+h(this.s)}}let b={isValidPrivateKey(P){try{return f(P),!0}catch{return!1}},normPrivateKeyToScalar:f,randomPrivateKey:()=>{let P=mi(e.n);return va(e.randomBytes(P),e.n)},precompute(P=8,x=c.BASE){return x._setWindowSize(P),x.multiply(BigInt(3)),x}};function v(P,x=!0){return c.fromPrivateKey(P).toRawBytes(x)}function E(P){let x=_t(P),y=typeof P=="string",_=(x||y)&&P.length;return x?_===n||_===i:y?_===2*n||_===2*i:P instanceof c}function A(P,x,y=!0){if(E(P))throw new Error("first arg must be private key");if(!E(x))throw new Error("second arg must be public key");return c.fromHex(x).multiply(f(P)).toRawBytes(y)}let w=e.bits2int||function(P){let x=ht(P),y=P.length*8-e.nBitLength;return y>0?x>>BigInt(y):x},S=e.bits2int_modN||function(P){return o(w(P))},B=Fs(e.nBitLength);function I(P){return Pe(`num < 2^${e.nBitLength}`,P,Ut,B),kt(P,e.nByteLength)}function M(P,x,y=D){if(["recovered","canonical"].some(le=>le in y))throw new Error("sign() legacy options not supported");let{hash:_,randomBytes:k}=e,{lowS:C,prehash:R,extraEntropy:N}=y;C==null&&(C=!0),P=te("msgHash",P),qc(y),R&&(P=te("prehashed msgHash",_(P)));let O=S(P),F=f(x),H=[I(F),I(O)];if(N!=null&&N!==!1){let le=N===!0?k(t.BYTES):N;H.push(te("extraEntropy",le))}let X=ft(...H),Y=O;function ke(le){let ae=w(le);if(!u(ae))return;let He=a(ae),ue=c.BASE.multiply(ae).toAffine(),Ke=o(ue.x);if(Ke===Ut)return;let Ot=o(He*o(Y+Ke*F));if(Ot===Ut)return;let Cs=(ue.x===Ke?0:2)|Number(ue.y&fe),cr=Ot;return C&&p(Ot)&&(cr=g(Ot),Cs^=1),new m(Ke,cr,Cs)}return{seed:X,k2sig:ke}}let D={lowS:e.lowS,prehash:!1},U={lowS:e.lowS,prehash:!1};function re(P,x,y=D){let{seed:_,k2sig:k}=M(P,x,y),C=e;return fi(C.hash.outputLen,C.nByteLength,C.hmac)(_,k)}c.BASE._setWindowSize(8);function oe(P,x,y,_=U){let k=P;if(x=te("msgHash",x),y=te("publicKey",y),"strict"in _)throw new Error("options.strict was renamed to lowS");qc(_);let{lowS:C,prehash:R}=_,N,O;try{if(typeof k=="string"||_t(k))try{N=m.fromDER(k)}catch(ue){if(!(ue instanceof Xt.Err))throw ue;N=m.fromCompact(k)}else if(typeof k=="object"&&typeof k.r=="bigint"&&typeof k.s=="bigint"){let{r:ue,s:Ke}=k;N=new m(ue,Ke)}else throw new Error("PARSE");O=c.fromHex(y)}catch(ue){if(ue.message==="PARSE")throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(C&&N.hasHighS())return!1;R&&(x=e.hash(x));let{r:F,s:H}=N,X=S(x),Y=a(H),ke=o(X*Y),le=o(F*Y),ae=c.BASE.multiplyAndAddUnsafe(O,ke,le)?.toAffine();return ae?o(ae.x)===F:!1}return{CURVE:e,getPublicKey:v,getSharedSecret:A,sign:re,verify:oe,ProjectivePoint:c,Signature:m,utils:b}}function Yf(s){return{hash:s,hmac:(e,...t)=>zs(s,e,ii(...t)),randomBytes:fs}}function jc(s,e){let t=r=>$c({...s,...Yf(r)});return Object.freeze({...t(e),create:t})}var Xc=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),Zc=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),Qf=BigInt(1),bo=BigInt(2),Jc=(s,e)=>(s+e/bo)/e;function ed(s){let e=Xc,t=BigInt(3),r=BigInt(6),n=BigInt(11),i=BigInt(22),o=BigInt(23),a=BigInt(44),c=BigInt(88),f=s*s*s%e,l=f*f*s%e,u=J(l,t,e)*l%e,h=J(u,t,e)*l%e,p=J(h,bo,e)*f%e,g=J(p,n,e)*p%e,d=J(g,i,e)*g%e,m=J(d,a,e)*d%e,b=J(m,c,e)*m%e,v=J(b,a,e)*d%e,E=J(v,t,e)*l%e,A=J(E,o,e)*g%e,w=J(A,r,e)*f%e,S=J(w,bo,e);if(!yo.eql(yo.sqr(S),s))throw new Error("Cannot find square root");return S}var yo=vr(Xc,void 0,void 0,{sqrt:ed}),Yt=jc({a:BigInt(0),b:BigInt(7),Fp:yo,n:Zc,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:s=>{let e=Zc,t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-Qf*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),n=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=t,o=BigInt("0x100000000000000000000000000000000"),a=Jc(i*s,e),c=Jc(-r*s,e),f=q(s-a*t-c*n,e),l=q(-a*r-c*i,e),u=f>o,h=l>o;if(u&&(f=e-f),h&&(l=e-l),f>o||l>o)throw new Error("splitScalar: Endomorphism failed, k="+s);return{k1neg:u,k1:f,k2neg:h,k2:l}}}},bs),db=BigInt(0);var pb=Yt.ProjectivePoint;function Yc(s){return s==null?!1:typeof s.then=="function"&&typeof s.catch=="function"&&typeof s.finally=="function"}function Qc(s,e,t){let r=Pt.digest(t instanceof Uint8Array?t:t.subarray());if(Yc(r))return r.then(({digest:n})=>Yt.verify(e,n,s)).catch(n=>{throw new Hs(String(n))});try{return Yt.verify(e,r.digest,s)}catch(n){throw new Hs(String(n))}}var En=class{type="secp256k1";raw;_key;constructor(e){this._key=tl(e),this.raw=el(this._key)}toMultihash(){return ct.digest(Tt(this))}toCID(){return Te.createV1(114,this.toMultihash())}toString(){return se.encode(this.toMultihash().bytes).substring(1)}equals(e){return e==null||!(e.raw instanceof Uint8Array)?!1:Fe(this.raw,e.raw)}verify(e,t){return Qc(this._key,t,e)}};function wo(s){return new En(s)}function el(s){return Yt.ProjectivePoint.fromHex(s).toRawBytes(!0)}function tl(s){try{return Yt.ProjectivePoint.fromHex(s),s}catch(e){throw new ts(String(e))}}function sr(s){let{Type:e,Data:t}=tt.decode(s),r=t??new Uint8Array;switch(e){case ne.RSA:return mo(r);case ne.Ed25519:return Ni(r);case ne.secp256k1:return wo(r);default:throw new ss}}function sl(s){let{Type:e,Data:t}=tt.decode(s.digest),r=t??new Uint8Array;switch(e){case ne.Ed25519:return Ni(r);case ne.secp256k1:return wo(r);default:throw new ss}}function Tt(s){return tt.encode({Type:ne[s.type],Data:s.raw})}function zc(s){return Pr.encode({Type:ne[s.type],Data:s.raw})}var rl=Symbol.for("nodejs.util.inspect.custom"),td=114,rr=class{type;multihash;publicKey;string;constructor(e){this.type=e.type,this.multihash=e.multihash,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}[Zn]=!0;toString(){return this.string==null&&(this.string=se.encode(this.multihash.bytes).slice(1)),this.string}toMultihash(){return this.multihash}toCID(){return Te.createV1(td,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e==null)return!1;if(e instanceof Uint8Array)return Fe(this.multihash.bytes,e);if(typeof e=="string")return this.toString()===e;if(e?.toMultihash()?.bytes!=null)return Fe(this.multihash.bytes,e.toMultihash().bytes);throw new Error("not valid Id")}[rl](){return`PeerId(${this.toString()})`}},Sn=class extends rr{type="RSA";publicKey;constructor(e){super({...e,type:"RSA"}),this.publicKey=e.publicKey}},Bn=class extends rr{type="Ed25519";publicKey;constructor(e){super({...e,type:"Ed25519"}),this.publicKey=e.publicKey}},In=class extends rr{type="secp256k1";publicKey;constructor(e){super({...e,type:"secp256k1"}),this.publicKey=e.publicKey}},sd=2336,_n=class{type="url";multihash;publicKey;url;constructor(e){this.url=e.toString(),this.multihash=ct.digest(W(this.url))}[rl](){return`PeerId(${this.url})`}[Zn]=!0;toString(){return this.toCID().toString()}toMultihash(){return this.multihash}toCID(){return Te.createV1(sd,this.toMultihash())}toBytes(){return this.toCID().bytes}toJSON(){return this.toString()}equals(e){return e==null?!1:(e instanceof Uint8Array&&(e=z(e)),e.toString()===this.toString())}};function Ft(s,e){let t;if(s.charAt(0)==="1"||s.charAt(0)==="Q")t=ze(se.decode(`z${s}`));else{if(e==null)throw new j('Please pass a multibase decoder for strings that do not start with "1" or "Q"');t=ze(e.decode(s))}return nr(t)}function nr(s){if(nd(s))return new Sn({multihash:s});if(rd(s))try{let e=sl(s);if(e.type==="Ed25519")return new Bn({multihash:s,publicKey:e});if(e.type==="secp256k1")return new In({multihash:s,publicKey:e})}catch{let t=z(s.digest);return new _n(new URL(t))}throw new ur("Supplied PeerID Multihash is invalid")}function rd(s){return s.code===ct.code}function nd(s){return s.code===Pt.code}var il=Symbol.for("@achingbrain/uint8arraylist");function nl(s,e){if(e==null||e<0)throw new RangeError("index is out of bounds");let t=0;for(let r of s){let n=t+r.byteLength;if(e<n)return{buf:r,index:e-t};t=n}throw new RangeError("index is out of bounds")}function An(s){return!!s?.[il]}var Ss=class s{bufs;length;[il]=!0;constructor(...e){this.bufs=[],this.length=0,e.length>0&&this.appendAll(e)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...e){this.appendAll(e)}appendAll(e){let t=0;for(let r of e)if(r instanceof Uint8Array)t+=r.byteLength,this.bufs.push(r);else if(An(r))t+=r.byteLength,this.bufs.push(...r.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}prepend(...e){this.prependAll(e)}prependAll(e){let t=0;for(let r of e.reverse())if(r instanceof Uint8Array)t+=r.byteLength,this.bufs.unshift(r);else if(An(r))t+=r.byteLength,this.bufs.unshift(...r.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}get(e){let t=nl(this.bufs,e);return t.buf[t.index]}set(e,t){let r=nl(this.bufs,e);r.buf[r.index]=t}write(e,t=0){if(e instanceof Uint8Array)for(let r=0;r<e.length;r++)this.set(t+r,e[r]);else if(An(e))for(let r=0;r<e.length;r++)this.set(t+r,e.get(r));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(e){if(e=Math.trunc(e),!(Number.isNaN(e)||e<=0)){if(e===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(e>=this.bufs[0].byteLength)e-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(e),this.length-=e;break}}}slice(e,t){let{bufs:r,length:n}=this._subList(e,t);return et(r,n)}subarray(e,t){let{bufs:r,length:n}=this._subList(e,t);return r.length===1?r[0]:et(r,n)}sublist(e,t){let{bufs:r,length:n}=this._subList(e,t),i=new s;return i.length=n,i.bufs=[...r],i}_subList(e,t){if(e=e??0,t=t??this.length,e<0&&(e=this.length+e),t<0&&(t=this.length+t),e<0||t>this.length)throw new RangeError("index is out of bounds");if(e===t)return{bufs:[],length:0};if(e===0&&t===this.length)return{bufs:this.bufs,length:this.length};let r=[],n=0;for(let i=0;i<this.bufs.length;i++){let o=this.bufs[i],a=n,c=a+o.byteLength;if(n=c,e>=c)continue;let f=e>=a&&e<c,l=t>a&&t<=c;if(f&&l){if(e===a&&t===c){r.push(o);break}let u=e-a;r.push(o.subarray(u,u+(t-e)));break}if(f){if(e===0){r.push(o);continue}r.push(o.subarray(e-a));continue}if(l){if(t===c){r.push(o);break}r.push(o.subarray(0,t-a));break}r.push(o)}return{bufs:r,length:t-e}}indexOf(e,t=0){if(!An(e)&&!(e instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let r=e instanceof Uint8Array?e:e.subarray();if(t=Number(t??0),isNaN(t)&&(t=0),t<0&&(t=this.length+t),t<0&&(t=0),e.length===0)return t>this.length?this.length:t;let n=r.byteLength;if(n===0)throw new TypeError("search must be at least 1 byte long");let i=256,o=new Int32Array(i);for(let u=0;u<i;u++)o[u]=-1;for(let u=0;u<n;u++)o[r[u]]=u;let a=o,c=this.byteLength-r.byteLength,f=r.byteLength-1,l;for(let u=t;u<=c;u+=l){l=0;for(let h=f;h>=0;h--){let p=this.get(u+h);if(r[h]!==p){l=Math.max(1,h-a[p]);break}}if(l===0)return u}return-1}getInt8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getInt8(0)}setInt8(e,t){let r=pe(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setInt8(0,t),this.write(r,e)}getInt16(e,t){let r=this.subarray(e,e+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt16(0,t)}setInt16(e,t,r){let n=dt(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt16(0,t,r),this.write(n,e)}getInt32(e,t){let r=this.subarray(e,e+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt32(0,t)}setInt32(e,t,r){let n=dt(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt32(0,t,r),this.write(n,e)}getBigInt64(e,t){let r=this.subarray(e,e+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigInt64(0,t)}setBigInt64(e,t,r){let n=dt(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigInt64(0,t,r),this.write(n,e)}getUint8(e){let t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getUint8(0)}setUint8(e,t){let r=pe(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setUint8(0,t),this.write(r,e)}getUint16(e,t){let r=this.subarray(e,e+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint16(0,t)}setUint16(e,t,r){let n=dt(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint16(0,t,r),this.write(n,e)}getUint32(e,t){let r=this.subarray(e,e+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint32(0,t)}setUint32(e,t,r){let n=dt(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint32(0,t,r),this.write(n,e)}getBigUint64(e,t){let r=this.subarray(e,e+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigUint64(0,t)}setBigUint64(e,t,r){let n=dt(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigUint64(0,t,r),this.write(n,e)}getFloat32(e,t){let r=this.subarray(e,e+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat32(0,t)}setFloat32(e,t,r){let n=dt(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat32(0,t,r),this.write(n,e)}getFloat64(e,t){let r=this.subarray(e,e+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat64(0,t)}setFloat64(e,t,r){let n=dt(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat64(0,t,r),this.write(n,e)}equals(e){if(e==null||!(e instanceof s)||e.bufs.length!==this.bufs.length)return!1;for(let t=0;t<this.bufs.length;t++)if(!Fe(this.bufs[t],e.bufs[t]))return!1;return!0}static fromUint8Arrays(e,t){let r=new s;return r.bufs=e,t==null&&(t=e.reduce((n,i)=>n+i.byteLength,0)),r.length=t,r}};function kn(s){return s[Symbol.asyncIterator]!=null}var Tn=s=>{let e=Se(s),t=pe(e);return Ki(s,t),Tn.bytes=e,t};Tn.bytes=0;function Bs(s,e){e=e??{};let t=e.lengthEncoder??Tn;function*r(n){let i=t(n.byteLength);i instanceof Uint8Array?yield i:yield*i,n instanceof Uint8Array?yield n:yield*n}return kn(s)?async function*(){for await(let n of s)yield*r(n)}():function*(){for(let n of s)yield*r(n)}()}Bs.single=(s,e)=>{e=e??{};let t=e.lengthEncoder??Tn;return new Ss(t(s.byteLength),s)};var Pn=class extends Error{name="InvalidMessageLengthError";code="ERR_INVALID_MSG_LENGTH"},Mn=class extends Error{name="InvalidDataLengthError";code="ERR_MSG_DATA_TOO_LONG"},Cn=class extends Error{name="InvalidDataLengthLengthError";code="ERR_MSG_LENGTH_TOO_LONG"},ir=class extends Error{name="UnexpectedEOFError";code="ERR_UNEXPECTED_EOF"};var id=8,od=1024*1024*4,Qt;(function(s){s[s.LENGTH=0]="LENGTH",s[s.DATA=1]="DATA"})(Qt||(Qt={}));var vo=s=>{let e=gs(s);return vo.bytes=Se(e),e};vo.bytes=0;function or(s,e){let t=new Ss,r=Qt.LENGTH,n=-1,i=e?.lengthDecoder??vo,o=e?.maxLengthLength??id,a=e?.maxDataLength??od;function*c(){for(;t.byteLength>0;){if(r===Qt.LENGTH)try{if(n=i(t),n<0)throw new Pn("Invalid message length");if(n>a)throw new Mn("Message length too long");let f=i.bytes;t.consume(f),e?.onLength!=null&&e.onLength(n),r=Qt.DATA}catch(f){if(f instanceof RangeError){if(t.byteLength>o)throw new Cn("Message length length too long");break}throw f}if(r===Qt.DATA){if(t.byteLength<n)break;let f=t.sublist(0,n);t.consume(n),e?.onData!=null&&e.onData(f),yield f,r=Qt.LENGTH}}}return kn(s)?async function*(){for await(let f of s)t.append(f),yield*c();if(t.byteLength>0)throw new ir("Unexpected end of input")}():function*(){for(let f of s)t.append(f),yield*c();if(t.byteLength>0)throw new ir("Unexpected end of input")}()}or.fromReader=(s,e)=>{let t=1,r=async function*(){for(;;)try{let{done:i,value:o}=await s.next(t);if(i===!0)return;o!=null&&(yield o)}catch(i){if(i.code==="ERR_UNDER_READ")return{done:!0,value:null};throw i}finally{t=1}}();return or(r,{...e??{},onLength:i=>{t=i}})};function Dn(){let s={};return s.promise=new Promise((e,t)=>{s.resolve=e,s.reject=t}),s}var Rn=class{buffer;mask;top;btm;next;constructor(e){if(!(e>0)||e-1&e)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(e),this.mask=e-1,this.top=0,this.btm=0,this.next=null}push(e){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=e,this.top=this.top+1&this.mask,!0)}shift(){let e=this.buffer[this.btm];if(e!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,e}isEmpty(){return this.buffer[this.btm]===void 0}},Is=class{size;hwm;head;tail;constructor(e={}){this.hwm=e.splitLimit??16,this.head=new Rn(this.hwm),this.tail=this.head,this.size=0}calculateSize(e){return e?.byteLength!=null?e.byteLength:1}push(e){if(e?.value!=null&&(this.size+=this.calculateSize(e.value)),!this.head.push(e)){let t=this.head;this.head=t.next=new Rn(2*this.head.buffer.length),this.head.push(e)}}shift(){let e=this.tail.shift();if(e===void 0&&this.tail.next!=null){let t=this.tail.next;this.tail.next=null,this.tail=t,e=this.tail.shift()}return e?.value!=null&&(this.size-=this.calculateSize(e.value)),e}isEmpty(){return this.head.isEmpty()}};var xo=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.code=t??"ABORT_ERR"}};function vt(s={}){return ad(t=>{let r=t.shift();if(r==null)return{done:!0};if(r.error!=null)throw r.error;return{done:r.done===!0,value:r.value}},s)}function ad(s,e){e=e??{};let t=e.onEnd,r=new Is,n,i,o,a=Dn(),c=async()=>{try{return r.isEmpty()?o?{done:!0}:await new Promise((m,b)=>{i=v=>{i=null,r.push(v);try{m(s(r))}catch(E){b(E)}return n}}):s(r)}finally{r.isEmpty()&&queueMicrotask(()=>{a.resolve(),a=Dn()})}},f=m=>i!=null?i(m):(r.push(m),n),l=m=>(r=new Is,i!=null?i({error:m}):(r.push({error:m}),n)),u=m=>{if(o)return n;if(e?.objectMode!==!0&&m?.byteLength==null)throw new Error("objectMode was not true but tried to push non-Uint8Array value");return f({done:!1,value:m})},h=m=>o?n:(o=!0,m!=null?l(m):f({done:!0})),p=()=>(r=new Is,h(),{done:!0}),g=m=>(h(m),{done:!0});if(n={[Symbol.asyncIterator](){return this},next:c,return:p,throw:g,push:u,end:h,get readableLength(){return r.size},onEmpty:async m=>{let b=m?.signal;if(b?.throwIfAborted(),r.isEmpty())return;let v,E;b!=null&&(v=new Promise((A,w)=>{E=()=>{w(new xo)},b.addEventListener("abort",E)}));try{await Promise.race([a.promise,v])}finally{E!=null&&b!=null&&b?.removeEventListener("abort",E)}}},t==null)return n;let d=n;return n={[Symbol.asyncIterator](){return this},next(){return d.next()},throw(m){return d.throw(m),t!=null&&(t(m),t=void 0),{done:!0}},return(){return d.return(),t!=null&&(t(),t=void 0),{done:!0}},push:u,end(m){return d.end(m),t!=null&&(t(m),t=void 0),n},get readableLength(){return d.readableLength},onEmpty:m=>d.onEmpty(m)},n}function cd(s){return s[Symbol.asyncIterator]!=null}function ld(...s){let e=[];for(let t of s)cd(t)||e.push(t);return e.length===s.length?function*(){for(let t of e)yield*t}():async function*(){let t=vt({objectMode:!0});Promise.resolve().then(async()=>{try{await Promise.all(s.map(async r=>{for await(let n of r)t.push(n)})),t.end()}catch(r){t.end(r)}}),yield*t}()}var ol=ld;function _s(s,...e){if(s==null)throw new Error("Empty pipeline");if(Eo(s)){let r=s;s=()=>r.source}else if(cl(s)||al(s)){let r=s;s=()=>r}let t=[s,...e];if(t.length>1&&Eo(t[t.length-1])&&(t[t.length-1]=t[t.length-1].sink),t.length>2)for(let r=1;r<t.length-1;r++)Eo(t[r])&&(t[r]=hd(t[r]));return ud(...t)}var ud=(...s)=>{let e;for(;s.length>0;)e=s.shift()(e);return e},al=s=>s?.[Symbol.asyncIterator]!=null,cl=s=>s?.[Symbol.iterator]!=null,Eo=s=>s==null?!1:s.sink!=null&&s.source!=null,hd=s=>e=>{let t=s.sink(e);if(t?.then!=null){let r=vt({objectMode:!0});t.then(()=>{r.end()},o=>{r.end(o)});let n,i=s.source;if(al(i))n=async function*(){yield*i,r.end()};else if(cl(i))n=function*(){yield*i,r.end()};else throw new Error("Unknown duplex source type - must be Iterable or AsyncIterable");return ol(r,n())}return s.source};var So="/floodsub/1.0.0",Bo="/meshsub/1.0.0",Nn="/meshsub/1.1.0";var ll="ERR_TOPIC_VALIDATOR_REJECT",ul="ERR_TOPIC_VALIDATOR_IGNORE";var hl={maxSubscriptions:1/0,maxMessages:1/0,maxIhaveMessageIDs:1/0,maxIwantMessageIDs:1/0,maxControlMessages:1/0,maxPeerInfos:1/0};var xt;(function(s){let e;(function(l){let u;l.codec=()=>(u==null&&(u=Re((h,p,g={})=>{g.lengthDelimited!==!1&&p.fork(),h.subscribe!=null&&(p.uint32(8),p.bool(h.subscribe)),h.topic!=null&&(p.uint32(18),p.string(h.topic)),g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{d.subscribe=h.bool();break}case 2:{d.topic=h.string();break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>De(h,l.codec()),l.decode=(h,p)=>Ce(h,l.codec(),p)})(e=s.SubOpts||(s.SubOpts={}));let t;(function(l){let u;l.codec=()=>(u==null&&(u=Re((h,p,g={})=>{g.lengthDelimited!==!1&&p.fork(),h.from!=null&&(p.uint32(10),p.bytes(h.from)),h.data!=null&&(p.uint32(18),p.bytes(h.data)),h.seqno!=null&&(p.uint32(26),p.bytes(h.seqno)),h.topic!=null&&h.topic!==""&&(p.uint32(34),p.string(h.topic)),h.signature!=null&&(p.uint32(42),p.bytes(h.signature)),h.key!=null&&(p.uint32(50),p.bytes(h.key)),g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={topic:""},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{d.from=h.bytes();break}case 2:{d.data=h.bytes();break}case 3:{d.seqno=h.bytes();break}case 4:{d.topic=h.string();break}case 5:{d.signature=h.bytes();break}case 6:{d.key=h.bytes();break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>De(h,l.codec()),l.decode=(h,p)=>Ce(h,l.codec(),p)})(t=s.Message||(s.Message={}));let r;(function(l){let u;l.codec=()=>(u==null&&(u=Re((h,p,g={})=>{if(g.lengthDelimited!==!1&&p.fork(),h.ihave!=null)for(let d of h.ihave)p.uint32(10),s.ControlIHave.codec().encode(d,p);if(h.iwant!=null)for(let d of h.iwant)p.uint32(18),s.ControlIWant.codec().encode(d,p);if(h.graft!=null)for(let d of h.graft)p.uint32(26),s.ControlGraft.codec().encode(d,p);if(h.prune!=null)for(let d of h.prune)p.uint32(34),s.ControlPrune.codec().encode(d,p);g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={ihave:[],iwant:[],graft:[],prune:[]},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{if(g.limits?.ihave!=null&&d.ihave.length===g.limits.ihave)throw new Ve('decode error - map field "ihave" had too many elements',"ERR_MAX_LENGTH");d.ihave.push(s.ControlIHave.codec().decode(h,h.uint32()));break}case 2:{if(g.limits?.iwant!=null&&d.iwant.length===g.limits.iwant)throw new Ve('decode error - map field "iwant" had too many elements',"ERR_MAX_LENGTH");d.iwant.push(s.ControlIWant.codec().decode(h,h.uint32()));break}case 3:{if(g.limits?.graft!=null&&d.graft.length===g.limits.graft)throw new Ve('decode error - map field "graft" had too many elements',"ERR_MAX_LENGTH");d.graft.push(s.ControlGraft.codec().decode(h,h.uint32()));break}case 4:{if(g.limits?.prune!=null&&d.prune.length===g.limits.prune)throw new Ve('decode error - map field "prune" had too many elements',"ERR_MAX_LENGTH");d.prune.push(s.ControlPrune.codec().decode(h,h.uint32()));break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>De(h,l.codec()),l.decode=(h,p)=>Ce(h,l.codec(),p)})(r=s.ControlMessage||(s.ControlMessage={}));let n;(function(l){let u;l.codec=()=>(u==null&&(u=Re((h,p,g={})=>{if(g.lengthDelimited!==!1&&p.fork(),h.topicID!=null&&(p.uint32(10),p.string(h.topicID)),h.messageIDs!=null)for(let d of h.messageIDs)p.uint32(18),p.bytes(d);g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={messageIDs:[]},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{d.topicID=h.string();break}case 2:{if(g.limits?.messageIDs!=null&&d.messageIDs.length===g.limits.messageIDs)throw new Ve('decode error - map field "messageIDs" had too many elements',"ERR_MAX_LENGTH");d.messageIDs.push(h.bytes());break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>De(h,l.codec()),l.decode=(h,p)=>Ce(h,l.codec(),p)})(n=s.ControlIHave||(s.ControlIHave={}));let i;(function(l){let u;l.codec=()=>(u==null&&(u=Re((h,p,g={})=>{if(g.lengthDelimited!==!1&&p.fork(),h.messageIDs!=null)for(let d of h.messageIDs)p.uint32(10),p.bytes(d);g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={messageIDs:[]},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{if(g.limits?.messageIDs!=null&&d.messageIDs.length===g.limits.messageIDs)throw new Ve('decode error - map field "messageIDs" had too many elements',"ERR_MAX_LENGTH");d.messageIDs.push(h.bytes());break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>De(h,l.codec()),l.decode=(h,p)=>Ce(h,l.codec(),p)})(i=s.ControlIWant||(s.ControlIWant={}));let o;(function(l){let u;l.codec=()=>(u==null&&(u=Re((h,p,g={})=>{g.lengthDelimited!==!1&&p.fork(),h.topicID!=null&&(p.uint32(10),p.string(h.topicID)),g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{d.topicID=h.string();break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>De(h,l.codec()),l.decode=(h,p)=>Ce(h,l.codec(),p)})(o=s.ControlGraft||(s.ControlGraft={}));let a;(function(l){let u;l.codec=()=>(u==null&&(u=Re((h,p,g={})=>{if(g.lengthDelimited!==!1&&p.fork(),h.topicID!=null&&(p.uint32(10),p.string(h.topicID)),h.peers!=null)for(let d of h.peers)p.uint32(18),s.PeerInfo.codec().encode(d,p);h.backoff!=null&&(p.uint32(24),p.uint64Number(h.backoff)),g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={peers:[]},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{d.topicID=h.string();break}case 2:{if(g.limits?.peers!=null&&d.peers.length===g.limits.peers)throw new Ve('decode error - map field "peers" had too many elements',"ERR_MAX_LENGTH");d.peers.push(s.PeerInfo.codec().decode(h,h.uint32()));break}case 3:{d.backoff=h.uint64Number();break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>De(h,l.codec()),l.decode=(h,p)=>Ce(h,l.codec(),p)})(a=s.ControlPrune||(s.ControlPrune={}));let c;(function(l){let u;l.codec=()=>(u==null&&(u=Re((h,p,g={})=>{g.lengthDelimited!==!1&&p.fork(),h.peerID!=null&&(p.uint32(10),p.bytes(h.peerID)),h.signedPeerRecord!=null&&(p.uint32(18),p.bytes(h.signedPeerRecord)),g.lengthDelimited!==!1&&p.ldelim()},(h,p,g={})=>{let d={},m=p==null?h.len:h.pos+p;for(;h.pos<m;){let b=h.uint32();switch(b>>>3){case 1:{d.peerID=h.bytes();break}case 2:{d.signedPeerRecord=h.bytes();break}default:{h.skipType(b&7);break}}}return d})),u),l.encode=h=>De(h,l.codec()),l.decode=(h,p)=>Ce(h,l.codec(),p)})(c=s.PeerInfo||(s.PeerInfo={}));let f;s.codec=()=>(f==null&&(f=Re((l,u,h={})=>{if(h.lengthDelimited!==!1&&u.fork(),l.subscriptions!=null)for(let p of l.subscriptions)u.uint32(10),s.SubOpts.codec().encode(p,u);if(l.messages!=null)for(let p of l.messages)u.uint32(18),s.Message.codec().encode(p,u);l.control!=null&&(u.uint32(26),s.ControlMessage.codec().encode(l.control,u)),h.lengthDelimited!==!1&&u.ldelim()},(l,u,h={})=>{let p={subscriptions:[],messages:[]},g=u==null?l.len:l.pos+u;for(;l.pos<g;){let d=l.uint32();switch(d>>>3){case 1:{if(h.limits?.subscriptions!=null&&p.subscriptions.length===h.limits.subscriptions)throw new Ve('decode error - map field "subscriptions" had too many elements',"ERR_MAX_LENGTH");p.subscriptions.push(s.SubOpts.codec().decode(l,l.uint32()));break}case 2:{if(h.limits?.messages!=null&&p.messages.length===h.limits.messages)throw new Ve('decode error - map field "messages" had too many elements',"ERR_MAX_LENGTH");p.messages.push(s.Message.codec().decode(l,l.uint32()));break}case 3:{p.control=s.ControlMessage.codec().decode(l,l.uint32());break}default:{l.skipType(d&7);break}}}return p})),f),s.encode=l=>De(l,s.codec()),s.decode=(l,u)=>Ce(l,s.codec(),u)})(xt||(xt={}));var Ln=class{gossip;msgs=new Map;msgIdToStrFn;history=[];notValidatedCount=0;constructor(e,t,r){this.gossip=e,this.msgIdToStrFn=r;for(let n=0;n<t;n++)this.history[n]=[]}get size(){return this.msgs.size}put(e,t,r=!1){let{msgIdStr:n}=e;return this.msgs.has(n)?!1:(this.msgs.set(n,{message:t,validated:r,originatingPeers:new Set,iwantCounts:new Map}),this.history[0].push({...e,topic:t.topic}),r||this.notValidatedCount++,!0)}observeDuplicate(e,t){let r=this.msgs.get(e);r!=null&&!r.validated&&r.originatingPeers.add(t)}get(e){return this.msgs.get(this.msgIdToStrFn(e))?.message}getWithIWantCount(e,t){let r=this.msgs.get(e);if(r==null)return null;let n=(r.iwantCounts.get(t)??0)+1;return r.iwantCounts.set(t,n),{msg:r.message,count:n}}getGossipIDs(e){let t=new Map;for(let r=0;r<this.gossip;r++)this.history[r].forEach(n=>{if((this.msgs.get(n.msgIdStr)?.validated??!1)&&e.has(n.topic)){let o=t.get(n.topic);o==null&&(o=[],t.set(n.topic,o)),o.push(n.msgId)}});return t}validate(e){let t=this.msgs.get(e);if(t==null)return null;t.validated||this.notValidatedCount--;let{message:r,originatingPeers:n}=t;return t.validated=!0,t.originatingPeers=new Set,{message:r,originatingPeers:n}}shift(){this.history[this.history.length-1].forEach(t=>{let r=this.msgs.get(t.msgIdStr);r!=null&&(this.msgs.delete(t.msgIdStr),r.validated||this.notValidatedCount--)}),this.history.pop(),this.history.unshift([])}remove(e){let t=this.msgs.get(e);return t==null?null:(this.msgs.delete(e),t)}};var fl;(function(s){s.StrictSign="StrictSign",s.StrictNoSign="StrictNoSign"})(fl||(fl={}));var Vt;(function(s){s[s.Signing=0]="Signing",s[s.Anonymous=1]="Anonymous"})(Vt||(Vt={}));var Ie;(function(s){s.Error="error",s.Ignore="ignore",s.Reject="reject",s.Blacklisted="blacklisted"})(Ie||(Ie={}));var ye;(function(s){s.InvalidSignature="invalid_signature",s.InvalidSeqno="invalid_seqno",s.InvalidPeerId="invalid_peerid",s.SignaturePresent="signature_present",s.SeqnoPresent="seqno_present",s.FromPresent="from_present",s.TransformFailed="transform_failed"})(ye||(ye={}));var we;(function(s){s.duplicate="duplicate",s.invalid="invalid",s.valid="valid"})(we||(we={}));function Io(s){switch(s){case xe.Ignore:return Ie.Ignore;case xe.Reject:return Ie.Reject;default:throw new Error("Unreachable")}}var dl;(function(s){s.forward="forward",s.publish="publish"})(dl||(dl={}));var _e;(function(s){s.Fanout="fanout",s.Random="random",s.Subscribed="subscribed",s.Outbound="outbound",s.NotEnough="not_enough",s.Opportunistic="opportunistic"})(_e||(_e={}));var Xe;(function(s){s.Dc="disconnected",s.BadScore="bad_score",s.Prune="prune",s.Excess="excess"})(Xe||(Xe={}));var ks;(function(s){s.GraftBackoff="graft_backoff",s.BrokenPromise="broken_promise",s.MessageDeficit="message_deficit",s.IPColocation="IP_colocation"})(ks||(ks={}));var Ts;(function(s){s.LowScore="low_score",s.MaxIhave="max_ihave",s.MaxIasked="max_iasked"})(Ts||(Ts={}));var As;(function(s){s.graylist="graylist",s.publish="publish",s.gossip="gossip",s.mesh="mesh"})(As||(As={}));function pl(s,e,t){return{protocolsEnabled:s.gauge({name:"gossipsub_protocol",help:"Status of enabled protocols",labelNames:["protocol"]}),topicSubscriptionStatus:s.gauge({name:"gossipsub_topic_subscription_status",help:"Status of our subscription to this topic",labelNames:["topicStr"]}),topicPeersCount:s.gauge({name:"gossipsub_topic_peer_count",help:"Number of peers subscribed to each topic",labelNames:["topicStr"]}),meshPeerCounts:s.gauge({name:"gossipsub_mesh_peer_count",help:"Number of peers in our mesh",labelNames:["topicStr"]}),meshPeerInclusionEventsFanout:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_fanout_total",help:"Number of times we include peers in a topic mesh for fanout reasons",labelNames:["topic"]}),meshPeerInclusionEventsRandom:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_random_total",help:"Number of times we include peers in a topic mesh for random reasons",labelNames:["topic"]}),meshPeerInclusionEventsSubscribed:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_subscribed_total",help:"Number of times we include peers in a topic mesh for subscribed reasons",labelNames:["topic"]}),meshPeerInclusionEventsOutbound:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_outbound_total",help:"Number of times we include peers in a topic mesh for outbound reasons",labelNames:["topic"]}),meshPeerInclusionEventsNotEnough:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_not_enough_total",help:"Number of times we include peers in a topic mesh for not_enough reasons",labelNames:["topic"]}),meshPeerInclusionEventsOpportunistic:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_opportunistic_total",help:"Number of times we include peers in a topic mesh for opportunistic reasons",labelNames:["topic"]}),meshPeerInclusionEventsUnknown:s.gauge({name:"gossipsub_mesh_peer_inclusion_events_unknown_total",help:"Number of times we include peers in a topic mesh for unknown reasons",labelNames:["topic"]}),meshPeerChurnEventsDisconnected:s.gauge({name:"gossipsub_peer_churn_events_disconnected_total",help:"Number of times we remove peers in a topic mesh for disconnected reasons",labelNames:["topic"]}),meshPeerChurnEventsBadScore:s.gauge({name:"gossipsub_peer_churn_events_bad_score_total",help:"Number of times we remove peers in a topic mesh for bad_score reasons",labelNames:["topic"]}),meshPeerChurnEventsPrune:s.gauge({name:"gossipsub_peer_churn_events_prune_total",help:"Number of times we remove peers in a topic mesh for prune reasons",labelNames:["topic"]}),meshPeerChurnEventsExcess:s.gauge({name:"gossipsub_peer_churn_events_excess_total",help:"Number of times we remove peers in a topic mesh for excess reasons",labelNames:["topic"]}),meshPeerChurnEventsUnknown:s.gauge({name:"gossipsub_peer_churn_events_unknown_total",help:"Number of times we remove peers in a topic mesh for unknown reasons",labelNames:["topic"]}),peersPerProtocol:s.gauge({name:"gossipsub_peers_per_protocol_count",help:"Peers connected for each topic",labelNames:["protocol"]}),heartbeatDuration:s.histogram({name:"gossipsub_heartbeat_duration_seconds",help:"The time it takes to complete one iteration of the heartbeat",buckets:[.01,.1,1]}),heartbeatSkipped:s.gauge({name:"gossipsub_heartbeat_skipped",help:"Heartbeat run took longer than heartbeat interval so next is skipped"}),acceptedMessagesTotal:s.gauge({name:"gossipsub_accepted_messages_total",help:"Total accepted messages for each topic",labelNames:["topic"]}),ignoredMessagesTotal:s.gauge({name:"gossipsub_ignored_messages_total",help:"Total ignored messages for each topic",labelNames:["topic"]}),rejectedMessagesTotal:s.gauge({name:"gossipsub_rejected_messages_total",help:"Total rejected messages for each topic",labelNames:["topic"]}),unknownValidationResultsTotal:s.gauge({name:"gossipsub_unknown_validation_results_total",help:"Total unknown validation results for each topic",labelNames:["topic"]}),asyncValidationMcacheHit:s.gauge({name:"gossipsub_async_validation_mcache_hit_total",help:"Async validation result reported by the user layer",labelNames:["hit"]}),asyncValidationDelayFromFirstSeenSec:s.histogram({name:"gossipsub_async_validation_delay_from_first_seen",help:"Async validation report delay from first seen in second",buckets:[.01,.03,.1,.3,1,3,10]}),asyncValidationUnknownFirstSeen:s.gauge({name:"gossipsub_async_validation_unknown_first_seen_count_total",help:"Async validation report unknown first seen value for message"}),peerReadStreamError:s.gauge({name:"gossipsub_peer_read_stream_err_count_total",help:"Peer read stream error"}),rpcRecvBytes:s.gauge({name:"gossipsub_rpc_recv_bytes_total",help:"RPC recv"}),rpcRecvCount:s.gauge({name:"gossipsub_rpc_recv_count_total",help:"RPC recv"}),rpcRecvSubscription:s.gauge({name:"gossipsub_rpc_recv_subscription_total",help:"RPC recv"}),rpcRecvMessage:s.gauge({name:"gossipsub_rpc_recv_message_total",help:"RPC recv"}),rpcRecvControl:s.gauge({name:"gossipsub_rpc_recv_control_total",help:"RPC recv"}),rpcRecvIHave:s.gauge({name:"gossipsub_rpc_recv_ihave_total",help:"RPC recv"}),rpcRecvIWant:s.gauge({name:"gossipsub_rpc_recv_iwant_total",help:"RPC recv"}),rpcRecvGraft:s.gauge({name:"gossipsub_rpc_recv_graft_total",help:"RPC recv"}),rpcRecvPrune:s.gauge({name:"gossipsub_rpc_recv_prune_total",help:"RPC recv"}),rpcDataError:s.gauge({name:"gossipsub_rpc_data_err_count_total",help:"RPC data error"}),rpcRecvError:s.gauge({name:"gossipsub_rpc_recv_err_count_total",help:"RPC recv error"}),rpcRecvNotAccepted:s.gauge({name:"gossipsub_rpc_rcv_not_accepted_total",help:"Total count of RPC dropped because acceptFrom() == false"}),rpcSentBytes:s.gauge({name:"gossipsub_rpc_sent_bytes_total",help:"RPC sent"}),rpcSentCount:s.gauge({name:"gossipsub_rpc_sent_count_total",help:"RPC sent"}),rpcSentSubscription:s.gauge({name:"gossipsub_rpc_sent_subscription_total",help:"RPC sent"}),rpcSentMessage:s.gauge({name:"gossipsub_rpc_sent_message_total",help:"RPC sent"}),rpcSentControl:s.gauge({name:"gossipsub_rpc_sent_control_total",help:"RPC sent"}),rpcSentIHave:s.gauge({name:"gossipsub_rpc_sent_ihave_total",help:"RPC sent"}),rpcSentIWant:s.gauge({name:"gossipsub_rpc_sent_iwant_total",help:"RPC sent"}),rpcSentGraft:s.gauge({name:"gossipsub_rpc_sent_graft_total",help:"RPC sent"}),rpcSentPrune:s.gauge({name:"gossipsub_rpc_sent_prune_total",help:"RPC sent"}),msgPublishCount:s.gauge({name:"gossipsub_msg_publish_count_total",help:"Total count of msg published by topic",labelNames:["topic"]}),msgPublishPeersByTopic:s.gauge({name:"gossipsub_msg_publish_peers_total",help:"Total count of peers that we publish a msg to",labelNames:["topic"]}),directPeersPublishedTotal:s.gauge({name:"gossipsub_direct_peers_published_total",help:"Total direct peers that we publish a msg to",labelNames:["topic"]}),floodsubPeersPublishedTotal:s.gauge({name:"gossipsub_floodsub_peers_published_total",help:"Total floodsub peers that we publish a msg to",labelNames:["topic"]}),meshPeersPublishedTotal:s.gauge({name:"gossipsub_mesh_peers_published_total",help:"Total mesh peers that we publish a msg to",labelNames:["topic"]}),fanoutPeersPublishedTotal:s.gauge({name:"gossipsub_fanout_peers_published_total",help:"Total fanout peers that we publish a msg to",labelNames:["topic"]}),msgPublishBytes:s.gauge({name:"gossipsub_msg_publish_bytes_total",help:"Total count of msg publish data.length bytes",labelNames:["topic"]}),msgPublishTime:s.histogram({name:"gossipsub_msg_publish_seconds",help:"Total time in seconds to publish a message",buckets:[.001,.002,.005,.01,.1,.5,1],labelNames:["topic"]}),msgForwardCount:s.gauge({name:"gossipsub_msg_forward_count_total",help:"Total count of msg forwarded by topic",labelNames:["topic"]}),msgForwardPeers:s.gauge({name:"gossipsub_msg_forward_peers_total",help:"Total count of peers that we forward a msg to",labelNames:["topic"]}),msgReceivedPreValidation:s.gauge({name:"gossipsub_msg_received_prevalidation_total",help:"Total count of recv msgs before any validation",labelNames:["topic"]}),msgReceivedError:s.gauge({name:"gossipsub_msg_received_error_total",help:"Total count of recv msgs error",labelNames:["topic"]}),prevalidationInvalidTotal:s.gauge({name:"gossipsub_pre_validation_invalid_total",help:"Total count of invalid messages received",labelNames:["topic"]}),prevalidationValidTotal:s.gauge({name:"gossipsub_pre_validation_valid_total",help:"Total count of valid messages received",labelNames:["topic"]}),prevalidationDuplicateTotal:s.gauge({name:"gossipsub_pre_validation_duplicate_total",help:"Total count of duplicate messages received",labelNames:["topic"]}),prevalidationUnknownTotal:s.gauge({name:"gossipsub_pre_validation_unknown_status_total",help:"Total count of unknown_status messages received",labelNames:["topic"]}),msgReceivedInvalid:s.gauge({name:"gossipsub_msg_received_invalid_total",help:"Tracks specific reason of invalid",labelNames:["error"]}),msgReceivedInvalidByTopic:s.gauge({name:"gossipsub_msg_received_invalid_by_topic_total",help:"Tracks specific invalid message by topic",labelNames:["topic"]}),duplicateMsgDeliveryDelay:s.histogram({name:"gossisub_duplicate_msg_delivery_delay_seconds",help:"Time since the 1st duplicated message validated",labelNames:["topic"],buckets:[.25*t.maxMeshMessageDeliveriesWindowSec,.5*t.maxMeshMessageDeliveriesWindowSec,Number(t.maxMeshMessageDeliveriesWindowSec),2*t.maxMeshMessageDeliveriesWindowSec,4*t.maxMeshMessageDeliveriesWindowSec]}),duplicateMsgLateDelivery:s.gauge({name:"gossisub_duplicate_msg_late_delivery_total",help:"Total count of late duplicate message delivery by topic, which triggers P3 penalty",labelNames:["topic"]}),duplicateMsgIgnored:s.gauge({name:"gossisub_ignored_published_duplicate_msgs_total",help:"Total count of published duplicate message ignored by topic",labelNames:["topic"]}),scoreFnCalls:s.gauge({name:"gossipsub_score_fn_calls_total",help:"Total times score() is called"}),scoreFnRuns:s.gauge({name:"gossipsub_score_fn_runs_total",help:"Total times score() call actually computed computeScore(), no cache"}),scoreCachedDelta:s.histogram({name:"gossipsub_score_cache_delta",help:"Delta of score between cached values that expired",buckets:[10,100,1e3]}),peersByScoreThreshold:s.gauge({name:"gossipsub_peers_by_score_threshold_count",help:"Current count of peers by score threshold",labelNames:["threshold"]}),score:s.avgMinMax({name:"gossipsub_score",help:"Avg min max of gossip scores"}),scoreWeights:s.avgMinMax({name:"gossipsub_score_weights",help:"Separate score weights",labelNames:["topic","p"]}),scorePerMesh:s.avgMinMax({name:"gossipsub_score_per_mesh",help:"Histogram of the scores for each mesh topic",labelNames:["topic"]}),scoringPenalties:s.gauge({name:"gossipsub_scoring_penalties_total",help:"A counter of the kind of penalties being applied to peers",labelNames:["penalty"]}),behaviourPenalty:s.histogram({name:"gossipsub_peer_stat_behaviour_penalty",help:"Current peer stat behaviour_penalty at each scrape",buckets:[.25*t.behaviourPenaltyThreshold,.5*t.behaviourPenaltyThreshold,Number(t.behaviourPenaltyThreshold),2*t.behaviourPenaltyThreshold,4*t.behaviourPenaltyThreshold]}),ihaveRcvIgnored:s.gauge({name:"gossipsub_ihave_rcv_ignored_total",help:"Total received IHAVE messages that we ignore for some reason",labelNames:["reason"]}),ihaveRcvMsgids:s.gauge({name:"gossipsub_ihave_rcv_msgids_total",help:"Total received IHAVE messages by topic",labelNames:["topic"]}),ihaveRcvNotSeenMsgids:s.gauge({name:"gossipsub_ihave_rcv_not_seen_msgids_total",help:"Total messages per topic we do not have, not actual requests",labelNames:["topic"]}),iwantRcvMsgids:s.gauge({name:"gossipsub_iwant_rcv_msgids_total",help:"Total received IWANT messages by topic",labelNames:["topic"]}),iwantRcvDonthaveMsgids:s.gauge({name:"gossipsub_iwant_rcv_dont_have_msgids_total",help:"Total requested messageIDs that we do not have"}),iwantPromiseStarted:s.gauge({name:"gossipsub_iwant_promise_sent_total",help:"Total count of started IWANT promises"}),iwantPromiseResolved:s.gauge({name:"gossipsub_iwant_promise_resolved_total",help:"Total count of resolved IWANT promises"}),iwantPromiseResolvedFromDuplicate:s.gauge({name:"gossipsub_iwant_promise_resolved_from_duplicate_total",help:"Total count of resolved IWANT promises from duplicate messages"}),iwantPromiseResolvedPeers:s.gauge({name:"gossipsub_iwant_promise_resolved_peers",help:"Total count of peers we have asked IWANT promises that are resolved"}),iwantPromiseBroken:s.gauge({name:"gossipsub_iwant_promise_broken",help:"Total count of broken IWANT promises"}),iwantMessagePruned:s.gauge({name:"gossipsub_iwant_message_pruned",help:"Total count of pruned IWANT messages"}),iwantPromiseDeliveryTime:s.histogram({name:"gossipsub_iwant_promise_delivery_seconds",help:"Histogram of delivery time of resolved IWANT promises",buckets:[.5*t.gossipPromiseExpireSec,Number(t.gossipPromiseExpireSec),2*t.gossipPromiseExpireSec,4*t.gossipPromiseExpireSec]}),iwantPromiseUntracked:s.gauge({name:"gossip_iwant_promise_untracked",help:"Total count of untracked IWANT promise"}),connectedPeersBackoffSec:s.histogram({name:"gossipsub_connected_peers_backoff_seconds",help:"Backoff time in seconds",buckets:[1,2,4,10,20,60,120]}),cacheSize:s.gauge({name:"gossipsub_cache_size",help:"Unbounded cache sizes",labelNames:["cache"]}),mcacheSize:s.gauge({name:"gossipsub_mcache_size",help:"Current mcache msg count"}),mcacheNotValidatedCount:s.gauge({name:"gossipsub_mcache_not_validated_count",help:"Current mcache msg count not validated"}),fastMsgIdCacheCollision:s.gauge({name:"gossipsub_fastmsgid_cache_collision_total",help:"Total count of key collisions on fastmsgid cache put"}),newConnectionCount:s.gauge({name:"gossipsub_new_connection_total",help:"Total new connection by status",labelNames:["status"]}),topicStrToLabel:e,toTopic(r){return this.topicStrToLabel.get(r)??r},onJoin(r){this.topicSubscriptionStatus.set({topicStr:r},1),this.meshPeerCounts.set({topicStr:r},0)},onLeave(r){this.topicSubscriptionStatus.set({topicStr:r},0),this.meshPeerCounts.set({topicStr:r},0)},onAddToMesh(r,n,i){let o=this.toTopic(r);switch(n){case _e.Fanout:this.meshPeerInclusionEventsFanout.inc({topic:o},i);break;case _e.Random:this.meshPeerInclusionEventsRandom.inc({topic:o},i);break;case _e.Subscribed:this.meshPeerInclusionEventsSubscribed.inc({topic:o},i);break;case _e.Outbound:this.meshPeerInclusionEventsOutbound.inc({topic:o},i);break;case _e.NotEnough:this.meshPeerInclusionEventsNotEnough.inc({topic:o},i);break;case _e.Opportunistic:this.meshPeerInclusionEventsOpportunistic.inc({topic:o},i);break;default:this.meshPeerInclusionEventsUnknown.inc({topic:o},i);break}},onRemoveFromMesh(r,n,i){let o=this.toTopic(r);switch(n){case Xe.Dc:this.meshPeerChurnEventsDisconnected.inc({topic:o},i);break;case Xe.BadScore:this.meshPeerChurnEventsBadScore.inc({topic:o},i);break;case Xe.Prune:this.meshPeerChurnEventsPrune.inc({topic:o},i);break;case Xe.Excess:this.meshPeerChurnEventsExcess.inc({topic:o},i);break;default:this.meshPeerChurnEventsUnknown.inc({topic:o},i);break}},onReportValidation(r,n,i){if(this.asyncValidationMcacheHit.inc({hit:r!=null?"hit":"miss"}),r!=null){let o=this.toTopic(r.message.topic);switch(n){case xe.Accept:this.acceptedMessagesTotal.inc({topic:o});break;case xe.Ignore:this.ignoredMessagesTotal.inc({topic:o});break;case xe.Reject:this.rejectedMessagesTotal.inc({topic:o});break;default:this.unknownValidationResultsTotal.inc({topic:o});break}}i!=null?this.asyncValidationDelayFromFirstSeenSec.observe((Date.now()-i)/1e3):this.asyncValidationUnknownFirstSeen.inc()},onScorePenalty(r){this.scoringPenalties.inc({penalty:r},1)},onIhaveRcv(r,n,i){let o=this.toTopic(r);this.ihaveRcvMsgids.inc({topic:o},n),this.ihaveRcvNotSeenMsgids.inc({topic:o},i)},onIwantRcv(r,n){for(let[i,o]of r){let a=this.toTopic(i);this.iwantRcvMsgids.inc({topic:a},o)}this.iwantRcvDonthaveMsgids.inc(n)},onForwardMsg(r,n){let i=this.toTopic(r);this.msgForwardCount.inc({topic:i},1),this.msgForwardPeers.inc({topic:i},n)},onPublishMsg(r,n,i,o,a){let c=this.toTopic(r);this.msgPublishCount.inc({topic:c},1),this.msgPublishBytes.inc({topic:c},i*o),this.msgPublishPeersByTopic.inc({topic:c},i),this.directPeersPublishedTotal.inc({topic:c},n.direct),this.floodsubPeersPublishedTotal.inc({topic:c},n.floodsub),this.meshPeersPublishedTotal.inc({topic:c},n.mesh),this.fanoutPeersPublishedTotal.inc({topic:c},n.fanout),this.msgPublishTime.observe({topic:c},a/1e3)},onMsgRecvPreValidation(r){let n=this.toTopic(r);this.msgReceivedPreValidation.inc({topic:n},1)},onMsgRecvError(r){let n=this.toTopic(r);this.msgReceivedError.inc({topic:n},1)},onPrevalidationResult(r,n){let i=this.toTopic(r);switch(n){case we.duplicate:this.prevalidationDuplicateTotal.inc({topic:i});break;case we.invalid:this.prevalidationInvalidTotal.inc({topic:i});break;case we.valid:this.prevalidationValidTotal.inc({topic:i});break;default:this.prevalidationUnknownTotal.inc({topic:i});break}},onMsgRecvInvalid(r,n){let i=this.toTopic(r),o=n.reason===Ie.Error?n.error:n.reason;this.msgReceivedInvalid.inc({error:o},1),this.msgReceivedInvalidByTopic.inc({topic:i},1)},onDuplicateMsgDelivery(r,n,i){let o=this.toTopic(r);this.duplicateMsgDeliveryDelay.observe({topic:o},n/1e3),i&&this.duplicateMsgLateDelivery.inc({topic:o},1)},onPublishDuplicateMsg(r){let n=this.toTopic(r);this.duplicateMsgIgnored.inc({topic:n},1)},onPeerReadStreamError(){this.peerReadStreamError.inc(1)},onRpcRecvError(){this.rpcRecvError.inc(1)},onRpcDataError(){this.rpcDataError.inc(1)},onRpcRecv(r,n){this.rpcRecvBytes.inc(n),this.rpcRecvCount.inc(1),r.subscriptions!=null&&this.rpcRecvSubscription.inc(r.subscriptions.length),r.messages!=null&&this.rpcRecvMessage.inc(r.messages.length),r.control!=null&&(this.rpcRecvControl.inc(1),r.control.ihave!=null&&this.rpcRecvIHave.inc(r.control.ihave.length),r.control.iwant!=null&&this.rpcRecvIWant.inc(r.control.iwant.length),r.control.graft!=null&&this.rpcRecvGraft.inc(r.control.graft.length),r.control.prune!=null&&this.rpcRecvPrune.inc(r.control.prune.length))},onRpcSent(r,n){if(this.rpcSentBytes.inc(n),this.rpcSentCount.inc(1),r.subscriptions!=null&&this.rpcSentSubscription.inc(r.subscriptions.length),r.messages!=null&&this.rpcSentMessage.inc(r.messages.length),r.control!=null){let i=r.control.ihave?.length??0,o=r.control.iwant?.length??0,a=r.control.graft?.length??0,c=r.control.prune?.length??0;i>0&&this.rpcSentIHave.inc(i),o>0&&this.rpcSentIWant.inc(o),a>0&&this.rpcSentGraft.inc(a),c>0&&this.rpcSentPrune.inc(c),(i>0||o>0||a>0||c>0)&&this.rpcSentControl.inc(1)}},registerScores(r,n){let i=0,o=0,a=0,c=0;for(let f of r)f>=n.graylistThreshold&&i++,f>=n.publishThreshold&&o++,f>=n.gossipThreshold&&a++,f>=0&&c++;this.peersByScoreThreshold.set({threshold:As.graylist},i),this.peersByScoreThreshold.set({threshold:As.publish},o),this.peersByScoreThreshold.set({threshold:As.gossip},a),this.peersByScoreThreshold.set({threshold:As.mesh},c),this.score.set(r)},registerScoreWeights(r){for(let[n,i]of r.byTopic)this.scoreWeights.set({topic:n,p:"p1"},i.p1w),this.scoreWeights.set({topic:n,p:"p2"},i.p2w),this.scoreWeights.set({topic:n,p:"p3"},i.p3w),this.scoreWeights.set({topic:n,p:"p3b"},i.p3bw),this.scoreWeights.set({topic:n,p:"p4"},i.p4w);this.scoreWeights.set({p:"p5"},r.p5w),this.scoreWeights.set({p:"p6"},r.p6w),this.scoreWeights.set({p:"p7"},r.p7w)},registerScorePerMesh(r,n){let i=new Map;r.forEach((o,a)=>{let c=this.topicStrToLabel.get(a)??"unknown",f=i.get(c);f==null&&(f=new Set,i.set(c,f)),o.forEach(l=>f?.add(l))});for(let[o,a]of i){let c=[];a.forEach(f=>{c.push(n.get(f)??0)}),this.scorePerMesh.set({topic:o},c)}}}}var $="ERR_INVALID_PEER_SCORE_PARAMS";var dd={topics:{},topicScoreCap:10,appSpecificScore:()=>0,appSpecificWeight:10,IPColocationFactorWeight:-5,IPColocationFactorThreshold:10,IPColocationFactorWhitelist:new Set,behaviourPenaltyWeight:-10,behaviourPenaltyThreshold:0,behaviourPenaltyDecay:.2,decayInterval:1e3,decayToZero:.1,retainScore:3600*1e3},pd={topicWeight:.5,timeInMeshWeight:1,timeInMeshQuantum:1,timeInMeshCap:3600,firstMessageDeliveriesWeight:1,firstMessageDeliveriesDecay:.5,firstMessageDeliveriesCap:2e3,meshMessageDeliveriesWeight:-1,meshMessageDeliveriesDecay:.5,meshMessageDeliveriesCap:100,meshMessageDeliveriesThreshold:20,meshMessageDeliveriesWindow:10,meshMessageDeliveriesActivation:5e3,meshFailurePenaltyWeight:-1,meshFailurePenaltyDecay:.5,invalidMessageDeliveriesWeight:-1,invalidMessageDeliveriesDecay:.3};function gl(s={}){return{...dd,...s,topics:s.topics!=null?Object.entries(s.topics).reduce((e,[t,r])=>(e[t]=gd(r),e),{}):{}}}function gd(s={}){return{...pd,...s}}function ml(s){for(let[e,t]of Object.entries(s.topics))try{md(t)}catch(r){throw new K(`invalid score parameters for topic ${e}: ${r.message}`,$)}if(s.topicScoreCap<0)throw new K("invalid topic score cap; must be positive (or 0 for no cap)",$);if(s.appSpecificScore===null||s.appSpecificScore===void 0)throw new K("missing application specific score function",$);if(s.IPColocationFactorWeight>0)throw new K("invalid IPColocationFactorWeight; must be negative (or 0 to disable)",$);if(s.IPColocationFactorWeight!==0&&s.IPColocationFactorThreshold<1)throw new K("invalid IPColocationFactorThreshold; must be at least 1",$);if(s.behaviourPenaltyWeight>0)throw new K("invalid BehaviourPenaltyWeight; must be negative (or 0 to disable)",$);if(s.behaviourPenaltyWeight!==0&&(s.behaviourPenaltyDecay<=0||s.behaviourPenaltyDecay>=1))throw new K("invalid BehaviourPenaltyDecay; must be between 0 and 1",$);if(s.decayInterval<1e3)throw new K("invalid DecayInterval; must be at least 1s",$);if(s.decayToZero<=0||s.decayToZero>=1)throw new K("invalid DecayToZero; must be between 0 and 1",$)}function md(s){if(s.topicWeight<0)throw new K("invalid topic weight; must be >= 0",$);if(s.timeInMeshQuantum===0)throw new K("invalid TimeInMeshQuantum; must be non zero",$);if(s.timeInMeshWeight<0)throw new K("invalid TimeInMeshWeight; must be positive (or 0 to disable)",$);if(s.timeInMeshWeight!==0&&s.timeInMeshQuantum<=0)throw new K("invalid TimeInMeshQuantum; must be positive",$);if(s.timeInMeshWeight!==0&&s.timeInMeshCap<=0)throw new K("invalid TimeInMeshCap; must be positive",$);if(s.firstMessageDeliveriesWeight<0)throw new K("invallid FirstMessageDeliveriesWeight; must be positive (or 0 to disable)",$);if(s.firstMessageDeliveriesWeight!==0&&(s.firstMessageDeliveriesDecay<=0||s.firstMessageDeliveriesDecay>=1))throw new K("invalid FirstMessageDeliveriesDecay; must be between 0 and 1",$);if(s.firstMessageDeliveriesWeight!==0&&s.firstMessageDeliveriesCap<=0)throw new K("invalid FirstMessageDeliveriesCap; must be positive",$);if(s.meshMessageDeliveriesWeight>0)throw new K("invalid MeshMessageDeliveriesWeight; must be negative (or 0 to disable)",$);if(s.meshMessageDeliveriesWeight!==0&&(s.meshMessageDeliveriesDecay<=0||s.meshMessageDeliveriesDecay>=1))throw new K("invalid MeshMessageDeliveriesDecay; must be between 0 and 1",$);if(s.meshMessageDeliveriesWeight!==0&&s.meshMessageDeliveriesCap<=0)throw new K("invalid MeshMessageDeliveriesCap; must be positive",$);if(s.meshMessageDeliveriesWeight!==0&&s.meshMessageDeliveriesThreshold<=0)throw new K("invalid MeshMessageDeliveriesThreshold; must be positive",$);if(s.meshMessageDeliveriesWindow<0)throw new K("invalid MeshMessageDeliveriesWindow; must be non-negative",$);if(s.meshMessageDeliveriesWeight!==0&&s.meshMessageDeliveriesActivation<1e3)throw new K("invalid MeshMessageDeliveriesActivation; must be at least 1s",$);if(s.meshFailurePenaltyWeight>0)throw new K("invalid MeshFailurePenaltyWeight; must be negative (or 0 to disable)",$);if(s.meshFailurePenaltyWeight!==0&&(s.meshFailurePenaltyDecay<=0||s.meshFailurePenaltyDecay>=1))throw new K("invalid MeshFailurePenaltyDecay; must be between 0 and 1",$);if(s.invalidMessageDeliveriesWeight>0)throw new K("invalid InvalidMessageDeliveriesWeight; must be negative (or 0 to disable)",$);if(s.invalidMessageDeliveriesDecay<=0||s.invalidMessageDeliveriesDecay>=1)throw new K("invalid InvalidMessageDeliveriesDecay; must be between 0 and 1",$)}var bd={gossipThreshold:-10,publishThreshold:-50,graylistThreshold:-80,acceptPXThreshold:10,opportunisticGraftThreshold:20};function bl(s={}){return{...bd,...s}}function Fn(s,e,t=()=>!0){let r=new Set;if(e<=0)return r;for(let n of s){if(r.size>=e)break;t(n)&&(r.add(n),s.delete(n))}return r}function yl(s,e){return Fn(s,e,()=>!0)}var Un=class extends Map{getDefault;constructor(e){super(),this.getDefault=e}getOrDefault(e){let t=super.get(e);return t===void 0&&(t=this.getDefault(),this.set(e,t)),t}};function wl(s,e,t,r){let n=0;Object.entries(e.topics).forEach(([o,a])=>{let c=t.topics[o];if(c===void 0)return;let f=0;if(a.inMesh){let p=a.meshTime/c.timeInMeshQuantum;p>c.timeInMeshCap&&(p=c.timeInMeshCap),f+=p*c.timeInMeshWeight}let l=a.firstMessageDeliveries;if(l>c.firstMessageDeliveriesCap&&(l=c.firstMessageDeliveriesCap),f+=l*c.firstMessageDeliveriesWeight,a.meshMessageDeliveriesActive&&a.meshMessageDeliveries<c.meshMessageDeliveriesThreshold){let p=c.meshMessageDeliveriesThreshold-a.meshMessageDeliveries,g=p*p;f+=g*c.meshMessageDeliveriesWeight}let u=a.meshFailurePenalty;f+=u*c.meshFailurePenaltyWeight;let h=a.invalidMessageDeliveries*a.invalidMessageDeliveries;f+=h*c.invalidMessageDeliveriesWeight,n+=f*c.topicWeight}),t.topicScoreCap>0&&n>t.topicScoreCap&&(n=t.topicScoreCap);let i=t.appSpecificScore(s);if(n+=i*t.appSpecificWeight,e.knownIPs.forEach(o=>{if(t.IPColocationFactorWhitelist.has(o))return;let a=r.get(o),c=a!=null?a.size:0;if(c>t.IPColocationFactorThreshold){let f=c-t.IPColocationFactorThreshold,l=f*f;n+=l*t.IPColocationFactorWeight}}),e.behaviourPenalty>t.behaviourPenaltyThreshold){let o=e.behaviourPenalty-t.behaviourPenaltyThreshold,a=o*o;n+=a*t.behaviourPenaltyWeight}return n}var El=Ho(xl(),1);var Ae;(function(s){s[s.unknown=0]="unknown",s[s.valid=1]="valid",s[s.invalid=2]="invalid",s[s.ignored=3]="ignored"})(Ae||(Ae={}));var Vn=class{records;queue;constructor(){this.records=new Map,this.queue=new El.default}getRecord(e){return this.records.get(e)}ensureRecord(e){let t=this.records.get(e);if(t!=null)return t;t={status:Ae.unknown,firstSeenTsMs:Date.now(),validated:0,peers:new Set},this.records.set(e,t);let r={msgId:e,expire:Date.now()+12e4};return this.queue.push(r),t}gc(){let e=Date.now(),t=this.queue.peekFront();for(;t!=null&&t.expire<e;)this.records.delete(t.msgId),this.queue.shift(),t=this.queue.peekFront()}clear(){this.records.clear(),this.queue.clear()}};var On=class{params;metrics;peerStats=new Map;peerIPs=new Un(()=>new Set);scoreCache=new Map;deliveryRecords=new Vn;_backgroundInterval;scoreCacheValidityMs;computeScore;log;constructor(e,t,r,n){this.params=e,this.metrics=t,ml(e),this.scoreCacheValidityMs=n.scoreCacheValidityMs,this.computeScore=n.computeScore??wl,this.log=r.forComponent("libp2p:gossipsub:score")}get size(){return this.peerStats.size}start(){if(this._backgroundInterval!=null){this.log("Peer score already running");return}this._backgroundInterval=setInterval(()=>{this.background()},this.params.decayInterval),this.log("started")}stop(){if(this._backgroundInterval==null){this.log("Peer score already stopped");return}clearInterval(this._backgroundInterval),delete this._backgroundInterval,this.peerIPs.clear(),this.peerStats.clear(),this.deliveryRecords.clear(),this.log("stopped")}background(){this.refreshScores(),this.deliveryRecords.gc()}dumpPeerScoreStats(){return Object.fromEntries(Array.from(this.peerStats.entries()).map(([e,t])=>[e,t]))}messageFirstSeenTimestampMs(e){let t=this.deliveryRecords.getRecord(e);return t!=null?t.firstSeenTsMs:null}refreshScores(){let e=Date.now(),t=this.params.decayToZero;this.peerStats.forEach((r,n)=>{if(!r.connected){e>r.expire&&(this.removeIPsForPeer(n,r.knownIPs),this.peerStats.delete(n),this.scoreCache.delete(n));return}Object.entries(r.topics).forEach(([i,o])=>{let a=this.params.topics[i];a!==void 0&&(o.firstMessageDeliveries*=a.firstMessageDeliveriesDecay,o.firstMessageDeliveries<t&&(o.firstMessageDeliveries=0),o.meshMessageDeliveries*=a.meshMessageDeliveriesDecay,o.meshMessageDeliveries<t&&(o.meshMessageDeliveries=0),o.meshFailurePenalty*=a.meshFailurePenaltyDecay,o.meshFailurePenalty<t&&(o.meshFailurePenalty=0),o.invalidMessageDeliveries*=a.invalidMessageDeliveriesDecay,o.invalidMessageDeliveries<t&&(o.invalidMessageDeliveries=0),o.inMesh&&(o.meshTime=e-o.graftTime,o.meshTime>a.meshMessageDeliveriesActivation&&(o.meshMessageDeliveriesActive=!0)))}),r.behaviourPenalty*=this.params.behaviourPenaltyDecay,r.behaviourPenalty<t&&(r.behaviourPenalty=0)})}score(e){this.metrics?.scoreFnCalls.inc();let t=this.peerStats.get(e);if(t==null)return 0;let r=Date.now(),n=this.scoreCache.get(e);if(n!=null&&n.cacheUntil>r)return n.score;this.metrics?.scoreFnRuns.inc();let i=this.computeScore(e,t,this.params,this.peerIPs),o=r+this.scoreCacheValidityMs;return n!=null?(this.metrics?.scoreCachedDelta.observe(Math.abs(i-n.score)),n.score=i,n.cacheUntil=o):this.scoreCache.set(e,{score:i,cacheUntil:o}),i}addPenalty(e,t,r){let n=this.peerStats.get(e);n!=null&&(n.behaviourPenalty+=t,this.metrics?.onScorePenalty(r))}addPeer(e){let t={connected:!0,expire:0,topics:{},knownIPs:new Set,behaviourPenalty:0};this.peerStats.set(e,t)}addIP(e,t){let r=this.peerStats.get(e);r?.knownIPs.add(t),this.peerIPs.getOrDefault(t).add(e)}removeIP(e,t){let r=this.peerStats.get(e);r?.knownIPs.delete(t);let n=this.peerIPs.get(t);n!=null&&(n.delete(e),n.size===0&&this.peerIPs.delete(t))}removePeer(e){let t=this.peerStats.get(e);if(t!=null){if(this.score(e)>0){this.removeIPsForPeer(e,t.knownIPs),this.peerStats.delete(e);return}Object.entries(t.topics).forEach(([r,n])=>{n.firstMessageDeliveries=0;let i=this.params.topics[r].meshMessageDeliveriesThreshold;if(n.inMesh&&n.meshMessageDeliveriesActive&&n.meshMessageDeliveries<i){let o=i-n.meshMessageDeliveries;n.meshFailurePenalty+=o*o}n.inMesh=!1,n.meshMessageDeliveriesActive=!1}),t.connected=!1,t.expire=Date.now()+this.params.retainScore}}graft(e,t){let r=this.peerStats.get(e);if(r!=null){let n=this.getPtopicStats(r,t);n!=null&&(n.inMesh=!0,n.graftTime=Date.now(),n.meshTime=0,n.meshMessageDeliveriesActive=!1)}}prune(e,t){let r=this.peerStats.get(e);if(r!=null){let n=this.getPtopicStats(r,t);if(n!=null){let i=this.params.topics[t].meshMessageDeliveriesThreshold;if(n.meshMessageDeliveriesActive&&n.meshMessageDeliveries<i){let o=i-n.meshMessageDeliveries;n.meshFailurePenalty+=o*o}n.meshMessageDeliveriesActive=!1,n.inMesh=!1}}}validateMessage(e){this.deliveryRecords.ensureRecord(e)}deliverMessage(e,t,r){this.markFirstMessageDelivery(e,r);let n=this.deliveryRecords.ensureRecord(t),i=Date.now();if(n.status!==Ae.unknown){this.log("unexpected delivery: message from %s was first seen %s ago and has delivery status %s",e,i-n.firstSeenTsMs,Ae[n.status]);return}n.status=Ae.valid,n.validated=i,n.peers.forEach(o=>{o!==e.toString()&&this.markDuplicateMessageDelivery(o,r)})}rejectInvalidMessage(e,t){this.markInvalidMessageDelivery(e,t)}rejectMessage(e,t,r,n){switch(n){case Ie.Error:this.markInvalidMessageDelivery(e,r);return;case Ie.Blacklisted:return}let i=this.deliveryRecords.ensureRecord(t);if(i.status!==Ae.unknown){this.log("unexpected rejection: message from %s was first seen %s ago and has delivery status %d",e,Date.now()-i.firstSeenTsMs,Ae[i.status]);return}if(n===Ie.Ignore){i.status=Ae.ignored,i.peers.clear();return}i.status=Ae.invalid,this.markInvalidMessageDelivery(e,r),i.peers.forEach(o=>{this.markInvalidMessageDelivery(o,r)}),i.peers.clear()}duplicateMessage(e,t,r){let n=this.deliveryRecords.ensureRecord(t);if(!n.peers.has(e))switch(n.status){case Ae.unknown:n.peers.add(e);break;case Ae.valid:n.peers.add(e),this.markDuplicateMessageDelivery(e,r,n.validated);break;case Ae.invalid:this.markInvalidMessageDelivery(e,r);break;case Ae.ignored:break}}markInvalidMessageDelivery(e,t){let r=this.peerStats.get(e);if(r!=null){let n=this.getPtopicStats(r,t);n!=null&&(n.invalidMessageDeliveries+=1)}}markFirstMessageDelivery(e,t){let r=this.peerStats.get(e);if(r!=null){let n=this.getPtopicStats(r,t);if(n!=null){let i=this.params.topics[t].firstMessageDeliveriesCap;n.firstMessageDeliveries=Math.min(i,n.firstMessageDeliveries+1),n.inMesh&&(i=this.params.topics[t].meshMessageDeliveriesCap,n.meshMessageDeliveries=Math.min(i,n.meshMessageDeliveries+1))}}}markDuplicateMessageDelivery(e,t,r){let n=this.peerStats.get(e);if(n!=null){let i=r!==void 0?Date.now():0,o=this.getPtopicStats(n,t);if(o!=null&&o.inMesh){let a=this.params.topics[t];if(r!==void 0){let f=i-r,l=f>a.meshMessageDeliveriesWindow;if(this.metrics?.onDuplicateMsgDelivery(t,f,l),l)return}let c=a.meshMessageDeliveriesCap;o.meshMessageDeliveries=Math.min(c,o.meshMessageDeliveries+1)}}}removeIPsForPeer(e,t){for(let r of t){let n=this.peerIPs.get(r);n!=null&&(n.delete(e),n.size===0&&this.peerIPs.delete(r))}}getPtopicStats(e,t){let r=e.topics[t];return r!==void 0?r:this.params.topics[t]!==void 0?(r={inMesh:!1,graftTime:0,meshTime:0,firstMessageDeliveries:0,meshMessageDeliveries:0,meshMessageDeliveriesActive:!1,meshFailurePenalty:0,invalidMessageDeliveries:0},e.topics[t]=r,r):null}};function yd(s,e,t,r,n){let i=0,o=new Map;if(Object.entries(e.topics).forEach(([h,p])=>{let g=n.get(h)??"unknown",d=t.topics[h];if(d===void 0)return;let m=o.get(g);m==null&&(m={p1w:0,p2w:0,p3w:0,p3bw:0,p4w:0},o.set(g,m));let b=0,v=0,E=0,A=0,w=0;if(p.inMesh){let M=Math.max(p.meshTime/d.timeInMeshQuantum,d.timeInMeshCap);b+=M*d.timeInMeshWeight}let S=p.firstMessageDeliveries;if(S>d.firstMessageDeliveriesCap&&(S=d.firstMessageDeliveriesCap),v+=S*d.firstMessageDeliveriesWeight,p.meshMessageDeliveriesActive&&p.meshMessageDeliveries<d.meshMessageDeliveriesThreshold){let M=d.meshMessageDeliveriesThreshold-p.meshMessageDeliveries,D=M*M;E+=D*d.meshMessageDeliveriesWeight}let B=p.meshFailurePenalty;A+=B*d.meshFailurePenaltyWeight;let I=p.invalidMessageDeliveries*p.invalidMessageDeliveries;w+=I*d.invalidMessageDeliveriesWeight,i+=(b+v+E+A+w)*d.topicWeight,m.p1w+=b,m.p2w+=v,m.p3w+=E,m.p3bw+=A,m.p4w+=w}),t.topicScoreCap>0&&i>t.topicScoreCap){i=t.topicScoreCap;let h=t.topicScoreCap/i;for(let p of o.values())p.p1w*=h,p.p2w*=h,p.p3w*=h,p.p3bw*=h,p.p4w*=h}let a=0,c=0,f=0,l=t.appSpecificScore(s);a+=l*t.appSpecificWeight,e.knownIPs.forEach(h=>{if(t.IPColocationFactorWhitelist.has(h))return;let p=r.get(h),g=p!=null?p.size:0;if(g>t.IPColocationFactorThreshold){let d=g-t.IPColocationFactorThreshold,m=d*d;c+=m*t.IPColocationFactorWeight}});let u=e.behaviourPenalty*e.behaviourPenalty;return f+=u*t.behaviourPenaltyWeight,i+=a+c+f,{byTopic:o,p5w:a,p6w:c,p7w:f,score:i}}function Sl(s,e,t,r,n){let i={byTopic:new Map,p5w:[],p6w:[],p7w:[],score:[]};for(let o of s){let a=e.get(o);if(a!=null){let c=yd(o,a,t,r,n);for(let[f,l]of c.byTopic){let u=i.byTopic.get(f);u==null&&(u={p1w:[],p2w:[],p3w:[],p3bw:[],p4w:[]},i.byTopic.set(f,u)),u.p1w.push(l.p1w),u.p2w.push(l.p2w),u.p3w.push(l.p3w),u.p3bw.push(l.p3bw),u.p4w.push(l.p4w)}i.p5w.push(c.p5w),i.p6w.push(c.p6w),i.p7w.push(c.p7w),i.score.push(c.score)}else i.p5w.push(0),i.p6w.push(0),i.p7w.push(0),i.score.push(0)}return i}var Hn=class{rawStream;pushable;closeController;maxBufferSize;constructor(e,t,r){this.rawStream=e,this.pushable=vt(),this.closeController=new AbortController,this.maxBufferSize=r.maxBufferSize??1/0,this.closeController.signal.addEventListener("abort",()=>{e.close().catch(n=>{e.abort(n)})}),_s(this.pushable,this.rawStream).catch(t)}get protocol(){return this.rawStream.protocol}push(e){if(this.pushable.readableLength>this.maxBufferSize)throw Error(`OutboundStream buffer full, size > ${this.maxBufferSize}`);this.pushable.push(Bs.single(e))}pushPrefixed(e){if(this.pushable.readableLength>this.maxBufferSize)throw Error(`OutboundStream buffer full, size > ${this.maxBufferSize}`);this.pushable.push(e)}async close(){this.closeController.abort(),await this.pushable.return()}},Kn=class{source;rawStream;closeController;constructor(e,t={}){this.rawStream=e,this.closeController=new AbortController,this.closeController.signal.addEventListener("abort",()=>{e.close().catch(r=>{e.abort(r)})}),this.source=_s(this.rawStream,r=>or(r,t))}async close(){this.closeController.abort()}};var Gn=class{gossipsubIWantFollowupMs;msgIdToStrFn;metrics;promises=new Map;requestMsByMsg=new Map;requestMsByMsgExpire;constructor(e,t,r){this.gossipsubIWantFollowupMs=e,this.msgIdToStrFn=t,this.metrics=r,this.requestMsByMsgExpire=10*e}get size(){return this.promises.size}get requestMsByMsgSize(){return this.requestMsByMsg.size}addPromise(e,t){let r=Math.floor(Math.random()*t.length),n=t[r],i=this.msgIdToStrFn(n),o=this.promises.get(i);o==null&&(o=new Map,this.promises.set(i,o));let a=Date.now();o.has(e)||(o.set(e,a+this.gossipsubIWantFollowupMs),this.metrics!=null&&(this.metrics.iwantPromiseStarted.inc(1),this.requestMsByMsg.has(i)||this.requestMsByMsg.set(i,a)))}getBrokenPromises(){let e=Date.now(),t=new Map,r=0;return this.promises.forEach((n,i)=>{n.forEach((o,a)=>{o<e&&(t.set(a,(t.get(a)??0)+1),n.delete(a),r++)}),n.size===0&&this.promises.delete(i)}),this.metrics?.iwantPromiseBroken.inc(r),t}deliverMessage(e,t=!1){this.trackMessage(e);let r=this.promises.get(e);r!=null&&(this.promises.delete(e),this.metrics!=null&&(this.metrics.iwantPromiseResolved.inc(1),t&&this.metrics.iwantPromiseResolvedFromDuplicate.inc(1),this.metrics.iwantPromiseResolvedPeers.inc(r.size)))}rejectMessage(e,t){switch(this.trackMessage(e),t){case Ie.Error:return;default:break}this.promises.delete(e)}clear(){this.promises.clear()}prune(){let e=Date.now()-this.requestMsByMsgExpire,t=0;for(let[r,n]of this.requestMsByMsg.entries())if(n<e)this.requestMsByMsg.delete(r),t++;else break;this.metrics?.iwantMessagePruned.inc(t)}trackMessage(e){if(this.metrics!=null){let t=this.requestMsByMsg.get(e);t!==void 0&&(this.metrics.iwantPromiseDeliveryTime.observe((Date.now()-t)/1e3),this.requestMsByMsg.delete(e))}}};var Bl=W("libp2p-pubsub:");async function Il(s,e,t,r){switch(s.type){case Vt.Signing:{let n={from:s.author.toMultihash().bytes,data:r,seqno:Jt(8),topic:e,signature:void 0,key:void 0},i=et([Bl,xt.Message.encode(n)]);n.signature=await s.privateKey.sign(i),n.key=s.key;let o={type:"signed",from:s.author,data:t,sequenceNumber:BigInt(`0x${z(n.seqno,"base16")}`),topic:e,signature:n.signature,key:sr(n.key)};return{raw:n,msg:o}}case Vt.Anonymous:return{raw:{from:void 0,data:r,seqno:void 0,topic:e,signature:void 0,key:void 0},msg:{type:"unsigned",data:t,topic:e}};default:throw new Error("Unreachable")}}async function _l(s,e){switch(s){case es:return e.signature!=null?{valid:!1,error:ye.SignaturePresent}:e.seqno!=null?{valid:!1,error:ye.SeqnoPresent}:e.key!=null?{valid:!1,error:ye.FromPresent}:{valid:!0,message:{type:"unsigned",topic:e.topic,data:e.data??new Uint8Array(0)}};case Ht:{if(e.seqno==null)return{valid:!1,error:ye.InvalidSeqno};if(e.seqno.length!==8)return{valid:!1,error:ye.InvalidSeqno};if(e.signature==null)return{valid:!1,error:ye.InvalidSignature};if(e.from==null)return{valid:!1,error:ye.InvalidPeerId};let t;try{t=nr(ze(e.from))}catch{return{valid:!1,error:ye.InvalidPeerId}}let r;if(e.key!=null){if(r=sr(e.key),t.publicKey!==void 0&&!r.equals(t.publicKey))return{valid:!1,error:ye.InvalidPeerId}}else{if(t.publicKey==null)return{valid:!1,error:ye.InvalidPeerId};r=t.publicKey}let n={from:e.from,data:e.data,seqno:e.seqno,topic:e.topic,signature:void 0,key:void 0},i=et([Bl,xt.Message.encode(n)]);return await r.verify(i,e.signature)?{valid:!0,message:{type:"signed",from:t,data:e.data??new Uint8Array(0),sequenceNumber:BigInt(`0x${z(e.seqno,"base16")}`),topic:e.topic,signature:e.signature,key:e.key!=null?sr(e.key):r}}:{valid:!1,error:ye.InvalidSignature}}default:throw new Error("Unreachable")}}function it(s=[],e){return{subscriptions:[],messages:s,control:e!==void 0?{graft:e.graft??[],prune:e.prune??[],ihave:e.ihave??[],iwant:e.iwant??[]}:void 0}}function _o(s){return s.control===void 0&&(s.control={graft:[],prune:[],ihave:[],iwant:[]}),s}function ot(s){if(s.length<=1)return s;let e=()=>Math.floor(Math.random()*Math.floor(s.length));for(let t=0;t<s.length;t++){let r=e(),n=s[t];s[t]=s[r],s[r]=n}return s}function Al(s){return z(s,"base64")}function kl(s,e,t){switch(s){case Ht:return{type:Vt.Signing,author:e,key:Tt(t.publicKey),privateKey:t};case es:return{type:Vt.Anonymous};default:throw new Error(`Unknown signature policy "${s}"`)}}var Tl=(s,e)=>{let t=W(e.toString(16).padStart(16,"0"),"base16"),r=Tt(s),n=new Uint8Array(r.byteLength+t.length);return n.set(r,0),n.set(t,r.byteLength),n};function Pl(s){if(s.type!=="signed")throw new Error("expected signed message type");if(s.sequenceNumber==null)throw Error("missing seqno field");return Tl(s.from.publicKey??s.key,s.sequenceNumber)}async function Ml(s){return Pt.encode(s.data)}var zn=class{index=0;input="";new(e){return this.index=0,this.input=e,this}readAtomically(e){let t=this.index,r=e();return r===void 0&&(this.index=t),r}parseWith(e){let t=e();if(this.index===this.input.length)return t}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(e){return this.readAtomically(()=>{let t=this.readChar();if(t===e)return t})}readSeparator(e,t,r){return this.readAtomically(()=>{if(!(t>0&&this.readGivenChar(e)===void 0))return r()})}readNumber(e,t,r,n){return this.readAtomically(()=>{let i=0,o=0,a=this.peekChar();if(a===void 0)return;let c=a==="0",f=2**(8*n)-1;for(;;){let l=this.readAtomically(()=>{let u=this.readChar();if(u===void 0)return;let h=Number.parseInt(u,e);if(!Number.isNaN(h))return h});if(l===void 0)break;if(i*=e,i+=l,i>f||(o+=1,t!==void 0&&o>t))return}if(o!==0)return!r&&c&&o>1?void 0:i})}readIPv4Addr(){return this.readAtomically(()=>{let e=new Uint8Array(4);for(let t=0;t<e.length;t++){let r=this.readSeparator(".",t,()=>this.readNumber(10,3,!1,1));if(r===void 0)return;e[t]=r}return e})}readIPv6Addr(){let e=t=>{for(let r=0;r<t.length/2;r++){let n=r*2;if(r<t.length-3){let o=this.readSeparator(":",r,()=>this.readIPv4Addr());if(o!==void 0)return t[n]=o[0],t[n+1]=o[1],t[n+2]=o[2],t[n+3]=o[3],[n+4,!0]}let i=this.readSeparator(":",r,()=>this.readNumber(16,4,!0,2));if(i===void 0)return[n,!1];t[n]=i>>8,t[n+1]=i&255}return[t.length,!1]};return this.readAtomically(()=>{let t=new Uint8Array(16),[r,n]=e(t);if(r===16)return t;if(n||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;let i=new Uint8Array(14),o=16-(r+2),[a]=e(i.subarray(0,o));return t.set(i.subarray(0,a),16-a),t})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}};var wd=45;var Cl=new zn;function qn(s){if(s.includes("%")&&(s=s.split("%")[0]),!(s.length>wd))return Cl.new(s).parseWith(()=>Cl.readIPAddr())}var ov=parseInt("0xFFFF",16),av=new Uint8Array([0,0,0,0,0,0,0,0,0,0,255,255]);function Ao(s){return!!qn(s)}var Nl=function(s,e=0,t){e=~~e,t=t??s.length-e;let r=new DataView(s.buffer);if(t===4){let n=[];for(let i=0;i<t;i++)n.push(s[e+i]);return n.join(".")}if(t===16){let n=[];for(let i=0;i<t;i+=2)n.push(r.getUint16(e+i).toString(16));return n.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""};var ko={},To={},Ad=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,-1,"ip6zone"],[43,8,"ipcidr"],[53,-1,"dns",!0],[54,-1,"dns4",!0],[55,-1,"dns6",!0],[56,-1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,-1,"unix",!1,!0],[421,-1,"ipfs"],[421,-1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,-1,"garlic64"],[448,0,"tls"],[449,-1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,-1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[481,-1,"http-path"],[777,-1,"memory"]];Ad.forEach(s=>{let e=kd(...s);To[e.code]=e,ko[e.name]=e});function kd(s,e,t,r,n){return{code:s,size:e,name:t,resolvable:!!r,path:!!n}}function ar(s){if(typeof s=="number"){if(To[s]!=null)return To[s];throw new Error(`no protocol with code: ${s}`)}else if(typeof s=="string"){if(ko[s]!=null)return ko[s];throw new Error(`no protocol with name: ${s}`)}throw new Error(`invalid protocol id type: ${typeof s}`)}var $v=ar("ip4"),jv=ar("ip6"),Zv=ar("ipcidr");function Ul(s,e){switch(ar(s).code){case 4:case 41:return Td(e);case 42:return Mo(e);case 6:case 273:case 33:case 132:return Fl(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return Mo(e);case 421:return Md(e);case 444:return Ll(e);case 445:return Ll(e);case 466:return Pd(e);case 481:return globalThis.encodeURIComponent(Mo(e));default:return z(e,"base16")}}var Po=Object.values(Os).map(s=>s.decoder),Jv=function(){let s=Po[0].or(Po[1]);return Po.slice(2).forEach(e=>s=s.or(e)),s}();function Td(s){let e=Nl(s,0,s.length);if(e==null)throw new Error("ipBuff is required");if(!Ao(e))throw new Error("invalid ip address");return e}function Fl(s){return new DataView(s.buffer).getUint16(s.byteOffset)}function Mo(s){let e=gs(s);if(s=s.slice(Se(e)),s.length!==e)throw new Error("inconsistent lengths");return z(s)}function Pd(s){let e=gs(s),t=s.slice(Se(e));if(t.length!==e)throw new Error("inconsistent lengths");return"u"+z(t,"base64url")}function Md(s){let e=gs(s),t=s.slice(Se(e));if(t.length!==e)throw new Error("inconsistent lengths");return z(t,"base58btc")}function Ll(s){let e=s.slice(0,s.length-2),t=s.slice(s.length-2),r=z(e,"base32"),n=Fl(t);return`${r}:${n}`}var Wn;(function(s){s[s.ip4=4]="ip4",s[s.ip6=41]="ip6"})(Wn||(Wn={}));function Vl(s){for(let e of s.tuples())switch(e[0]){case Wn.ip4:case Wn.ip6:return Ul(e[0],e[1]);default:break}return null}var Ps=class{entries=new Map;validityMs;constructor(e){this.validityMs=e.validityMs}get size(){return this.entries.size}put(e,t){return this.entries.has(e)?!0:(this.entries.set(e,{value:t,validUntilMs:Date.now()+this.validityMs}),!1)}prune(){let e=Date.now();for(let[t,r]of this.entries.entries())if(r.validUntilMs<e)this.entries.delete(t);else break}has(e){return this.entries.has(e)}get(e){let t=this.entries.get(e);return t!=null&&t.validUntilMs>=Date.now()?t.value:void 0}clear(){this.entries.clear()}};var rp=Nn,Ue;(function(s){s[s.started=0]="started",s[s.stopped=1]="stopped"})(Ue||(Ue={}));var $n=class extends hr{globalSignaturePolicy;multicodecs=[Nn,Bo];publishConfig;dataTransform;peers=new Set;streamsInbound=new Map;streamsOutbound=new Map;outboundInflightQueue=vt({objectMode:!0});direct=new Set;floodsubPeers=new Set;seenCache;acceptFromWhitelist=new Map;topics=new Map;subscriptions=new Set;mesh=new Map;fanout=new Map;fanoutLastpub=new Map;gossip=new Map;control=new Map;peerhave=new Map;iasked=new Map;backoff=new Map;outbound=new Map;msgIdFn;fastMsgIdFn;msgIdToStrFn;fastMsgIdCache;publishedMessageIds;mcache;score;topicValidators=new Map;log;heartbeatTicks=0;gossipTracer;components;directPeerInitial=null;static multicodec=Nn;opts;decodeRpcLimits;metrics;status={code:Ue.stopped};maxInboundStreams;maxOutboundStreams;runOnLimitedConnection;allowedTopics;heartbeatTimer=null;constructor(e,t={}){super();let r={fallbackToFloodsub:!0,floodPublish:!0,batchPublish:!1,tagMeshPeers:!0,doPX:!1,directPeers:[],D:6,Dlo:4,Dhi:12,Dscore:4,Dout:2,Dlazy:6,heartbeatInterval:1e3,fanoutTTL:6e4,mcacheLength:5,mcacheGossip:3,seenTTL:12e4,gossipsubIWantFollowupMs:3e3,prunePeers:16,pruneBackoff:6e4,unsubcribeBackoff:1e4,graftFloodThreshold:1e4,opportunisticGraftPeers:2,opportunisticGraftTicks:60,directConnectTicks:300,gossipFactor:.25,...t,scoreParams:gl(t.scoreParams),scoreThresholds:bl(t.scoreThresholds)};if(this.components=e,this.decodeRpcLimits=r.decodeRpcLimits??hl,this.globalSignaturePolicy=r.globalSignaturePolicy??Ht,r.fallbackToFloodsub&&this.multicodecs.push(So),this.log=e.logger.forComponent(r.debugName??"libp2p:gossipsub"),this.opts=r,this.direct=new Set(r.directPeers.map(n=>n.id.toString())),this.seenCache=new Ps({validityMs:r.seenTTL}),this.publishedMessageIds=new Ps({validityMs:r.seenTTL}),t.msgIdFn!=null)this.msgIdFn=t.msgIdFn;else switch(this.globalSignaturePolicy){case Ht:this.msgIdFn=Pl;break;case es:this.msgIdFn=Ml;break;default:throw new Error(`Invalid globalSignaturePolicy: ${this.globalSignaturePolicy}`)}if(t.fastMsgIdFn!=null&&(this.fastMsgIdFn=t.fastMsgIdFn,this.fastMsgIdCache=new Ps({validityMs:r.seenTTL})),this.msgIdToStrFn=t.msgIdToStrFn??Al,this.mcache=t.messageCache??new Ln(r.mcacheGossip,r.mcacheLength,this.msgIdToStrFn),t.dataTransform!=null&&(this.dataTransform=t.dataTransform),t.metricsRegister!=null){if(t.metricsTopicStrToLabel==null)throw Error("Must set metricsTopicStrToLabel with metrics");let n=Math.max(...Object.values(r.scoreParams.topics).map(o=>o.meshMessageDeliveriesWindow),1e3),i=pl(t.metricsRegister,t.metricsTopicStrToLabel,{gossipPromiseExpireSec:this.opts.gossipsubIWantFollowupMs/1e3,behaviourPenaltyThreshold:r.scoreParams.behaviourPenaltyThreshold,maxMeshMessageDeliveriesWindowSec:n/1e3});i.mcacheSize.addCollect(()=>{this.onScrapeMetrics(i)});for(let o of this.multicodecs)i.protocolsEnabled.set({protocol:o},1);this.metrics=i}else this.metrics=null;this.gossipTracer=new Gn(this.opts.gossipsubIWantFollowupMs,this.msgIdToStrFn,this.metrics),this.score=new On(this.opts.scoreParams,this.metrics,this.components.logger,{scoreCacheValidityMs:r.heartbeatInterval}),this.maxInboundStreams=t.maxInboundStreams,this.maxOutboundStreams=t.maxOutboundStreams,this.runOnLimitedConnection=t.runOnLimitedConnection,this.allowedTopics=r.allowedTopics!=null?new Set(r.allowedTopics):null}[Symbol.toStringTag]="@chainsafe/libp2p-gossipsub";[Go]=["@libp2p/pubsub"];[zo]=["@libp2p/identify"];getPeers(){return[...this.peers.keys()].map(e=>Ft(e))}isStarted(){return this.status.code===Ue.started}async start(){if(this.isStarted())return;this.log("starting"),this.publishConfig=kl(this.globalSignaturePolicy,this.components.peerId,this.components.privateKey),this.outboundInflightQueue=vt({objectMode:!0}),_s(this.outboundInflightQueue,async i=>{for await(let{peerId:o,connection:a}of i)await this.createOutboundStream(o,a)}).catch(i=>{this.log.error("outbound inflight queue error",i)}),await Promise.all(this.opts.directPeers.map(async i=>{await this.components.peerStore.merge(i.id,{multiaddrs:i.addrs})}));let e=this.components.registrar;await Promise.all(this.multicodecs.map(async i=>e.handle(i,this.onIncomingStream.bind(this),{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams,runOnLimitedConnection:this.runOnLimitedConnection})));let t={onConnect:this.onPeerConnected.bind(this),onDisconnect:this.onPeerDisconnected.bind(this),notifyOnLimitedConnection:this.runOnLimitedConnection},r=await Promise.all(this.multicodecs.map(async i=>e.register(i,t))),n=setTimeout(this.runHeartbeat,100);this.status={code:Ue.started,registrarTopologyIds:r,heartbeatTimeout:n,hearbeatStartMs:Date.now()+100},this.score.start(),this.directPeerInitial=setTimeout(()=>{Promise.resolve().then(async()=>{await Promise.all(Array.from(this.direct).map(async i=>this.connect(i)))}).catch(i=>{this.log(i)})},1e3),this.opts.tagMeshPeers&&(this.addEventListener("gossipsub:graft",this.tagMeshPeer),this.addEventListener("gossipsub:prune",this.untagMeshPeer)),this.log("started")}async stop(){if(this.log("stopping"),this.status.code!==Ue.started)return;let{registrarTopologyIds:e}=this.status;this.status={code:Ue.stopped},this.opts.tagMeshPeers&&(this.removeEventListener("gossipsub:graft",this.tagMeshPeer),this.removeEventListener("gossipsub:prune",this.untagMeshPeer));let t=this.components.registrar;await Promise.all(this.multicodecs.map(async n=>t.unhandle(n))),e.forEach(n=>{t.unregister(n)}),this.outboundInflightQueue.end();let r=[];for(let n of this.streamsOutbound.values())r.push(n.close());this.streamsOutbound.clear();for(let n of this.streamsInbound.values())r.push(n.close());this.streamsInbound.clear(),await Promise.all(r),this.peers.clear(),this.subscriptions.clear(),this.heartbeatTimer!=null&&(this.heartbeatTimer.cancel(),this.heartbeatTimer=null),this.score.stop(),this.mesh.clear(),this.fanout.clear(),this.fanoutLastpub.clear(),this.gossip.clear(),this.control.clear(),this.peerhave.clear(),this.iasked.clear(),this.backoff.clear(),this.outbound.clear(),this.gossipTracer.clear(),this.seenCache.clear(),this.fastMsgIdCache!=null&&this.fastMsgIdCache.clear(),this.directPeerInitial!=null&&clearTimeout(this.directPeerInitial),this.log("stopped")}dumpPeerScoreStats(){return this.score.dumpPeerScoreStats()}onIncomingStream({stream:e,connection:t}){if(!this.isStarted())return;let r=t.remotePeer;this.addPeer(r,t.direction,t.remoteAddr),this.createInboundStream(r,e),this.outboundInflightQueue.push({peerId:r,connection:t})}onPeerConnected(e,t){this.metrics?.newConnectionCount.inc({status:t.status}),!(!this.isStarted()||t.status!=="open")&&(this.addPeer(e,t.direction,t.remoteAddr),this.outboundInflightQueue.push({peerId:e,connection:t}))}onPeerDisconnected(e){this.log("connection ended %p",e),this.removePeer(e)}async createOutboundStream(e,t){if(!this.isStarted())return;let r=e.toString();if(this.peers.has(r)&&!this.streamsOutbound.has(r))try{let n=new Hn(await t.newStream(this.multicodecs,{runOnLimitedConnection:this.runOnLimitedConnection}),o=>{this.log.error("outbound pipe error",o)},{maxBufferSize:this.opts.maxOutboundBufferSize});this.log("create outbound stream %p",e),this.streamsOutbound.set(r,n);let i=n.protocol;i===So&&this.floodsubPeers.add(r),this.metrics?.peersPerProtocol.inc({protocol:i},1),this.subscriptions.size>0&&(this.log("send subscriptions to",r),this.sendSubscriptions(r,Array.from(this.subscriptions),!0))}catch(n){this.log.error("createOutboundStream error",n)}}createInboundStream(e,t){if(!this.isStarted())return;let r=e.toString();if(!this.peers.has(r))return;let n=this.streamsInbound.get(r);n!==void 0&&(this.log("replacing existing inbound steam %s",r),n.close().catch(o=>{this.log.error(o)})),this.log("create inbound stream %s",r);let i=new Kn(t,{maxDataLength:this.opts.maxInboundDataLength});this.streamsInbound.set(r,i),this.pipePeerReadStream(e,i.source).catch(o=>{this.log(o)})}addPeer(e,t,r){let n=e.toString();if(!this.peers.has(n)){this.log("new peer %p",e),this.peers.add(n),this.score.addPeer(n);let i=Vl(r);i!==null?this.score.addIP(n,i):this.log("Added peer has no IP in current address %s %s",n,r.toString()),this.outbound.has(n)||this.outbound.set(n,t==="outbound")}}removePeer(e){let t=e.toString();if(!this.peers.has(t))return;this.log("delete peer %p",e),this.peers.delete(t);let r=this.streamsOutbound.get(t),n=this.streamsInbound.get(t);r!=null&&this.metrics?.peersPerProtocol.inc({protocol:r.protocol},-1),r?.close().catch(i=>{this.log.error(i)}),n?.close().catch(i=>{this.log.error(i)}),this.streamsOutbound.delete(t),this.streamsInbound.delete(t);for(let i of this.topics.values())i.delete(t);for(let[i,o]of this.mesh)o.delete(t)&&this.metrics?.onRemoveFromMesh(i,Xe.Dc,1);for(let i of this.fanout.values())i.delete(t);this.floodsubPeers.delete(t),this.gossip.delete(t),this.control.delete(t),this.outbound.delete(t),this.score.removePeer(t),this.acceptFromWhitelist.delete(t)}get started(){return this.status.code===Ue.started}getMeshPeers(e){let t=this.mesh.get(e);return t!=null?Array.from(t):[]}getSubscribers(e){let t=this.topics.get(e);return(t!=null?Array.from(t):[]).map(r=>Ft(r))}getTopics(){return Array.from(this.subscriptions)}async pipePeerReadStream(e,t){try{await _s(t,async r=>{for await(let n of r)try{let i=n.subarray(),o=xt.decode(i,{limits:{subscriptions:this.decodeRpcLimits.maxSubscriptions,messages:this.decodeRpcLimits.maxMessages,control$:{ihave:this.decodeRpcLimits.maxIhaveMessageIDs,iwant:this.decodeRpcLimits.maxIwantMessageIDs,graft:this.decodeRpcLimits.maxControlMessages,prune:this.decodeRpcLimits.maxControlMessages,prune$:{peers:this.decodeRpcLimits.maxPeerInfos}}}});if(this.metrics?.onRpcRecv(o,i.length),this.opts.awaitRpcHandler)try{await this.handleReceivedRpc(e,o)}catch(a){this.metrics?.onRpcRecvError(),this.log(a)}else this.handleReceivedRpc(e,o).catch(a=>{this.metrics?.onRpcRecvError(),this.log(a)})}catch(i){this.metrics?.onRpcDataError(),this.log(i)}})}catch(r){this.metrics?.onPeerReadStreamError(),this.handlePeerReadStreamError(r,e)}}handlePeerReadStreamError(e,t){this.log.error(e),this.onPeerDisconnected(t)}async handleReceivedRpc(e,t){if(!this.acceptFrom(e.toString())){this.log("received message from unacceptable peer %p",e),this.metrics?.rpcRecvNotAccepted.inc();return}let r=t.subscriptions!=null?t.subscriptions.length:0,n=t.messages!=null?t.messages.length:0,i=0,o=0,a=0,c=0;if(t.control!=null&&(t.control.ihave!=null&&(i=t.control.ihave.length),t.control.iwant!=null&&(o=t.control.iwant.length),t.control.graft!=null&&(a=t.control.graft.length),t.control.prune!=null&&(c=t.control.prune.length)),this.log(`rpc.from ${e.toString()} subscriptions ${r} messages ${n} ihave ${i} iwant ${o} graft ${a} prune ${c}`),t.subscriptions!=null&&t.subscriptions.length>0){let f=[];t.subscriptions.forEach(l=>{let u=l.topic,h=l.subscribe===!0;if(u!=null){if(this.allowedTopics!=null&&!this.allowedTopics.has(u))return;this.handleReceivedSubscription(e,u,h),f.push({topic:u,subscribe:h})}}),this.safeDispatchEvent("subscription-change",{detail:{peerId:e,subscriptions:f}})}for(let f of t.messages){if(this.allowedTopics!=null&&!this.allowedTopics.has(f.topic))continue;let l=this.handleReceivedMessage(e,f).catch(u=>{this.metrics?.onMsgRecvError(f.topic),this.log(u)});this.opts.awaitRpcMessageHandler&&await l}t.control!=null&&await this.handleControlMessage(e.toString(),t.control)}handleReceivedSubscription(e,t,r){this.log("subscription update from %p topic %s",e,t);let n=this.topics.get(t);n==null&&(n=new Set,this.topics.set(t,n)),r?n.add(e.toString()):n.delete(e.toString())}async handleReceivedMessage(e,t){this.metrics?.onMsgRecvPreValidation(t.topic);let r=await this.validateReceivedMessage(e,t);this.metrics?.onPrevalidationResult(t.topic,r.code);let n=r.code;switch(n){case we.duplicate:this.score.duplicateMessage(e.toString(),r.msgIdStr,t.topic),this.gossipTracer.deliverMessage(r.msgIdStr,!0),this.mcache.observeDuplicate(r.msgIdStr,e.toString());return;case we.invalid:if(r.msgIdStr!=null){let i=r.msgIdStr;this.score.rejectMessage(e.toString(),i,t.topic,r.reason),this.gossipTracer.rejectMessage(i,r.reason)}else this.score.rejectInvalidMessage(e.toString(),t.topic);this.metrics?.onMsgRecvInvalid(t.topic,r);return;case we.valid:this.score.validateMessage(r.messageId.msgIdStr),this.gossipTracer.deliverMessage(r.messageId.msgIdStr),this.mcache.put(r.messageId,t,!this.opts.asyncValidation),this.subscriptions.has(t.topic)&&(!this.components.peerId.equals(e)||this.opts.emitSelf)&&(super.dispatchEvent(new CustomEvent("gossipsub:message",{detail:{propagationSource:e,msgId:r.messageId.msgIdStr,msg:r.msg}})),super.dispatchEvent(new CustomEvent("message",{detail:r.msg}))),this.opts.asyncValidation||this.forwardMessage(r.messageId.msgIdStr,t,e.toString());break;default:throw new Error(`Invalid validation result: ${n}`)}}async validateReceivedMessage(e,t){let r=this.fastMsgIdFn?.(t),n=r!==void 0?this.fastMsgIdCache?.get(r):void 0;if(n!=null)return{code:we.duplicate,msgIdStr:n};let i=await _l(this.globalSignaturePolicy,t);if(!i.valid)return{code:we.invalid,reason:Ie.Error,error:i.error};let o=i.message;try{this.dataTransform!=null&&(o.data=this.dataTransform.inboundTransform(t.topic,o.data))}catch(u){return this.log("Invalid message, transform failed",u),{code:we.invalid,reason:Ie.Error,error:ye.TransformFailed}}let a=await this.msgIdFn(o),c=this.msgIdToStrFn(a),f={msgId:a,msgIdStr:c};if(r!==void 0&&this.fastMsgIdCache!=null&&this.fastMsgIdCache.put(r,c)&&this.metrics?.fastMsgIdCacheCollision.inc(),this.seenCache.has(c))return{code:we.duplicate,msgIdStr:c};this.seenCache.put(c);let l=this.topicValidators.get(t.topic);if(l!=null){let u;try{u=await l(e,o)}catch(h){let p=h.code;p===ul&&(u=xe.Ignore),p===ll?u=xe.Reject:u=xe.Ignore}if(u!==xe.Accept)return{code:we.invalid,reason:Io(u),msgIdStr:c}}return{code:we.valid,messageId:f,msg:o}}getScore(e){return this.score.score(e)}sendSubscriptions(e,t,r){this.sendRpc(e,{subscriptions:t.map(n=>({topic:n,subscribe:r})),messages:[]})}async handleControlMessage(e,t){if(t===void 0)return;let r=t.ihave!=null?this.handleIHave(e,t.ihave):[],n=t.iwant!=null?this.handleIWant(e,t.iwant):[],i=t.graft!=null?await this.handleGraft(e,t.graft):[];if(t.prune!=null&&await this.handlePrune(e,t.prune),r.length===0&&n.length===0&&i.length===0)return;let o=this.sendRpc(e,it(n,{iwant:r,prune:i})),a=r[0]?.messageIDs;a!=null&&(o?this.gossipTracer.addPromise(e,a):this.metrics?.iwantPromiseUntracked.inc(1))}acceptFrom(e){if(this.direct.has(e))return!0;let t=Date.now(),r=this.acceptFromWhitelist.get(e);if(r!=null&&r.messagesAccepted<128&&r.acceptUntil>=t)return r.messagesAccepted+=1,!0;let n=this.score.score(e);return n>=0?this.acceptFromWhitelist.set(e,{messagesAccepted:0,acceptUntil:t+1e3}):this.acceptFromWhitelist.delete(e),n>=this.opts.scoreThresholds.graylistThreshold}handleIHave(e,t){if(t.length===0)return[];let r=this.score.score(e);if(r<this.opts.scoreThresholds.gossipThreshold)return this.log("IHAVE: ignoring peer %s with score below threshold [ score = %d ]",e,r),this.metrics?.ihaveRcvIgnored.inc({reason:Ts.LowScore}),[];let n=(this.peerhave.get(e)??0)+1;if(this.peerhave.set(e,n),n>10)return this.log("IHAVE: peer %s has advertised too many times (%d) within this heartbeat interval; ignoring",e,n),this.metrics?.ihaveRcvIgnored.inc({reason:Ts.MaxIhave}),[];let i=this.iasked.get(e)??0;if(i>=5e3)return this.log("IHAVE: peer %s has already advertised too many messages (%d); ignoring",e,i),this.metrics?.ihaveRcvIgnored.inc({reason:Ts.MaxIasked}),[];let o=new Map;if(t.forEach(({topicID:f,messageIDs:l})=>{if(f==null||l==null||!this.mesh.has(f))return;let u=0;l.forEach(h=>{let p=this.msgIdToStrFn(h);this.seenCache.has(p)||(o.set(p,h),u++)}),this.metrics?.onIhaveRcv(f,l.length,u)}),o.size===0)return[];let a=o.size;a+i>5e3&&(a=5e3-i),this.log("IHAVE: Asking for %d out of %d messages from %s",a,o.size,e);let c=Array.from(o.values());return ot(c),c=c.slice(0,a),this.iasked.set(e,i+a),[{messageIDs:c}]}handleIWant(e,t){if(t.length===0)return[];let r=this.score.score(e);if(r<this.opts.scoreThresholds.gossipThreshold)return this.log("IWANT: ignoring peer %s with score below threshold [score = %d]",e,r),[];let n=new Map,i=new Map,o=0;return t.forEach(({messageIDs:a})=>{a?.forEach(c=>{let f=this.msgIdToStrFn(c),l=this.mcache.getWithIWantCount(f,e);if(l==null){o++;return}if(i.set(l.msg.topic,1+(i.get(l.msg.topic)??0)),l.count>3){this.log("IWANT: Peer %s has asked for message %s too many times: ignoring request",e,c);return}n.set(f,l.msg)})}),this.metrics?.onIwantRcv(i,o),n.size===0?(this.log("IWANT: Could not provide any wanted messages to %s",e),[]):(this.log("IWANT: Sending %d messages to %s",n.size,e),Array.from(n.values()))}async handleGraft(e,t){let r=[],n=this.score.score(e),i=Date.now(),o=this.opts.doPX;if(t.forEach(({topicID:c})=>{if(c==null)return;let f=this.mesh.get(c);if(f==null){o=!1;return}if(f.has(e))return;let l=this.backoff.get(c)?.get(e);if(this.direct.has(e))this.log("GRAFT: ignoring request from direct peer %s",e),r.push(c),o=!1;else if(typeof l=="number"&&i<l){this.log("GRAFT: ignoring backed off peer %s",e),this.score.addPenalty(e,1,ks.GraftBackoff),o=!1;let u=l+this.opts.graftFloodThreshold-this.opts.pruneBackoff;i<u&&this.score.addPenalty(e,1,ks.GraftBackoff),this.addBackoff(e,c),r.push(c)}else n<0?(this.log("GRAFT: ignoring peer %s with negative score: score=%d, topic=%s",e,n,c),r.push(c),o=!1,this.addBackoff(e,c)):f.size>=this.opts.Dhi&&!(this.outbound.get(e)??!1)?(r.push(c),this.addBackoff(e,c)):(this.log("GRAFT: Add mesh link from %s in %s",e,c),this.score.graft(e,c),f.add(e),this.metrics?.onAddToMesh(c,_e.Subscribed,1));this.safeDispatchEvent("gossipsub:graft",{detail:{peerId:e,topic:c,direction:"inbound"}})}),r.length===0)return[];let a=!1;return Promise.all(r.map(async c=>this.makePrune(e,c,o,a)))}async handlePrune(e,t){let r=this.score.score(e);for(let{topicID:n,backoff:i,peers:o}of t){if(n==null)continue;let a=this.mesh.get(n);if(a==null)return;this.log("PRUNE: Remove mesh link to %s in %s",e,n),this.score.prune(e,n),a.has(e)&&(a.delete(e),this.metrics?.onRemoveFromMesh(n,Xe.Prune,1)),typeof i=="number"&&i>0?this.doAddBackoff(e,n,i*1e3):this.addBackoff(e,n),o!=null&&o.length>0&&(r<this.opts.scoreThresholds.acceptPXThreshold?this.log("PRUNE: ignoring PX from peer %s with insufficient score [score = %d, topic = %s]",e,r,n):await this.pxConnect(o)),this.safeDispatchEvent("gossipsub:prune",{detail:{peerId:e,topic:n,direction:"inbound"}})}}addBackoff(e,t){this.doAddBackoff(e,t,this.opts.pruneBackoff)}doAddBackoff(e,t,r){let n=this.backoff.get(t);n==null&&(n=new Map,this.backoff.set(t,n));let i=Date.now()+r;(n.get(e)??0)<i&&n.set(e,i)}applyIwantPenalties(){this.gossipTracer.getBrokenPromises().forEach((e,t)=>{this.log("peer %s didn't follow up in %d IWANT requests; adding penalty",t,e),this.score.addPenalty(t,e,ks.BrokenPromise)})}clearBackoff(){if(this.heartbeatTicks%15!==0)return;let e=Date.now();this.backoff.forEach((t,r)=>{t.forEach((n,i)=>{n+1*this.opts.heartbeatInterval<e&&t.delete(i)}),t.size===0&&this.backoff.delete(r)})}async directConnect(){let e=[];this.direct.forEach(t=>{this.streamsOutbound.has(t)||e.push(t)}),await Promise.all(e.map(async t=>this.connect(t)))}async pxConnect(e){e.length>this.opts.prunePeers&&(ot(e),e=e.slice(0,this.opts.prunePeers));let t=[];await Promise.all(e.map(async r=>{if(r.peerID==null)return;let n=nr(ze(r.peerID)),i=n.toString();if(!this.peers.has(i)){if(r.signedPeerRecord==null){t.push(i);return}try{if(!await this.components.peerStore.consumePeerRecord(r.signedPeerRecord,n)){this.log("bogus peer record obtained through px: could not add peer record to address book");return}t.push(i)}catch{this.log("bogus peer record obtained through px: invalid signature or not a peer record")}}})),t.length!==0&&await Promise.all(t.map(async r=>this.connect(r)))}async connect(e){this.log("Initiating connection with %s",e);let t=Ft(e),r=await this.components.connectionManager.openConnection(t);for(let n of this.multicodecs)for(let i of this.components.registrar.getTopologies(n))i.onConnect?.(t,r)}subscribe(e){if(this.status.code!==Ue.started)throw new Error("Pubsub has not started");if(!this.subscriptions.has(e)){this.subscriptions.add(e);for(let t of this.peers.keys())this.sendSubscriptions(t,[e],!0)}this.join(e)}unsubscribe(e){if(this.status.code!==Ue.started)throw new Error("Pubsub is not started");let t=this.subscriptions.delete(e);if(this.log("unsubscribe from %s - am subscribed %s",e,t),t)for(let r of this.peers.keys())this.sendSubscriptions(r,[e],!1);this.leave(e)}join(e){if(this.status.code!==Ue.started)throw new Error("Gossipsub has not started");if(this.mesh.has(e))return;this.log("JOIN %s",e),this.metrics?.onJoin(e);let t=new Set,r=this.backoff.get(e),n=this.fanout.get(e);if(n!=null&&(this.fanout.delete(e),this.fanoutLastpub.delete(e),n.forEach(i=>{!this.direct.has(i)&&this.score.score(i)>=0&&(r==null||!r.has(i))&&t.add(i)}),this.metrics?.onAddToMesh(e,_e.Fanout,t.size)),t.size<this.opts.D){let i=t.size;this.getRandomGossipPeers(e,this.opts.D,a=>!t.has(a)&&!this.direct.has(a)&&this.score.score(a)>=0&&(r==null||!r.has(a))).forEach(a=>{t.add(a)}),this.metrics?.onAddToMesh(e,_e.Random,t.size-i)}this.mesh.set(e,t),t.forEach(i=>{this.log("JOIN: Add mesh link to %s in %s",i,e),this.sendGraft(i,e)})}leave(e){if(this.status.code!==Ue.started)throw new Error("Gossipsub has not started");this.log("LEAVE %s",e),this.metrics?.onLeave(e);let t=this.mesh.get(e);t!=null&&(Promise.all(Array.from(t).map(async r=>{this.log("LEAVE: Remove mesh link to %s in %s",r,e),await this.sendPrune(r,e)})).catch(r=>{this.log("Error sending prunes to mesh peers",r)}),this.mesh.delete(e))}selectPeersToForward(e,t,r){let n=new Set,i=this.topics.get(e);i!=null&&(this.direct.forEach(a=>{i.has(a)&&t!==a&&!(r?.has(a)??!1)&&n.add(a)}),this.floodsubPeers.forEach(a=>{i.has(a)&&t!==a&&!(r?.has(a)??!1)&&this.score.score(a)>=this.opts.scoreThresholds.publishThreshold&&n.add(a)}));let o=this.mesh.get(e);return o!=null&&o.size>0&&o.forEach(a=>{t!==a&&!(r?.has(a)??!1)&&n.add(a)}),n}selectPeersToPublish(e){let t=new Set,r={direct:0,floodsub:0,mesh:0,fanout:0},n=this.topics.get(e);if(n!=null)if(this.opts.floodPublish)n.forEach(i=>{this.direct.has(i)?(t.add(i),r.direct++):this.score.score(i)>=this.opts.scoreThresholds.publishThreshold&&(t.add(i),r.floodsub++)});else{this.direct.forEach(o=>{n.has(o)&&(t.add(o),r.direct++)}),this.floodsubPeers.forEach(o=>{n.has(o)&&this.score.score(o)>=this.opts.scoreThresholds.publishThreshold&&(t.add(o),r.floodsub++)});let i=this.mesh.get(e);if(i!=null&&i.size>0)i.forEach(o=>{t.add(o),r.mesh++}),i.size<this.opts.D&&this.getRandomGossipPeers(e,this.opts.D-i.size,a=>!i.has(a)&&!this.direct.has(a)&&!this.floodsubPeers.has(a)&&this.score.score(a)>=this.opts.scoreThresholds.publishThreshold).forEach(a=>{t.add(a),r.mesh++});else{let o=this.fanout.get(e);if(o!=null&&o.size>0)o.forEach(a=>{t.add(a),r.fanout++});else{let a=this.getRandomGossipPeers(e,this.opts.D,c=>this.score.score(c)>=this.opts.scoreThresholds.publishThreshold);a.size>0&&(this.fanout.set(e,a),a.forEach(c=>{t.add(c),r.fanout++}))}this.fanoutLastpub.set(e,Date.now())}}return{tosend:t,tosendCount:r}}forwardMessage(e,t,r,n){r!=null&&this.score.deliverMessage(r,e,t.topic);let i=this.selectPeersToForward(t.topic,r,n);i.forEach(o=>{this.sendRpc(o,it([t]))}),this.metrics?.onForwardMsg(t.topic,i.size)}async publish(e,t,r){let n=Date.now(),i=this.dataTransform!=null?this.dataTransform.outboundTransform(e,t):t;if(this.publishConfig==null)throw Error("PublishError.Uninitialized");let{raw:o,msg:a}=await Il(this.publishConfig,e,t,i),c=await this.msgIdFn(a),f=this.msgIdToStrFn(c),l=r?.ignoreDuplicatePublishError??this.opts.ignoreDuplicatePublishError;if(this.seenCache.has(f)){if(l)return this.metrics?.onPublishDuplicateMsg(e),{recipients:[]};throw Error("PublishError.Duplicate")}let{tosend:u,tosendCount:h}=this.selectPeersToPublish(e),p=this.opts.emitSelf&&this.subscriptions.has(e),g=r?.allowPublishToZeroTopicPeers??this.opts.allowPublishToZeroTopicPeers;if(u.size===0&&!g&&!p)throw Error("PublishError.NoPeersSubscribedToTopic");this.seenCache.put(f),this.mcache.put({msgId:c,msgIdStr:f},o,!0),this.publishedMessageIds.put(f);let d=r?.batchPublish??this.opts.batchPublish,m=it([o]);if(d)this.sendRpcInBatch(u,m);else for(let v of u)this.sendRpc(v,m)||u.delete(v);let b=Date.now()-n;return this.metrics?.onPublishMsg(e,h,u.size,o.data!=null?o.data.length:0,b),p&&(u.add(this.components.peerId.toString()),super.dispatchEvent(new CustomEvent("gossipsub:message",{detail:{propagationSource:this.components.peerId,msgId:f,msg:a}})),super.dispatchEvent(new CustomEvent("message",{detail:a}))),{recipients:Array.from(u.values()).map(v=>Ft(v))}}sendRpcInBatch(e,t){let r=xt.encode(t),n=Bs.single(r);for(let i of e){let o=this.streamsOutbound.get(i);if(o==null){this.log(`Cannot send RPC to ${i} as there is no open stream to it available`),e.delete(i);continue}try{o.pushPrefixed(n)}catch(a){e.delete(i),this.log.error(`Cannot send rpc to ${i}`,a)}this.metrics?.onRpcSent(t,r.length)}}reportMessageValidationResult(e,t,r){let n;if(r===xe.Accept){if(n=this.mcache.validate(e),n!=null){let{message:o,originatingPeers:a}=n;this.score.deliverMessage(t,e,o.topic),this.forwardMessage(e,n.message,t,a)}}else if(n=this.mcache.remove(e),n!=null){let o=Io(r),{message:a,originatingPeers:c}=n;this.score.rejectMessage(t,e,a.topic,o);for(let f of c)this.score.rejectMessage(f,e,a.topic,o)}let i=this.score.messageFirstSeenTimestampMs(e);this.metrics?.onReportValidation(n,r,i)}sendGraft(e,t){let n=it([],{graft:[{topicID:t}]});this.sendRpc(e,n)}async sendPrune(e,t){let n=[await this.makePrune(e,t,this.opts.doPX,!0)],i=it([],{prune:n});this.sendRpc(e,i)}sendRpc(e,t){let r=this.streamsOutbound.get(e);if(r==null)return this.log(`Cannot send RPC to ${e} as there is no open stream to it available`),!1;let n=this.control.get(e);n!=null&&(this.piggybackControl(e,t,n),this.control.delete(e));let i=this.gossip.get(e);i!=null&&(this.piggybackGossip(e,t,i),this.gossip.delete(e));let o=xt.encode(t);try{r.push(o)}catch(a){return this.log.error(`Cannot send rpc to ${e}`,a),n!=null&&this.control.set(e,n),i!=null&&this.gossip.set(e,i),!1}if(this.metrics?.onRpcSent(t,o.length),t.control?.graft!=null)for(let a of t.control?.graft)a.topicID!=null&&this.safeDispatchEvent("gossipsub:graft",{detail:{peerId:e,topic:a.topicID,direction:"outbound"}});if(t.control?.prune!=null)for(let a of t.control?.prune)a.topicID!=null&&this.safeDispatchEvent("gossipsub:prune",{detail:{peerId:e,topic:a.topicID,direction:"outbound"}});return!0}piggybackControl(e,t,r){let n=_o(t);for(let i of r.graft)i.topicID!=null&&(this.mesh.get(i.topicID)?.has(e)??!1)&&n.control.graft.push(i);for(let i of r.prune)i.topicID!=null&&!(this.mesh.get(i.topicID)?.has(e)??!1)&&n.control.prune.push(i)}piggybackGossip(e,t,r){let n=_o(t);n.control.ihave=r}async sendGraftPrune(e,t,r){let n=this.opts.doPX,i=!1;for(let[o,a]of e){let c=a.map(u=>({topicID:u})),f=[],l=t.get(o);l!=null&&(f=await Promise.all(l.map(async u=>this.makePrune(o,u,n&&!(r.get(o)??!1),i))),t.delete(o)),this.sendRpc(o,it([],{graft:c,prune:f}))}for(let[o,a]of t){let c=await Promise.all(a.map(async f=>this.makePrune(o,f,n&&!(r.get(o)??!1),i)));this.sendRpc(o,it([],{prune:c}))}}emitGossip(e){let t=this.mcache.getGossipIDs(new Set(e.keys()));for(let[r,n]of e)this.doEmitGossip(r,n,t.get(r)??[])}doEmitGossip(e,t,r){if(r.length===0||(ot(r),r.length>5e3&&this.log("too many messages for gossip; will truncate IHAVE list (%d messages)",r.length),t.size===0))return;let n=this.opts.Dlazy,o=this.opts.gossipFactor*t.size,a=t;o>n&&(n=o),n>a.size?n=a.size:a=ot(Array.from(a)).slice(0,n),a.forEach(c=>{let f=r;r.length>5e3&&(f=ot(f.slice()).slice(0,5e3)),this.pushGossip(c,{topicID:e,messageIDs:f})})}flush(){for(let[e,t]of this.gossip.entries())this.gossip.delete(e),this.sendRpc(e,it([],{ihave:t}));for(let[e,t]of this.control.entries()){this.control.delete(e);let r=it([],{graft:t.graft,prune:t.prune});this.sendRpc(e,r)}}pushGossip(e,t){this.log("Add gossip to %s",e);let r=this.gossip.get(e)??[];this.gossip.set(e,r.concat(t))}async makePrune(e,t,r,n){if(this.score.prune(e,t),this.streamsOutbound.get(e)?.protocol===Bo)return{topicID:t,peers:[]};let i=n?this.opts.unsubcribeBackoff:this.opts.pruneBackoff,o=i/1e3;if(this.doAddBackoff(e,t,i),!r)return{topicID:t,peers:[],backoff:o};let a=this.getRandomGossipPeers(t,this.opts.prunePeers,f=>f!==e&&this.score.score(f)>=0),c=await Promise.all(Array.from(a).map(async f=>{let l=Ft(f),u;try{u=await this.components.peerStore.get(l)}catch(h){if(h.code!=="ERR_NOT_FOUND")throw h}return{peerID:l.toMultihash().bytes,signedPeerRecord:u?.peerRecordEnvelope}}));return{topicID:t,peers:c,backoff:o}}runHeartbeat=()=>{let e=this.metrics?.heartbeatDuration.startTimer();this.heartbeat().catch(t=>{this.log("Error running heartbeat",t)}).finally(()=>{if(e?.(),this.status.code===Ue.started){clearTimeout(this.status.heartbeatTimeout);let t=this.opts.heartbeatInterval-(Date.now()-this.status.hearbeatStartMs)%this.opts.heartbeatInterval;t<this.opts.heartbeatInterval*.25&&(t+=this.opts.heartbeatInterval,this.metrics?.heartbeatSkipped.inc()),this.status.heartbeatTimeout=setTimeout(this.runHeartbeat,t)}})};async heartbeat(){let{D:e,Dlo:t,Dhi:r,Dscore:n,Dout:i,fanoutTTL:o}=this.opts;this.heartbeatTicks++;let a=new Map,c=g=>{let d=a.get(g);return d===void 0&&(d=this.score.score(g),a.set(g,d)),d},f=new Map,l=new Map,u=new Map;this.clearBackoff(),this.peerhave.clear(),this.metrics?.cacheSize.set({cache:"iasked"},this.iasked.size),this.iasked.clear(),this.applyIwantPenalties(),this.heartbeatTicks%this.opts.directConnectTicks===0&&await this.directConnect(),this.fastMsgIdCache?.prune(),this.seenCache.prune(),this.gossipTracer.prune(),this.publishedMessageIds.prune();let h=new Map;this.mesh.forEach((g,d)=>{let m=this.topics.get(d),b=new Set,v=new Set;if(h.set(d,v),m!=null){let w=ot(Array.from(m)),S=this.backoff.get(d);for(let B of w){let I=this.streamsOutbound.get(B);if(I!=null&&this.multicodecs.includes(I.protocol)&&!g.has(B)&&!this.direct.has(B)){let M=c(B);(S==null||!S.has(B))&&M>=0&&b.add(B),M>=this.opts.scoreThresholds.gossipThreshold&&v.add(B)}}}let E=(w,S)=>{this.log("HEARTBEAT: Remove mesh link to %s in %s",w,d),this.addBackoff(w,d),g.delete(w),c(w)>=this.opts.scoreThresholds.gossipThreshold&&v.add(w),this.metrics?.onRemoveFromMesh(d,S,1);let B=l.get(w);B==null?l.set(w,[d]):B.push(d)},A=(w,S)=>{this.log("HEARTBEAT: Add mesh link to %s in %s",w,d),this.score.graft(w,d),g.add(w),v.delete(w),this.metrics?.onAddToMesh(d,S,1);let B=f.get(w);B==null?f.set(w,[d]):B.push(d)};if(g.forEach(w=>{let S=c(w);S<0&&(this.log("HEARTBEAT: Prune peer %s with negative score: score=%d, topic=%s",w,S,d),E(w,Xe.BadScore),u.set(w,!0))}),g.size<t){let w=e-g.size;yl(b,w).forEach(B=>{A(B,_e.NotEnough)})}if(g.size>r){let w=Array.from(g);w.sort((B,I)=>c(I)-c(B)),w=w.slice(0,n).concat(ot(w.slice(n)));let S=0;if(w.slice(0,e).forEach(B=>{(this.outbound.get(B)??!1)&&S++}),S<i){let B=M=>{let D=w[M];for(let U=M;U>0;U--)w[U]=w[U-1];w[0]=D};if(S>0){let M=S;for(let D=1;D<e&&M>0;D++)(this.outbound.get(w[D])??!1)&&(B(D),M--)}let I=e-S;for(let M=e;M<w.length&&I>0;M++)(this.outbound.get(w[M])??!1)&&(B(M),I--)}w.slice(e).forEach(B=>{E(B,Xe.Excess)})}if(g.size>=t){let w=0;if(g.forEach(S=>{(this.outbound.get(S)??!1)&&w++}),w<i){let S=i-w;Fn(b,S,I=>this.outbound.get(I)===!0).forEach(I=>{A(I,_e.Outbound)})}}if(this.heartbeatTicks%this.opts.opportunisticGraftTicks===0&&g.size>1){let w=Array.from(g).sort((I,M)=>c(I)-c(M)),S=Math.floor(g.size/2),B=c(w[S]);if(B<this.opts.scoreThresholds.opportunisticGraftThreshold){let I=this.opts.opportunisticGraftPeers,M=Fn(b,I,D=>c(D)>B);for(let D of M)this.log("HEARTBEAT: Opportunistically graft peer %s on topic %s",D,d),A(D,_e.Opportunistic)}}});let p=Date.now();this.fanoutLastpub.forEach((g,d)=>{g+o<p&&(this.fanout.delete(d),this.fanoutLastpub.delete(d))}),this.fanout.forEach((g,d)=>{let m=this.topics.get(d);g.forEach(A=>{(!(m?.has(A)??!1)||c(A)<this.opts.scoreThresholds.publishThreshold)&&g.delete(A)});let b=this.topics.get(d),v=[],E=new Set;if(h.set(d,E),b!=null){let A=ot(Array.from(b));for(let w of A){let S=this.streamsOutbound.get(w);if(S!=null&&this.multicodecs.includes(S.protocol)&&!g.has(w)&&!this.direct.has(w)){let B=c(w);B>=this.opts.scoreThresholds.publishThreshold&&v.push(w),B>=this.opts.scoreThresholds.gossipThreshold&&E.add(w)}}}if(g.size<e){let A=e-g.size;v.slice(0,A).forEach(w=>{g.add(w),E?.delete(w)})}}),this.emitGossip(h),await this.sendGraftPrune(f,l,u),this.flush(),this.mcache.shift(),this.dispatchEvent(new CustomEvent("gossipsub:heartbeat"))}getRandomGossipPeers(e,t,r=()=>!0){let n=this.topics.get(e);if(n==null)return new Set;let i=[];return n.forEach(o=>{let a=this.streamsOutbound.get(o);a!=null&&this.multicodecs.includes(a.protocol)&&r(o)&&i.push(o)}),i=ot(i),t>0&&i.length>t&&(i=i.slice(0,t)),new Set(i)}onScrapeMetrics(e){e.mcacheSize.set(this.mcache.size),e.mcacheNotValidatedCount.set(this.mcache.notValidatedCount),e.cacheSize.set({cache:"direct"},this.direct.size),e.cacheSize.set({cache:"seenCache"},this.seenCache.size),e.cacheSize.set({cache:"fastMsgIdCache"},this.fastMsgIdCache?.size??0),e.cacheSize.set({cache:"publishedMessageIds"},this.publishedMessageIds.size),e.cacheSize.set({cache:"mcache"},this.mcache.size),e.cacheSize.set({cache:"score"},this.score.size),e.cacheSize.set({cache:"gossipTracer.promises"},this.gossipTracer.size),e.cacheSize.set({cache:"gossipTracer.requests"},this.gossipTracer.requestMsByMsgSize),e.cacheSize.set({cache:"topics"},this.topics.size),e.cacheSize.set({cache:"subscriptions"},this.subscriptions.size),e.cacheSize.set({cache:"mesh"},this.mesh.size),e.cacheSize.set({cache:"fanout"},this.fanout.size),e.cacheSize.set({cache:"peers"},this.peers.size),e.cacheSize.set({cache:"streamsOutbound"},this.streamsOutbound.size),e.cacheSize.set({cache:"streamsInbound"},this.streamsInbound.size),e.cacheSize.set({cache:"acceptFromWhitelist"},this.acceptFromWhitelist.size),e.cacheSize.set({cache:"gossip"},this.gossip.size),e.cacheSize.set({cache:"control"},this.control.size),e.cacheSize.set({cache:"peerhave"},this.peerhave.size),e.cacheSize.set({cache:"outbound"},this.outbound.size);let t=0,r=Date.now();e.connectedPeersBackoffSec.reset();for(let a of this.backoff.values()){t+=a.size;for(let[c,f]of a.entries())this.peers.has(c)&&e.connectedPeersBackoffSec.observe(Math.max(0,f-r)/1e3)}e.cacheSize.set({cache:"backoff"},t);for(let[a,c]of this.topics)e.topicPeersCount.set({topicStr:a},c.size);for(let[a,c]of this.mesh)e.meshPeerCounts.set({topicStr:a},c.size);let n=[],i=new Map;e.behaviourPenalty.reset();for(let a of this.peers.keys()){let c=this.score.score(a);n.push(c),i.set(a,c),e.behaviourPenalty.observe(this.score.peerStats.get(a)?.behaviourPenalty??0)}e.registerScores(n,this.opts.scoreThresholds),e.registerScorePerMesh(this.mesh,i);let o=Sl(this.peers.keys(),this.score.peerStats,this.score.params,this.score.peerIPs,e.topicStrToLabel);e.registerScoreWeights(o)}tagMeshPeer=e=>{let{peerId:t,topic:r}=e.detail;this.components.peerStore.merge(Ft(t),{tags:{[r]:{value:100}}}).catch(n=>{this.log.error("Error tagging peer %s with topic %s",t,r,n)})};untagMeshPeer=e=>{let{peerId:t,topic:r}=e.detail;this.components.peerStore.merge(Ft(t),{tags:{[r]:void 0}}).catch(n=>{this.log.error("Error untagging peer %s with topic %s",t,r,n)})}};function np(s={}){return e=>new $n(e,s)}return Ql(ip);})();
 /*! Bundled license information:
 
 pvtsutils/build/index.js:
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/index.min.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/index.min.js.map
new file mode 100644
index 0000000..0730ade
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/index.min.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "sources": ["../node_modules/err-code/index.js", "../node_modules/@protobufjs/aspromise/index.js", "../node_modules/@protobufjs/base64/index.js", "../node_modules/@protobufjs/eventemitter/index.js", "../node_modules/@protobufjs/float/index.js", "../node_modules/@protobufjs/inquire/index.js", "../node_modules/@protobufjs/utf8/index.js", "../node_modules/@protobufjs/pool/index.js", "../node_modules/protobufjs/src/util/longbits.js", "../node_modules/protobufjs/src/util/minimal.js", "../node_modules/protobufjs/src/writer.js", "../node_modules/protobufjs/src/writer_buffer.js", "../node_modules/protobufjs/src/reader.js", "../node_modules/protobufjs/src/reader_buffer.js", "../node_modules/protobufjs/src/rpc/service.js", "../node_modules/protobufjs/src/rpc.js", "../node_modules/protobufjs/src/roots.js", "../node_modules/protobufjs/src/index-minimal.js", "../node_modules/protobufjs/minimal.js", "src/message/rpc.cjs", "../node_modules/denque/index.js", "../node_modules/pvtsutils/build/index.js", "../src/index.ts", "../node_modules/@libp2p/interface/src/peer-id/index.ts", "../node_modules/@libp2p/interface/src/pubsub/index.ts", "../node_modules/@libp2p/interface/src/errors.ts", "../node_modules/@libp2p/interface/src/event-target.ts", "../node_modules/multiformats/src/bases/base58.ts", "../node_modules/multiformats/src/bytes.ts", "../node_modules/multiformats/src/vendor/base-x.js", "../node_modules/multiformats/src/bases/base.ts", "../node_modules/multiformats/src/bases/base10.ts", "../node_modules/multiformats/src/bases/base16.ts", "../node_modules/multiformats/src/bases/base2.ts", "../node_modules/multiformats/src/bases/base256emoji.ts", "../node_modules/multiformats/src/bases/base32.ts", "../node_modules/multiformats/src/bases/base36.ts", "../node_modules/multiformats/src/bases/base64.ts", "../node_modules/multiformats/src/bases/base8.ts", "../node_modules/multiformats/src/bases/identity.ts", "../node_modules/multiformats/src/codecs/json.ts", "../node_modules/multiformats/src/hashes/identity.ts", "../node_modules/multiformats/src/vendor/varint.js", "../node_modules/multiformats/src/varint.ts", "../node_modules/multiformats/src/hashes/digest.ts", "../node_modules/multiformats/src/hashes/sha2-browser.ts", "../node_modules/multiformats/src/hashes/hasher.ts", "../node_modules/multiformats/src/cid.ts", "../node_modules/multiformats/src/basics.ts", "../node_modules/uint8arrays/src/equals.ts", "../node_modules/@libp2p/peer-id/src/index.ts", "../node_modules/uint8arrays/src/util/as-uint8array.ts", "../node_modules/uint8arrays/src/alloc.ts", "../node_modules/uint8-varint/src/index.ts", "../node_modules/uint8arrays/src/concat.ts", "../node_modules/uint8arraylist/src/index.ts", "../node_modules/it-length-prefixed/src/utils.ts", "../node_modules/it-length-prefixed/src/encode.ts", "../node_modules/it-length-prefixed/src/decode.ts", "../node_modules/p-defer/index.js", "../node_modules/it-pushable/src/fifo.ts", "../node_modules/it-pushable/src/index.ts", "../node_modules/it-merge/src/index.ts", "../node_modules/it-pipe/src/index.ts", "../src/constants.ts", "../src/message/decodeRpc.ts", "src/message/rpc.js", "../src/message-cache.ts", "../src/types.ts", "../src/metrics.ts", "../src/score/constants.ts", "../src/score/peer-score-params.ts", "../src/score/peer-score-thresholds.ts", "../src/utils/set.ts", "../src/score/compute-score.ts", "../src/score/message-deliveries.ts", "../src/score/peer-score.ts", "../src/score/scoreMetrics.ts", "../node_modules/abortable-iterator/src/abort-error.ts", "../node_modules/get-iterator/src/index.ts", "../node_modules/abortable-iterator/src/index.ts", "../src/stream.ts", "../src/tracer.ts", "../node_modules/@libp2p/crypto/src/webcrypto-browser.ts", "../node_modules/@libp2p/crypto/src/keys/ed25519-class.ts", "../node_modules/uint8arrays/src/util/bases.ts", "../node_modules/uint8arrays/src/from-string.ts", "../node_modules/@libp2p/crypto/src/util.ts", "../node_modules/@noble/hashes/src/_assert.ts", "../node_modules/@noble/hashes/src/crypto.ts", "../node_modules/@noble/hashes/src/utils.ts", "../node_modules/@noble/hashes/src/_sha2.ts", "../node_modules/@noble/hashes/src/_u64.ts", "../node_modules/@noble/hashes/src/sha512.ts", "../node_modules/@noble/curves/src/abstract/utils.ts", "../node_modules/@noble/curves/src/abstract/modular.ts", "../node_modules/@noble/curves/src/abstract/curve.ts", "../node_modules/@noble/curves/src/abstract/edwards.ts", "../node_modules/@noble/curves/src/ed25519.ts", "../node_modules/@libp2p/crypto/src/keys/ed25519-browser.ts", "../node_modules/@libp2p/crypto/src/ciphers/aes-gcm.browser.ts", "../node_modules/@libp2p/crypto/src/keys/exporter.ts", "../node_modules/protons-runtime/src/utils/float.ts", "../node_modules/protons-runtime/src/utils/longbits.ts", "../node_modules/protons-runtime/src/utils/utf8.ts", "../node_modules/protons-runtime/src/utils/reader.ts", "../node_modules/protons-runtime/src/decode.ts", "../node_modules/protons-runtime/src/utils/pool.ts", "../node_modules/protons-runtime/src/utils/writer.ts", "../node_modules/protons-runtime/src/encode.ts", "../node_modules/protons-runtime/src/codec.ts", "../node_modules/protons-runtime/src/codecs/enum.ts", "../node_modules/protons-runtime/src/codecs/message.ts", "../node_modules/@libp2p/crypto/src/keys/keys.ts", "../node_modules/uint8arrays/src/to-string.ts", "../node_modules/@libp2p/crypto/src/keys/rsa-class.ts", "../node_modules/@libp2p/crypto/src/random-bytes.ts", "../node_modules/@libp2p/crypto/src/keys/rsa-utils.ts", "../node_modules/@noble/hashes/src/hmac.ts", "../node_modules/@noble/hashes/src/pbkdf2.ts", "../node_modules/asn1js/build/index.es.js", "../node_modules/pvutils/build/utils.es.js", "../node_modules/@libp2p/crypto/src/keys/rsa-browser.ts", "../node_modules/@libp2p/crypto/src/keys/secp256k1-class.ts", "../node_modules/@noble/hashes/src/sha256.ts", "../node_modules/@noble/curves/src/abstract/weierstrass.ts", "../node_modules/@noble/curves/src/_shortw_utils.ts", "../node_modules/@noble/curves/src/secp256k1.ts", "../node_modules/@libp2p/crypto/src/keys/secp256k1-browser.ts", "../node_modules/@libp2p/crypto/src/keys/index.ts", "../src/utils/buildRawMessage.ts", "../src/utils/shuffle.ts", "../src/utils/messageIdToString.ts", "../src/utils/publishConfig.ts", "../node_modules/@libp2p/pubsub/src/utils.ts", "../src/utils/msgIdFn.ts", "../node_modules/@chainsafe/is-ip/src/parser.ts", "../node_modules/@chainsafe/is-ip/src/parse.ts", "../node_modules/@chainsafe/netmask/src/ip.ts", "../node_modules/@chainsafe/is-ip/src/is-ip.ts", "../node_modules/@multiformats/multiaddr/src/ip.ts", "../node_modules/@multiformats/multiaddr/src/protocols-table.ts", "../node_modules/@multiformats/multiaddr/src/convert.ts", "../src/utils/multiaddr.ts", "../src/utils/time-cache.ts"],
+  "sourcesContent": ["'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n", "\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n", "\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n", "\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n", "\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n", "\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n", "\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n", "\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n", "\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n", "\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n", "\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n", "\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n", "\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n", "\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n", "\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n", "\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n", "// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n", "// @ts-nocheck\n/*eslint-disable*/\n(function(global, factory) { /* global define, require, module */\n\n    /* AMD */ if (typeof define === 'function' && define.amd)\n        define([\"protobufjs/minimal\"], factory);\n\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)\n        module.exports = factory(require(\"protobufjs/minimal\"));\n\n})(this, function($protobuf) {\n    \"use strict\";\n\n    // Common aliases\n    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n    // Exported root namespace\n    var $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n    $root.RPC = (function() {\n\n        /**\n         * Properties of a RPC.\n         * @exports IRPC\n         * @interface IRPC\n         * @property {Array.<RPC.ISubOpts>|null} [subscriptions] RPC subscriptions\n         * @property {Array.<RPC.IMessage>|null} [messages] RPC messages\n         * @property {RPC.IControlMessage|null} [control] RPC control\n         */\n\n        /**\n         * Constructs a new RPC.\n         * @exports RPC\n         * @classdesc Represents a RPC.\n         * @implements IRPC\n         * @constructor\n         * @param {IRPC=} [p] Properties to set\n         */\n        function RPC(p) {\n            this.subscriptions = [];\n            this.messages = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * RPC subscriptions.\n         * @member {Array.<RPC.ISubOpts>} subscriptions\n         * @memberof RPC\n         * @instance\n         */\n        RPC.prototype.subscriptions = $util.emptyArray;\n\n        /**\n         * RPC messages.\n         * @member {Array.<RPC.IMessage>} messages\n         * @memberof RPC\n         * @instance\n         */\n        RPC.prototype.messages = $util.emptyArray;\n\n        /**\n         * RPC control.\n         * @member {RPC.IControlMessage|null|undefined} control\n         * @memberof RPC\n         * @instance\n         */\n        RPC.prototype.control = null;\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * RPC _control.\n         * @member {\"control\"|undefined} _control\n         * @memberof RPC\n         * @instance\n         */\n        Object.defineProperty(RPC.prototype, \"_control\", {\n            get: $util.oneOfGetter($oneOfFields = [\"control\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Encodes the specified RPC message. Does not implicitly {@link RPC.verify|verify} messages.\n         * @function encode\n         * @memberof RPC\n         * @static\n         * @param {IRPC} m RPC message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RPC.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.subscriptions != null && m.subscriptions.length) {\n                for (var i = 0; i < m.subscriptions.length; ++i)\n                    $root.RPC.SubOpts.encode(m.subscriptions[i], w.uint32(10).fork()).ldelim();\n            }\n            if (m.messages != null && m.messages.length) {\n                for (var i = 0; i < m.messages.length; ++i)\n                    $root.RPC.Message.encode(m.messages[i], w.uint32(18).fork()).ldelim();\n            }\n            if (m.control != null && Object.hasOwnProperty.call(m, \"control\"))\n                $root.RPC.ControlMessage.encode(m.control, w.uint32(26).fork()).ldelim();\n            return w;\n        };\n\n        /**\n         * Decodes a RPC message from the specified reader or buffer.\n         * @function decode\n         * @memberof RPC\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {RPC} RPC\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RPC.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.subscriptions && m.subscriptions.length))\n                        m.subscriptions = [];\n                    m.subscriptions.push($root.RPC.SubOpts.decode(r, r.uint32()));\n                    break;\n                case 2:\n                    if (!(m.messages && m.messages.length))\n                        m.messages = [];\n                    m.messages.push($root.RPC.Message.decode(r, r.uint32()));\n                    break;\n                case 3:\n                    m.control = $root.RPC.ControlMessage.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a RPC message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof RPC\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {RPC} RPC\n         */\n        RPC.fromObject = function fromObject(d) {\n            if (d instanceof $root.RPC)\n                return d;\n            var m = new $root.RPC();\n            if (d.subscriptions) {\n                if (!Array.isArray(d.subscriptions))\n                    throw TypeError(\".RPC.subscriptions: array expected\");\n                m.subscriptions = [];\n                for (var i = 0; i < d.subscriptions.length; ++i) {\n                    if (typeof d.subscriptions[i] !== \"object\")\n                        throw TypeError(\".RPC.subscriptions: object expected\");\n                    m.subscriptions[i] = $root.RPC.SubOpts.fromObject(d.subscriptions[i]);\n                }\n            }\n            if (d.messages) {\n                if (!Array.isArray(d.messages))\n                    throw TypeError(\".RPC.messages: array expected\");\n                m.messages = [];\n                for (var i = 0; i < d.messages.length; ++i) {\n                    if (typeof d.messages[i] !== \"object\")\n                        throw TypeError(\".RPC.messages: object expected\");\n                    m.messages[i] = $root.RPC.Message.fromObject(d.messages[i]);\n                }\n            }\n            if (d.control != null) {\n                if (typeof d.control !== \"object\")\n                    throw TypeError(\".RPC.control: object expected\");\n                m.control = $root.RPC.ControlMessage.fromObject(d.control);\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a RPC message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof RPC\n         * @static\n         * @param {RPC} m RPC\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RPC.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.arrays || o.defaults) {\n                d.subscriptions = [];\n                d.messages = [];\n            }\n            if (m.subscriptions && m.subscriptions.length) {\n                d.subscriptions = [];\n                for (var j = 0; j < m.subscriptions.length; ++j) {\n                    d.subscriptions[j] = $root.RPC.SubOpts.toObject(m.subscriptions[j], o);\n                }\n            }\n            if (m.messages && m.messages.length) {\n                d.messages = [];\n                for (var j = 0; j < m.messages.length; ++j) {\n                    d.messages[j] = $root.RPC.Message.toObject(m.messages[j], o);\n                }\n            }\n            if (m.control != null && m.hasOwnProperty(\"control\")) {\n                d.control = $root.RPC.ControlMessage.toObject(m.control, o);\n                if (o.oneofs)\n                    d._control = \"control\";\n            }\n            return d;\n        };\n\n        /**\n         * Converts this RPC to JSON.\n         * @function toJSON\n         * @memberof RPC\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RPC.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        RPC.SubOpts = (function() {\n\n            /**\n             * Properties of a SubOpts.\n             * @memberof RPC\n             * @interface ISubOpts\n             * @property {boolean|null} [subscribe] SubOpts subscribe\n             * @property {string|null} [topic] SubOpts topic\n             */\n\n            /**\n             * Constructs a new SubOpts.\n             * @memberof RPC\n             * @classdesc Represents a SubOpts.\n             * @implements ISubOpts\n             * @constructor\n             * @param {RPC.ISubOpts=} [p] Properties to set\n             */\n            function SubOpts(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * SubOpts subscribe.\n             * @member {boolean|null|undefined} subscribe\n             * @memberof RPC.SubOpts\n             * @instance\n             */\n            SubOpts.prototype.subscribe = null;\n\n            /**\n             * SubOpts topic.\n             * @member {string|null|undefined} topic\n             * @memberof RPC.SubOpts\n             * @instance\n             */\n            SubOpts.prototype.topic = null;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * SubOpts _subscribe.\n             * @member {\"subscribe\"|undefined} _subscribe\n             * @memberof RPC.SubOpts\n             * @instance\n             */\n            Object.defineProperty(SubOpts.prototype, \"_subscribe\", {\n                get: $util.oneOfGetter($oneOfFields = [\"subscribe\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * SubOpts _topic.\n             * @member {\"topic\"|undefined} _topic\n             * @memberof RPC.SubOpts\n             * @instance\n             */\n            Object.defineProperty(SubOpts.prototype, \"_topic\", {\n                get: $util.oneOfGetter($oneOfFields = [\"topic\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Encodes the specified SubOpts message. Does not implicitly {@link RPC.SubOpts.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.SubOpts\n             * @static\n             * @param {RPC.ISubOpts} m SubOpts message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SubOpts.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.subscribe != null && Object.hasOwnProperty.call(m, \"subscribe\"))\n                    w.uint32(8).bool(m.subscribe);\n                if (m.topic != null && Object.hasOwnProperty.call(m, \"topic\"))\n                    w.uint32(18).string(m.topic);\n                return w;\n            };\n\n            /**\n             * Decodes a SubOpts message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.SubOpts\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.SubOpts} SubOpts\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SubOpts.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.SubOpts();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.subscribe = r.bool();\n                        break;\n                    case 2:\n                        m.topic = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a SubOpts message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.SubOpts\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.SubOpts} SubOpts\n             */\n            SubOpts.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.SubOpts)\n                    return d;\n                var m = new $root.RPC.SubOpts();\n                if (d.subscribe != null) {\n                    m.subscribe = Boolean(d.subscribe);\n                }\n                if (d.topic != null) {\n                    m.topic = String(d.topic);\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a SubOpts message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.SubOpts\n             * @static\n             * @param {RPC.SubOpts} m SubOpts\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SubOpts.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (m.subscribe != null && m.hasOwnProperty(\"subscribe\")) {\n                    d.subscribe = m.subscribe;\n                    if (o.oneofs)\n                        d._subscribe = \"subscribe\";\n                }\n                if (m.topic != null && m.hasOwnProperty(\"topic\")) {\n                    d.topic = m.topic;\n                    if (o.oneofs)\n                        d._topic = \"topic\";\n                }\n                return d;\n            };\n\n            /**\n             * Converts this SubOpts to JSON.\n             * @function toJSON\n             * @memberof RPC.SubOpts\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SubOpts.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return SubOpts;\n        })();\n\n        RPC.Message = (function() {\n\n            /**\n             * Properties of a Message.\n             * @memberof RPC\n             * @interface IMessage\n             * @property {Uint8Array|null} [from] Message from\n             * @property {Uint8Array|null} [data] Message data\n             * @property {Uint8Array|null} [seqno] Message seqno\n             * @property {string} topic Message topic\n             * @property {Uint8Array|null} [signature] Message signature\n             * @property {Uint8Array|null} [key] Message key\n             */\n\n            /**\n             * Constructs a new Message.\n             * @memberof RPC\n             * @classdesc Represents a Message.\n             * @implements IMessage\n             * @constructor\n             * @param {RPC.IMessage=} [p] Properties to set\n             */\n            function Message(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * Message from.\n             * @member {Uint8Array|null|undefined} from\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.from = null;\n\n            /**\n             * Message data.\n             * @member {Uint8Array|null|undefined} data\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.data = null;\n\n            /**\n             * Message seqno.\n             * @member {Uint8Array|null|undefined} seqno\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.seqno = null;\n\n            /**\n             * Message topic.\n             * @member {string} topic\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.topic = \"\";\n\n            /**\n             * Message signature.\n             * @member {Uint8Array|null|undefined} signature\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.signature = null;\n\n            /**\n             * Message key.\n             * @member {Uint8Array|null|undefined} key\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.key = null;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Message _from.\n             * @member {\"from\"|undefined} _from\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_from\", {\n                get: $util.oneOfGetter($oneOfFields = [\"from\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Message _data.\n             * @member {\"data\"|undefined} _data\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_data\", {\n                get: $util.oneOfGetter($oneOfFields = [\"data\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Message _seqno.\n             * @member {\"seqno\"|undefined} _seqno\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_seqno\", {\n                get: $util.oneOfGetter($oneOfFields = [\"seqno\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Message _signature.\n             * @member {\"signature\"|undefined} _signature\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_signature\", {\n                get: $util.oneOfGetter($oneOfFields = [\"signature\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Message _key.\n             * @member {\"key\"|undefined} _key\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_key\", {\n                get: $util.oneOfGetter($oneOfFields = [\"key\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Encodes the specified Message message. Does not implicitly {@link RPC.Message.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.Message\n             * @static\n             * @param {RPC.IMessage} m Message message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Message.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.from != null && Object.hasOwnProperty.call(m, \"from\"))\n                    w.uint32(10).bytes(m.from);\n                if (m.data != null && Object.hasOwnProperty.call(m, \"data\"))\n                    w.uint32(18).bytes(m.data);\n                if (m.seqno != null && Object.hasOwnProperty.call(m, \"seqno\"))\n                    w.uint32(26).bytes(m.seqno);\n                w.uint32(34).string(m.topic);\n                if (m.signature != null && Object.hasOwnProperty.call(m, \"signature\"))\n                    w.uint32(42).bytes(m.signature);\n                if (m.key != null && Object.hasOwnProperty.call(m, \"key\"))\n                    w.uint32(50).bytes(m.key);\n                return w;\n            };\n\n            /**\n             * Decodes a Message message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.Message\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.Message} Message\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Message.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.Message();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.from = r.bytes();\n                        break;\n                    case 2:\n                        m.data = r.bytes();\n                        break;\n                    case 3:\n                        m.seqno = r.bytes();\n                        break;\n                    case 4:\n                        m.topic = r.string();\n                        break;\n                    case 5:\n                        m.signature = r.bytes();\n                        break;\n                    case 6:\n                        m.key = r.bytes();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                if (!m.hasOwnProperty(\"topic\"))\n                    throw $util.ProtocolError(\"missing required 'topic'\", { instance: m });\n                return m;\n            };\n\n            /**\n             * Creates a Message message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.Message\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.Message} Message\n             */\n            Message.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.Message)\n                    return d;\n                var m = new $root.RPC.Message();\n                if (d.from != null) {\n                    if (typeof d.from === \"string\")\n                        $util.base64.decode(d.from, m.from = $util.newBuffer($util.base64.length(d.from)), 0);\n                    else if (d.from.length)\n                        m.from = d.from;\n                }\n                if (d.data != null) {\n                    if (typeof d.data === \"string\")\n                        $util.base64.decode(d.data, m.data = $util.newBuffer($util.base64.length(d.data)), 0);\n                    else if (d.data.length)\n                        m.data = d.data;\n                }\n                if (d.seqno != null) {\n                    if (typeof d.seqno === \"string\")\n                        $util.base64.decode(d.seqno, m.seqno = $util.newBuffer($util.base64.length(d.seqno)), 0);\n                    else if (d.seqno.length)\n                        m.seqno = d.seqno;\n                }\n                if (d.topic != null) {\n                    m.topic = String(d.topic);\n                }\n                if (d.signature != null) {\n                    if (typeof d.signature === \"string\")\n                        $util.base64.decode(d.signature, m.signature = $util.newBuffer($util.base64.length(d.signature)), 0);\n                    else if (d.signature.length)\n                        m.signature = d.signature;\n                }\n                if (d.key != null) {\n                    if (typeof d.key === \"string\")\n                        $util.base64.decode(d.key, m.key = $util.newBuffer($util.base64.length(d.key)), 0);\n                    else if (d.key.length)\n                        m.key = d.key;\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a Message message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.Message\n             * @static\n             * @param {RPC.Message} m Message\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Message.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.defaults) {\n                    d.topic = \"\";\n                }\n                if (m.from != null && m.hasOwnProperty(\"from\")) {\n                    d.from = o.bytes === String ? $util.base64.encode(m.from, 0, m.from.length) : o.bytes === Array ? Array.prototype.slice.call(m.from) : m.from;\n                    if (o.oneofs)\n                        d._from = \"from\";\n                }\n                if (m.data != null && m.hasOwnProperty(\"data\")) {\n                    d.data = o.bytes === String ? $util.base64.encode(m.data, 0, m.data.length) : o.bytes === Array ? Array.prototype.slice.call(m.data) : m.data;\n                    if (o.oneofs)\n                        d._data = \"data\";\n                }\n                if (m.seqno != null && m.hasOwnProperty(\"seqno\")) {\n                    d.seqno = o.bytes === String ? $util.base64.encode(m.seqno, 0, m.seqno.length) : o.bytes === Array ? Array.prototype.slice.call(m.seqno) : m.seqno;\n                    if (o.oneofs)\n                        d._seqno = \"seqno\";\n                }\n                if (m.topic != null && m.hasOwnProperty(\"topic\")) {\n                    d.topic = m.topic;\n                }\n                if (m.signature != null && m.hasOwnProperty(\"signature\")) {\n                    d.signature = o.bytes === String ? $util.base64.encode(m.signature, 0, m.signature.length) : o.bytes === Array ? Array.prototype.slice.call(m.signature) : m.signature;\n                    if (o.oneofs)\n                        d._signature = \"signature\";\n                }\n                if (m.key != null && m.hasOwnProperty(\"key\")) {\n                    d.key = o.bytes === String ? $util.base64.encode(m.key, 0, m.key.length) : o.bytes === Array ? Array.prototype.slice.call(m.key) : m.key;\n                    if (o.oneofs)\n                        d._key = \"key\";\n                }\n                return d;\n            };\n\n            /**\n             * Converts this Message to JSON.\n             * @function toJSON\n             * @memberof RPC.Message\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Message.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Message;\n        })();\n\n        RPC.ControlMessage = (function() {\n\n            /**\n             * Properties of a ControlMessage.\n             * @memberof RPC\n             * @interface IControlMessage\n             * @property {Array.<RPC.IControlIHave>|null} [ihave] ControlMessage ihave\n             * @property {Array.<RPC.IControlIWant>|null} [iwant] ControlMessage iwant\n             * @property {Array.<RPC.IControlGraft>|null} [graft] ControlMessage graft\n             * @property {Array.<RPC.IControlPrune>|null} [prune] ControlMessage prune\n             */\n\n            /**\n             * Constructs a new ControlMessage.\n             * @memberof RPC\n             * @classdesc Represents a ControlMessage.\n             * @implements IControlMessage\n             * @constructor\n             * @param {RPC.IControlMessage=} [p] Properties to set\n             */\n            function ControlMessage(p) {\n                this.ihave = [];\n                this.iwant = [];\n                this.graft = [];\n                this.prune = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * ControlMessage ihave.\n             * @member {Array.<RPC.IControlIHave>} ihave\n             * @memberof RPC.ControlMessage\n             * @instance\n             */\n            ControlMessage.prototype.ihave = $util.emptyArray;\n\n            /**\n             * ControlMessage iwant.\n             * @member {Array.<RPC.IControlIWant>} iwant\n             * @memberof RPC.ControlMessage\n             * @instance\n             */\n            ControlMessage.prototype.iwant = $util.emptyArray;\n\n            /**\n             * ControlMessage graft.\n             * @member {Array.<RPC.IControlGraft>} graft\n             * @memberof RPC.ControlMessage\n             * @instance\n             */\n            ControlMessage.prototype.graft = $util.emptyArray;\n\n            /**\n             * ControlMessage prune.\n             * @member {Array.<RPC.IControlPrune>} prune\n             * @memberof RPC.ControlMessage\n             * @instance\n             */\n            ControlMessage.prototype.prune = $util.emptyArray;\n\n            /**\n             * Encodes the specified ControlMessage message. Does not implicitly {@link RPC.ControlMessage.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlMessage\n             * @static\n             * @param {RPC.IControlMessage} m ControlMessage message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlMessage.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.ihave != null && m.ihave.length) {\n                    for (var i = 0; i < m.ihave.length; ++i)\n                        $root.RPC.ControlIHave.encode(m.ihave[i], w.uint32(10).fork()).ldelim();\n                }\n                if (m.iwant != null && m.iwant.length) {\n                    for (var i = 0; i < m.iwant.length; ++i)\n                        $root.RPC.ControlIWant.encode(m.iwant[i], w.uint32(18).fork()).ldelim();\n                }\n                if (m.graft != null && m.graft.length) {\n                    for (var i = 0; i < m.graft.length; ++i)\n                        $root.RPC.ControlGraft.encode(m.graft[i], w.uint32(26).fork()).ldelim();\n                }\n                if (m.prune != null && m.prune.length) {\n                    for (var i = 0; i < m.prune.length; ++i)\n                        $root.RPC.ControlPrune.encode(m.prune[i], w.uint32(34).fork()).ldelim();\n                }\n                return w;\n            };\n\n            /**\n             * Decodes a ControlMessage message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlMessage\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlMessage} ControlMessage\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlMessage.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlMessage();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.ihave && m.ihave.length))\n                            m.ihave = [];\n                        m.ihave.push($root.RPC.ControlIHave.decode(r, r.uint32()));\n                        break;\n                    case 2:\n                        if (!(m.iwant && m.iwant.length))\n                            m.iwant = [];\n                        m.iwant.push($root.RPC.ControlIWant.decode(r, r.uint32()));\n                        break;\n                    case 3:\n                        if (!(m.graft && m.graft.length))\n                            m.graft = [];\n                        m.graft.push($root.RPC.ControlGraft.decode(r, r.uint32()));\n                        break;\n                    case 4:\n                        if (!(m.prune && m.prune.length))\n                            m.prune = [];\n                        m.prune.push($root.RPC.ControlPrune.decode(r, r.uint32()));\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a ControlMessage message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlMessage\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlMessage} ControlMessage\n             */\n            ControlMessage.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlMessage)\n                    return d;\n                var m = new $root.RPC.ControlMessage();\n                if (d.ihave) {\n                    if (!Array.isArray(d.ihave))\n                        throw TypeError(\".RPC.ControlMessage.ihave: array expected\");\n                    m.ihave = [];\n                    for (var i = 0; i < d.ihave.length; ++i) {\n                        if (typeof d.ihave[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlMessage.ihave: object expected\");\n                        m.ihave[i] = $root.RPC.ControlIHave.fromObject(d.ihave[i]);\n                    }\n                }\n                if (d.iwant) {\n                    if (!Array.isArray(d.iwant))\n                        throw TypeError(\".RPC.ControlMessage.iwant: array expected\");\n                    m.iwant = [];\n                    for (var i = 0; i < d.iwant.length; ++i) {\n                        if (typeof d.iwant[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlMessage.iwant: object expected\");\n                        m.iwant[i] = $root.RPC.ControlIWant.fromObject(d.iwant[i]);\n                    }\n                }\n                if (d.graft) {\n                    if (!Array.isArray(d.graft))\n                        throw TypeError(\".RPC.ControlMessage.graft: array expected\");\n                    m.graft = [];\n                    for (var i = 0; i < d.graft.length; ++i) {\n                        if (typeof d.graft[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlMessage.graft: object expected\");\n                        m.graft[i] = $root.RPC.ControlGraft.fromObject(d.graft[i]);\n                    }\n                }\n                if (d.prune) {\n                    if (!Array.isArray(d.prune))\n                        throw TypeError(\".RPC.ControlMessage.prune: array expected\");\n                    m.prune = [];\n                    for (var i = 0; i < d.prune.length; ++i) {\n                        if (typeof d.prune[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlMessage.prune: object expected\");\n                        m.prune[i] = $root.RPC.ControlPrune.fromObject(d.prune[i]);\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a ControlMessage message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlMessage\n             * @static\n             * @param {RPC.ControlMessage} m ControlMessage\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlMessage.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.arrays || o.defaults) {\n                    d.ihave = [];\n                    d.iwant = [];\n                    d.graft = [];\n                    d.prune = [];\n                }\n                if (m.ihave && m.ihave.length) {\n                    d.ihave = [];\n                    for (var j = 0; j < m.ihave.length; ++j) {\n                        d.ihave[j] = $root.RPC.ControlIHave.toObject(m.ihave[j], o);\n                    }\n                }\n                if (m.iwant && m.iwant.length) {\n                    d.iwant = [];\n                    for (var j = 0; j < m.iwant.length; ++j) {\n                        d.iwant[j] = $root.RPC.ControlIWant.toObject(m.iwant[j], o);\n                    }\n                }\n                if (m.graft && m.graft.length) {\n                    d.graft = [];\n                    for (var j = 0; j < m.graft.length; ++j) {\n                        d.graft[j] = $root.RPC.ControlGraft.toObject(m.graft[j], o);\n                    }\n                }\n                if (m.prune && m.prune.length) {\n                    d.prune = [];\n                    for (var j = 0; j < m.prune.length; ++j) {\n                        d.prune[j] = $root.RPC.ControlPrune.toObject(m.prune[j], o);\n                    }\n                }\n                return d;\n            };\n\n            /**\n             * Converts this ControlMessage to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlMessage\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlMessage.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ControlMessage;\n        })();\n\n        RPC.ControlIHave = (function() {\n\n            /**\n             * Properties of a ControlIHave.\n             * @memberof RPC\n             * @interface IControlIHave\n             * @property {string|null} [topicID] ControlIHave topicID\n             * @property {Array.<Uint8Array>|null} [messageIDs] ControlIHave messageIDs\n             */\n\n            /**\n             * Constructs a new ControlIHave.\n             * @memberof RPC\n             * @classdesc Represents a ControlIHave.\n             * @implements IControlIHave\n             * @constructor\n             * @param {RPC.IControlIHave=} [p] Properties to set\n             */\n            function ControlIHave(p) {\n                this.messageIDs = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * ControlIHave topicID.\n             * @member {string|null|undefined} topicID\n             * @memberof RPC.ControlIHave\n             * @instance\n             */\n            ControlIHave.prototype.topicID = null;\n\n            /**\n             * ControlIHave messageIDs.\n             * @member {Array.<Uint8Array>} messageIDs\n             * @memberof RPC.ControlIHave\n             * @instance\n             */\n            ControlIHave.prototype.messageIDs = $util.emptyArray;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * ControlIHave _topicID.\n             * @member {\"topicID\"|undefined} _topicID\n             * @memberof RPC.ControlIHave\n             * @instance\n             */\n            Object.defineProperty(ControlIHave.prototype, \"_topicID\", {\n                get: $util.oneOfGetter($oneOfFields = [\"topicID\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Encodes the specified ControlIHave message. Does not implicitly {@link RPC.ControlIHave.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlIHave\n             * @static\n             * @param {RPC.IControlIHave} m ControlIHave message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlIHave.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.topicID != null && Object.hasOwnProperty.call(m, \"topicID\"))\n                    w.uint32(10).string(m.topicID);\n                if (m.messageIDs != null && m.messageIDs.length) {\n                    for (var i = 0; i < m.messageIDs.length; ++i)\n                        w.uint32(18).bytes(m.messageIDs[i]);\n                }\n                return w;\n            };\n\n            /**\n             * Decodes a ControlIHave message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlIHave\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlIHave} ControlIHave\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlIHave.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlIHave();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.topicID = r.string();\n                        break;\n                    case 2:\n                        if (!(m.messageIDs && m.messageIDs.length))\n                            m.messageIDs = [];\n                        m.messageIDs.push(r.bytes());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a ControlIHave message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlIHave\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlIHave} ControlIHave\n             */\n            ControlIHave.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlIHave)\n                    return d;\n                var m = new $root.RPC.ControlIHave();\n                if (d.topicID != null) {\n                    m.topicID = String(d.topicID);\n                }\n                if (d.messageIDs) {\n                    if (!Array.isArray(d.messageIDs))\n                        throw TypeError(\".RPC.ControlIHave.messageIDs: array expected\");\n                    m.messageIDs = [];\n                    for (var i = 0; i < d.messageIDs.length; ++i) {\n                        if (typeof d.messageIDs[i] === \"string\")\n                            $util.base64.decode(d.messageIDs[i], m.messageIDs[i] = $util.newBuffer($util.base64.length(d.messageIDs[i])), 0);\n                        else if (d.messageIDs[i].length)\n                            m.messageIDs[i] = d.messageIDs[i];\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a ControlIHave message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlIHave\n             * @static\n             * @param {RPC.ControlIHave} m ControlIHave\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlIHave.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.arrays || o.defaults) {\n                    d.messageIDs = [];\n                }\n                if (m.topicID != null && m.hasOwnProperty(\"topicID\")) {\n                    d.topicID = m.topicID;\n                    if (o.oneofs)\n                        d._topicID = \"topicID\";\n                }\n                if (m.messageIDs && m.messageIDs.length) {\n                    d.messageIDs = [];\n                    for (var j = 0; j < m.messageIDs.length; ++j) {\n                        d.messageIDs[j] = o.bytes === String ? $util.base64.encode(m.messageIDs[j], 0, m.messageIDs[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.messageIDs[j]) : m.messageIDs[j];\n                    }\n                }\n                return d;\n            };\n\n            /**\n             * Converts this ControlIHave to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlIHave\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlIHave.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ControlIHave;\n        })();\n\n        RPC.ControlIWant = (function() {\n\n            /**\n             * Properties of a ControlIWant.\n             * @memberof RPC\n             * @interface IControlIWant\n             * @property {Array.<Uint8Array>|null} [messageIDs] ControlIWant messageIDs\n             */\n\n            /**\n             * Constructs a new ControlIWant.\n             * @memberof RPC\n             * @classdesc Represents a ControlIWant.\n             * @implements IControlIWant\n             * @constructor\n             * @param {RPC.IControlIWant=} [p] Properties to set\n             */\n            function ControlIWant(p) {\n                this.messageIDs = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * ControlIWant messageIDs.\n             * @member {Array.<Uint8Array>} messageIDs\n             * @memberof RPC.ControlIWant\n             * @instance\n             */\n            ControlIWant.prototype.messageIDs = $util.emptyArray;\n\n            /**\n             * Encodes the specified ControlIWant message. Does not implicitly {@link RPC.ControlIWant.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlIWant\n             * @static\n             * @param {RPC.IControlIWant} m ControlIWant message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlIWant.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.messageIDs != null && m.messageIDs.length) {\n                    for (var i = 0; i < m.messageIDs.length; ++i)\n                        w.uint32(10).bytes(m.messageIDs[i]);\n                }\n                return w;\n            };\n\n            /**\n             * Decodes a ControlIWant message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlIWant\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlIWant} ControlIWant\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlIWant.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlIWant();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.messageIDs && m.messageIDs.length))\n                            m.messageIDs = [];\n                        m.messageIDs.push(r.bytes());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a ControlIWant message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlIWant\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlIWant} ControlIWant\n             */\n            ControlIWant.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlIWant)\n                    return d;\n                var m = new $root.RPC.ControlIWant();\n                if (d.messageIDs) {\n                    if (!Array.isArray(d.messageIDs))\n                        throw TypeError(\".RPC.ControlIWant.messageIDs: array expected\");\n                    m.messageIDs = [];\n                    for (var i = 0; i < d.messageIDs.length; ++i) {\n                        if (typeof d.messageIDs[i] === \"string\")\n                            $util.base64.decode(d.messageIDs[i], m.messageIDs[i] = $util.newBuffer($util.base64.length(d.messageIDs[i])), 0);\n                        else if (d.messageIDs[i].length)\n                            m.messageIDs[i] = d.messageIDs[i];\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a ControlIWant message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlIWant\n             * @static\n             * @param {RPC.ControlIWant} m ControlIWant\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlIWant.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.arrays || o.defaults) {\n                    d.messageIDs = [];\n                }\n                if (m.messageIDs && m.messageIDs.length) {\n                    d.messageIDs = [];\n                    for (var j = 0; j < m.messageIDs.length; ++j) {\n                        d.messageIDs[j] = o.bytes === String ? $util.base64.encode(m.messageIDs[j], 0, m.messageIDs[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.messageIDs[j]) : m.messageIDs[j];\n                    }\n                }\n                return d;\n            };\n\n            /**\n             * Converts this ControlIWant to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlIWant\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlIWant.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ControlIWant;\n        })();\n\n        RPC.ControlGraft = (function() {\n\n            /**\n             * Properties of a ControlGraft.\n             * @memberof RPC\n             * @interface IControlGraft\n             * @property {string|null} [topicID] ControlGraft topicID\n             */\n\n            /**\n             * Constructs a new ControlGraft.\n             * @memberof RPC\n             * @classdesc Represents a ControlGraft.\n             * @implements IControlGraft\n             * @constructor\n             * @param {RPC.IControlGraft=} [p] Properties to set\n             */\n            function ControlGraft(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * ControlGraft topicID.\n             * @member {string|null|undefined} topicID\n             * @memberof RPC.ControlGraft\n             * @instance\n             */\n            ControlGraft.prototype.topicID = null;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * ControlGraft _topicID.\n             * @member {\"topicID\"|undefined} _topicID\n             * @memberof RPC.ControlGraft\n             * @instance\n             */\n            Object.defineProperty(ControlGraft.prototype, \"_topicID\", {\n                get: $util.oneOfGetter($oneOfFields = [\"topicID\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Encodes the specified ControlGraft message. Does not implicitly {@link RPC.ControlGraft.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlGraft\n             * @static\n             * @param {RPC.IControlGraft} m ControlGraft message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlGraft.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.topicID != null && Object.hasOwnProperty.call(m, \"topicID\"))\n                    w.uint32(10).string(m.topicID);\n                return w;\n            };\n\n            /**\n             * Decodes a ControlGraft message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlGraft\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlGraft} ControlGraft\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlGraft.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlGraft();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.topicID = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a ControlGraft message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlGraft\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlGraft} ControlGraft\n             */\n            ControlGraft.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlGraft)\n                    return d;\n                var m = new $root.RPC.ControlGraft();\n                if (d.topicID != null) {\n                    m.topicID = String(d.topicID);\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a ControlGraft message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlGraft\n             * @static\n             * @param {RPC.ControlGraft} m ControlGraft\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlGraft.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (m.topicID != null && m.hasOwnProperty(\"topicID\")) {\n                    d.topicID = m.topicID;\n                    if (o.oneofs)\n                        d._topicID = \"topicID\";\n                }\n                return d;\n            };\n\n            /**\n             * Converts this ControlGraft to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlGraft\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlGraft.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ControlGraft;\n        })();\n\n        RPC.ControlPrune = (function() {\n\n            /**\n             * Properties of a ControlPrune.\n             * @memberof RPC\n             * @interface IControlPrune\n             * @property {string|null} [topicID] ControlPrune topicID\n             * @property {Array.<RPC.IPeerInfo>|null} [peers] ControlPrune peers\n             * @property {number|null} [backoff] ControlPrune backoff\n             */\n\n            /**\n             * Constructs a new ControlPrune.\n             * @memberof RPC\n             * @classdesc Represents a ControlPrune.\n             * @implements IControlPrune\n             * @constructor\n             * @param {RPC.IControlPrune=} [p] Properties to set\n             */\n            function ControlPrune(p) {\n                this.peers = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * ControlPrune topicID.\n             * @member {string|null|undefined} topicID\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            ControlPrune.prototype.topicID = null;\n\n            /**\n             * ControlPrune peers.\n             * @member {Array.<RPC.IPeerInfo>} peers\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            ControlPrune.prototype.peers = $util.emptyArray;\n\n            /**\n             * ControlPrune backoff.\n             * @member {number|null|undefined} backoff\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            ControlPrune.prototype.backoff = null;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * ControlPrune _topicID.\n             * @member {\"topicID\"|undefined} _topicID\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            Object.defineProperty(ControlPrune.prototype, \"_topicID\", {\n                get: $util.oneOfGetter($oneOfFields = [\"topicID\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * ControlPrune _backoff.\n             * @member {\"backoff\"|undefined} _backoff\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            Object.defineProperty(ControlPrune.prototype, \"_backoff\", {\n                get: $util.oneOfGetter($oneOfFields = [\"backoff\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Encodes the specified ControlPrune message. Does not implicitly {@link RPC.ControlPrune.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlPrune\n             * @static\n             * @param {RPC.IControlPrune} m ControlPrune message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlPrune.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.topicID != null && Object.hasOwnProperty.call(m, \"topicID\"))\n                    w.uint32(10).string(m.topicID);\n                if (m.peers != null && m.peers.length) {\n                    for (var i = 0; i < m.peers.length; ++i)\n                        $root.RPC.PeerInfo.encode(m.peers[i], w.uint32(18).fork()).ldelim();\n                }\n                if (m.backoff != null && Object.hasOwnProperty.call(m, \"backoff\"))\n                    w.uint32(24).uint64(m.backoff);\n                return w;\n            };\n\n            /**\n             * Decodes a ControlPrune message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlPrune\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlPrune} ControlPrune\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlPrune.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlPrune();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.topicID = r.string();\n                        break;\n                    case 2:\n                        if (!(m.peers && m.peers.length))\n                            m.peers = [];\n                        m.peers.push($root.RPC.PeerInfo.decode(r, r.uint32()));\n                        break;\n                    case 3:\n                        m.backoff = r.uint64();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a ControlPrune message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlPrune\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlPrune} ControlPrune\n             */\n            ControlPrune.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlPrune)\n                    return d;\n                var m = new $root.RPC.ControlPrune();\n                if (d.topicID != null) {\n                    m.topicID = String(d.topicID);\n                }\n                if (d.peers) {\n                    if (!Array.isArray(d.peers))\n                        throw TypeError(\".RPC.ControlPrune.peers: array expected\");\n                    m.peers = [];\n                    for (var i = 0; i < d.peers.length; ++i) {\n                        if (typeof d.peers[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlPrune.peers: object expected\");\n                        m.peers[i] = $root.RPC.PeerInfo.fromObject(d.peers[i]);\n                    }\n                }\n                if (d.backoff != null) {\n                    if ($util.Long)\n                        (m.backoff = $util.Long.fromValue(d.backoff)).unsigned = true;\n                    else if (typeof d.backoff === \"string\")\n                        m.backoff = parseInt(d.backoff, 10);\n                    else if (typeof d.backoff === \"number\")\n                        m.backoff = d.backoff;\n                    else if (typeof d.backoff === \"object\")\n                        m.backoff = new $util.LongBits(d.backoff.low >>> 0, d.backoff.high >>> 0).toNumber(true);\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a ControlPrune message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlPrune\n             * @static\n             * @param {RPC.ControlPrune} m ControlPrune\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlPrune.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.arrays || o.defaults) {\n                    d.peers = [];\n                }\n                if (m.topicID != null && m.hasOwnProperty(\"topicID\")) {\n                    d.topicID = m.topicID;\n                    if (o.oneofs)\n                        d._topicID = \"topicID\";\n                }\n                if (m.peers && m.peers.length) {\n                    d.peers = [];\n                    for (var j = 0; j < m.peers.length; ++j) {\n                        d.peers[j] = $root.RPC.PeerInfo.toObject(m.peers[j], o);\n                    }\n                }\n                if (m.backoff != null && m.hasOwnProperty(\"backoff\")) {\n                    if (typeof m.backoff === \"number\")\n                        d.backoff = o.longs === String ? String(m.backoff) : m.backoff;\n                    else\n                        d.backoff = o.longs === String ? $util.Long.prototype.toString.call(m.backoff) : o.longs === Number ? new $util.LongBits(m.backoff.low >>> 0, m.backoff.high >>> 0).toNumber(true) : m.backoff;\n                    if (o.oneofs)\n                        d._backoff = \"backoff\";\n                }\n                return d;\n            };\n\n            /**\n             * Converts this ControlPrune to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlPrune\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlPrune.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ControlPrune;\n        })();\n\n        RPC.PeerInfo = (function() {\n\n            /**\n             * Properties of a PeerInfo.\n             * @memberof RPC\n             * @interface IPeerInfo\n             * @property {Uint8Array|null} [peerID] PeerInfo peerID\n             * @property {Uint8Array|null} [signedPeerRecord] PeerInfo signedPeerRecord\n             */\n\n            /**\n             * Constructs a new PeerInfo.\n             * @memberof RPC\n             * @classdesc Represents a PeerInfo.\n             * @implements IPeerInfo\n             * @constructor\n             * @param {RPC.IPeerInfo=} [p] Properties to set\n             */\n            function PeerInfo(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * PeerInfo peerID.\n             * @member {Uint8Array|null|undefined} peerID\n             * @memberof RPC.PeerInfo\n             * @instance\n             */\n            PeerInfo.prototype.peerID = null;\n\n            /**\n             * PeerInfo signedPeerRecord.\n             * @member {Uint8Array|null|undefined} signedPeerRecord\n             * @memberof RPC.PeerInfo\n             * @instance\n             */\n            PeerInfo.prototype.signedPeerRecord = null;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * PeerInfo _peerID.\n             * @member {\"peerID\"|undefined} _peerID\n             * @memberof RPC.PeerInfo\n             * @instance\n             */\n            Object.defineProperty(PeerInfo.prototype, \"_peerID\", {\n                get: $util.oneOfGetter($oneOfFields = [\"peerID\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * PeerInfo _signedPeerRecord.\n             * @member {\"signedPeerRecord\"|undefined} _signedPeerRecord\n             * @memberof RPC.PeerInfo\n             * @instance\n             */\n            Object.defineProperty(PeerInfo.prototype, \"_signedPeerRecord\", {\n                get: $util.oneOfGetter($oneOfFields = [\"signedPeerRecord\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Encodes the specified PeerInfo message. Does not implicitly {@link RPC.PeerInfo.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.PeerInfo\n             * @static\n             * @param {RPC.IPeerInfo} m PeerInfo message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            PeerInfo.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.peerID != null && Object.hasOwnProperty.call(m, \"peerID\"))\n                    w.uint32(10).bytes(m.peerID);\n                if (m.signedPeerRecord != null && Object.hasOwnProperty.call(m, \"signedPeerRecord\"))\n                    w.uint32(18).bytes(m.signedPeerRecord);\n                return w;\n            };\n\n            /**\n             * Decodes a PeerInfo message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.PeerInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.PeerInfo} PeerInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            PeerInfo.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.PeerInfo();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.peerID = r.bytes();\n                        break;\n                    case 2:\n                        m.signedPeerRecord = r.bytes();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a PeerInfo message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.PeerInfo\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.PeerInfo} PeerInfo\n             */\n            PeerInfo.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.PeerInfo)\n                    return d;\n                var m = new $root.RPC.PeerInfo();\n                if (d.peerID != null) {\n                    if (typeof d.peerID === \"string\")\n                        $util.base64.decode(d.peerID, m.peerID = $util.newBuffer($util.base64.length(d.peerID)), 0);\n                    else if (d.peerID.length)\n                        m.peerID = d.peerID;\n                }\n                if (d.signedPeerRecord != null) {\n                    if (typeof d.signedPeerRecord === \"string\")\n                        $util.base64.decode(d.signedPeerRecord, m.signedPeerRecord = $util.newBuffer($util.base64.length(d.signedPeerRecord)), 0);\n                    else if (d.signedPeerRecord.length)\n                        m.signedPeerRecord = d.signedPeerRecord;\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a PeerInfo message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.PeerInfo\n             * @static\n             * @param {RPC.PeerInfo} m PeerInfo\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            PeerInfo.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (m.peerID != null && m.hasOwnProperty(\"peerID\")) {\n                    d.peerID = o.bytes === String ? $util.base64.encode(m.peerID, 0, m.peerID.length) : o.bytes === Array ? Array.prototype.slice.call(m.peerID) : m.peerID;\n                    if (o.oneofs)\n                        d._peerID = \"peerID\";\n                }\n                if (m.signedPeerRecord != null && m.hasOwnProperty(\"signedPeerRecord\")) {\n                    d.signedPeerRecord = o.bytes === String ? $util.base64.encode(m.signedPeerRecord, 0, m.signedPeerRecord.length) : o.bytes === Array ? Array.prototype.slice.call(m.signedPeerRecord) : m.signedPeerRecord;\n                    if (o.oneofs)\n                        d._signedPeerRecord = \"signedPeerRecord\";\n                }\n                return d;\n            };\n\n            /**\n             * Converts this PeerInfo to JSON.\n             * @function toJSON\n             * @memberof RPC.PeerInfo\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            PeerInfo.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return PeerInfo;\n        })();\n\n        return RPC;\n    })();\n\n    return $root;\n});\n", "'use strict';\n\n/**\n * Custom implementation of a double ended queue.\n */\nfunction Denque(array, options) {\n  var options = options || {};\n  this._capacity = options.capacity;\n\n  this._head = 0;\n  this._tail = 0;\n\n  if (Array.isArray(array)) {\n    this._fromArray(array);\n  } else {\n    this._capacityMask = 0x3;\n    this._list = new Array(4);\n  }\n}\n\n/**\n * --------------\n *  PUBLIC API\n * -------------\n */\n\n/**\n * Returns the item at the specified index from the list.\n * 0 is the first element, 1 is the second, and so on...\n * Elements at negative values are that many from the end: -1 is one before the end\n * (the last element), -2 is two before the end (one before last), etc.\n * @param index\n * @returns {*}\n */\nDenque.prototype.peekAt = function peekAt(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var len = this.size();\n  if (i >= len || i < -len) return undefined;\n  if (i < 0) i += len;\n  i = (this._head + i) & this._capacityMask;\n  return this._list[i];\n};\n\n/**\n * Alias for peekAt()\n * @param i\n * @returns {*}\n */\nDenque.prototype.get = function get(i) {\n  return this.peekAt(i);\n};\n\n/**\n * Returns the first item in the list without removing it.\n * @returns {*}\n */\nDenque.prototype.peek = function peek() {\n  if (this._head === this._tail) return undefined;\n  return this._list[this._head];\n};\n\n/**\n * Alias for peek()\n * @returns {*}\n */\nDenque.prototype.peekFront = function peekFront() {\n  return this.peek();\n};\n\n/**\n * Returns the item that is at the back of the queue without removing it.\n * Uses peekAt(-1)\n */\nDenque.prototype.peekBack = function peekBack() {\n  return this.peekAt(-1);\n};\n\n/**\n * Returns the current length of the queue\n * @return {Number}\n */\nObject.defineProperty(Denque.prototype, 'length', {\n  get: function length() {\n    return this.size();\n  }\n});\n\n/**\n * Return the number of items on the list, or 0 if empty.\n * @returns {number}\n */\nDenque.prototype.size = function size() {\n  if (this._head === this._tail) return 0;\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Add an item at the beginning of the list.\n * @param item\n */\nDenque.prototype.unshift = function unshift(item) {\n  if (arguments.length === 0) return this.size();\n  var len = this._list.length;\n  this._head = (this._head - 1 + len) & this._capacityMask;\n  this._list[this._head] = item;\n  if (this._tail === this._head) this._growArray();\n  if (this._capacity && this.size() > this._capacity) this.pop();\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the first item on the list,\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.shift = function shift() {\n  var head = this._head;\n  if (head === this._tail) return undefined;\n  var item = this._list[head];\n  this._list[head] = undefined;\n  this._head = (head + 1) & this._capacityMask;\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Add an item to the bottom of the list.\n * @param item\n */\nDenque.prototype.push = function push(item) {\n  if (arguments.length === 0) return this.size();\n  var tail = this._tail;\n  this._list[tail] = item;\n  this._tail = (tail + 1) & this._capacityMask;\n  if (this._tail === this._head) {\n    this._growArray();\n  }\n  if (this._capacity && this.size() > this._capacity) {\n    this.shift();\n  }\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the last item on the list.\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.pop = function pop() {\n  var tail = this._tail;\n  if (tail === this._head) return undefined;\n  var len = this._list.length;\n  this._tail = (tail - 1 + len) & this._capacityMask;\n  var item = this._list[this._tail];\n  this._list[this._tail] = undefined;\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Remove and return the item at the specified index from the list.\n * Returns undefined if the list is empty.\n * @param index\n * @returns {*}\n */\nDenque.prototype.removeOne = function removeOne(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size) return void 0;\n  if (i < 0) i += size;\n  i = (this._head + i) & this._capacityMask;\n  var item = this._list[i];\n  var k;\n  if (index < size / 2) {\n    for (k = index; k > 0; k--) {\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._head = (this._head + 1 + len) & this._capacityMask;\n  } else {\n    for (k = size - 1 - index; k > 0; k--) {\n      this._list[i] = this._list[i = (i + 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\n  }\n  return item;\n};\n\n/**\n * Remove number of items from the specified index from the list.\n * Returns array of removed items.\n * Returns undefined if the list is empty.\n * @param index\n * @param count\n * @returns {array}\n */\nDenque.prototype.remove = function remove(index, count) {\n  var i = index;\n  var removed;\n  var del_count = count;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size || count < 1) return void 0;\n  if (i < 0) i += size;\n  if (count === 1 || !count) {\n    removed = new Array(1);\n    removed[0] = this.removeOne(i);\n    return removed;\n  }\n  if (i === 0 && i + count >= size) {\n    removed = this.toArray();\n    this.clear();\n    return removed;\n  }\n  if (i + count > size) count = size - i;\n  var k;\n  removed = new Array(count);\n  for (k = 0; k < count; k++) {\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\n  }\n  i = (this._head + i) & this._capacityMask;\n  if (index + count === size) {\n    this._tail = (this._tail - count + len) & this._capacityMask;\n    for (k = count; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index === 0) {\n    this._head = (this._head + count + len) & this._capacityMask;\n    for (k = count - 1; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (i < size / 2) {\n    this._head = (this._head + index + count + len) & this._capacityMask;\n    for (k = index; k > 0; k--) {\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\n    }\n    i = (this._head - 1 + len) & this._capacityMask;\n    while (del_count > 0) {\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n    if (index < 0) this._tail = i;\n  } else {\n    this._tail = i;\n    i = (i + count + len) & this._capacityMask;\n    for (k = size - (count + index); k > 0; k--) {\n      this.push(this._list[i++]);\n    }\n    i = this._tail;\n    while (del_count > 0) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  }\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\n  return removed;\n};\n\n/**\n * Native splice implementation.\n * Remove number of items from the specified index from the list and/or add new elements.\n * Returns array of removed items or empty array if count == 0.\n * Returns undefined if the list is empty.\n *\n * @param index\n * @param count\n * @param {...*} [elements]\n * @returns {array}\n */\nDenque.prototype.splice = function splice(index, count) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var size = this.size();\n  if (i < 0) i += size;\n  if (i > size) return void 0;\n  if (arguments.length > 2) {\n    var k;\n    var temp;\n    var removed;\n    var arg_len = arguments.length;\n    var len = this._list.length;\n    var arguments_index = 2;\n    if (!size || i < size / 2) {\n      temp = new Array(i);\n      for (k = 0; k < i; k++) {\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i > 0) {\n          this._head = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._head = (this._head + i + len) & this._capacityMask;\n      }\n      while (arg_len > arguments_index) {\n        this.unshift(arguments[--arg_len]);\n      }\n      for (k = i; k > 0; k--) {\n        this.unshift(temp[k - 1]);\n      }\n    } else {\n      temp = new Array(size - (i + count));\n      var leng = temp.length;\n      for (k = 0; k < leng; k++) {\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i != size) {\n          this._tail = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._tail = (this._tail - leng + len) & this._capacityMask;\n      }\n      while (arguments_index < arg_len) {\n        this.push(arguments[arguments_index++]);\n      }\n      for (k = 0; k < leng; k++) {\n        this.push(temp[k]);\n      }\n    }\n    return removed;\n  } else {\n    return this.remove(i, count);\n  }\n};\n\n/**\n * Soft clear - does not reset capacity.\n */\nDenque.prototype.clear = function clear() {\n  this._list = new Array(this._list.length);\n  this._head = 0;\n  this._tail = 0;\n};\n\n/**\n * Returns true or false whether the list is empty.\n * @returns {boolean}\n */\nDenque.prototype.isEmpty = function isEmpty() {\n  return this._head === this._tail;\n};\n\n/**\n * Returns an array of all queue items.\n * @returns {Array}\n */\nDenque.prototype.toArray = function toArray() {\n  return this._copyArray(false);\n};\n\n/**\n * -------------\n *   INTERNALS\n * -------------\n */\n\n/**\n * Fills the queue with items from an array\n * For use in the constructor\n * @param array\n * @private\n */\nDenque.prototype._fromArray = function _fromArray(array) {\n  var length = array.length;\n  var capacity = this._nextPowerOf2(length);\n\n  this._list = new Array(capacity);\n  this._capacityMask = capacity - 1;\n  this._tail = length;\n\n  for (var i = 0; i < length; i++) this._list[i] = array[i];\n};\n\n/**\n *\n * @param fullCopy\n * @param size Initialize the array with a specific size. Will default to the current list size\n * @returns {Array}\n * @private\n */\nDenque.prototype._copyArray = function _copyArray(fullCopy, size) {\n  var src = this._list;\n  var capacity = src.length;\n  var length = this.length;\n  size = size | length;\n\n  // No prealloc requested and the buffer is contiguous\n  if (size == length && this._head < this._tail) {\n    // Simply do a fast slice copy\n    return this._list.slice(this._head, this._tail);\n  }\n\n  var dest = new Array(size);\n\n  var k = 0;\n  var i;\n  if (fullCopy || this._head > this._tail) {\n    for (i = this._head; i < capacity; i++) dest[k++] = src[i];\n    for (i = 0; i < this._tail; i++) dest[k++] = src[i];\n  } else {\n    for (i = this._head; i < this._tail; i++) dest[k++] = src[i];\n  }\n\n  return dest;\n}\n\n/**\n * Grows the internal list array.\n * @private\n */\nDenque.prototype._growArray = function _growArray() {\n  if (this._head != 0) {\n    // double array size and copy existing data, head to end, then beginning to tail.\n    var newList = this._copyArray(true, this._list.length << 1);\n\n    this._tail = this._list.length;\n    this._head = 0;\n\n    this._list = newList;\n  } else {\n    this._tail = this._list.length;\n    this._list.length <<= 1;\n  }\n\n  this._capacityMask = (this._capacityMask << 1) | 1;\n};\n\n/**\n * Shrinks the internal list array.\n * @private\n */\nDenque.prototype._shrinkArray = function _shrinkArray() {\n  this._list.length >>>= 1;\n  this._capacityMask >>>= 1;\n};\n\n/**\n * Find the next power of 2, at least 4\n * @private\n * @param {number} num \n * @returns {number}\n */\nDenque.prototype._nextPowerOf2 = function _nextPowerOf2(num) {\n  var log2 = Math.log(num) / Math.log(2);\n  var nextPow2 = 1 << (log2 + 1);\n\n  return Math.max(nextPow2, 4);\n}\n\nmodule.exports = Denque;\n", "/*!\n * MIT License\n * \n * Copyright (c) 2017-2022 Peculiar Ventures, LLC\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n */\n\n'use strict';\n\nconst ARRAY_BUFFER_NAME = \"[object ArrayBuffer]\";\nclass BufferSourceConverter {\n    static isArrayBuffer(data) {\n        return Object.prototype.toString.call(data) === ARRAY_BUFFER_NAME;\n    }\n    static toArrayBuffer(data) {\n        if (this.isArrayBuffer(data)) {\n            return data;\n        }\n        if (data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        return this.toUint8Array(data.buffer)\n            .slice(data.byteOffset, data.byteOffset + data.byteLength)\n            .buffer;\n    }\n    static toUint8Array(data) {\n        return this.toView(data, Uint8Array);\n    }\n    static toView(data, type) {\n        if (data.constructor === type) {\n            return data;\n        }\n        if (this.isArrayBuffer(data)) {\n            return new type(data);\n        }\n        if (this.isArrayBufferView(data)) {\n            return new type(data.buffer, data.byteOffset, data.byteLength);\n        }\n        throw new TypeError(\"The provided value is not of type '(ArrayBuffer or ArrayBufferView)'\");\n    }\n    static isBufferSource(data) {\n        return this.isArrayBufferView(data)\n            || this.isArrayBuffer(data);\n    }\n    static isArrayBufferView(data) {\n        return ArrayBuffer.isView(data)\n            || (data && this.isArrayBuffer(data.buffer));\n    }\n    static isEqual(a, b) {\n        const aView = BufferSourceConverter.toUint8Array(a);\n        const bView = BufferSourceConverter.toUint8Array(b);\n        if (aView.length !== bView.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < aView.length; i++) {\n            if (aView[i] !== bView[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static concat(...args) {\n        let buffers;\n        if (Array.isArray(args[0]) && !(args[1] instanceof Function)) {\n            buffers = args[0];\n        }\n        else if (Array.isArray(args[0]) && args[1] instanceof Function) {\n            buffers = args[0];\n        }\n        else {\n            if (args[args.length - 1] instanceof Function) {\n                buffers = args.slice(0, args.length - 1);\n            }\n            else {\n                buffers = args;\n            }\n        }\n        let size = 0;\n        for (const buffer of buffers) {\n            size += buffer.byteLength;\n        }\n        const res = new Uint8Array(size);\n        let offset = 0;\n        for (const buffer of buffers) {\n            const view = this.toUint8Array(buffer);\n            res.set(view, offset);\n            offset += view.length;\n        }\n        if (args[args.length - 1] instanceof Function) {\n            return this.toView(res, args[args.length - 1]);\n        }\n        return res.buffer;\n    }\n}\n\nconst STRING_TYPE = \"string\";\nconst HEX_REGEX = /^[0-9a-f]+$/i;\nconst BASE64_REGEX = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\nconst BASE64URL_REGEX = /^[a-zA-Z0-9-_]+$/;\nclass Utf8Converter {\n    static fromString(text) {\n        const s = unescape(encodeURIComponent(text));\n        const uintArray = new Uint8Array(s.length);\n        for (let i = 0; i < s.length; i++) {\n            uintArray[i] = s.charCodeAt(i);\n        }\n        return uintArray.buffer;\n    }\n    static toString(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let encodedString = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            encodedString += String.fromCharCode(buf[i]);\n        }\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n}\nclass Utf16Converter {\n    static toString(buffer, littleEndian = false) {\n        const arrayBuffer = BufferSourceConverter.toArrayBuffer(buffer);\n        const dataView = new DataView(arrayBuffer);\n        let res = \"\";\n        for (let i = 0; i < arrayBuffer.byteLength; i += 2) {\n            const code = dataView.getUint16(i, littleEndian);\n            res += String.fromCharCode(code);\n        }\n        return res;\n    }\n    static fromString(text, littleEndian = false) {\n        const res = new ArrayBuffer(text.length * 2);\n        const dataView = new DataView(res);\n        for (let i = 0; i < text.length; i++) {\n            dataView.setUint16(i * 2, text.charCodeAt(i), littleEndian);\n        }\n        return res;\n    }\n}\nclass Convert {\n    static isHex(data) {\n        return typeof data === STRING_TYPE\n            && HEX_REGEX.test(data);\n    }\n    static isBase64(data) {\n        return typeof data === STRING_TYPE\n            && BASE64_REGEX.test(data);\n    }\n    static isBase64Url(data) {\n        return typeof data === STRING_TYPE\n            && BASE64URL_REGEX.test(data);\n    }\n    static ToString(buffer, enc = \"utf8\") {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.ToUtf8String(buf);\n            case \"binary\":\n                return this.ToBinary(buf);\n            case \"hex\":\n                return this.ToHex(buf);\n            case \"base64\":\n                return this.ToBase64(buf);\n            case \"base64url\":\n                return this.ToBase64Url(buf);\n            case \"utf16le\":\n                return Utf16Converter.toString(buf, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buf);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static FromString(str, enc = \"utf8\") {\n        if (!str) {\n            return new ArrayBuffer(0);\n        }\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.FromUtf8String(str);\n            case \"binary\":\n                return this.FromBinary(str);\n            case \"hex\":\n                return this.FromHex(str);\n            case \"base64\":\n                return this.FromBase64(str);\n            case \"base64url\":\n                return this.FromBase64Url(str);\n            case \"utf16le\":\n                return Utf16Converter.fromString(str, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(str);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static ToBase64(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        if (typeof btoa !== \"undefined\") {\n            const binary = this.ToString(buf, \"binary\");\n            return btoa(binary);\n        }\n        else {\n            return Buffer.from(buf).toString(\"base64\");\n        }\n    }\n    static FromBase64(base64) {\n        const formatted = this.formatString(base64);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64(formatted)) {\n            throw new TypeError(\"Argument 'base64Text' is not Base64 encoded\");\n        }\n        if (typeof atob !== \"undefined\") {\n            return this.FromBinary(atob(formatted));\n        }\n        else {\n            return new Uint8Array(Buffer.from(formatted, \"base64\")).buffer;\n        }\n    }\n    static FromBase64Url(base64url) {\n        const formatted = this.formatString(base64url);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64Url(formatted)) {\n            throw new TypeError(\"Argument 'base64url' is not Base64Url encoded\");\n        }\n        return this.FromBase64(this.Base64Padding(formatted.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\")));\n    }\n    static ToBase64Url(data) {\n        return this.ToBase64(data).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\n    }\n    static FromUtf8String(text, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.FromBinary(text);\n            case \"utf8\":\n                return Utf8Converter.fromString(text);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(text);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.fromString(text, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static ToUtf8String(buffer, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.ToBinary(buffer);\n            case \"utf8\":\n                return Utf8Converter.toString(buffer);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buffer);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.toString(buffer, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static FromBinary(text) {\n        const stringLength = text.length;\n        const resultView = new Uint8Array(stringLength);\n        for (let i = 0; i < stringLength; i++) {\n            resultView[i] = text.charCodeAt(i);\n        }\n        return resultView.buffer;\n    }\n    static ToBinary(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let res = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            res += String.fromCharCode(buf[i]);\n        }\n        return res;\n    }\n    static ToHex(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let result = \"\";\n        const len = buf.length;\n        for (let i = 0; i < len; i++) {\n            const byte = buf[i];\n            if (byte < 16) {\n                result += \"0\";\n            }\n            result += byte.toString(16);\n        }\n        return result;\n    }\n    static FromHex(hexString) {\n        let formatted = this.formatString(hexString);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isHex(formatted)) {\n            throw new TypeError(\"Argument 'hexString' is not HEX encoded\");\n        }\n        if (formatted.length % 2) {\n            formatted = `0${formatted}`;\n        }\n        const res = new Uint8Array(formatted.length / 2);\n        for (let i = 0; i < formatted.length; i = i + 2) {\n            const c = formatted.slice(i, i + 2);\n            res[i / 2] = parseInt(c, 16);\n        }\n        return res.buffer;\n    }\n    static ToUtf16String(buffer, littleEndian = false) {\n        return Utf16Converter.toString(buffer, littleEndian);\n    }\n    static FromUtf16String(text, littleEndian = false) {\n        return Utf16Converter.fromString(text, littleEndian);\n    }\n    static Base64Padding(base64) {\n        const padCount = 4 - (base64.length % 4);\n        if (padCount < 4) {\n            for (let i = 0; i < padCount; i++) {\n                base64 += \"=\";\n            }\n        }\n        return base64;\n    }\n    static formatString(data) {\n        return (data === null || data === void 0 ? void 0 : data.replace(/[\\n\\r\\t ]/g, \"\")) || \"\";\n    }\n}\nConvert.DEFAULT_UTF8_ENCODING = \"utf8\";\n\nfunction assign(target, ...sources) {\n    const res = arguments[0];\n    for (let i = 1; i < arguments.length; i++) {\n        const obj = arguments[i];\n        for (const prop in obj) {\n            res[prop] = obj[prop];\n        }\n    }\n    return res;\n}\nfunction combine(...buf) {\n    const totalByteLength = buf.map((item) => item.byteLength).reduce((prev, cur) => prev + cur);\n    const res = new Uint8Array(totalByteLength);\n    let currentPos = 0;\n    buf.map((item) => new Uint8Array(item)).forEach((arr) => {\n        for (const item2 of arr) {\n            res[currentPos++] = item2;\n        }\n    });\n    return res.buffer;\n}\nfunction isEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexports.BufferSourceConverter = BufferSourceConverter;\nexports.Convert = Convert;\nexports.assign = assign;\nexports.combine = combine;\nexports.isEqual = isEqual;\n", "import { CustomEvent, TypedEventEmitter, StrictSign, StrictNoSign, TopicValidatorResult } from '@libp2p/interface'\nimport { peerIdFromBytes, peerIdFromString } from '@libp2p/peer-id'\nimport { encode } from 'it-length-prefixed'\nimport { pipe } from 'it-pipe'\nimport { pushable } from 'it-pushable'\nimport * as constants from './constants.js'\nimport {\n  ACCEPT_FROM_WHITELIST_DURATION_MS,\n  ACCEPT_FROM_WHITELIST_MAX_MESSAGES,\n  ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE,\n  BACKOFF_SLACK\n} from './constants.js'\nimport { decodeRpc, type DecodeRPCLimits, defaultDecodeRpcLimits } from './message/decodeRpc.js'\nimport { RPC, type IRPC } from './message/rpc.js'\nimport { MessageCache, type MessageCacheRecord } from './message-cache.js'\nimport {\n  ChurnReason,\n  getMetrics,\n  IHaveIgnoreReason,\n  InclusionReason,\n  type Metrics,\n  type MetricsRegister,\n  ScorePenalty,\n  type TopicStrToLabel,\n  type ToSendGroupCount\n} from './metrics.js'\nimport {\n  PeerScore,\n  type PeerScoreParams,\n  type PeerScoreThresholds,\n  createPeerScoreParams,\n  createPeerScoreThresholds,\n  type PeerScoreStatsDump\n} from './score/index.js'\nimport { computeAllPeersScoreWeights } from './score/scoreMetrics.js'\nimport { InboundStream, OutboundStream } from './stream.js'\nimport { IWantTracer } from './tracer.js'\nimport {\n  type MsgIdFn,\n  type PublishConfig,\n  type TopicStr,\n  type MsgIdStr,\n  ValidateError,\n  type PeerIdStr,\n  MessageStatus,\n  RejectReason,\n  type RejectReasonObj,\n  type FastMsgIdFn,\n  type AddrInfo,\n  type DataTransform,\n  rejectReasonFromAcceptance,\n  type MsgIdToStrFn,\n  type MessageId,\n  type PublishOpts\n} from './types.js'\nimport { buildRawMessage, validateToRawMessage } from './utils/buildRawMessage.js'\nimport { shuffle, messageIdToString } from './utils/index.js'\nimport { msgIdFnStrictNoSign, msgIdFnStrictSign } from './utils/msgIdFn.js'\nimport { multiaddrToIPStr } from './utils/multiaddr.js'\nimport { getPublishConfigFromPeerId } from './utils/publishConfig.js'\nimport { removeFirstNItemsFromSet, removeItemsFromSet } from './utils/set.js'\nimport { SimpleTimeCache } from './utils/time-cache.js'\nimport type { GossipsubOptsSpec } from './config.js'\nimport type {\n  Connection, Stream, PeerId, Peer, PeerStore,\n  Message,\n  PublishResult,\n  PubSub,\n  PubSubEvents,\n  PubSubInit,\n  SubscriptionChangeData,\n  TopicValidatorFn,\n  Logger,\n  ComponentLogger\n} from '@libp2p/interface'\nimport type { ConnectionManager, IncomingStreamData, Registrar } from '@libp2p/interface-internal'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\ntype ConnectionDirection = 'inbound' | 'outbound'\n\ntype ReceivedMessageResult =\n  | { code: MessageStatus.duplicate, msgIdStr: MsgIdStr }\n  | ({ code: MessageStatus.invalid, msgIdStr?: MsgIdStr } & RejectReasonObj)\n  | { code: MessageStatus.valid, messageId: MessageId, msg: Message }\n\nexport const multicodec: string = constants.GossipsubIDv11\n\nexport interface GossipsubOpts extends GossipsubOptsSpec, PubSubInit {\n  /** if dial should fallback to floodsub */\n  fallbackToFloodsub: boolean\n  /** if self-published messages should be sent to all peers */\n  floodPublish: boolean\n  /** serialize message once and send to all peers without control messages */\n  batchPublish: boolean\n  /** whether PX is enabled; this should be enabled in bootstrappers and other well connected/trusted nodes. */\n  doPX: boolean\n  /** peers with which we will maintain direct connections */\n  directPeers: AddrInfo[]\n  /**\n   * If true will not forward messages to mesh peers until reportMessageValidationResult() is called.\n   * Messages will be cached in mcache for some time after which they are evicted. Calling\n   * reportMessageValidationResult() after the message is dropped from mcache won't forward the message.\n   */\n  asyncValidation: boolean\n  /** Do not throw `InsufficientPeers` error if publishing to zero peers */\n  allowPublishToZeroPeers: boolean\n  /** Do not throw `PublishError.Duplicate` if publishing duplicate messages */\n  ignoreDuplicatePublishError: boolean\n  /** For a single stream, await processing each RPC before processing the next */\n  awaitRpcHandler: boolean\n  /** For a single RPC, await processing each message before processing the next */\n  awaitRpcMessageHandler: boolean\n\n  /** message id function */\n  msgIdFn: MsgIdFn\n  /** fast message id function */\n  fastMsgIdFn: FastMsgIdFn\n  /** Uint8Array message id to string function */\n  msgIdToStrFn: MsgIdToStrFn\n  /** override the default MessageCache */\n  messageCache: MessageCache\n  /** peer score parameters */\n  scoreParams: Partial<PeerScoreParams>\n  /** peer score thresholds */\n  scoreThresholds: Partial<PeerScoreThresholds>\n  /** customize GossipsubIWantFollowupTime in order not to apply IWANT penalties */\n  gossipsubIWantFollowupMs: number\n\n  /** override constants for fine tuning */\n  prunePeers?: number\n  pruneBackoff?: number\n  unsubcribeBackoff?: number\n  graftFloodThreshold?: number\n  opportunisticGraftPeers?: number\n  opportunisticGraftTicks?: number\n  directConnectTicks?: number\n\n  dataTransform?: DataTransform\n  metricsRegister?: MetricsRegister | null\n  metricsTopicStrToLabel?: TopicStrToLabel\n\n  // Debug\n  /** Prefix tag for debug logs */\n  debugName?: string\n\n  /**\n   * Specify the maximum number of inbound gossipsub protocol\n   * streams that are allowed to be open concurrently\n   */\n  maxInboundStreams?: number\n\n  /**\n   * Specify the maximum number of outbound gossipsub protocol\n   * streams that are allowed to be open concurrently\n   */\n  maxOutboundStreams?: number\n\n  /**\n   * Specify max buffer size in bytes for OutboundStream.\n   * If full it will throw and reject sending any more data.\n   */\n  maxOutboundBufferSize?: number\n\n  /**\n   * Specify max size to skip decoding messages whose data\n   * section exceeds this size.\n   *\n   */\n  maxInboundDataLength?: number\n\n  /**\n   * If provided, only allow topics in this list\n   */\n  allowedTopics?: string[] | Set<string>\n\n  /**\n   * Limits to bound protobuf decoding\n   */\n  decodeRpcLimits?: DecodeRPCLimits\n}\n\nexport interface GossipsubMessage {\n  propagationSource: PeerId\n  msgId: MsgIdStr\n  msg: Message\n}\n\nexport interface GossipsubEvents extends PubSubEvents {\n  'gossipsub:heartbeat': CustomEvent\n  'gossipsub:message': CustomEvent<GossipsubMessage>\n}\n\nenum GossipStatusCode {\n  started,\n  stopped\n}\n\ntype GossipStatus =\n  | {\n    code: GossipStatusCode.started\n    registrarTopologyIds: string[]\n    heartbeatTimeout: ReturnType<typeof setTimeout>\n    hearbeatStartMs: number\n  }\n  | {\n    code: GossipStatusCode.stopped\n  }\n\ninterface GossipOptions extends GossipsubOpts {\n  scoreParams: PeerScoreParams\n  scoreThresholds: PeerScoreThresholds\n}\n\ninterface AcceptFromWhitelistEntry {\n  /** number of messages accepted since recomputing the peer's score */\n  messagesAccepted: number\n  /** have to recompute score after this time */\n  acceptUntil: number\n}\n\nexport interface GossipSubComponents {\n  peerId: PeerId\n  peerStore: PeerStore\n  registrar: Registrar\n  connectionManager: ConnectionManager\n  logger: ComponentLogger\n}\n\nexport class GossipSub extends TypedEventEmitter<GossipsubEvents> implements PubSub<GossipsubEvents> {\n  /**\n   * The signature policy to follow by default\n   */\n  public readonly globalSignaturePolicy: typeof StrictSign | typeof StrictNoSign\n  public multicodecs: string[] = [constants.GossipsubIDv11, constants.GossipsubIDv10]\n\n  private publishConfig: PublishConfig | undefined\n\n  private readonly dataTransform: DataTransform | undefined\n\n  // State\n\n  public readonly peers = new Set<PeerIdStr>()\n  public readonly streamsInbound = new Map<PeerIdStr, InboundStream>()\n  public readonly streamsOutbound = new Map<PeerIdStr, OutboundStream>()\n\n  /** Ensures outbound streams are created sequentially */\n  private outboundInflightQueue = pushable<{ peerId: PeerId, connection: Connection }>({ objectMode: true })\n\n  /** Direct peers */\n  public readonly direct = new Set<PeerIdStr>()\n\n  /** Floodsub peers */\n  private readonly floodsubPeers = new Set<PeerIdStr>()\n\n  /** Cache of seen messages */\n  private readonly seenCache: SimpleTimeCache<void>\n\n  /**\n   * Map of peer id and AcceptRequestWhileListEntry\n   */\n  private readonly acceptFromWhitelist = new Map<PeerIdStr, AcceptFromWhitelistEntry>()\n\n  /**\n   * Map of topics to which peers are subscribed to\n   */\n  private readonly topics = new Map<TopicStr, Set<PeerIdStr>>()\n\n  /**\n   * List of our subscriptions\n   */\n  private readonly subscriptions = new Set<TopicStr>()\n\n  /**\n   * Map of topic meshes\n   * topic => peer id set\n   */\n  public readonly mesh = new Map<TopicStr, Set<PeerIdStr>>()\n\n  /**\n   * Map of topics to set of peers. These mesh peers are the ones to which we are publishing without a topic membership\n   * topic => peer id set\n   */\n  public readonly fanout = new Map<TopicStr, Set<PeerIdStr>>()\n\n  /**\n   * Map of last publish time for fanout topics\n   * topic => last publish time\n   */\n  private readonly fanoutLastpub = new Map<TopicStr, number>()\n\n  /**\n   * Map of pending messages to gossip\n   * peer id => control messages\n   */\n  public readonly gossip = new Map<PeerIdStr, RPC.IControlIHave[]>()\n\n  /**\n   * Map of control messages\n   * peer id => control message\n   */\n  public readonly control = new Map<PeerIdStr, RPC.IControlMessage>()\n\n  /**\n   * Number of IHAVEs received from peer in the last heartbeat\n   */\n  private readonly peerhave = new Map<PeerIdStr, number>()\n\n  /** Number of messages we have asked from peer in the last heartbeat */\n  private readonly iasked = new Map<PeerIdStr, number>()\n\n  /** Prune backoff map */\n  private readonly backoff = new Map<TopicStr, Map<PeerIdStr, number>>()\n\n  /**\n   * Connection direction cache, marks peers with outbound connections\n   * peer id => direction\n   */\n  private readonly outbound = new Map<PeerIdStr, boolean>()\n  private readonly msgIdFn: MsgIdFn\n\n  /**\n   * A fast message id function used for internal message de-duplication\n   */\n  private readonly fastMsgIdFn: FastMsgIdFn | undefined\n\n  private readonly msgIdToStrFn: MsgIdToStrFn\n\n  /** Maps fast message-id to canonical message-id */\n  private readonly fastMsgIdCache: SimpleTimeCache<MsgIdStr> | undefined\n\n  /**\n   * Short term cache for published message ids. This is used for penalizing peers sending\n   * our own messages back if the messages are anonymous or use a random author.\n   */\n  private readonly publishedMessageIds: SimpleTimeCache<void>\n\n  /**\n   * A message cache that contains the messages for last few heartbeat ticks\n   */\n  private readonly mcache: MessageCache\n\n  /** Peer score tracking */\n  public readonly score: PeerScore\n\n  /**\n   * Custom validator function per topic.\n   * Must return or resolve quickly (< 100ms) to prevent causing penalties for late messages.\n   * If you need to apply validation that may require longer times use `asyncValidation` option and callback the\n   * validation result through `Gossipsub.reportValidationResult`\n   */\n  public readonly topicValidators = new Map<TopicStr, TopicValidatorFn>()\n\n  /**\n   * Make this protected so child class may want to redirect to its own log.\n   */\n  protected readonly log: Logger\n\n  /**\n   * Number of heartbeats since the beginning of time\n   * This allows us to amortize some resource cleanup -- eg: backoff cleanup\n   */\n  private heartbeatTicks = 0\n\n  /**\n   * Tracks IHAVE/IWANT promises broken by peers\n   */\n  readonly gossipTracer: IWantTracer\n\n  private readonly components: GossipSubComponents\n\n  private directPeerInitial: ReturnType<typeof setTimeout> | null = null\n\n  public static multicodec: string = constants.GossipsubIDv11\n\n  // Options\n  readonly opts: Required<GossipOptions>\n  private readonly decodeRpcLimits: DecodeRPCLimits\n\n  private readonly metrics: Metrics | null\n  private status: GossipStatus = { code: GossipStatusCode.stopped }\n  private readonly maxInboundStreams?: number\n  private readonly maxOutboundStreams?: number\n  private readonly allowedTopics: Set<TopicStr> | null\n\n  private heartbeatTimer: {\n    _intervalId: ReturnType<typeof setInterval> | undefined\n    runPeriodically(fn: () => void, period: number): void\n    cancel(): void\n  } | null = null\n\n  constructor (components: GossipSubComponents, options: Partial<GossipsubOpts> = {}) {\n    super()\n\n    const opts = {\n      fallbackToFloodsub: true,\n      floodPublish: true,\n      batchPublish: false,\n      doPX: false,\n      directPeers: [],\n      D: constants.GossipsubD,\n      Dlo: constants.GossipsubDlo,\n      Dhi: constants.GossipsubDhi,\n      Dscore: constants.GossipsubDscore,\n      Dout: constants.GossipsubDout,\n      Dlazy: constants.GossipsubDlazy,\n      heartbeatInterval: constants.GossipsubHeartbeatInterval,\n      fanoutTTL: constants.GossipsubFanoutTTL,\n      mcacheLength: constants.GossipsubHistoryLength,\n      mcacheGossip: constants.GossipsubHistoryGossip,\n      seenTTL: constants.GossipsubSeenTTL,\n      gossipsubIWantFollowupMs: constants.GossipsubIWantFollowupTime,\n      prunePeers: constants.GossipsubPrunePeers,\n      pruneBackoff: constants.GossipsubPruneBackoff,\n      unsubcribeBackoff: constants.GossipsubUnsubscribeBackoff,\n      graftFloodThreshold: constants.GossipsubGraftFloodThreshold,\n      opportunisticGraftPeers: constants.GossipsubOpportunisticGraftPeers,\n      opportunisticGraftTicks: constants.GossipsubOpportunisticGraftTicks,\n      directConnectTicks: constants.GossipsubDirectConnectTicks,\n      ...options,\n      scoreParams: createPeerScoreParams(options.scoreParams),\n      scoreThresholds: createPeerScoreThresholds(options.scoreThresholds)\n    }\n\n    this.components = components\n    this.decodeRpcLimits = opts.decodeRpcLimits ?? defaultDecodeRpcLimits\n\n    this.globalSignaturePolicy = opts.globalSignaturePolicy ?? StrictSign\n\n    // Also wants to get notified of peers connected using floodsub\n    if (opts.fallbackToFloodsub) {\n      this.multicodecs.push(constants.FloodsubID)\n    }\n\n    // From pubsub\n    this.log = components.logger.forComponent(opts.debugName ?? 'libp2p:gossipsub')\n\n    // Gossipsub\n\n    this.opts = opts as Required<GossipOptions>\n    this.direct = new Set(opts.directPeers.map((p) => p.id.toString()))\n    this.seenCache = new SimpleTimeCache<void>({ validityMs: opts.seenTTL })\n    this.publishedMessageIds = new SimpleTimeCache<void>({ validityMs: opts.seenTTL })\n\n    if (options.msgIdFn != null) {\n      // Use custom function\n      this.msgIdFn = options.msgIdFn\n    } else {\n      switch (this.globalSignaturePolicy) {\n        case StrictSign:\n          this.msgIdFn = msgIdFnStrictSign\n          break\n        case StrictNoSign:\n          this.msgIdFn = msgIdFnStrictNoSign\n          break\n        default:\n          throw new Error(`Invalid globalSignaturePolicy: ${this.globalSignaturePolicy}`)\n      }\n    }\n\n    if (options.fastMsgIdFn != null) {\n      this.fastMsgIdFn = options.fastMsgIdFn\n      this.fastMsgIdCache = new SimpleTimeCache<MsgIdStr>({ validityMs: opts.seenTTL })\n    }\n\n    // By default, gossipsub only provide a browser friendly function to convert Uint8Array message id to string.\n    this.msgIdToStrFn = options.msgIdToStrFn ?? messageIdToString\n\n    this.mcache = options.messageCache ?? new MessageCache(opts.mcacheGossip, opts.mcacheLength, this.msgIdToStrFn)\n\n    if (options.dataTransform != null) {\n      this.dataTransform = options.dataTransform\n    }\n\n    if (options.metricsRegister != null) {\n      if (options.metricsTopicStrToLabel == null) {\n        throw Error('Must set metricsTopicStrToLabel with metrics')\n      }\n\n      // in theory, each topic has its own meshMessageDeliveriesWindow param\n      // however in lodestar, we configure it mostly the same so just pick the max of positive ones\n      // (some topics have meshMessageDeliveriesWindow as 0)\n      const maxMeshMessageDeliveriesWindowMs = Math.max(\n        ...Object.values(opts.scoreParams.topics).map((topicParam) => topicParam.meshMessageDeliveriesWindow),\n        constants.DEFAULT_METRIC_MESH_MESSAGE_DELIVERIES_WINDOWS\n      )\n\n      const metrics = getMetrics(options.metricsRegister, options.metricsTopicStrToLabel, {\n        gossipPromiseExpireSec: this.opts.gossipsubIWantFollowupMs / 1000,\n        behaviourPenaltyThreshold: opts.scoreParams.behaviourPenaltyThreshold,\n        maxMeshMessageDeliveriesWindowSec: maxMeshMessageDeliveriesWindowMs / 1000\n      })\n\n      metrics.mcacheSize.addCollect(() => { this.onScrapeMetrics(metrics) })\n      for (const protocol of this.multicodecs) {\n        metrics.protocolsEnabled.set({ protocol }, 1)\n      }\n\n      this.metrics = metrics\n    } else {\n      this.metrics = null\n    }\n\n    this.gossipTracer = new IWantTracer(this.opts.gossipsubIWantFollowupMs, this.msgIdToStrFn, this.metrics)\n\n    /**\n     * libp2p\n     */\n    this.score = new PeerScore(this.opts.scoreParams, this.metrics, this.components.logger, {\n      scoreCacheValidityMs: opts.heartbeatInterval\n    })\n\n    this.maxInboundStreams = options.maxInboundStreams\n    this.maxOutboundStreams = options.maxOutboundStreams\n\n    this.allowedTopics = (opts.allowedTopics != null) ? new Set(opts.allowedTopics) : null\n  }\n\n  getPeers (): PeerId[] {\n    return [...this.peers.keys()].map((str) => peerIdFromString(str))\n  }\n\n  isStarted (): boolean {\n    return this.status.code === GossipStatusCode.started\n  }\n\n  // LIFECYCLE METHODS\n\n  /**\n   * Mounts the gossipsub protocol onto the libp2p node and sends our\n   * our subscriptions to every peer connected\n   */\n  async start (): Promise<void> {\n    // From pubsub\n    if (this.isStarted()) {\n      return\n    }\n\n    this.log('starting')\n\n    this.publishConfig = await getPublishConfigFromPeerId(this.globalSignaturePolicy, this.components.peerId)\n\n    // Create the outbound inflight queue\n    // This ensures that outbound stream creation happens sequentially\n    this.outboundInflightQueue = pushable({ objectMode: true })\n    pipe(this.outboundInflightQueue, async (source) => {\n      for await (const { peerId, connection } of source) {\n        await this.createOutboundStream(peerId, connection)\n      }\n    }).catch((e) => { this.log.error('outbound inflight queue error', e) })\n\n    // set direct peer addresses in the address book\n    await Promise.all(\n      this.opts.directPeers.map(async (p) => {\n        await this.components.peerStore.merge(p.id, {\n          multiaddrs: p.addrs\n        })\n      })\n    )\n\n    const registrar = this.components.registrar\n    // Incoming streams\n    // Called after a peer dials us\n    await Promise.all(\n      this.multicodecs.map(async (multicodec) =>\n        registrar.handle(multicodec, this.onIncomingStream.bind(this), {\n          maxInboundStreams: this.maxInboundStreams,\n          maxOutboundStreams: this.maxOutboundStreams\n        })\n      )\n    )\n\n    // # How does Gossipsub interact with libp2p? Rough guide from Mar 2022\n    //\n    // ## Setup:\n    // Gossipsub requests libp2p to callback, TBD\n    //\n    // `this.libp2p.handle()` registers a handler for `/meshsub/1.1.0` and other Gossipsub protocols\n    // The handler callback is registered in libp2p Upgrader.protocols map.\n    //\n    // Upgrader receives an inbound connection from some transport and (`Upgrader.upgradeInbound`):\n    // - Adds encryption (NOISE in our case)\n    // - Multiplex stream\n    // - Create a muxer and register that for each new stream call Upgrader.protocols handler\n    //\n    // ## Topology\n    // - new instance of Topology (unlinked to libp2p) with handlers\n    // - registar.register(topology)\n\n    // register protocol with topology\n    // Topology callbacks called on connection manager changes\n    const topology = {\n      onConnect: this.onPeerConnected.bind(this),\n      onDisconnect: this.onPeerDisconnected.bind(this)\n    }\n    const registrarTopologyIds = await Promise.all(\n      this.multicodecs.map(async (multicodec) => registrar.register(multicodec, topology))\n    )\n\n    // Schedule to start heartbeat after `GossipsubHeartbeatInitialDelay`\n    const heartbeatTimeout = setTimeout(this.runHeartbeat, constants.GossipsubHeartbeatInitialDelay)\n    // Then, run heartbeat every `heartbeatInterval` offset by `GossipsubHeartbeatInitialDelay`\n\n    this.status = {\n      code: GossipStatusCode.started,\n      registrarTopologyIds,\n      heartbeatTimeout,\n      hearbeatStartMs: Date.now() + constants.GossipsubHeartbeatInitialDelay\n    }\n\n    this.score.start()\n    // connect to direct peers\n    this.directPeerInitial = setTimeout(() => {\n      Promise.resolve()\n        .then(async () => {\n          await Promise.all(Array.from(this.direct).map(async (id) => this.connect(id)))\n        })\n        .catch((err) => {\n          this.log(err)\n        })\n    }, constants.GossipsubDirectConnectInitialDelay)\n\n    this.log('started')\n  }\n\n  /**\n   * Unmounts the gossipsub protocol and shuts down every connection\n   */\n  async stop (): Promise<void> {\n    this.log('stopping')\n    // From pubsub\n\n    if (this.status.code !== GossipStatusCode.started) {\n      return\n    }\n\n    const { registrarTopologyIds } = this.status\n    this.status = { code: GossipStatusCode.stopped }\n\n    // unregister protocol and handlers\n    const registrar = this.components.registrar\n    await Promise.all(this.multicodecs.map(async (multicodec) => registrar.unhandle(multicodec)))\n    registrarTopologyIds.forEach((id) => { registrar.unregister(id) })\n\n    this.outboundInflightQueue.end()\n\n    const closePromises = []\n    for (const outboundStream of this.streamsOutbound.values()) {\n      closePromises.push(outboundStream.close())\n    }\n    this.streamsOutbound.clear()\n\n    for (const inboundStream of this.streamsInbound.values()) {\n      closePromises.push(inboundStream.close())\n    }\n    this.streamsInbound.clear()\n\n    await Promise.all(closePromises)\n\n    this.peers.clear()\n    this.subscriptions.clear()\n\n    // Gossipsub\n\n    if (this.heartbeatTimer != null) {\n      this.heartbeatTimer.cancel()\n      this.heartbeatTimer = null\n    }\n\n    this.score.stop()\n\n    this.mesh.clear()\n    this.fanout.clear()\n    this.fanoutLastpub.clear()\n    this.gossip.clear()\n    this.control.clear()\n    this.peerhave.clear()\n    this.iasked.clear()\n    this.backoff.clear()\n    this.outbound.clear()\n    this.gossipTracer.clear()\n    this.seenCache.clear()\n    if (this.fastMsgIdCache != null) this.fastMsgIdCache.clear()\n    if (this.directPeerInitial != null) clearTimeout(this.directPeerInitial)\n\n    this.log('stopped')\n  }\n\n  /** FOR DEBUG ONLY - Dump peer stats for all peers. Data is cloned, safe to mutate */\n  dumpPeerScoreStats (): PeerScoreStatsDump {\n    return this.score.dumpPeerScoreStats()\n  }\n\n  /**\n   * On an inbound stream opened\n   */\n  private onIncomingStream ({ stream, connection }: IncomingStreamData): void {\n    if (!this.isStarted()) {\n      return\n    }\n\n    const peerId = connection.remotePeer\n    // add peer to router\n    this.addPeer(peerId, connection.direction, connection.remoteAddr)\n    // create inbound stream\n    this.createInboundStream(peerId, stream)\n    // attempt to create outbound stream\n    this.outboundInflightQueue.push({ peerId, connection })\n  }\n\n  /**\n   * Registrar notifies an established connection with pubsub protocol\n   */\n  private onPeerConnected (peerId: PeerId, connection: Connection): void {\n    this.metrics?.newConnectionCount.inc({ status: connection.status })\n    // libp2p may emit a closed connection and never issue peer:disconnect event\n    // see https://github.com/ChainSafe/js-libp2p-gossipsub/issues/398\n    if (!this.isStarted() || connection.status !== 'open') {\n      return\n    }\n\n    this.addPeer(peerId, connection.direction, connection.remoteAddr)\n    this.outboundInflightQueue.push({ peerId, connection })\n  }\n\n  /**\n   * Registrar notifies a closing connection with pubsub protocol\n   */\n  private onPeerDisconnected (peerId: PeerId): void {\n    this.log('connection ended %p', peerId)\n    this.removePeer(peerId)\n  }\n\n  private async createOutboundStream (peerId: PeerId, connection: Connection): Promise<void> {\n    if (!this.isStarted()) {\n      return\n    }\n\n    const id = peerId.toString()\n\n    if (!this.peers.has(id)) {\n      return\n    }\n\n    // TODO make this behavior more robust\n    // This behavior is different than for inbound streams\n    // If an outbound stream already exists, don't create a new stream\n    if (this.streamsOutbound.has(id)) {\n      return\n    }\n\n    try {\n      const stream = new OutboundStream(\n        await connection.newStream(this.multicodecs),\n        (e) => { this.log.error('outbound pipe error', e) },\n        { maxBufferSize: this.opts.maxOutboundBufferSize }\n      )\n\n      this.log('create outbound stream %p', peerId)\n\n      this.streamsOutbound.set(id, stream)\n\n      const protocol = stream.protocol\n      if (protocol === constants.FloodsubID) {\n        this.floodsubPeers.add(id)\n      }\n      this.metrics?.peersPerProtocol.inc({ protocol }, 1)\n\n      // Immediately send own subscriptions via the newly attached stream\n      if (this.subscriptions.size > 0) {\n        this.log('send subscriptions to', id)\n        this.sendSubscriptions(id, Array.from(this.subscriptions), true)\n      }\n    } catch (e) {\n      this.log.error('createOutboundStream error', e)\n    }\n  }\n\n  private createInboundStream (peerId: PeerId, stream: Stream): void {\n    if (!this.isStarted()) {\n      return\n    }\n\n    const id = peerId.toString()\n\n    if (!this.peers.has(id)) {\n      return\n    }\n\n    // TODO make this behavior more robust\n    // This behavior is different than for outbound streams\n    // If a peer initiates a new inbound connection\n    // we assume that one is the new canonical inbound stream\n    const priorInboundStream = this.streamsInbound.get(id)\n    if (priorInboundStream !== undefined) {\n      this.log('replacing existing inbound steam %s', id)\n      priorInboundStream.close().catch((err) => { this.log.error(err) })\n    }\n\n    this.log('create inbound stream %s', id)\n\n    const inboundStream = new InboundStream(stream, { maxDataLength: this.opts.maxInboundDataLength })\n    this.streamsInbound.set(id, inboundStream)\n\n    this.pipePeerReadStream(peerId, inboundStream.source).catch((err) => { this.log(err) })\n  }\n\n  /**\n   * Add a peer to the router\n   */\n  private addPeer (peerId: PeerId, direction: ConnectionDirection, addr: Multiaddr): void {\n    const id = peerId.toString()\n\n    if (!this.peers.has(id)) {\n      this.log('new peer %p', peerId)\n\n      this.peers.add(id)\n\n      // Add to peer scoring\n      this.score.addPeer(id)\n      const currentIP = multiaddrToIPStr(addr)\n      if (currentIP !== null) {\n        this.score.addIP(id, currentIP)\n      } else {\n        this.log('Added peer has no IP in current address %s %s', id, addr.toString())\n      }\n\n      // track the connection direction. Don't allow to unset outbound\n      if (!this.outbound.has(id)) {\n        this.outbound.set(id, direction === 'outbound')\n      }\n    }\n  }\n\n  /**\n   * Removes a peer from the router\n   */\n  private removePeer (peerId: PeerId): void {\n    const id = peerId.toString()\n\n    if (!this.peers.has(id)) {\n      return\n    }\n\n    // delete peer\n    this.log('delete peer %p', peerId)\n    this.peers.delete(id)\n\n    const outboundStream = this.streamsOutbound.get(id)\n    const inboundStream = this.streamsInbound.get(id)\n\n    if (outboundStream != null) {\n      this.metrics?.peersPerProtocol.inc({ protocol: outboundStream.protocol }, -1)\n    }\n\n    // close streams\n    outboundStream?.close().catch((err) => { this.log.error(err) })\n    inboundStream?.close().catch((err) => { this.log.error(err) })\n\n    // remove streams\n    this.streamsOutbound.delete(id)\n    this.streamsInbound.delete(id)\n\n    // remove peer from topics map\n    for (const peers of this.topics.values()) {\n      peers.delete(id)\n    }\n\n    // Remove this peer from the mesh\n    for (const [topicStr, peers] of this.mesh) {\n      if (peers.delete(id)) {\n        this.metrics?.onRemoveFromMesh(topicStr, ChurnReason.Dc, 1)\n      }\n    }\n\n    // Remove this peer from the fanout\n    for (const peers of this.fanout.values()) {\n      peers.delete(id)\n    }\n\n    // Remove from floodsubPeers\n    this.floodsubPeers.delete(id)\n    // Remove from gossip mapping\n    this.gossip.delete(id)\n    // Remove from control mapping\n    this.control.delete(id)\n    // Remove from backoff mapping\n    this.outbound.delete(id)\n\n    // Remove from peer scoring\n    this.score.removePeer(id)\n\n    this.acceptFromWhitelist.delete(id)\n  }\n\n  // API METHODS\n\n  get started (): boolean {\n    return this.status.code === GossipStatusCode.started\n  }\n\n  /**\n   * Get a the peer-ids in a topic mesh\n   */\n  getMeshPeers (topic: TopicStr): PeerIdStr[] {\n    const peersInTopic = this.mesh.get(topic)\n    return (peersInTopic != null) ? Array.from(peersInTopic) : []\n  }\n\n  /**\n   * Get a list of the peer-ids that are subscribed to one topic.\n   */\n  getSubscribers (topic: TopicStr): PeerId[] {\n    const peersInTopic = this.topics.get(topic)\n    return ((peersInTopic != null) ? Array.from(peersInTopic) : []).map((str) => peerIdFromString(str))\n  }\n\n  /**\n   * Get the list of topics which the peer is subscribed to.\n   */\n  getTopics (): TopicStr[] {\n    return Array.from(this.subscriptions)\n  }\n\n  // TODO: Reviewing Pubsub API\n\n  // MESSAGE METHODS\n\n  /**\n   * Responsible for processing each RPC message received by other peers.\n   */\n  private async pipePeerReadStream (peerId: PeerId, stream: AsyncIterable<Uint8ArrayList>): Promise<void> {\n    try {\n      await pipe(stream, async (source) => {\n        for await (const data of source) {\n          try {\n            // TODO: Check max gossip message size, before decodeRpc()\n            const rpcBytes = data.subarray()\n            // Note: This function may throw, it must be wrapped in a try {} catch {} to prevent closing the stream.\n            // TODO: What should we do if the entire RPC is invalid?\n            const rpc = decodeRpc(rpcBytes, this.decodeRpcLimits)\n\n            this.metrics?.onRpcRecv(rpc, rpcBytes.length)\n\n            // Since processRpc may be overridden entirely in unsafe ways,\n            // the simplest/safest option here is to wrap in a function and capture all errors\n            // to prevent a top-level unhandled exception\n            // This processing of rpc messages should happen without awaiting full validation/execution of prior messages\n            if (this.opts.awaitRpcHandler) {\n              try {\n                await this.handleReceivedRpc(peerId, rpc)\n              } catch (err) {\n                this.metrics?.onRpcRecvError()\n                this.log(err)\n              }\n            } else {\n              this.handleReceivedRpc(peerId, rpc).catch((err) => {\n                this.metrics?.onRpcRecvError()\n                this.log(err)\n              })\n            }\n          } catch (e) {\n            this.metrics?.onRpcDataError()\n            this.log(e as Error)\n          }\n        }\n      })\n    } catch (err) {\n      this.metrics?.onPeerReadStreamError()\n      this.handlePeerReadStreamError(err as Error, peerId)\n    }\n  }\n\n  /**\n   * Handle error when read stream pipe throws, less of the functional use but more\n   * to for testing purposes to spy on the error handling\n   * */\n  private handlePeerReadStreamError (err: Error, peerId: PeerId): void {\n    this.log.error(err)\n    this.onPeerDisconnected(peerId)\n  }\n\n  /**\n   * Handles an rpc request from a peer\n   */\n  public async handleReceivedRpc (from: PeerId, rpc: IRPC): Promise<void> {\n    // Check if peer is graylisted in which case we ignore the event\n    if (!this.acceptFrom(from.toString())) {\n      this.log('received message from unacceptable peer %p', from)\n      this.metrics?.rpcRecvNotAccepted.inc()\n      return\n    }\n\n    const subscriptions = (rpc.subscriptions != null) ? rpc.subscriptions.length : 0\n    const messages = (rpc.messages != null) ? rpc.messages.length : 0\n    let ihave = 0\n    let iwant = 0\n    let graft = 0\n    let prune = 0\n    if (rpc.control != null) {\n      if (rpc.control.ihave != null) ihave = rpc.control.ihave.length\n      if (rpc.control.iwant != null) iwant = rpc.control.iwant.length\n      if (rpc.control.graft != null) graft = rpc.control.graft.length\n      if (rpc.control.prune != null) prune = rpc.control.prune.length\n    }\n    this.log(\n      `rpc.from ${from.toString()} subscriptions ${subscriptions} messages ${messages} ihave ${ihave} iwant ${iwant} graft ${graft} prune ${prune}`\n    )\n\n    // Handle received subscriptions\n    if ((rpc.subscriptions != null) && rpc.subscriptions.length > 0) {\n      // update peer subscriptions\n\n      const subscriptions: Array<{ topic: TopicStr, subscribe: boolean }> = []\n\n      rpc.subscriptions.forEach((subOpt) => {\n        const topic = subOpt.topic\n        const subscribe = subOpt.subscribe === true\n\n        if (topic != null) {\n          if ((this.allowedTopics != null) && !this.allowedTopics.has(topic)) {\n            // Not allowed: subscription data-structures are not bounded by topic count\n            // TODO: Should apply behaviour penalties?\n            return\n          }\n\n          this.handleReceivedSubscription(from, topic, subscribe)\n\n          subscriptions.push({ topic, subscribe })\n        }\n      })\n\n      this.safeDispatchEvent<SubscriptionChangeData>('subscription-change', {\n        detail: { peerId: from, subscriptions }\n      })\n    }\n\n    // Handle messages\n    // TODO: (up to limit)\n    if (rpc.messages != null) {\n      for (const message of rpc.messages) {\n        if ((this.allowedTopics != null) && !this.allowedTopics.has(message.topic)) {\n          // Not allowed: message cache data-structures are not bounded by topic count\n          // TODO: Should apply behaviour penalties?\n          continue\n        }\n\n        const handleReceivedMessagePromise = this.handleReceivedMessage(from, message)\n          // Should never throw, but handle just in case\n          .catch((err) => {\n            this.metrics?.onMsgRecvError(message.topic)\n            this.log(err)\n          })\n\n        if (this.opts.awaitRpcMessageHandler) {\n          await handleReceivedMessagePromise\n        }\n      }\n    }\n\n    // Handle control messages\n    if (rpc.control != null) {\n      await this.handleControlMessage(from.toString(), rpc.control)\n    }\n  }\n\n  /**\n   * Handles a subscription change from a peer\n   */\n  private handleReceivedSubscription (from: PeerId, topic: TopicStr, subscribe: boolean): void {\n    this.log('subscription update from %p topic %s', from, topic)\n\n    let topicSet = this.topics.get(topic)\n    if (topicSet == null) {\n      topicSet = new Set()\n      this.topics.set(topic, topicSet)\n    }\n\n    if (subscribe) {\n      // subscribe peer to new topic\n      topicSet.add(from.toString())\n    } else {\n      // unsubscribe from existing topic\n      topicSet.delete(from.toString())\n    }\n\n    // TODO: rust-libp2p has A LOT more logic here\n  }\n\n  /**\n   * Handles a newly received message from an RPC.\n   * May forward to all peers in the mesh.\n   */\n  private async handleReceivedMessage (from: PeerId, rpcMsg: RPC.IMessage): Promise<void> {\n    this.metrics?.onMsgRecvPreValidation(rpcMsg.topic)\n\n    const validationResult = await this.validateReceivedMessage(from, rpcMsg)\n\n    this.metrics?.onPrevalidationResult(rpcMsg.topic, validationResult.code)\n\n    const validationCode = validationResult.code\n    switch (validationCode) {\n      case MessageStatus.duplicate:\n        // Report the duplicate\n        this.score.duplicateMessage(from.toString(), validationResult.msgIdStr, rpcMsg.topic)\n        // due to the collision of fastMsgIdFn, 2 different messages may end up the same fastMsgId\n        // so we need to also mark the duplicate message as delivered or the promise is not resolved\n        // and peer gets penalized. See https://github.com/ChainSafe/js-libp2p-gossipsub/pull/385\n        this.gossipTracer.deliverMessage(validationResult.msgIdStr, true)\n        this.mcache.observeDuplicate(validationResult.msgIdStr, from.toString())\n        return\n\n      case MessageStatus.invalid:\n        // invalid messages received\n        // metrics.register_invalid_message(&raw_message.topic)\n        // Tell peer_score about reject\n        // Reject the original source, and any duplicates we've seen from other peers.\n        if (validationResult.msgIdStr != null) {\n          const msgIdStr = validationResult.msgIdStr\n          this.score.rejectMessage(from.toString(), msgIdStr, rpcMsg.topic, validationResult.reason)\n          this.gossipTracer.rejectMessage(msgIdStr, validationResult.reason)\n        } else {\n          this.score.rejectInvalidMessage(from.toString(), rpcMsg.topic)\n        }\n\n        this.metrics?.onMsgRecvInvalid(rpcMsg.topic, validationResult)\n        return\n\n      case MessageStatus.valid:\n        // Tells score that message arrived (but is maybe not fully validated yet).\n        // Consider the message as delivered for gossip promises.\n        this.score.validateMessage(validationResult.messageId.msgIdStr)\n        this.gossipTracer.deliverMessage(validationResult.messageId.msgIdStr)\n\n        // Add the message to our memcache\n        // if no validation is required, mark the message as validated\n        this.mcache.put(validationResult.messageId, rpcMsg, !this.opts.asyncValidation)\n\n        // Dispatch the message to the user if we are subscribed to the topic\n        if (this.subscriptions.has(rpcMsg.topic)) {\n          const isFromSelf = this.components.peerId.equals(from)\n\n          if (!isFromSelf || this.opts.emitSelf) {\n            super.dispatchEvent(\n              new CustomEvent<GossipsubMessage>('gossipsub:message', {\n                detail: {\n                  propagationSource: from,\n                  msgId: validationResult.messageId.msgIdStr,\n                  msg: validationResult.msg\n                }\n              })\n            )\n            // TODO: Add option to switch between emit per topic or all messages in one\n            super.dispatchEvent(new CustomEvent<Message>('message', { detail: validationResult.msg }))\n          }\n        }\n\n        // Forward the message to mesh peers, if no validation is required\n        // If asyncValidation is ON, expect the app layer to call reportMessageValidationResult(), then forward\n        if (!this.opts.asyncValidation) {\n          // TODO: in rust-libp2p\n          // .forward_msg(&msg_id, raw_message, Some(propagation_source))\n          this.forwardMessage(validationResult.messageId.msgIdStr, rpcMsg, from.toString())\n        }\n        break\n      default:\n        throw new Error(`Invalid validation result: ${validationCode}`)\n    }\n  }\n\n  /**\n   * Handles a newly received message from an RPC.\n   * May forward to all peers in the mesh.\n   */\n  private async validateReceivedMessage (\n    propagationSource: PeerId,\n    rpcMsg: RPC.IMessage\n  ): Promise<ReceivedMessageResult> {\n    // Fast message ID stuff\n    const fastMsgIdStr = this.fastMsgIdFn?.(rpcMsg)\n    const msgIdCached = fastMsgIdStr !== undefined ? this.fastMsgIdCache?.get(fastMsgIdStr) : undefined\n\n    if (msgIdCached != null) {\n      // This message has been seen previously. Ignore it\n      return { code: MessageStatus.duplicate, msgIdStr: msgIdCached }\n    }\n\n    // Perform basic validation on message and convert to RawGossipsubMessage for fastMsgIdFn()\n    const validationResult = await validateToRawMessage(this.globalSignaturePolicy, rpcMsg)\n\n    if (!validationResult.valid) {\n      return { code: MessageStatus.invalid, reason: RejectReason.Error, error: validationResult.error }\n    }\n\n    const msg = validationResult.message\n\n    // Try and perform the data transform to the message. If it fails, consider it invalid.\n    try {\n      if (this.dataTransform != null) {\n        msg.data = this.dataTransform.inboundTransform(rpcMsg.topic, msg.data)\n      }\n    } catch (e) {\n      this.log('Invalid message, transform failed', e)\n      return { code: MessageStatus.invalid, reason: RejectReason.Error, error: ValidateError.TransformFailed }\n    }\n\n    // TODO: Check if message is from a blacklisted source or propagation origin\n    // - Reject any message from a blacklisted peer\n    // - Also reject any message that originated from a blacklisted peer\n    // - reject messages claiming to be from ourselves but not locally published\n\n    // Calculate the message id on the transformed data.\n    const msgId = await this.msgIdFn(msg)\n    const msgIdStr = this.msgIdToStrFn(msgId)\n    const messageId = { msgId, msgIdStr }\n\n    // Add the message to the duplicate caches\n    if (fastMsgIdStr !== undefined && (this.fastMsgIdCache != null)) {\n      const collision = this.fastMsgIdCache.put(fastMsgIdStr, msgIdStr)\n      if (collision) {\n        this.metrics?.fastMsgIdCacheCollision.inc()\n      }\n    }\n\n    if (this.seenCache.has(msgIdStr)) {\n      return { code: MessageStatus.duplicate, msgIdStr }\n    } else {\n      this.seenCache.put(msgIdStr)\n    }\n\n    // (Optional) Provide custom validation here with dynamic validators per topic\n    // NOTE: This custom topicValidator() must resolve fast (< 100ms) to allow scores\n    // to not penalize peers for long validation times.\n    const topicValidator = this.topicValidators.get(rpcMsg.topic)\n    if (topicValidator != null) {\n      let acceptance: TopicValidatorResult\n      // Use try {} catch {} in case topicValidator() is synchronous\n      try {\n        acceptance = await topicValidator(propagationSource, msg)\n      } catch (e) {\n        const errCode = (e as { code: string }).code\n        if (errCode === constants.ERR_TOPIC_VALIDATOR_IGNORE) acceptance = TopicValidatorResult.Ignore\n        if (errCode === constants.ERR_TOPIC_VALIDATOR_REJECT) acceptance = TopicValidatorResult.Reject\n        else acceptance = TopicValidatorResult.Ignore\n      }\n\n      if (acceptance !== TopicValidatorResult.Accept) {\n        return { code: MessageStatus.invalid, reason: rejectReasonFromAcceptance(acceptance), msgIdStr }\n      }\n    }\n\n    return { code: MessageStatus.valid, messageId, msg }\n  }\n\n  /**\n   * Return score of a peer.\n   */\n  getScore (peerId: PeerIdStr): number {\n    return this.score.score(peerId)\n  }\n\n  /**\n   * Send an rpc object to a peer with subscriptions\n   */\n  private sendSubscriptions (toPeer: PeerIdStr, topics: string[], subscribe: boolean): void {\n    this.sendRpc(toPeer, {\n      subscriptions: topics.map((topic) => ({ topic, subscribe }))\n    })\n  }\n\n  /**\n   * Handles an rpc control message from a peer\n   */\n  private async handleControlMessage (id: PeerIdStr, controlMsg: RPC.IControlMessage): Promise<void> {\n    if (controlMsg === undefined) {\n      return\n    }\n\n    const iwant = (controlMsg.ihave != null) ? this.handleIHave(id, controlMsg.ihave) : []\n    const ihave = (controlMsg.iwant != null) ? this.handleIWant(id, controlMsg.iwant) : []\n    const prune = (controlMsg.graft != null) ? await this.handleGraft(id, controlMsg.graft) : []\n    ;(controlMsg.prune != null) && (await this.handlePrune(id, controlMsg.prune))\n\n    if ((iwant.length === 0) && (ihave.length === 0) && (prune.length === 0)) {\n      return\n    }\n\n    const sent = this.sendRpc(id, { messages: ihave, control: { iwant, prune } })\n    const iwantMessageIds = iwant[0]?.messageIDs\n    if (iwantMessageIds != null) {\n      if (sent) {\n        this.gossipTracer.addPromise(id, iwantMessageIds)\n      } else {\n        this.metrics?.iwantPromiseUntracked.inc(1)\n      }\n    }\n  }\n\n  /**\n   * Whether to accept a message from a peer\n   */\n  public acceptFrom (id: PeerIdStr): boolean {\n    if (this.direct.has(id)) {\n      return true\n    }\n\n    const now = Date.now()\n    const entry = this.acceptFromWhitelist.get(id)\n\n    if ((entry != null) && entry.messagesAccepted < ACCEPT_FROM_WHITELIST_MAX_MESSAGES && entry.acceptUntil >= now) {\n      entry.messagesAccepted += 1\n      return true\n    }\n\n    const score = this.score.score(id)\n    if (score >= ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE) {\n      // peer is unlikely to be able to drop its score to `graylistThreshold`\n      // after 128 messages or 1s\n      this.acceptFromWhitelist.set(id, {\n        messagesAccepted: 0,\n        acceptUntil: now + ACCEPT_FROM_WHITELIST_DURATION_MS\n      })\n    } else {\n      this.acceptFromWhitelist.delete(id)\n    }\n\n    return score >= this.opts.scoreThresholds.graylistThreshold\n  }\n\n  /**\n   * Handles IHAVE messages\n   */\n  private handleIHave (id: PeerIdStr, ihave: RPC.IControlIHave[]): RPC.IControlIWant[] {\n    if (ihave.length === 0) {\n      return []\n    }\n\n    // we ignore IHAVE gossip from any peer whose score is below the gossips threshold\n    const score = this.score.score(id)\n    if (score < this.opts.scoreThresholds.gossipThreshold) {\n      this.log('IHAVE: ignoring peer %s with score below threshold [ score = %d ]', id, score)\n      this.metrics?.ihaveRcvIgnored.inc({ reason: IHaveIgnoreReason.LowScore })\n      return []\n    }\n\n    // IHAVE flood protection\n    const peerhave = (this.peerhave.get(id) ?? 0) + 1\n    this.peerhave.set(id, peerhave)\n    if (peerhave > constants.GossipsubMaxIHaveMessages) {\n      this.log(\n        'IHAVE: peer %s has advertised too many times (%d) within this heartbeat interval; ignoring',\n        id,\n        peerhave\n      )\n      this.metrics?.ihaveRcvIgnored.inc({ reason: IHaveIgnoreReason.MaxIhave })\n      return []\n    }\n\n    const iasked = this.iasked.get(id) ?? 0\n    if (iasked >= constants.GossipsubMaxIHaveLength) {\n      this.log('IHAVE: peer %s has already advertised too many messages (%d); ignoring', id, iasked)\n      this.metrics?.ihaveRcvIgnored.inc({ reason: IHaveIgnoreReason.MaxIasked })\n      return []\n    }\n\n    // string msgId => msgId\n    const iwant = new Map<MsgIdStr, Uint8Array>()\n\n    ihave.forEach(({ topicID, messageIDs }) => {\n      if (topicID == null || (messageIDs == null) || !this.mesh.has(topicID)) {\n        return\n      }\n\n      let idonthave = 0\n\n      messageIDs.forEach((msgId) => {\n        const msgIdStr = this.msgIdToStrFn(msgId)\n        if (!this.seenCache.has(msgIdStr)) {\n          iwant.set(msgIdStr, msgId)\n          idonthave++\n        }\n      })\n\n      this.metrics?.onIhaveRcv(topicID, messageIDs.length, idonthave)\n    })\n\n    if (iwant.size === 0) {\n      return []\n    }\n\n    let iask = iwant.size\n    if (iask + iasked > constants.GossipsubMaxIHaveLength) {\n      iask = constants.GossipsubMaxIHaveLength - iasked\n    }\n\n    this.log('IHAVE: Asking for %d out of %d messages from %s', iask, iwant.size, id)\n\n    let iwantList = Array.from(iwant.values())\n    // ask in random order\n    shuffle(iwantList)\n\n    // truncate to the messages we are actually asking for and update the iasked counter\n    iwantList = iwantList.slice(0, iask)\n    this.iasked.set(id, iasked + iask)\n\n    // do not add gossipTracer promise here until a successful sendRpc()\n\n    return [\n      {\n        messageIDs: iwantList\n      }\n    ]\n  }\n\n  /**\n   * Handles IWANT messages\n   * Returns messages to send back to peer\n   */\n  private handleIWant (id: PeerIdStr, iwant: RPC.IControlIWant[]): RPC.IMessage[] {\n    if (iwant.length === 0) {\n      return []\n    }\n\n    // we don't respond to IWANT requests from any per whose score is below the gossip threshold\n    const score = this.score.score(id)\n    if (score < this.opts.scoreThresholds.gossipThreshold) {\n      this.log('IWANT: ignoring peer %s with score below threshold [score = %d]', id, score)\n      return []\n    }\n\n    const ihave = new Map<MsgIdStr, RPC.IMessage>()\n    const iwantByTopic = new Map<TopicStr, number>()\n    let iwantDonthave = 0\n\n    iwant.forEach(({ messageIDs }) => {\n      messageIDs?.forEach((msgId) => {\n        const msgIdStr = this.msgIdToStrFn(msgId)\n        const entry = this.mcache.getWithIWantCount(msgIdStr, id)\n        if (entry == null) {\n          iwantDonthave++\n          return\n        }\n\n        iwantByTopic.set(entry.msg.topic, 1 + (iwantByTopic.get(entry.msg.topic) ?? 0))\n\n        if (entry.count > constants.GossipsubGossipRetransmission) {\n          this.log('IWANT: Peer %s has asked for message %s too many times: ignoring request', id, msgId)\n          return\n        }\n\n        ihave.set(msgIdStr, entry.msg)\n      })\n    })\n\n    this.metrics?.onIwantRcv(iwantByTopic, iwantDonthave)\n\n    if (ihave.size === 0) {\n      this.log('IWANT: Could not provide any wanted messages to %s', id)\n      return []\n    }\n\n    this.log('IWANT: Sending %d messages to %s', ihave.size, id)\n\n    return Array.from(ihave.values())\n  }\n\n  /**\n   * Handles Graft messages\n   */\n  private async handleGraft (id: PeerIdStr, graft: RPC.IControlGraft[]): Promise<RPC.IControlPrune[]> {\n    const prune: TopicStr[] = []\n    const score = this.score.score(id)\n    const now = Date.now()\n    let doPX = this.opts.doPX\n\n    graft.forEach(({ topicID }) => {\n      if (topicID == null) {\n        return\n      }\n      const peersInMesh = this.mesh.get(topicID)\n      if (peersInMesh == null) {\n        // don't do PX when there is an unknown topic to avoid leaking our peers\n        doPX = false\n        // spam hardening: ignore GRAFTs for unknown topics\n        return\n      }\n\n      // check if peer is already in the mesh; if so do nothing\n      if (peersInMesh.has(id)) {\n        return\n      }\n\n      // we don't GRAFT to/from direct peers; complain loudly if this happens\n      if (this.direct.has(id)) {\n        this.log('GRAFT: ignoring request from direct peer %s', id)\n        // this is possibly a bug from a non-reciprical configuration; send a PRUNE\n        prune.push(topicID)\n        // but don't px\n        doPX = false\n        return\n      }\n\n      // make sure we are not backing off that peer\n      const expire = this.backoff.get(topicID)?.get(id)\n      if (typeof expire === 'number' && now < expire) {\n        this.log('GRAFT: ignoring backed off peer %s', id)\n        // add behavioral penalty\n        this.score.addPenalty(id, 1, ScorePenalty.GraftBackoff)\n        // no PX\n        doPX = false\n        // check the flood cutoff -- is the GRAFT coming too fast?\n        const floodCutoff = expire + this.opts.graftFloodThreshold - this.opts.pruneBackoff\n        if (now < floodCutoff) {\n          // extra penalty\n          this.score.addPenalty(id, 1, ScorePenalty.GraftBackoff)\n        }\n        // refresh the backoff\n        this.addBackoff(id, topicID)\n        prune.push(topicID)\n        return\n      }\n\n      // check the score\n      if (score < 0) {\n        // we don't GRAFT peers with negative score\n        this.log('GRAFT: ignoring peer %s with negative score: score=%d, topic=%s', id, score, topicID)\n        // we do send them PRUNE however, because it's a matter of protocol correctness\n        prune.push(topicID)\n        // but we won't PX to them\n        doPX = false\n        // add/refresh backoff so that we don't reGRAFT too early even if the score decays\n        this.addBackoff(id, topicID)\n        return\n      }\n\n      // check the number of mesh peers; if it is at (or over) Dhi, we only accept grafts\n      // from peers with outbound connections; this is a defensive check to restrict potential\n      // mesh takeover attacks combined with love bombing\n      if (peersInMesh.size >= this.opts.Dhi && !(this.outbound.get(id) ?? false)) {\n        prune.push(topicID)\n        this.addBackoff(id, topicID)\n        return\n      }\n\n      this.log('GRAFT: Add mesh link from %s in %s', id, topicID)\n      this.score.graft(id, topicID)\n      peersInMesh.add(id)\n\n      this.metrics?.onAddToMesh(topicID, InclusionReason.Subscribed, 1)\n    })\n\n    if (prune.length === 0) {\n      return []\n    }\n\n    const onUnsubscribe = false\n    return Promise.all(prune.map(async (topic) => this.makePrune(id, topic, doPX, onUnsubscribe)))\n  }\n\n  /**\n   * Handles Prune messages\n   */\n  private async handlePrune (id: PeerIdStr, prune: RPC.IControlPrune[]): Promise<void> {\n    const score = this.score.score(id)\n\n    for (const { topicID, backoff, peers } of prune) {\n      if (topicID == null) {\n        continue\n      }\n\n      const peersInMesh = this.mesh.get(topicID)\n      if (peersInMesh == null) {\n        return\n      }\n\n      this.log('PRUNE: Remove mesh link to %s in %s', id, topicID)\n      this.score.prune(id, topicID)\n      if (peersInMesh.has(id)) {\n        peersInMesh.delete(id)\n        this.metrics?.onRemoveFromMesh(topicID, ChurnReason.Prune, 1)\n      }\n\n      // is there a backoff specified by the peer? if so obey it\n      if (typeof backoff === 'number' && backoff > 0) {\n        this.doAddBackoff(id, topicID, backoff * 1000)\n      } else {\n        this.addBackoff(id, topicID)\n      }\n\n      // PX\n      if ((peers != null) && (peers.length > 0)) {\n        // we ignore PX from peers with insufficient scores\n        if (score < this.opts.scoreThresholds.acceptPXThreshold) {\n          this.log(\n            'PRUNE: ignoring PX from peer %s with insufficient score [score = %d, topic = %s]',\n            id,\n            score,\n            topicID\n          )\n          continue\n        }\n        await this.pxConnect(peers)\n      }\n    }\n  }\n\n  /**\n   * Add standard backoff log for a peer in a topic\n   */\n  private addBackoff (id: PeerIdStr, topic: TopicStr): void {\n    this.doAddBackoff(id, topic, this.opts.pruneBackoff)\n  }\n\n  /**\n   * Add backoff expiry interval for a peer in a topic\n   *\n   * @param id\n   * @param topic\n   * @param intervalMs - backoff duration in milliseconds\n   */\n  private doAddBackoff (id: PeerIdStr, topic: TopicStr, intervalMs: number): void {\n    let backoff = this.backoff.get(topic)\n    if (backoff == null) {\n      backoff = new Map()\n      this.backoff.set(topic, backoff)\n    }\n    const expire = Date.now() + intervalMs\n    const existingExpire = backoff.get(id) ?? 0\n    if (existingExpire < expire) {\n      backoff.set(id, expire)\n    }\n  }\n\n  /**\n   * Apply penalties from broken IHAVE/IWANT promises\n   */\n  private applyIwantPenalties (): void {\n    this.gossipTracer.getBrokenPromises().forEach((count, p) => {\n      this.log(\"peer %s didn't follow up in %d IWANT requests; adding penalty\", p, count)\n      this.score.addPenalty(p, count, ScorePenalty.BrokenPromise)\n    })\n  }\n\n  /**\n   * Clear expired backoff expiries\n   */\n  private clearBackoff (): void {\n    // we only clear once every GossipsubPruneBackoffTicks ticks to avoid iterating over the maps too much\n    if (this.heartbeatTicks % constants.GossipsubPruneBackoffTicks !== 0) {\n      return\n    }\n\n    const now = Date.now()\n    this.backoff.forEach((backoff, topic) => {\n      backoff.forEach((expire, id) => {\n        // add some slack time to the expiration, see https://github.com/libp2p/specs/pull/289\n        if (expire + BACKOFF_SLACK * this.opts.heartbeatInterval < now) {\n          backoff.delete(id)\n        }\n      })\n      if (backoff.size === 0) {\n        this.backoff.delete(topic)\n      }\n    })\n  }\n\n  /**\n   * Maybe reconnect to direct peers\n   */\n  private async directConnect (): Promise<void> {\n    const toconnect: string[] = []\n    this.direct.forEach((id) => {\n      if (!this.streamsOutbound.has(id)) {\n        toconnect.push(id)\n      }\n    })\n\n    await Promise.all(toconnect.map(async (id) => this.connect(id)))\n  }\n\n  /**\n   * Maybe attempt connection given signed peer records\n   */\n  private async pxConnect (peers: RPC.IPeerInfo[]): Promise<void> {\n    if (peers.length > this.opts.prunePeers) {\n      shuffle(peers)\n      peers = peers.slice(0, this.opts.prunePeers)\n    }\n    const toconnect: string[] = []\n\n    await Promise.all(\n      peers.map(async (pi) => {\n        if (pi.peerID == null) {\n          return\n        }\n\n        const peer = peerIdFromBytes(pi.peerID)\n        const p = peer.toString()\n\n        if (this.peers.has(p)) {\n          return\n        }\n\n        if (pi.signedPeerRecord == null) {\n          toconnect.push(p)\n          return\n        }\n\n        // The peer sent us a signed record\n        // This is not a record from the peer who sent the record, but another peer who is connected with it\n        // Ensure that it is valid\n        try {\n          if (!(await this.components.peerStore.consumePeerRecord(pi.signedPeerRecord, peer))) {\n            this.log('bogus peer record obtained through px: could not add peer record to address book')\n            return\n          }\n          toconnect.push(p)\n        } catch (e) {\n          this.log('bogus peer record obtained through px: invalid signature or not a peer record')\n        }\n      })\n    )\n\n    if (toconnect.length === 0) {\n      return\n    }\n\n    await Promise.all(toconnect.map(async (id) => this.connect(id)))\n  }\n\n  /**\n   * Connect to a peer using the gossipsub protocol\n   */\n  private async connect (id: PeerIdStr): Promise<void> {\n    this.log('Initiating connection with %s', id)\n    const peerId = peerIdFromString(id)\n    const connection = await this.components.connectionManager.openConnection(peerId)\n    for (const multicodec of this.multicodecs) {\n      for (const topology of this.components.registrar.getTopologies(multicodec)) {\n        topology.onConnect?.(peerId, connection)\n      }\n    }\n  }\n\n  /**\n   * Subscribes to a topic\n   */\n  subscribe (topic: TopicStr): void {\n    if (this.status.code !== GossipStatusCode.started) {\n      throw new Error('Pubsub has not started')\n    }\n\n    if (!this.subscriptions.has(topic)) {\n      this.subscriptions.add(topic)\n\n      for (const peerId of this.peers.keys()) {\n        this.sendSubscriptions(peerId, [topic], true)\n      }\n    }\n\n    this.join(topic)\n  }\n\n  /**\n   * Unsubscribe to a topic\n   */\n  unsubscribe (topic: TopicStr): void {\n    if (this.status.code !== GossipStatusCode.started) {\n      throw new Error('Pubsub is not started')\n    }\n\n    const wasSubscribed = this.subscriptions.delete(topic)\n\n    this.log('unsubscribe from %s - am subscribed %s', topic, wasSubscribed)\n\n    if (wasSubscribed) {\n      for (const peerId of this.peers.keys()) {\n        this.sendSubscriptions(peerId, [topic], false)\n      }\n    }\n\n    this.leave(topic)\n  }\n\n  /**\n   * Join topic\n   */\n  private join (topic: TopicStr): void {\n    if (this.status.code !== GossipStatusCode.started) {\n      throw new Error('Gossipsub has not started')\n    }\n\n    // if we are already in the mesh, return\n    if (this.mesh.has(topic)) {\n      return\n    }\n\n    this.log('JOIN %s', topic)\n    this.metrics?.onJoin(topic)\n\n    const toAdd = new Set<PeerIdStr>()\n    const backoff = this.backoff.get(topic)\n\n    // check if we have mesh_n peers in fanout[topic] and add them to the mesh if we do,\n    // removing the fanout entry.\n    const fanoutPeers = this.fanout.get(topic)\n    if (fanoutPeers != null) {\n      // Remove fanout entry and the last published time\n      this.fanout.delete(topic)\n      this.fanoutLastpub.delete(topic)\n\n      // remove explicit peers, peers with negative scores, and backoffed peers\n      fanoutPeers.forEach((id) => {\n        if (!this.direct.has(id) && this.score.score(id) >= 0 && ((backoff == null) || !backoff.has(id))) {\n          toAdd.add(id)\n        }\n      })\n\n      this.metrics?.onAddToMesh(topic, InclusionReason.Fanout, toAdd.size)\n    }\n\n    // check if we need to get more peers, which we randomly select\n    if (toAdd.size < this.opts.D) {\n      const fanoutCount = toAdd.size\n      const newPeers = this.getRandomGossipPeers(\n        topic,\n        this.opts.D,\n        (id: PeerIdStr): boolean =>\n          // filter direct peers and peers with negative score\n          !toAdd.has(id) && !this.direct.has(id) && this.score.score(id) >= 0 && ((backoff == null) || !backoff.has(id))\n      )\n\n      newPeers.forEach((peer) => {\n        toAdd.add(peer)\n      })\n\n      this.metrics?.onAddToMesh(topic, InclusionReason.Random, toAdd.size - fanoutCount)\n    }\n\n    this.mesh.set(topic, toAdd)\n\n    toAdd.forEach((id) => {\n      this.log('JOIN: Add mesh link to %s in %s', id, topic)\n      this.sendGraft(id, topic)\n\n      // rust-libp2p\n      // - peer_score.graft()\n      // - Self::control_pool_add()\n      // - peer_added_to_mesh()\n    })\n  }\n\n  /**\n   * Leave topic\n   */\n  private leave (topic: TopicStr): void {\n    if (this.status.code !== GossipStatusCode.started) {\n      throw new Error('Gossipsub has not started')\n    }\n\n    this.log('LEAVE %s', topic)\n    this.metrics?.onLeave(topic)\n\n    // Send PRUNE to mesh peers\n    const meshPeers = this.mesh.get(topic)\n    if (meshPeers != null) {\n      Promise.all(\n        Array.from(meshPeers).map(async (id) => {\n          this.log('LEAVE: Remove mesh link to %s in %s', id, topic)\n          await this.sendPrune(id, topic)\n        })\n      ).catch((err) => {\n        this.log('Error sending prunes to mesh peers', err)\n      })\n      this.mesh.delete(topic)\n    }\n  }\n\n  private selectPeersToForward (topic: TopicStr, propagationSource?: PeerIdStr, excludePeers?: Set<PeerIdStr>): Set<string> {\n    const tosend = new Set<PeerIdStr>()\n\n    // Add explicit peers\n    const peersInTopic = this.topics.get(topic)\n    if (peersInTopic != null) {\n      this.direct.forEach((peer) => {\n        if (peersInTopic.has(peer) && propagationSource !== peer && !(excludePeers?.has(peer) ?? false)) {\n          tosend.add(peer)\n        }\n      })\n\n      // As of Mar 2022, spec + golang-libp2p include this while rust-libp2p does not\n      // rust-libp2p: https://github.com/libp2p/rust-libp2p/blob/6cc3b4ec52c922bfcf562a29b5805c3150e37c75/protocols/gossipsub/src/behaviour.rs#L2693\n      // spec: https://github.com/libp2p/specs/blob/10712c55ab309086a52eec7d25f294df4fa96528/pubsub/gossipsub/gossipsub-v1.0.md?plain=1#L361\n      this.floodsubPeers.forEach((peer) => {\n        if (\n          peersInTopic.has(peer) &&\n          propagationSource !== peer &&\n          !(excludePeers?.has(peer) ?? false) &&\n          this.score.score(peer) >= this.opts.scoreThresholds.publishThreshold\n        ) {\n          tosend.add(peer)\n        }\n      })\n    }\n\n    // add mesh peers\n    const meshPeers = this.mesh.get(topic)\n    if ((meshPeers != null) && meshPeers.size > 0) {\n      meshPeers.forEach((peer) => {\n        if (propagationSource !== peer && !(excludePeers?.has(peer) ?? false)) {\n          tosend.add(peer)\n        }\n      })\n    }\n\n    return tosend\n  }\n\n  private selectPeersToPublish (topic: TopicStr): {\n    tosend: Set<PeerIdStr>\n    tosendCount: ToSendGroupCount\n  } {\n    const tosend = new Set<PeerIdStr>()\n    const tosendCount: ToSendGroupCount = {\n      direct: 0,\n      floodsub: 0,\n      mesh: 0,\n      fanout: 0\n    }\n\n    const peersInTopic = this.topics.get(topic)\n    if (peersInTopic != null) {\n      // flood-publish behavior\n      // send to direct peers and _all_ peers meeting the publishThreshold\n      if (this.opts.floodPublish) {\n        peersInTopic.forEach((id) => {\n          if (this.direct.has(id)) {\n            tosend.add(id)\n            tosendCount.direct++\n          } else if (this.score.score(id) >= this.opts.scoreThresholds.publishThreshold) {\n            tosend.add(id)\n            tosendCount.floodsub++\n          }\n        })\n      } else {\n        // non-flood-publish behavior\n        // send to direct peers, subscribed floodsub peers\n        // and some mesh peers above publishThreshold\n\n        // direct peers (if subscribed)\n        this.direct.forEach((id) => {\n          if (peersInTopic.has(id)) {\n            tosend.add(id)\n            tosendCount.direct++\n          }\n        })\n\n        // floodsub peers\n        // Note: if there are no floodsub peers, we save a loop through peersInTopic Map\n        this.floodsubPeers.forEach((id) => {\n          if (peersInTopic.has(id) && this.score.score(id) >= this.opts.scoreThresholds.publishThreshold) {\n            tosend.add(id)\n            tosendCount.floodsub++\n          }\n        })\n\n        // Gossipsub peers handling\n        const meshPeers = this.mesh.get(topic)\n        if ((meshPeers != null) && meshPeers.size > 0) {\n          meshPeers.forEach((peer) => {\n            tosend.add(peer)\n            tosendCount.mesh++\n          })\n        // eslint-disable-next-line @typescript-eslint/brace-style\n        }\n\n        // We are not in the mesh for topic, use fanout peers\n        else {\n          const fanoutPeers = this.fanout.get(topic)\n          if ((fanoutPeers != null) && fanoutPeers.size > 0) {\n            fanoutPeers.forEach((peer) => {\n              tosend.add(peer)\n              tosendCount.fanout++\n            })\n          // eslint-disable-next-line @typescript-eslint/brace-style\n          }\n\n          // We have no fanout peers, select mesh_n of them and add them to the fanout\n          else {\n            // If we are not in the fanout, then pick peers in topic above the publishThreshold\n            const newFanoutPeers = this.getRandomGossipPeers(topic, this.opts.D, (id) => {\n              return this.score.score(id) >= this.opts.scoreThresholds.publishThreshold\n            })\n\n            // eslint-disable-next-line max-depth\n            if (newFanoutPeers.size > 0) {\n              this.fanout.set(topic, newFanoutPeers)\n\n              newFanoutPeers.forEach((peer) => {\n                tosend.add(peer)\n                tosendCount.fanout++\n              })\n            }\n          }\n\n          // We are publishing to fanout peers - update the time we published\n          this.fanoutLastpub.set(topic, Date.now())\n        }\n      }\n    }\n\n    return { tosend, tosendCount }\n  }\n\n  /**\n   * Forwards a message from our peers.\n   *\n   * For messages published by us (the app layer), this class uses `publish`\n   */\n  private forwardMessage (\n    msgIdStr: string,\n    rawMsg: RPC.IMessage,\n    propagationSource?: PeerIdStr,\n    excludePeers?: Set<PeerIdStr>\n  ): void {\n    // message is fully validated inform peer_score\n    if (propagationSource != null) {\n      this.score.deliverMessage(propagationSource, msgIdStr, rawMsg.topic)\n    }\n\n    const tosend = this.selectPeersToForward(rawMsg.topic, propagationSource, excludePeers)\n\n    // Note: Don't throw if tosend is empty, we can have a mesh with a single peer\n\n    // forward the message to peers\n    tosend.forEach((id) => {\n      // sendRpc may mutate RPC message on piggyback, create a new message for each peer\n      this.sendRpc(id, { messages: [rawMsg] })\n    })\n\n    this.metrics?.onForwardMsg(rawMsg.topic, tosend.size)\n  }\n\n  /**\n   * App layer publishes a message to peers, return number of peers this message is published to\n   * Note: `async` due to crypto only if `StrictSign`, otherwise it's a sync fn.\n   *\n   * For messages not from us, this class uses `forwardMessage`.\n   */\n  async publish (topic: TopicStr, data: Uint8Array, opts?: PublishOpts): Promise<PublishResult> {\n    const startMs = Date.now()\n    const transformedData = (this.dataTransform != null) ? this.dataTransform.outboundTransform(topic, data) : data\n\n    if (this.publishConfig == null) {\n      throw Error('PublishError.Uninitialized')\n    }\n\n    // Prepare raw message with user's publishConfig\n    const { raw: rawMsg, msg } = await buildRawMessage(this.publishConfig, topic, data, transformedData)\n\n    // calculate the message id from the un-transformed data\n    const msgId = await this.msgIdFn(msg)\n    const msgIdStr = this.msgIdToStrFn(msgId)\n\n    // Current publish opt takes precedence global opts, while preserving false value\n    const ignoreDuplicatePublishError = opts?.ignoreDuplicatePublishError ?? this.opts.ignoreDuplicatePublishError\n\n    if (this.seenCache.has(msgIdStr)) {\n      // This message has already been seen. We don't re-publish messages that have already\n      // been published on the network.\n      if (ignoreDuplicatePublishError) {\n        this.metrics?.onPublishDuplicateMsg(topic)\n        return { recipients: [] }\n      }\n      throw Error('PublishError.Duplicate')\n    }\n\n    const { tosend, tosendCount } = this.selectPeersToPublish(topic)\n    const willSendToSelf = this.opts.emitSelf && this.subscriptions.has(topic)\n\n    // Current publish opt takes precedence global opts, while preserving false value\n    const allowPublishToZeroPeers = opts?.allowPublishToZeroPeers ?? this.opts.allowPublishToZeroPeers\n\n    if (tosend.size === 0 && !allowPublishToZeroPeers && !willSendToSelf) {\n      throw Error('PublishError.InsufficientPeers')\n    }\n\n    // If the message isn't a duplicate and we have sent it to some peers add it to the\n    // duplicate cache and memcache.\n    this.seenCache.put(msgIdStr)\n    // all published messages are valid\n    this.mcache.put({ msgId, msgIdStr }, rawMsg, true)\n\n    // If the message is anonymous or has a random author add it to the published message ids cache.\n    this.publishedMessageIds.put(msgIdStr)\n\n    const batchPublish = opts?.batchPublish ?? this.opts.batchPublish\n    const rpc = { messages: [rawMsg] }\n    if (batchPublish) {\n      this.sendRpcInBatch(tosend, rpc)\n    } else {\n      // Send to set of peers aggregated from direct, mesh, fanout\n      for (const id of tosend) {\n        // sendRpc may mutate RPC message on piggyback, create a new message for each peer\n        const sent = this.sendRpc(id, rpc)\n\n        // did not actually send the message\n        if (!sent) {\n          tosend.delete(id)\n        }\n      }\n    }\n\n    const durationMs = Date.now() - startMs\n    this.metrics?.onPublishMsg(\n      topic,\n      tosendCount,\n      tosend.size,\n      rawMsg.data != null ? rawMsg.data.length : 0,\n      durationMs\n    )\n\n    // Dispatch the message to the user if we are subscribed to the topic\n    if (willSendToSelf) {\n      tosend.add(this.components.peerId.toString())\n\n      super.dispatchEvent(\n        new CustomEvent<GossipsubMessage>('gossipsub:message', {\n          detail: {\n            propagationSource: this.components.peerId,\n            msgId: msgIdStr,\n            msg\n          }\n        })\n      )\n      // TODO: Add option to switch between emit per topic or all messages in one\n      super.dispatchEvent(new CustomEvent<Message>('message', { detail: msg }))\n    }\n\n    return {\n      recipients: Array.from(tosend.values()).map((str) => peerIdFromString(str))\n    }\n  }\n\n  /**\n   * Send the same data in batch to tosend list without considering cached control messages\n   * This is not only faster but also avoid allocating memory for each peer\n   * see https://github.com/ChainSafe/js-libp2p-gossipsub/issues/344\n   */\n  private sendRpcInBatch (tosend: Set<PeerIdStr>, rpc: IRPC): void {\n    const rpcBytes = RPC.encode(rpc).finish()\n    const prefixedData = encode.single(rpcBytes)\n    for (const id of tosend) {\n      const outboundStream = this.streamsOutbound.get(id)\n      if (outboundStream == null) {\n        this.log(`Cannot send RPC to ${id} as there is no open stream to it available`)\n        tosend.delete(id)\n        continue\n      }\n      try {\n        outboundStream.pushPrefixed(prefixedData)\n      } catch (e) {\n        tosend.delete(id)\n        this.log.error(`Cannot send rpc to ${id}`, e)\n      }\n\n      this.metrics?.onRpcSent(rpc, rpcBytes.length)\n    }\n  }\n\n  /**\n   * This function should be called when `asyncValidation` is `true` after\n   * the message got validated by the caller. Messages are stored in the `mcache` and\n   * validation is expected to be fast enough that the messages should still exist in the cache.\n   * There are three possible validation outcomes and the outcome is given in acceptance.\n   *\n   * If acceptance = `MessageAcceptance.Accept` the message will get propagated to the\n   * network. The `propagation_source` parameter indicates who the message was received by and\n   * will not be forwarded back to that peer.\n   *\n   * If acceptance = `MessageAcceptance.Reject` the message will be deleted from the memcache\n   * and the P\u2084 penalty will be applied to the `propagationSource`.\n   *\n   * If acceptance = `MessageAcceptance.Ignore` the message will be deleted from the memcache\n   * but no P\u2084 penalty will be applied.\n   *\n   * This function will return true if the message was found in the cache and false if was not\n   * in the cache anymore.\n   *\n   * This should only be called once per message.\n   */\n  reportMessageValidationResult (msgId: MsgIdStr, propagationSource: PeerIdStr, acceptance: TopicValidatorResult): void {\n    let cacheEntry: MessageCacheRecord | null\n\n    if (acceptance === TopicValidatorResult.Accept) {\n      cacheEntry = this.mcache.validate(msgId)\n\n      if (cacheEntry != null) {\n        const { message: rawMsg, originatingPeers } = cacheEntry\n        // message is fully validated inform peer_score\n        this.score.deliverMessage(propagationSource, msgId, rawMsg.topic)\n\n        this.forwardMessage(msgId, cacheEntry.message, propagationSource, originatingPeers)\n      }\n      // else, Message not in cache. Ignoring forwarding\n    // eslint-disable-next-line @typescript-eslint/brace-style\n    }\n\n    // Not valid\n    else {\n      cacheEntry = this.mcache.remove(msgId)\n\n      if (cacheEntry != null) {\n        const rejectReason = rejectReasonFromAcceptance(acceptance)\n        const { message: rawMsg, originatingPeers } = cacheEntry\n\n        // Tell peer_score about reject\n        // Reject the original source, and any duplicates we've seen from other peers.\n        this.score.rejectMessage(propagationSource, msgId, rawMsg.topic, rejectReason)\n        for (const peer of originatingPeers) {\n          this.score.rejectMessage(peer, msgId, rawMsg.topic, rejectReason)\n        }\n      }\n      // else, Message not in cache. Ignoring forwarding\n    }\n\n    const firstSeenTimestampMs = this.score.messageFirstSeenTimestampMs(msgId)\n    this.metrics?.onReportValidation(cacheEntry, acceptance, firstSeenTimestampMs)\n  }\n\n  /**\n   * Sends a GRAFT message to a peer\n   */\n  private sendGraft (id: PeerIdStr, topic: string): void {\n    const graft = [\n      {\n        topicID: topic\n      }\n    ]\n\n    this.sendRpc(id, { control: { graft } })\n  }\n\n  /**\n   * Sends a PRUNE message to a peer\n   */\n  private async sendPrune (id: PeerIdStr, topic: string): Promise<void> {\n    // this is only called from leave() function\n    const onUnsubscribe = true\n    const prune = [await this.makePrune(id, topic, this.opts.doPX, onUnsubscribe)]\n\n    this.sendRpc(id, { control: { prune } })\n  }\n\n  /**\n   * Send an rpc object to a peer\n   */\n  private sendRpc (id: PeerIdStr, rpc: IRPC): boolean {\n    const outboundStream = this.streamsOutbound.get(id)\n    if (outboundStream == null) {\n      this.log(`Cannot send RPC to ${id} as there is no open stream to it available`)\n      return false\n    }\n\n    // piggyback control message retries\n    const ctrl = this.control.get(id)\n    if (ctrl != null) {\n      this.piggybackControl(id, rpc, ctrl)\n      this.control.delete(id)\n    }\n\n    // piggyback gossip\n    const ihave = this.gossip.get(id)\n    if (ihave != null) {\n      this.piggybackGossip(id, rpc, ihave)\n      this.gossip.delete(id)\n    }\n\n    const rpcBytes = RPC.encode(rpc).finish()\n    try {\n      outboundStream.push(rpcBytes)\n    } catch (e) {\n      this.log.error(`Cannot send rpc to ${id}`, e)\n\n      // if the peer had control messages or gossip, re-attach\n      if (ctrl != null) {\n        this.control.set(id, ctrl)\n      }\n      if (ihave != null) {\n        this.gossip.set(id, ihave)\n      }\n\n      return false\n    }\n\n    this.metrics?.onRpcSent(rpc, rpcBytes.length)\n\n    return true\n  }\n\n  /** Mutates `outRpc` adding graft and prune control messages */\n  public piggybackControl (id: PeerIdStr, outRpc: IRPC, ctrl: RPC.IControlMessage): void {\n    if (ctrl.graft != null) {\n      if (outRpc.control == null) outRpc.control = {}\n      if (outRpc.control.graft == null) outRpc.control.graft = []\n      for (const graft of ctrl.graft) {\n        if (graft.topicID != null && (this.mesh.get(graft.topicID)?.has(id) ?? false)) {\n          outRpc.control.graft.push(graft)\n        }\n      }\n    }\n\n    if (ctrl.prune != null) {\n      if (outRpc.control == null) outRpc.control = {}\n      if (outRpc.control.prune == null) outRpc.control.prune = []\n      for (const prune of ctrl.prune) {\n        if (prune.topicID != null && !(this.mesh.get(prune.topicID)?.has(id) ?? false)) {\n          outRpc.control.prune.push(prune)\n        }\n      }\n    }\n  }\n\n  /** Mutates `outRpc` adding ihave control messages */\n  private piggybackGossip (id: PeerIdStr, outRpc: IRPC, ihave: RPC.IControlIHave[]): void {\n    if (outRpc.control == null) outRpc.control = {}\n    outRpc.control.ihave = ihave\n  }\n\n  /**\n   * Send graft and prune messages\n   *\n   * @param tograft - peer id => topic[]\n   * @param toprune - peer id => topic[]\n   */\n  private async sendGraftPrune (\n    tograft: Map<string, string[]>,\n    toprune: Map<string, string[]>,\n    noPX: Map<string, boolean>\n  ): Promise<void> {\n    const doPX = this.opts.doPX\n    const onUnsubscribe = false\n    for (const [id, topics] of tograft) {\n      const graft = topics.map((topicID) => ({ topicID }))\n      let prune: RPC.IControlPrune[] = []\n      // If a peer also has prunes, process them now\n      const pruning = toprune.get(id)\n      if (pruning != null) {\n        prune = await Promise.all(\n          pruning.map(\n            async (topicID) => this.makePrune(id, topicID, doPX && !(noPX.get(id) ?? false), onUnsubscribe)\n          )\n        )\n        toprune.delete(id)\n      }\n\n      this.sendRpc(id, { control: { graft, prune } })\n    }\n    for (const [id, topics] of toprune) {\n      const prune = await Promise.all(\n        topics.map(\n          async (topicID) => this.makePrune(id, topicID, doPX && !(noPX.get(id) ?? false), onUnsubscribe)\n        )\n      )\n      this.sendRpc(id, { control: { prune } })\n    }\n  }\n\n  /**\n   * Emits gossip - Send IHAVE messages to a random set of gossip peers\n   */\n  private emitGossip (peersToGossipByTopic: Map<string, Set<PeerIdStr>>): void {\n    const gossipIDsByTopic = this.mcache.getGossipIDs(new Set(peersToGossipByTopic.keys()))\n    for (const [topic, peersToGossip] of peersToGossipByTopic) {\n      this.doEmitGossip(topic, peersToGossip, gossipIDsByTopic.get(topic) ?? [])\n    }\n  }\n\n  /**\n   * Send gossip messages to GossipFactor peers above threshold with a minimum of D_lazy\n   * Peers are randomly selected from the heartbeat which exclude mesh + fanout peers\n   * We also exclude direct peers, as there is no reason to emit gossip to them\n   *\n   * @param topic\n   * @param candidateToGossip - peers to gossip\n   * @param messageIDs - message ids to gossip\n   */\n  private doEmitGossip (topic: string, candidateToGossip: Set<PeerIdStr>, messageIDs: Uint8Array[]): void {\n    if (messageIDs.length === 0) {\n      return\n    }\n\n    // shuffle to emit in random order\n    shuffle(messageIDs)\n\n    // if we are emitting more than GossipsubMaxIHaveLength ids, truncate the list\n    if (messageIDs.length > constants.GossipsubMaxIHaveLength) {\n      // we do the truncation (with shuffling) per peer below\n      this.log('too many messages for gossip; will truncate IHAVE list (%d messages)', messageIDs.length)\n    }\n\n    if (candidateToGossip.size === 0) return\n    let target = this.opts.Dlazy\n    const factor = constants.GossipsubGossipFactor * candidateToGossip.size\n    let peersToGossip: Set<PeerIdStr> | PeerIdStr[] = candidateToGossip\n    if (factor > target) {\n      target = factor\n    }\n    if (target > peersToGossip.size) {\n      target = peersToGossip.size\n    } else {\n      // only shuffle if needed\n      peersToGossip = shuffle(Array.from(peersToGossip)).slice(0, target)\n    }\n\n    // Emit the IHAVE gossip to the selected peers up to the target\n    peersToGossip.forEach((id) => {\n      let peerMessageIDs = messageIDs\n      if (messageIDs.length > constants.GossipsubMaxIHaveLength) {\n        // shuffle and slice message IDs per peer so that we emit a different set for each peer\n        // we have enough reduncancy in the system that this will significantly increase the message\n        // coverage when we do truncate\n        peerMessageIDs = shuffle(peerMessageIDs.slice()).slice(0, constants.GossipsubMaxIHaveLength)\n      }\n      this.pushGossip(id, {\n        topicID: topic,\n        messageIDs: peerMessageIDs\n      })\n    })\n  }\n\n  /**\n   * Flush gossip and control messages\n   */\n  private flush (): void {\n    // send gossip first, which will also piggyback control\n    for (const [peer, ihave] of this.gossip.entries()) {\n      this.gossip.delete(peer)\n      this.sendRpc(peer, { control: { ihave } })\n    }\n    // send the remaining control messages\n    for (const [peer, control] of this.control.entries()) {\n      this.control.delete(peer)\n      this.sendRpc(peer, { control: { graft: control.graft, prune: control.prune } })\n    }\n  }\n\n  /**\n   * Adds new IHAVE messages to pending gossip\n   */\n  private pushGossip (id: PeerIdStr, controlIHaveMsgs: RPC.IControlIHave): void {\n    this.log('Add gossip to %s', id)\n    const gossip = this.gossip.get(id) ?? []\n    this.gossip.set(id, gossip.concat(controlIHaveMsgs))\n  }\n\n  /**\n   * Make a PRUNE control message for a peer in a topic\n   */\n  private async makePrune (\n    id: PeerIdStr,\n    topic: string,\n    doPX: boolean,\n    onUnsubscribe: boolean\n  ): Promise<RPC.IControlPrune> {\n    this.score.prune(id, topic)\n    if (this.streamsOutbound.get(id)?.protocol === constants.GossipsubIDv10) {\n      // Gossipsub v1.0 -- no backoff, the peer won't be able to parse it anyway\n      return {\n        topicID: topic,\n        peers: []\n      }\n    }\n    // backoff is measured in seconds\n    // GossipsubPruneBackoff and GossipsubUnsubscribeBackoff are measured in milliseconds\n    // The protobuf has it as a uint64\n    const backoffMs = onUnsubscribe ? this.opts.unsubcribeBackoff : this.opts.pruneBackoff\n    const backoff = backoffMs / 1000\n    this.doAddBackoff(id, topic, backoffMs)\n\n    if (!doPX) {\n      return {\n        topicID: topic,\n        peers: [],\n        backoff\n      }\n    }\n\n    // select peers for Peer eXchange\n    const peers = this.getRandomGossipPeers(topic, this.opts.prunePeers, (xid) => {\n      return xid !== id && this.score.score(xid) >= 0\n    })\n    const px = await Promise.all(\n      Array.from(peers).map(async (peerId) => {\n        // see if we have a signed record to send back; if we don't, just send\n        // the peer ID and let the pruned peer find them in the DHT -- we can't trust\n        // unsigned address records through PX anyways\n        // Finding signed records in the DHT is not supported at the time of writing in js-libp2p\n        const id = peerIdFromString(peerId)\n        let peerInfo: Peer | undefined\n\n        try {\n          peerInfo = await this.components.peerStore.get(id)\n        } catch (err: any) {\n          if (err.code !== 'ERR_NOT_FOUND') {\n            throw err\n          }\n        }\n\n        return {\n          peerID: id.toBytes(),\n          signedPeerRecord: peerInfo?.peerRecordEnvelope\n        }\n      })\n    )\n    return {\n      topicID: topic,\n      peers: px,\n      backoff\n    }\n  }\n\n  private readonly runHeartbeat = (): void => {\n    const timer = this.metrics?.heartbeatDuration.startTimer()\n\n    this.heartbeat()\n      .catch((err) => {\n        this.log('Error running heartbeat', err)\n      })\n      .finally(() => {\n        if (timer != null) {\n          timer()\n        }\n\n        // Schedule the next run if still in started status\n        if (this.status.code === GossipStatusCode.started) {\n          // Clear previous timeout before overwriting `status.heartbeatTimeout`, it should be completed tho.\n          clearTimeout(this.status.heartbeatTimeout)\n\n          // NodeJS setInterval function is innexact, calls drift by a few miliseconds on each call.\n          // To run the heartbeat precisely setTimeout() must be used recomputing the delay on every loop.\n          let msToNextHeartbeat =\n            this.opts.heartbeatInterval - ((Date.now() - this.status.hearbeatStartMs) % this.opts.heartbeatInterval)\n\n          // If too close to next heartbeat, skip one\n          if (msToNextHeartbeat < this.opts.heartbeatInterval * 0.25) {\n            msToNextHeartbeat += this.opts.heartbeatInterval\n            this.metrics?.heartbeatSkipped.inc()\n          }\n\n          this.status.heartbeatTimeout = setTimeout(this.runHeartbeat, msToNextHeartbeat)\n        }\n      })\n  }\n\n  /**\n   * Maintains the mesh and fanout maps in gossipsub.\n   */\n  public async heartbeat (): Promise<void> {\n    const { D, Dlo, Dhi, Dscore, Dout, fanoutTTL } = this.opts\n\n    this.heartbeatTicks++\n\n    // cache scores throught the heartbeat\n    const scores = new Map<string, number>()\n    const getScore = (id: string): number => {\n      let s = scores.get(id)\n      if (s === undefined) {\n        s = this.score.score(id)\n        scores.set(id, s)\n      }\n      return s\n    }\n\n    // peer id => topic[]\n    const tograft = new Map<string, string[]>()\n    // peer id => topic[]\n    const toprune = new Map<string, string[]>()\n    // peer id => don't px\n    const noPX = new Map<string, boolean>()\n\n    // clean up expired backoffs\n    this.clearBackoff()\n\n    // clean up peerhave/iasked counters\n    this.peerhave.clear()\n    this.metrics?.cacheSize.set({ cache: 'iasked' }, this.iasked.size)\n    this.iasked.clear()\n\n    // apply IWANT request penalties\n    this.applyIwantPenalties()\n\n    // ensure direct peers are connected\n    if (this.heartbeatTicks % this.opts.directConnectTicks === 0) {\n      // we only do this every few ticks to allow pending connections to complete and account for restarts/downtime\n      await this.directConnect()\n    }\n\n    // EXTRA: Prune caches\n    this.fastMsgIdCache?.prune()\n    this.seenCache.prune()\n    this.gossipTracer.prune()\n    this.publishedMessageIds.prune()\n\n    /**\n     * Instead of calling getRandomGossipPeers multiple times to:\n     * + get more mesh peers\n     * + more outbound peers\n     * + oppportunistic grafting\n     * + emitGossip\n     *\n     * We want to loop through the topic peers only a single time and prepare gossip peers for all topics to improve the performance\n     */\n\n    const peersToGossipByTopic = new Map<string, Set<PeerIdStr>>()\n    // maintain the mesh for topics we have joined\n    // eslint-disable-next-line complexity\n    this.mesh.forEach((peers, topic) => {\n      const peersInTopic = this.topics.get(topic)\n      const candidateMeshPeers = new Set<PeerIdStr>()\n      const peersToGossip = new Set<PeerIdStr>()\n      peersToGossipByTopic.set(topic, peersToGossip)\n\n      if (peersInTopic != null) {\n        const shuffledPeers = shuffle(Array.from(peersInTopic))\n        const backoff = this.backoff.get(topic)\n        for (const id of shuffledPeers) {\n          const peerStreams = this.streamsOutbound.get(id)\n          if (\n            (peerStreams != null) &&\n            this.multicodecs.includes(peerStreams.protocol) &&\n            !peers.has(id) &&\n            !this.direct.has(id)\n          ) {\n            const score = getScore(id)\n            if (((backoff == null) || !backoff.has(id)) && score >= 0) candidateMeshPeers.add(id)\n            // instead of having to find gossip peers after heartbeat which require another loop\n            // we prepare peers to gossip in a topic within heartbeat to improve performance\n            if (score >= this.opts.scoreThresholds.gossipThreshold) peersToGossip.add(id)\n          }\n        }\n      }\n\n      // prune/graft helper functions (defined per topic)\n      const prunePeer = (id: PeerIdStr, reason: ChurnReason): void => {\n        this.log('HEARTBEAT: Remove mesh link to %s in %s', id, topic)\n        // no need to update peer score here as we do it in makePrune\n        // add prune backoff record\n        this.addBackoff(id, topic)\n        // remove peer from mesh\n        peers.delete(id)\n        // after pruning a peer from mesh, we want to gossip topic to it if its score meet the gossip threshold\n        if (getScore(id) >= this.opts.scoreThresholds.gossipThreshold) peersToGossip.add(id)\n        this.metrics?.onRemoveFromMesh(topic, reason, 1)\n        // add to toprune\n        const topics = toprune.get(id)\n        if (topics == null) {\n          toprune.set(id, [topic])\n        } else {\n          topics.push(topic)\n        }\n      }\n\n      const graftPeer = (id: PeerIdStr, reason: InclusionReason): void => {\n        this.log('HEARTBEAT: Add mesh link to %s in %s', id, topic)\n        // update peer score\n        this.score.graft(id, topic)\n        // add peer to mesh\n        peers.add(id)\n        // when we add a new mesh peer, we don't want to gossip messages to it\n        peersToGossip.delete(id)\n        this.metrics?.onAddToMesh(topic, reason, 1)\n        // add to tograft\n        const topics = tograft.get(id)\n        if (topics == null) {\n          tograft.set(id, [topic])\n        } else {\n          topics.push(topic)\n        }\n      }\n\n      // drop all peers with negative score, without PX\n      peers.forEach((id) => {\n        const score = getScore(id)\n\n        // Record the score\n\n        if (score < 0) {\n          this.log('HEARTBEAT: Prune peer %s with negative score: score=%d, topic=%s', id, score, topic)\n          prunePeer(id, ChurnReason.BadScore)\n          noPX.set(id, true)\n        }\n      })\n\n      // do we have enough peers?\n      if (peers.size < Dlo) {\n        const ineed = D - peers.size\n        // slice up to first `ineed` items and remove them from candidateMeshPeers\n        // same to `const newMeshPeers = candidateMeshPeers.slice(0, ineed)`\n        const newMeshPeers = removeFirstNItemsFromSet(candidateMeshPeers, ineed)\n\n        newMeshPeers.forEach((p) => {\n          graftPeer(p, InclusionReason.NotEnough)\n        })\n      }\n\n      // do we have to many peers?\n      if (peers.size > Dhi) {\n        let peersArray = Array.from(peers)\n        // sort by score\n        peersArray.sort((a, b) => getScore(b) - getScore(a))\n        // We keep the first D_score peers by score and the remaining up to D randomly\n        // under the constraint that we keep D_out peers in the mesh (if we have that many)\n        peersArray = peersArray.slice(0, Dscore).concat(shuffle(peersArray.slice(Dscore)))\n\n        // count the outbound peers we are keeping\n        let outbound = 0\n        peersArray.slice(0, D).forEach((p) => {\n          if (this.outbound.get(p) ?? false) {\n            outbound++\n          }\n        })\n\n        // if it's less than D_out, bubble up some outbound peers from the random selection\n        if (outbound < Dout) {\n          const rotate = (i: number): void => {\n            // rotate the peersArray to the right and put the ith peer in the front\n            const p = peersArray[i]\n            for (let j = i; j > 0; j--) {\n              peersArray[j] = peersArray[j - 1]\n            }\n            peersArray[0] = p\n          }\n\n          // first bubble up all outbound peers already in the selection to the front\n          if (outbound > 0) {\n            let ihave = outbound\n            for (let i = 1; i < D && ihave > 0; i++) {\n              // eslint-disable-next-line max-depth\n              if (this.outbound.get(peersArray[i]) ?? false) {\n                rotate(i)\n                ihave--\n              }\n            }\n          }\n\n          // now bubble up enough outbound peers outside the selection to the front\n          let ineed = D - outbound\n          for (let i = D; i < peersArray.length && ineed > 0; i++) {\n            if (this.outbound.get(peersArray[i]) ?? false) {\n              rotate(i)\n              ineed--\n            }\n          }\n        }\n\n        // prune the excess peers\n        peersArray.slice(D).forEach((p) => {\n          prunePeer(p, ChurnReason.Excess)\n        })\n      }\n\n      // do we have enough outbound peers?\n      if (peers.size >= Dlo) {\n        // count the outbound peers we have\n        let outbound = 0\n        peers.forEach((p) => {\n          if (this.outbound.get(p) ?? false) {\n            outbound++\n          }\n        })\n\n        // if it's less than D_out, select some peers with outbound connections and graft them\n        if (outbound < Dout) {\n          const ineed = Dout - outbound\n          const newMeshPeers = removeItemsFromSet(candidateMeshPeers, ineed, (id) => this.outbound.get(id) === true)\n\n          newMeshPeers.forEach((p) => {\n            graftPeer(p, InclusionReason.Outbound)\n          })\n        }\n      }\n\n      // should we try to improve the mesh with opportunistic grafting?\n      if (this.heartbeatTicks % this.opts.opportunisticGraftTicks === 0 && peers.size > 1) {\n        // Opportunistic grafting works as follows: we check the median score of peers in the\n        // mesh; if this score is below the opportunisticGraftThreshold, we select a few peers at\n        // random with score over the median.\n        // The intention is to (slowly) improve an underperforming mesh by introducing good\n        // scoring peers that may have been gossiping at us. This allows us to get out of sticky\n        // situations where we are stuck with poor peers and also recover from churn of good peers.\n\n        // now compute the median peer score in the mesh\n        const peersList = Array.from(peers).sort((a, b) => getScore(a) - getScore(b))\n        const medianIndex = Math.floor(peers.size / 2)\n        const medianScore = getScore(peersList[medianIndex])\n\n        // if the median score is below the threshold, select a better peer (if any) and GRAFT\n        if (medianScore < this.opts.scoreThresholds.opportunisticGraftThreshold) {\n          const ineed = this.opts.opportunisticGraftPeers\n          const newMeshPeers = removeItemsFromSet(candidateMeshPeers, ineed, (id) => getScore(id) > medianScore)\n          for (const id of newMeshPeers) {\n            this.log('HEARTBEAT: Opportunistically graft peer %s on topic %s', id, topic)\n            graftPeer(id, InclusionReason.Opportunistic)\n          }\n        }\n      }\n    })\n\n    // expire fanout for topics we haven't published to in a while\n    const now = Date.now()\n    this.fanoutLastpub.forEach((lastpb, topic) => {\n      if (lastpb + fanoutTTL < now) {\n        this.fanout.delete(topic)\n        this.fanoutLastpub.delete(topic)\n      }\n    })\n\n    // maintain our fanout for topics we are publishing but we have not joined\n    this.fanout.forEach((fanoutPeers, topic) => {\n      // checks whether our peers are still in the topic and have a score above the publish threshold\n      const topicPeers = this.topics.get(topic)\n      fanoutPeers.forEach((id) => {\n        if (!(topicPeers?.has(id) ?? false) || getScore(id) < this.opts.scoreThresholds.publishThreshold) {\n          fanoutPeers.delete(id)\n        }\n      })\n\n      const peersInTopic = this.topics.get(topic)\n      const candidateFanoutPeers = []\n      // the fanout map contains topics to which we are not subscribed.\n      const peersToGossip = new Set<PeerIdStr>()\n      peersToGossipByTopic.set(topic, peersToGossip)\n\n      if (peersInTopic != null) {\n        const shuffledPeers = shuffle(Array.from(peersInTopic))\n        for (const id of shuffledPeers) {\n          const peerStreams = this.streamsOutbound.get(id)\n          if (\n            (peerStreams != null) &&\n            this.multicodecs.includes(peerStreams.protocol) &&\n            !fanoutPeers.has(id) &&\n            !this.direct.has(id)\n          ) {\n            const score = getScore(id)\n            if (score >= this.opts.scoreThresholds.publishThreshold) candidateFanoutPeers.push(id)\n            // instead of having to find gossip peers after heartbeat which require another loop\n            // we prepare peers to gossip in a topic within heartbeat to improve performance\n            if (score >= this.opts.scoreThresholds.gossipThreshold) peersToGossip.add(id)\n          }\n        }\n      }\n\n      // do we need more peers?\n      if (fanoutPeers.size < D) {\n        const ineed = D - fanoutPeers.size\n        candidateFanoutPeers.slice(0, ineed).forEach((id) => {\n          fanoutPeers.add(id)\n          peersToGossip?.delete(id)\n        })\n      }\n    })\n\n    this.emitGossip(peersToGossipByTopic)\n\n    // send coalesced GRAFT/PRUNE messages (will piggyback gossip)\n    await this.sendGraftPrune(tograft, toprune, noPX)\n\n    // flush pending gossip that wasn't piggybacked above\n    this.flush()\n\n    // advance the message history window\n    this.mcache.shift()\n\n    this.dispatchEvent(new CustomEvent('gossipsub:heartbeat'))\n  }\n\n  /**\n   * Given a topic, returns up to count peers subscribed to that topic\n   * that pass an optional filter function\n   *\n   * @param topic\n   * @param count\n   * @param filter - a function to filter acceptable peers\n   */\n  private getRandomGossipPeers (\n    topic: string,\n    count: number,\n    filter: (id: string) => boolean = () => true\n  ): Set<string> {\n    const peersInTopic = this.topics.get(topic)\n\n    if (peersInTopic == null) {\n      return new Set()\n    }\n\n    // Adds all peers using our protocol\n    // that also pass the filter function\n    let peers: string[] = []\n    peersInTopic.forEach((id) => {\n      const peerStreams = this.streamsOutbound.get(id)\n      if (peerStreams == null) {\n        return\n      }\n      if (this.multicodecs.includes(peerStreams.protocol) && filter(id)) {\n        peers.push(id)\n      }\n    })\n\n    // Pseudo-randomly shuffles peers\n    peers = shuffle(peers)\n    if (count > 0 && peers.length > count) {\n      peers = peers.slice(0, count)\n    }\n\n    return new Set(peers)\n  }\n\n  private onScrapeMetrics (metrics: Metrics): void {\n    /* Data structure sizes */\n    metrics.mcacheSize.set(this.mcache.size)\n    metrics.mcacheNotValidatedCount.set(this.mcache.notValidatedCount)\n    // Arbitrary size\n    metrics.cacheSize.set({ cache: 'direct' }, this.direct.size)\n    metrics.cacheSize.set({ cache: 'seenCache' }, this.seenCache.size)\n    metrics.cacheSize.set({ cache: 'fastMsgIdCache' }, this.fastMsgIdCache?.size ?? 0)\n    metrics.cacheSize.set({ cache: 'publishedMessageIds' }, this.publishedMessageIds.size)\n    metrics.cacheSize.set({ cache: 'mcache' }, this.mcache.size)\n    metrics.cacheSize.set({ cache: 'score' }, this.score.size)\n    metrics.cacheSize.set({ cache: 'gossipTracer.promises' }, this.gossipTracer.size)\n    metrics.cacheSize.set({ cache: 'gossipTracer.requests' }, this.gossipTracer.requestMsByMsgSize)\n    // Bounded by topic\n    metrics.cacheSize.set({ cache: 'topics' }, this.topics.size)\n    metrics.cacheSize.set({ cache: 'subscriptions' }, this.subscriptions.size)\n    metrics.cacheSize.set({ cache: 'mesh' }, this.mesh.size)\n    metrics.cacheSize.set({ cache: 'fanout' }, this.fanout.size)\n    // Bounded by peer\n    metrics.cacheSize.set({ cache: 'peers' }, this.peers.size)\n    metrics.cacheSize.set({ cache: 'streamsOutbound' }, this.streamsOutbound.size)\n    metrics.cacheSize.set({ cache: 'streamsInbound' }, this.streamsInbound.size)\n    metrics.cacheSize.set({ cache: 'acceptFromWhitelist' }, this.acceptFromWhitelist.size)\n    metrics.cacheSize.set({ cache: 'gossip' }, this.gossip.size)\n    metrics.cacheSize.set({ cache: 'control' }, this.control.size)\n    metrics.cacheSize.set({ cache: 'peerhave' }, this.peerhave.size)\n    metrics.cacheSize.set({ cache: 'outbound' }, this.outbound.size)\n\n    // 2D nested data structure\n    let backoffSize = 0\n    const now = Date.now()\n    metrics.connectedPeersBackoffSec.reset()\n    for (const backoff of this.backoff.values()) {\n      backoffSize += backoff.size\n      for (const [peer, expiredMs] of backoff.entries()) {\n        if (this.peers.has(peer)) {\n          metrics.connectedPeersBackoffSec.observe(Math.max(0, expiredMs - now) / 1000)\n        }\n      }\n    }\n    metrics.cacheSize.set({ cache: 'backoff' }, backoffSize)\n\n    // Peer counts\n\n    for (const [topicStr, peers] of this.topics) {\n      metrics.topicPeersCount.set({ topicStr }, peers.size)\n    }\n\n    for (const [topicStr, peers] of this.mesh) {\n      metrics.meshPeerCounts.set({ topicStr }, peers.size)\n    }\n\n    // Peer scores\n\n    const scores: number[] = []\n    const scoreByPeer = new Map<PeerIdStr, number>()\n    metrics.behaviourPenalty.reset()\n\n    for (const peerIdStr of this.peers.keys()) {\n      const score = this.score.score(peerIdStr)\n      scores.push(score)\n      scoreByPeer.set(peerIdStr, score)\n      metrics.behaviourPenalty.observe(this.score.peerStats.get(peerIdStr)?.behaviourPenalty ?? 0)\n    }\n\n    metrics.registerScores(scores, this.opts.scoreThresholds)\n\n    // Breakdown score per mesh topicLabel\n\n    metrics.registerScorePerMesh(this.mesh, scoreByPeer)\n\n    // Breakdown on each score weight\n\n    const sw = computeAllPeersScoreWeights(\n      this.peers.keys(),\n      this.score.peerStats,\n      this.score.params,\n      this.score.peerIPs,\n      metrics.topicStrToLabel\n    )\n\n    metrics.registerScoreWeights(sw)\n  }\n}\n\nexport function gossipsub (\n  init: Partial<GossipsubOpts> = {}\n): (components: GossipSubComponents) => PubSub<GossipsubEvents> {\n  return (components: GossipSubComponents) => new GossipSub(components, init)\n}\n", "import type { CID } from 'multiformats/cid'\nimport type { MultihashDigest } from 'multiformats/hashes/interface'\n\nexport type PeerIdType = 'RSA' | 'Ed25519' | 'secp256k1'\n\ninterface BasePeerId {\n  readonly type: PeerIdType\n  readonly multihash: MultihashDigest\n  readonly privateKey?: Uint8Array\n  readonly publicKey?: Uint8Array\n\n  toString(): string\n  toCID(): CID\n  toBytes(): Uint8Array\n  equals(other?: PeerId | Uint8Array | string): boolean\n}\n\nexport interface RSAPeerId extends BasePeerId {\n  readonly type: 'RSA'\n  readonly publicKey?: Uint8Array\n}\n\nexport interface Ed25519PeerId extends BasePeerId {\n  readonly type: 'Ed25519'\n  readonly publicKey: Uint8Array\n}\n\nexport interface Secp256k1PeerId extends BasePeerId {\n  readonly type: 'secp256k1'\n  readonly publicKey: Uint8Array\n}\n\nexport type PeerId = RSAPeerId | Ed25519PeerId | Secp256k1PeerId\n\nexport const peerIdSymbol = Symbol.for('@libp2p/peer-id')\n\nexport function isPeerId (other: any): other is PeerId {\n  return other != null && Boolean(other[peerIdSymbol])\n}\n", "import type { Stream } from '../connection/index.js'\nimport type { TypedEventTarget } from '../event-target.js'\nimport type { PeerId } from '../peer-id/index.js'\nimport type { Pushable } from 'it-pushable'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\n/**\n * On the producing side:\n * * Build messages with the signature, key (from may be enough for certain inlineable public key types), from and seqno fields.\n *\n * On the consuming side:\n * * Enforce the fields to be present, reject otherwise.\n * * Propagate only if the fields are valid and signature can be verified, reject otherwise.\n */\nexport const StrictSign = 'StrictSign'\n\n/**\n * On the producing side:\n * * Build messages without the signature, key, from and seqno fields.\n * * The corresponding protobuf key-value pairs are absent from the marshalled message, not just empty.\n *\n * On the consuming side:\n * * Enforce the fields to be absent, reject otherwise.\n * * Propagate only if the fields are absent, reject otherwise.\n * * A message_id function will not be able to use the above fields, and should instead rely on the data field. A commonplace strategy is to calculate a hash.\n */\nexport const StrictNoSign = 'StrictNoSign'\n\nexport type SignaturePolicy = typeof StrictSign | typeof StrictNoSign\n\nexport interface SignedMessage {\n  type: 'signed'\n  from: PeerId\n  topic: string\n  data: Uint8Array\n  sequenceNumber: bigint\n  signature: Uint8Array\n  key: Uint8Array\n}\n\nexport interface UnsignedMessage {\n  type: 'unsigned'\n  topic: string\n  data: Uint8Array\n}\n\nexport type Message = SignedMessage | UnsignedMessage\n\nexport interface PubSubRPCMessage {\n  from?: Uint8Array\n  topic?: string\n  data?: Uint8Array\n  sequenceNumber?: Uint8Array\n  signature?: Uint8Array\n  key?: Uint8Array\n}\n\nexport interface PubSubRPCSubscription {\n  subscribe?: boolean\n  topic?: string\n}\n\nexport interface PubSubRPC {\n  subscriptions: PubSubRPCSubscription[]\n  messages: PubSubRPCMessage[]\n}\n\nexport interface PeerStreams extends TypedEventTarget<PeerStreamEvents> {\n  id: PeerId\n  protocol: string\n  outboundStream?: Pushable<Uint8ArrayList>\n  inboundStream?: AsyncIterable<Uint8ArrayList>\n  isWritable: boolean\n\n  close(): void\n  write(buf: Uint8Array | Uint8ArrayList): void\n  attachInboundStream(stream: Stream): AsyncIterable<Uint8ArrayList>\n  attachOutboundStream(stream: Stream): Promise<Pushable<Uint8ArrayList>>\n}\n\nexport interface PubSubInit {\n  enabled?: boolean\n\n  multicodecs?: string[]\n\n  /**\n   * defines how signatures should be handled\n   */\n  globalSignaturePolicy?: SignaturePolicy\n\n  /**\n   * if can relay messages not subscribed\n   */\n  canRelayMessage?: boolean\n\n  /**\n   * if publish should emit to self, if subscribed\n   */\n  emitSelf?: boolean\n\n  /**\n   * handle this many incoming pubsub messages concurrently\n   */\n  messageProcessingConcurrency?: number\n\n  /**\n   * How many parallel incoming streams to allow on the pubsub protocol per-connection\n   */\n  maxInboundStreams?: number\n\n  /**\n   * How many parallel outgoing streams to allow on the pubsub protocol per-connection\n   */\n  maxOutboundStreams?: number\n}\n\ninterface Subscription {\n  topic: string\n  subscribe: boolean\n}\n\nexport interface SubscriptionChangeData {\n  peerId: PeerId\n  subscriptions: Subscription[]\n}\n\nexport interface PubSubEvents {\n  'subscription-change': CustomEvent<SubscriptionChangeData>\n  'message': CustomEvent<Message>\n}\n\nexport interface PublishResult {\n  recipients: PeerId[]\n}\n\nexport enum TopicValidatorResult {\n  /**\n   * The message is considered valid, and it should be delivered and forwarded to the network\n   */\n  Accept = 'accept',\n  /**\n   * The message is neither delivered nor forwarded to the network\n   */\n  Ignore = 'ignore',\n  /**\n   * The message is considered invalid, and it should be rejected\n   */\n  Reject = 'reject'\n}\n\nexport interface TopicValidatorFn {\n  (peer: PeerId, message: Message): TopicValidatorResult | Promise<TopicValidatorResult>\n}\n\nexport interface PubSub<Events extends Record<string, any> = PubSubEvents> extends TypedEventTarget<Events> {\n  /**\n   * The global signature policy controls whether or not we sill send and receive\n   * signed or unsigned messages.\n   *\n   * Signed messages prevent spoofing message senders and should be preferred to\n   * using unsigned messages.\n   */\n  globalSignaturePolicy: typeof StrictSign | typeof StrictNoSign\n\n  /**\n   * A list of multicodecs that contain the pubsub protocol name.\n   */\n  multicodecs: string[]\n\n  /**\n   * Pubsub routers support message validators per topic, which will validate the message\n   * before its propagations. They are stored in a map where keys are the topic name and\n   * values are the validators.\n   *\n   * @example\n   *\n   * ```js\n   * const topic = 'topic'\n   * const validateMessage = (msgTopic, msg) => {\n   *   const input = uint8ArrayToString(msg.data)\n   *   const validInputs = ['a', 'b', 'c']\n   *\n   *   if (!validInputs.includes(input)) {\n   *     throw new Error('no valid input received')\n   *   }\n   * }\n   * libp2p.pubsub.topicValidators.set(topic, validateMessage)\n   * ```\n   */\n  topicValidators: Map<string, TopicValidatorFn>\n\n  getPeers(): PeerId[]\n\n  /**\n   * Gets a list of topics the node is subscribed to.\n   *\n   * ```js\n   * const topics = libp2p.pubsub.getTopics()\n   * ```\n   */\n  getTopics(): string[]\n\n  /**\n   * Subscribes to a pubsub topic.\n   *\n   * @example\n   *\n   * ```js\n   * const topic = 'topic'\n   * const handler = (msg) => {\n   *   if (msg.topic === topic) {\n   *     // msg.data - pubsub data received\n   *   }\n   * }\n   *\n   * libp2p.pubsub.addEventListener('message', handler)\n   * libp2p.pubsub.subscribe(topic)\n   * ```\n   */\n  subscribe(topic: string): void\n\n  /**\n   * Unsubscribes from a pubsub topic.\n   *\n   * @example\n   *\n   * ```js\n   * const topic = 'topic'\n   * const handler = (msg) => {\n   *   // msg.data - pubsub data received\n   * }\n   *\n   * libp2p.pubsub.removeEventListener(topic handler)\n   * libp2p.pubsub.unsubscribe(topic)\n   * ```\n   */\n  unsubscribe(topic: string): void\n\n  /**\n   * Gets a list of the PeerIds that are subscribed to one topic.\n   *\n   * @example\n   *\n   * ```js\n   * const peerIds = libp2p.pubsub.getSubscribers(topic)\n   * ```\n   */\n  getSubscribers(topic: string): PeerId[]\n\n  /**\n   * Publishes messages to the given topic.\n   *\n   * @example\n   *\n   * ```js\n   * const topic = 'topic'\n   * const data = uint8ArrayFromString('data')\n   *\n   * await libp2p.pubsub.publish(topic, data)\n   * ```\n   */\n  publish(topic: string, data: Uint8Array): Promise<PublishResult>\n}\n\nexport interface PeerStreamEvents {\n  'stream:inbound': CustomEvent<never>\n  'stream:outbound': CustomEvent<never>\n  'close': CustomEvent<never>\n}\n", "/**\n * When this error is thrown it means an operation was aborted,\n * usually in response to the `abort` event being emitted by an\n * AbortSignal.\n */\nexport class AbortError extends Error {\n  public readonly code: string\n  public readonly type: string\n\n  constructor (message: string = 'The operation was aborted') {\n    super(message)\n    this.code = AbortError.code\n    this.type = AbortError.type\n  }\n\n  static readonly code = 'ABORT_ERR'\n\n  static readonly type = 'aborted'\n}\n\nexport class CodeError<T extends Record<string, any> = Record<string, never>> extends Error {\n  public readonly props: T\n\n  constructor (\n    message: string,\n    public readonly code: string,\n    props?: T\n  ) {\n    super(message)\n\n    this.name = props?.name ?? 'CodeError'\n    this.props = props ?? {} as T // eslint-disable-line @typescript-eslint/consistent-type-assertions\n  }\n}\n\nexport class AggregateCodeError<T extends Record<string, any> = Record<string, never>> extends AggregateError {\n  public readonly props: T\n\n  constructor (\n    errors: Error[],\n    message: string,\n    public readonly code: string,\n    props?: T\n  ) {\n    super(errors, message)\n\n    this.name = props?.name ?? 'AggregateCodeError'\n    this.props = props ?? {} as T // eslint-disable-line @typescript-eslint/consistent-type-assertions\n  }\n}\n\nexport class UnexpectedPeerError extends Error {\n  public code: string\n\n  constructor (message = 'Unexpected Peer') {\n    super(message)\n    this.code = UnexpectedPeerError.code\n  }\n\n  static readonly code = 'ERR_UNEXPECTED_PEER'\n}\n\nexport class InvalidCryptoExchangeError extends Error {\n  public code: string\n\n  constructor (message = 'Invalid crypto exchange') {\n    super(message)\n    this.code = InvalidCryptoExchangeError.code\n  }\n\n  static readonly code = 'ERR_INVALID_CRYPTO_EXCHANGE'\n}\n\nexport class InvalidCryptoTransmissionError extends Error {\n  public code: string\n\n  constructor (message = 'Invalid crypto transmission') {\n    super(message)\n    this.code = InvalidCryptoTransmissionError.code\n  }\n\n  static readonly code = 'ERR_INVALID_CRYPTO_TRANSMISSION'\n}\n\n// Error codes\n\nexport const ERR_TIMEOUT = 'ERR_TIMEOUT'\nexport const ERR_INVALID_PARAMETERS = 'ERR_INVALID_PARAMETERS'\nexport const ERR_NOT_FOUND = 'ERR_NOT_FOUND'\nexport const ERR_INVALID_MESSAGE = 'ERR_INVALID_MESSAGE'\n", "export interface EventCallback<EventType> { (evt: EventType): void }\nexport interface EventObject<EventType> { handleEvent: EventCallback<EventType> }\nexport type EventHandler<EventType> = EventCallback<EventType> | EventObject<EventType>\n\ninterface Listener {\n  once: boolean\n  callback: any\n}\n\n/**\n * Adds types to the EventTarget class. Hopefully this won't be necessary forever.\n *\n * https://github.com/microsoft/TypeScript/issues/28357\n * https://github.com/microsoft/TypeScript/issues/43477\n * https://github.com/microsoft/TypeScript/issues/299\n * etc\n */\nexport interface TypedEventTarget <EventMap extends Record<string, any>> extends EventTarget {\n  addEventListener<K extends keyof EventMap>(type: K, listener: EventHandler<EventMap[K]> | null, options?: boolean | AddEventListenerOptions): void\n\n  listenerCount (type: string): number\n\n  removeEventListener<K extends keyof EventMap>(type: K, listener?: EventHandler<EventMap[K]> | null, options?: boolean | EventListenerOptions): void\n\n  removeEventListener (type: string, listener?: EventHandler<Event>, options?: boolean | EventListenerOptions): void\n\n  safeDispatchEvent<Detail>(type: keyof EventMap, detail: CustomEventInit<Detail>): boolean\n}\n\n/**\n * An implementation of a typed event target\n * etc\n */\nexport class TypedEventEmitter<EventMap extends Record<string, any>> extends EventTarget implements TypedEventTarget<EventMap> {\n  #listeners = new Map<any, Listener[]>()\n\n  listenerCount (type: string): number {\n    const listeners = this.#listeners.get(type)\n\n    if (listeners == null) {\n      return 0\n    }\n\n    return listeners.length\n  }\n\n  addEventListener<K extends keyof EventMap>(type: K, listener: EventHandler<EventMap[K]> | null, options?: boolean | AddEventListenerOptions): void\n  addEventListener (type: string, listener: EventHandler<Event>, options?: boolean | AddEventListenerOptions): void {\n    super.addEventListener(type, listener, options)\n\n    let list = this.#listeners.get(type)\n\n    if (list == null) {\n      list = []\n      this.#listeners.set(type, list)\n    }\n\n    list.push({\n      callback: listener,\n      once: (options !== true && options !== false && options?.once) ?? false\n    })\n  }\n\n  removeEventListener<K extends keyof EventMap>(type: K, listener?: EventHandler<EventMap[K]> | null, options?: boolean | EventListenerOptions): void\n  removeEventListener (type: string, listener?: EventHandler<Event>, options?: boolean | EventListenerOptions): void {\n    super.removeEventListener(type.toString(), listener ?? null, options)\n\n    let list = this.#listeners.get(type)\n\n    if (list == null) {\n      return\n    }\n\n    list = list.filter(({ callback }) => callback !== listener)\n    this.#listeners.set(type, list)\n  }\n\n  dispatchEvent (event: Event): boolean {\n    const result = super.dispatchEvent(event)\n\n    let list = this.#listeners.get(event.type)\n\n    if (list == null) {\n      return result\n    }\n\n    list = list.filter(({ once }) => !once)\n    this.#listeners.set(event.type, list)\n\n    return result\n  }\n\n  safeDispatchEvent<Detail>(type: keyof EventMap, detail: CustomEventInit<Detail> = {}): boolean {\n    return this.dispatchEvent(new CustomEvent<Detail>(type as string, detail))\n  }\n}\n\n/**\n * CustomEvent is a standard event but it's not supported by node.\n *\n * Remove this when https://github.com/nodejs/node/issues/40678 is closed.\n *\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\n */\nclass CustomEventPolyfill<T = any> extends Event {\n  /** Returns any custom data event was created with. Typically used for synthetic events. */\n  public detail: T\n\n  constructor (message: string, data?: EventInit & { detail: T }) {\n    super(message, data)\n    // @ts-expect-error could be undefined\n    this.detail = data?.detail\n  }\n}\n\nexport const CustomEvent = globalThis.CustomEvent ?? CustomEventPolyfill\n", "import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n", "export const empty = new Uint8Array(0)\n\nexport function toHex (d: Uint8Array): string {\n  return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n}\n\nexport function fromHex (hex: string): Uint8Array {\n  const hexes = hex.match(/../g)\n  return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\nexport function equals (aa: Uint8Array, bb: Uint8Array): boolean {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function coerce (o: ArrayBufferView | ArrayBuffer | Uint8Array): Uint8Array {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\nexport function isBinary (o: unknown): o is ArrayBuffer | ArrayBufferView {\n  return o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n}\n\nexport function fromString (str: string): Uint8Array {\n  return new TextEncoder().encode(str)\n}\n\nexport function toString (b: Uint8Array): string {\n  return new TextDecoder().decode(b)\n}\n", "/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  /**\n   * @param {any[] | Iterable<number>} source\n   */\n  function encode (source) {\n    // @ts-ignore\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  /**\n   * @param {string | string[]} source\n   */\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  /**\n   * @param {string | string[]} string\n   */\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n", "import { coerce } from '../bytes.js'\nimport basex from '../vendor/base-x.js'\nimport type { BaseCodec, BaseDecoder, BaseEncoder, CombobaseDecoder, Multibase, MultibaseCodec, MultibaseDecoder, MultibaseEncoder, UnibaseDecoder } from './interface.js'\n\ninterface EncodeFn { (bytes: Uint8Array): string }\ninterface DecodeFn { (text: string): Uint8Array }\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder<Base extends string, Prefix extends string> implements MultibaseEncoder<Prefix>, BaseEncoder {\n  readonly name: Base\n  readonly prefix: Prefix\n  readonly baseEncode: EncodeFn\n\n  constructor (name: Base, prefix: Prefix, baseEncode: EncodeFn) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  encode (bytes: Uint8Array): Multibase<Prefix> {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder<Base extends string, Prefix extends string> implements MultibaseDecoder<Prefix>, UnibaseDecoder<Prefix>, BaseDecoder {\n  readonly name: Base\n  readonly prefix: Prefix\n  readonly baseDecode: DecodeFn\n  private readonly prefixCodePoint: number\n\n  constructor (name: Base, prefix: Prefix, baseDecode: DecodeFn) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    this.prefixCodePoint = prefix.codePointAt(0) as number\n    this.baseDecode = baseDecode\n  }\n\n  decode (text: string): Uint8Array {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  or<OtherPrefix extends string> (decoder: UnibaseDecoder<OtherPrefix> | ComposedDecoder<OtherPrefix>): ComposedDecoder<Prefix | OtherPrefix> {\n    return or(this, decoder)\n  }\n}\n\ntype Decoders<Prefix extends string> = Record<Prefix, UnibaseDecoder<Prefix>>\n\nclass ComposedDecoder<Prefix extends string> implements MultibaseDecoder<Prefix>, CombobaseDecoder<Prefix> {\n  readonly decoders: Decoders<Prefix>\n\n  constructor (decoders: Decoders<Prefix>) {\n    this.decoders = decoders\n  }\n\n  or <OtherPrefix extends string> (decoder: UnibaseDecoder<OtherPrefix> | ComposedDecoder<OtherPrefix>): ComposedDecoder<Prefix | OtherPrefix> {\n    return or(this, decoder)\n  }\n\n  decode (input: string): Uint8Array {\n    const prefix = input[0] as Prefix\n    const decoder = this.decoders[prefix]\n    if (decoder != null) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\nexport function or <L extends string, R extends string> (left: UnibaseDecoder<L> | CombobaseDecoder<L>, right: UnibaseDecoder<R> | CombobaseDecoder<R>): ComposedDecoder<L | R> {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  return new ComposedDecoder({\n    ...(left.decoders ?? { [(left as UnibaseDecoder<L>).prefix]: left }),\n    ...(right.decoders ?? { [(right as UnibaseDecoder<R>).prefix]: right })\n  } as Decoders<L | R>)\n}\n\nexport class Codec<Base extends string, Prefix extends string> implements MultibaseCodec<Prefix>, MultibaseEncoder<Prefix>, MultibaseDecoder<Prefix>, BaseCodec, BaseEncoder, BaseDecoder {\n  readonly name: Base\n  readonly prefix: Prefix\n  readonly baseEncode: EncodeFn\n  readonly baseDecode: DecodeFn\n  readonly encoder: Encoder<Base, Prefix>\n  readonly decoder: Decoder<Base, Prefix>\n\n  constructor (name: Base, prefix: Prefix, baseEncode: EncodeFn, baseDecode: DecodeFn) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  encode (input: Uint8Array): string {\n    return this.encoder.encode(input)\n  }\n\n  decode (input: string): Uint8Array {\n    return this.decoder.decode(input)\n  }\n}\n\nexport function from <Base extends string, Prefix extends string> ({ name, prefix, encode, decode }: { name: Base, prefix: Prefix, encode: EncodeFn, decode: DecodeFn }): Codec<Base, Prefix> {\n  return new Codec(name, prefix, encode, decode)\n}\n\nexport function baseX <Base extends string, Prefix extends string> ({ name, prefix, alphabet }: { name: Base, prefix: Prefix, alphabet: string }): Codec<Base, Prefix> {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: (text: string): Uint8Array => coerce(decode(text))\n  })\n}\n\nfunction decode (string: string, alphabet: string, bitsPerChar: number, name: string): Uint8Array {\n  // Build the character lookup table:\n  const codes: Record<string, number> = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\nfunction encode (data: Uint8Array, alphabet: string, bitsPerChar: number): string {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits !== 0) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while (((out.length * bitsPerChar) & 7) !== 0) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n */\nexport function rfc4648 <Base extends string, Prefix extends string> ({ name, prefix, bitsPerChar, alphabet }: { name: Base, prefix: Prefix, bitsPerChar: number, alphabet: string }): Codec<Base, Prefix> {\n  return from({\n    prefix,\n    name,\n    encode (input: Uint8Array): string {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input: string): Uint8Array {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n", "import { baseX } from './base.js'\n\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n", "import { rfc4648 } from './base.js'\n\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n", "import { rfc4648 } from './base.js'\n\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n", "import { from } from './base.js'\n\nconst alphabet = Array.from('\uD83D\uDE80\uD83E\uDE90\u2604\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09\u2600\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02\u2764\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09\u263A\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E\u270C\u2728\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D\u2763\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33\u270B\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13\u2B50\u2705\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6\u2714\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90\u2639\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20\u261D\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B\u26BD\uD83E\uDD19\u2615\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81\u26A1\uD83C\uDF1E\uD83C\uDF88\u274C\u270A\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C\u2708\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74\u25B6\u27A1\u2753\uD83D\uDC8E\uD83D\uDCB8\u2B07\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A\u26A0\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37\u260E\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51\u2744\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42')\nconst alphabetBytesToChars: string[] = (alphabet.reduce<string[]>((p, c, i) => { p[i] = c; return p }, ([])))\nconst alphabetCharsToBytes: number[] = (alphabet.reduce<number[]>((p, c, i) => { p[c.codePointAt(0) as number] = i; return p }, ([])))\n\nfunction encode (data: Uint8Array): string {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\nfunction decode (str: string): Uint8Array {\n  const byts = []\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0) as number]\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nexport const base256emoji = from({\n  prefix: '\uD83D\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n", "import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n", "import { baseX } from './base.js'\n\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n", "import { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n", "import { rfc4648 } from './base.js'\n\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n", "import { fromString, toString } from '../bytes.js'\nimport { from } from './base.js'\n\nexport const identity = from({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => toString(buf),\n  decode: (str) => fromString(str)\n})\n", "import type { ByteView } from './interface.js'\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nexport const name = 'json'\nexport const code = 0x0200\n\nexport function encode <T> (node: T): ByteView<T> {\n  return textEncoder.encode(JSON.stringify(node))\n}\n\nexport function decode <T> (data: ByteView<T>): T {\n  return JSON.parse(textDecoder.decode(data))\n}\n", "import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\n\nconst code = 0x0\nconst name = 'identity'\n\nconst encode: (input: Uint8Array) => Uint8Array = coerce\n\nfunction digest (input: Uint8Array): Digest.Digest<typeof code, number> {\n  return Digest.create(code, encode(input))\n}\n\nexport const identity = { code, name, encode, digest }\n", "/* eslint-disable */\nvar encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  // @ts-ignore\n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      // @ts-ignore\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  // @ts-ignore\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (/** @type {number} */ value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n", "import varint from './vendor/varint.js'\n\nexport function decode (data: Uint8Array, offset = 0): [number, number] {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\nexport function encodeTo (int: number, target: Uint8Array, offset = 0): Uint8Array {\n  varint.encode(int, target, offset)\n  return target\n}\n\nexport function encodingLength (int: number): number {\n  return varint.encodingLength(int)\n}\n", "import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\nimport type { MultihashDigest } from './interface.js'\n\n/**\n * Creates a multihash digest.\n */\nexport function create <Code extends number> (code: Code, digest: Uint8Array): Digest<Code, number> {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nexport function decode (multihash: Uint8Array): MultihashDigest {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\nexport function equals (a: MultihashDigest, b: unknown): b is MultihashDigest {\n  if (a === b) {\n    return true\n  } else {\n    const data = b as { code?: unknown, size?: unknown, bytes?: unknown }\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nexport class Digest<Code extends number, Size extends number> implements MultihashDigest {\n  readonly code: Code\n  readonly size: Size\n  readonly digest: Uint8Array\n  readonly bytes: Uint8Array\n\n  /**\n   * Creates a multihash digest.\n   */\n  constructor (code: Code, size: Size, digest: Uint8Array, bytes: Uint8Array) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n", "/* global crypto */\n\nimport { from } from './hasher.js'\n\nfunction sha (name: AlgorithmIdentifier): (data: Uint8Array) => Promise<Uint8Array> {\n  return async data => new Uint8Array(await crypto.subtle.digest(name, data))\n}\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n", "import * as Digest from './digest.js'\nimport type { MultihashHasher } from './interface.js'\n\ntype Await<T> = Promise<T> | T\n\nexport function from <Name extends string, Code extends number> ({ name, code, encode }: { name: Name, code: Code, encode(input: Uint8Array): Await<Uint8Array> }): Hasher<Name, Code> {\n  return new Hasher(name, code, encode)\n}\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n */\nexport class Hasher<Name extends string, Code extends number> implements MultihashHasher<Code> {\n  readonly name: Name\n  readonly code: Code\n  readonly encode: (input: Uint8Array) => Await<Uint8Array>\n\n  constructor (name: Name, code: Code, encode: (input: Uint8Array) => Await<Uint8Array>) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  digest (input: Uint8Array): Await<Digest.Digest<Code, number>> {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n", "import { base32 } from './bases/base32.js'\nimport { base58btc } from './bases/base58.js'\nimport { coerce } from './bytes.js'\nimport * as Digest from './hashes/digest.js'\nimport * as varint from './varint.js'\nimport type * as API from './link/interface.js'\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\nexport function format <T extends API.Link<unknown, number, number, API.Version>, Prefix extends string> (link: T, base?: API.MultibaseEncoder<Prefix>): API.ToString<T, Prefix> {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        base as API.MultibaseEncoder<'z'> ?? base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        (base ?? base32.encoder) as API.MultibaseEncoder<Prefix>\n      )\n  }\n}\n\nexport function toJSON <Link extends API.UnknownLink> (link: Link): API.LinkJSON<Link> {\n  return {\n    '/': format(link)\n  }\n}\n\nexport function fromJSON <Link extends API.UnknownLink> (json: API.LinkJSON<Link>): CID<unknown, number, number, API.Version> {\n  return CID.parse(json['/'])\n}\n\nconst cache = new WeakMap<API.UnknownLink, Map<string, string>>()\n\nfunction baseCache (cid: API.UnknownLink): Map<string, string> {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\nexport class CID<Data = unknown, Format extends number = number, Alg extends number = number, Version extends API.Version = API.Version> implements API.Link<Data, Format, Alg, Version> {\n  readonly code: Format\n  readonly version: Version\n  readonly multihash: API.MultihashDigest<Alg>\n  readonly bytes: Uint8Array\n  readonly '/': Uint8Array\n\n  /**\n   * @param version - Version of the CID\n   * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param multihash - (Multi)hash of the of the content.\n   */\n  constructor (version: Version, code: Format, multihash: API.MultihashDigest<Alg>, bytes: Uint8Array) {\n    this.code = code\n    this.version = version\n    this.multihash = multihash\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID (): this {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset (): number {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength (): number {\n    return this.bytes.byteLength\n  }\n\n  toV0 (): CID<Data, API.DAG_PB, API.SHA_256, 0> {\n    switch (this.version) {\n      case 0: {\n        return this as CID<Data, API.DAG_PB, API.SHA_256, 0>\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return (\n          CID.createV0(\n            multihash as API.MultihashDigest<API.SHA_256>\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  toV1 (): CID<Data, Format, Alg, 1> {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return this as CID<Data, Format, Alg, 1>\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  equals (other: unknown): other is CID<Data, Format, Alg, Version> {\n    return CID.equals(this, other)\n  }\n\n  static equals <Data, Format extends number, Alg extends number, Version extends API.Version>(self: API.Link<Data, Format, Alg, Version>, other: unknown): other is CID {\n    const unknown = other as { code?: unknown, version?: unknown, multihash?: unknown }\n    return (\n      unknown != null &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  toString (base?: API.MultibaseEncoder<string>): string {\n    return format(this, base)\n  }\n\n  toJSON (): API.LinkJSON<this> {\n    return { '/': format(this) }\n  }\n\n  link (): this {\n    return this\n  }\n\n  readonly [Symbol.toStringTag] = 'CID';\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] (): string {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   */\n  static asCID <Data, Format extends number, Alg extends number, Version extends API.Version, U>(input: API.Link<Data, Format, Alg, Version> | U): CID<Data, Format, Alg, Version> | null {\n    if (input == null) {\n      return null\n    }\n\n    const value = input as any\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        multihash as API.MultihashDigest<Alg>,\n        bytes ?? encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest = Digest.decode(multihash) as API.MultihashDigest<Alg>\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   * @param version - Version of the CID\n   * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param digest - (Multi)hash of the of the content.\n   */\n  static create <Data, Format extends number, Alg extends number, Version extends API.Version>(version: Version, code: Format, digest: API.MultihashDigest<Alg>): CID<Data, Format, Alg, Version> {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   */\n  static createV0 <T = unknown>(digest: API.MultihashDigest<typeof SHA_256_CODE>): CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0> {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @param code - Content encoding format code.\n   * @param digest - Multihash of the content.\n   */\n  static createV1 <Data, Code extends number, Alg extends number>(code: Code, digest: API.MultihashDigest<Alg>): CID<Data, Code, Alg, 1> {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   */\n  static decode <Data, Code extends number, Alg extends number, Version extends API.Version>(bytes: API.ByteView<API.Link<Data, Code, Alg, Version>>): CID<Data, Code, Alg, Version> {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length !== 0) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   */\n  static decodeFirst <T, C extends number, A extends number, V extends API.Version>(bytes: API.ByteView<API.Link<T, C, A, V>>): [CID<T, C, A, V>, Uint8Array] {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(digest as API.MultihashDigest<API.SHA_256>)\n        : CID.createV1(specs.codec, digest)\n    return [cid as CID<T, C, A, V>, bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   */\n  static inspectBytes <T, C extends number, A extends number, V extends API.Version>(initialBytes: API.ByteView<API.Link<T, C, A, V>>): { version: V, codec: C, multihashCode: A, digestSize: number, multihashSize: number, size: number } {\n    let offset = 0\n    const next = (): number => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = next() as V\n    let codec = DAG_PB_CODE as C\n    if (version as number === 18) {\n      // CIDv0\n      version = 0 as V\n      offset = 0\n    } else {\n      codec = next() as C\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = next() as A // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   */\n  static parse <Prefix extends string, Data, Code extends number, Alg extends number, Version extends API.Version>(source: API.ToString<API.Link<Data, Code, Alg, Version>, Prefix>, base?: API.MultibaseDecoder<Prefix>): CID<Data, Code, Alg, Version> {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\nfunction parseCIDtoBytes <Prefix extends string, Data, Code extends number, Alg extends number, Version extends API.Version> (source: API.ToString<API.Link<Data, Code, Alg, Version>, Prefix>, base?: API.MultibaseDecoder<Prefix>): [Prefix, API.ByteView<API.Link<Data, Code, Alg, Version>>] {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base ?? base58btc\n      return [\n        base58btc.prefix as Prefix,\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base ?? base58btc\n      return [base58btc.prefix as Prefix, decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base ?? base32\n      return [base32.prefix as Prefix, decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [source[0] as Prefix, base.decode(source)]\n    }\n  }\n}\n\nfunction toStringV0 (bytes: Uint8Array, cache: Map<string, string>, base: API.MultibaseEncoder<'z'>): string {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nfunction toStringV1 <Prefix extends string> (bytes: Uint8Array, cache: Map<string, string>, base: API.MultibaseEncoder<Prefix>): string {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\nfunction encodeCID (version: API.Version, code: number, multihash: Uint8Array): Uint8Array {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n", "import * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base2 from './bases/base2.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base8 from './bases/base8.js'\nimport * as identityBase from './bases/identity.js'\nimport * as json from './codecs/json.js'\nimport * as raw from './codecs/raw.js'\nimport * as identity from './hashes/identity.js'\nimport * as sha2 from './hashes/sha2.js'\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nexport const bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nexport const hashes = { ...sha2, ...identity }\nexport const codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes }\n", "/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function equals (a: Uint8Array, b: Uint8Array): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (a.byteLength !== b.byteLength) {\n    return false\n  }\n\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n", "/**\n * @packageDocumentation\n *\n * An implementation of a peer id\n *\n * @example\n *\n * ```TypeScript\n * import { peerIdFromString } from '@libp2p/peer-id'\n * const peer = peerIdFromString('k51qzi5uqu5dkwkqm42v9j9kqcam2jiuvloi16g72i4i4amoo2m8u3ol3mqu6s')\n *\n * console.log(peer.toCid()) // CID(bafzaa...)\n * console.log(peer.toString()) // \"12D3K...\"\n * ```\n */\n\nimport { CodeError } from '@libp2p/interface'\nimport { type Ed25519PeerId, type PeerIdType, type RSAPeerId, type Secp256k1PeerId, peerIdSymbol, type PeerId } from '@libp2p/interface'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { bases } from 'multiformats/basics'\nimport { CID } from 'multiformats/cid'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { identity } from 'multiformats/hashes/identity'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport type { MultibaseDecoder } from 'multiformats/bases/interface'\nimport type { MultihashDigest } from 'multiformats/hashes/interface'\n\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\n\nconst baseDecoder = Object\n  .values(bases)\n  .map(codec => codec.decoder)\n  // @ts-expect-error https://github.com/multiformats/js-multiformats/issues/141\n  .reduce((acc, curr) => acc.or(curr), bases.identity.decoder)\n\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst LIBP2P_KEY_CODE = 0x72\n\nconst MARSHALLED_ED225519_PUBLIC_KEY_LENGTH = 36\nconst MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH = 37\n\ninterface PeerIdInit {\n  type: PeerIdType\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n}\n\ninterface RSAPeerIdInit {\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n  publicKey?: Uint8Array\n}\n\ninterface Ed25519PeerIdInit {\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n}\n\ninterface Secp256k1PeerIdInit {\n  multihash: MultihashDigest\n  privateKey?: Uint8Array\n}\n\nclass PeerIdImpl {\n  public type: PeerIdType\n  public readonly multihash: MultihashDigest\n  public readonly privateKey?: Uint8Array\n  public readonly publicKey?: Uint8Array\n  private string?: string\n\n  constructor (init: PeerIdInit) {\n    this.type = init.type\n    this.multihash = init.multihash\n    this.privateKey = init.privateKey\n\n    // mark string cache as non-enumerable\n    Object.defineProperty(this, 'string', {\n      enumerable: false,\n      writable: true\n    })\n  }\n\n  get [Symbol.toStringTag] (): string {\n    return `PeerId(${this.toString()})`\n  }\n\n  readonly [peerIdSymbol] = true\n\n  toString (): string {\n    if (this.string == null) {\n      this.string = base58btc.encode(this.multihash.bytes).slice(1)\n    }\n\n    return this.string\n  }\n\n  // return self-describing String representation\n  // in default format from RFC 0001: https://github.com/libp2p/specs/pull/209\n  toCID (): CID {\n    return CID.createV1(LIBP2P_KEY_CODE, this.multihash)\n  }\n\n  toBytes (): Uint8Array {\n    return this.multihash.bytes\n  }\n\n  /**\n   * Returns Multiaddr as a JSON string\n   */\n  toJSON (): string {\n    return this.toString()\n  }\n\n  /**\n   * Checks the equality of `this` peer against a given PeerId\n   */\n  equals (id?: PeerId | Uint8Array | string): boolean {\n    if (id == null) {\n      return false\n    }\n\n    if (id instanceof Uint8Array) {\n      return uint8ArrayEquals(this.multihash.bytes, id)\n    } else if (typeof id === 'string') {\n      return peerIdFromString(id).equals(this as PeerId)\n    } else if (id?.multihash?.bytes != null) {\n      return uint8ArrayEquals(this.multihash.bytes, id.multihash.bytes)\n    } else {\n      throw new Error('not valid Id')\n    }\n  }\n\n  /**\n   * Returns PeerId as a human-readable string\n   * https://nodejs.org/api/util.html#utilinspectcustom\n   *\n   * @example\n   * ```js\n   * import { peerIdFromString } from '@libp2p/peer-id'\n   *\n   * console.info(peerIdFromString('QmFoo'))\n   * // 'PeerId(QmFoo)'\n   * ```\n   */\n  [inspect] (): string {\n    return `PeerId(${this.toString()})`\n  }\n}\n\nclass RSAPeerIdImpl extends PeerIdImpl implements RSAPeerId {\n  public readonly type = 'RSA'\n  public readonly publicKey?: Uint8Array\n\n  constructor (init: RSAPeerIdInit) {\n    super({ ...init, type: 'RSA' })\n\n    this.publicKey = init.publicKey\n  }\n}\n\nclass Ed25519PeerIdImpl extends PeerIdImpl implements Ed25519PeerId {\n  public readonly type = 'Ed25519'\n  public readonly publicKey: Uint8Array\n\n  constructor (init: Ed25519PeerIdInit) {\n    super({ ...init, type: 'Ed25519' })\n\n    this.publicKey = init.multihash.digest\n  }\n}\n\nclass Secp256k1PeerIdImpl extends PeerIdImpl implements Secp256k1PeerId {\n  public readonly type = 'secp256k1'\n  public readonly publicKey: Uint8Array\n\n  constructor (init: Secp256k1PeerIdInit) {\n    super({ ...init, type: 'secp256k1' })\n\n    this.publicKey = init.multihash.digest\n  }\n}\n\nexport function createPeerId (init: PeerIdInit): PeerId {\n  if (init.type === 'RSA') {\n    return new RSAPeerIdImpl(init)\n  }\n\n  if (init.type === 'Ed25519') {\n    return new Ed25519PeerIdImpl(init)\n  }\n\n  if (init.type === 'secp256k1') {\n    return new Secp256k1PeerIdImpl(init)\n  }\n\n  throw new CodeError('Type must be \"RSA\", \"Ed25519\" or \"secp256k1\"', 'ERR_INVALID_PARAMETERS')\n}\n\nexport function peerIdFromPeerId (other: any): PeerId {\n  if (other.type === 'RSA') {\n    return new RSAPeerIdImpl(other)\n  }\n\n  if (other.type === 'Ed25519') {\n    return new Ed25519PeerIdImpl(other)\n  }\n\n  if (other.type === 'secp256k1') {\n    return new Secp256k1PeerIdImpl(other)\n  }\n\n  throw new CodeError('Not a PeerId', 'ERR_INVALID_PARAMETERS')\n}\n\nexport function peerIdFromString (str: string, decoder?: MultibaseDecoder<any>): PeerId {\n  decoder = decoder ?? baseDecoder\n\n  if (str.charAt(0) === '1' || str.charAt(0) === 'Q') {\n    // identity hash ed25519/secp256k1 key or sha2-256 hash of\n    // rsa public key - base58btc encoded either way\n    const multihash = Digest.decode(base58btc.decode(`z${str}`))\n\n    if (str.startsWith('12D')) {\n      return new Ed25519PeerIdImpl({ multihash })\n    } else if (str.startsWith('16U')) {\n      return new Secp256k1PeerIdImpl({ multihash })\n    } else {\n      return new RSAPeerIdImpl({ multihash })\n    }\n  }\n\n  return peerIdFromBytes(baseDecoder.decode(str))\n}\n\nexport function peerIdFromBytes (buf: Uint8Array): PeerId {\n  try {\n    const multihash = Digest.decode(buf)\n\n    if (multihash.code === identity.code) {\n      if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n        return new Ed25519PeerIdImpl({ multihash })\n      } else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n        return new Secp256k1PeerIdImpl({ multihash })\n      }\n    }\n\n    if (multihash.code === sha256.code) {\n      return new RSAPeerIdImpl({ multihash })\n    }\n  } catch {\n    return peerIdFromCID(CID.decode(buf))\n  }\n\n  throw new Error('Supplied PeerID CID is invalid')\n}\n\nexport function peerIdFromCID (cid: CID): PeerId {\n  if (cid == null || cid.multihash == null || cid.version == null || (cid.version === 1 && cid.code !== LIBP2P_KEY_CODE)) {\n    throw new Error('Supplied PeerID CID is invalid')\n  }\n\n  const multihash = cid.multihash\n\n  if (multihash.code === sha256.code) {\n    return new RSAPeerIdImpl({ multihash: cid.multihash })\n  } else if (multihash.code === identity.code) {\n    if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n      return new Ed25519PeerIdImpl({ multihash: cid.multihash })\n    } else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n      return new Secp256k1PeerIdImpl({ multihash: cid.multihash })\n    }\n  }\n\n  throw new Error('Supplied PeerID CID is invalid')\n}\n\n/**\n * @param publicKey - A marshalled public key\n * @param privateKey - A marshalled private key\n */\nexport async function peerIdFromKeys (publicKey: Uint8Array, privateKey?: Uint8Array): Promise<PeerId> {\n  if (publicKey.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n    return new Ed25519PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey })\n  }\n\n  if (publicKey.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n    return new Secp256k1PeerIdImpl({ multihash: Digest.create(identity.code, publicKey), privateKey })\n  }\n\n  return new RSAPeerIdImpl({ multihash: await sha256.digest(publicKey), publicKey, privateKey })\n}\n", "/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nexport function asUint8Array (buf: Uint8Array): Uint8Array {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n  }\n\n  return buf\n}\n", "import { asUint8Array } from './util/as-uint8array.js'\n\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc (size: number = 0): Uint8Array {\n  if (globalThis.Buffer?.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size))\n  }\n\n  return new Uint8Array(size)\n}\n\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe (size: number = 0): Uint8Array {\n  if (globalThis.Buffer?.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size))\n  }\n\n  return new Uint8Array(size)\n}\n", "/* eslint-disable no-fallthrough */\nimport { allocUnsafe } from 'uint8arrays/alloc'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nconst N1 = Math.pow(2, 7)\nconst N2 = Math.pow(2, 14)\nconst N3 = Math.pow(2, 21)\nconst N4 = Math.pow(2, 28)\nconst N5 = Math.pow(2, 35)\nconst N6 = Math.pow(2, 42)\nconst N7 = Math.pow(2, 49)\n\n/** Most significant bit of a byte */\nconst MSB = 0x80\n/** Rest of the bits in a byte */\nconst REST = 0x7f\n\nexport function encodingLength (value: number): number {\n  if (value < N1) {\n    return 1\n  }\n\n  if (value < N2) {\n    return 2\n  }\n\n  if (value < N3) {\n    return 3\n  }\n\n  if (value < N4) {\n    return 4\n  }\n\n  if (value < N5) {\n    return 5\n  }\n\n  if (value < N6) {\n    return 6\n  }\n\n  if (value < N7) {\n    return 7\n  }\n\n  if (Number.MAX_SAFE_INTEGER != null && value > Number.MAX_SAFE_INTEGER) {\n    throw new RangeError('Could not encode varint')\n  }\n\n  return 8\n}\n\nexport function encodeUint8Array (value: number, buf: Uint8Array, offset: number = 0): Uint8Array {\n  switch (encodingLength(value)) {\n    case 8: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 7: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 6: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 5: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value /= 128\n    }\n    case 4: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 3: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 2: {\n      buf[offset++] = (value & 0xFF) | MSB\n      value >>>= 7\n    }\n    case 1: {\n      buf[offset++] = (value & 0xFF)\n      value >>>= 7\n      break\n    }\n    default: throw new Error('unreachable')\n  }\n  return buf\n}\n\nexport function encodeUint8ArrayList (value: number, buf: Uint8ArrayList, offset: number = 0): Uint8ArrayList {\n  switch (encodingLength(value)) {\n    case 8: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 7: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 6: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 5: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value /= 128\n    }\n    case 4: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 3: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 2: {\n      buf.set(offset++, (value & 0xFF) | MSB)\n      value >>>= 7\n    }\n    case 1: {\n      buf.set(offset++, (value & 0xFF))\n      value >>>= 7\n      break\n    }\n    default: throw new Error('unreachable')\n  }\n  return buf\n}\n\nexport function decodeUint8Array (buf: Uint8Array, offset: number): number {\n  let b = buf[offset]\n  let res = 0\n\n  res += b & REST\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 1]\n  res += (b & REST) << 7\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 2]\n  res += (b & REST) << 14\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 3]\n  res += (b & REST) << 21\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 4]\n  res += (b & REST) * N4\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 5]\n  res += (b & REST) * N5\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 6]\n  res += (b & REST) * N6\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf[offset + 7]\n  res += (b & REST) * N7\n  if (b < MSB) {\n    return res\n  }\n\n  throw new RangeError('Could not decode varint')\n}\n\nexport function decodeUint8ArrayList (buf: Uint8ArrayList, offset: number): number {\n  let b = buf.get(offset)\n  let res = 0\n\n  res += b & REST\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 1)\n  res += (b & REST) << 7\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 2)\n  res += (b & REST) << 14\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 3)\n  res += (b & REST) << 21\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 4)\n  res += (b & REST) * N4\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 5)\n  res += (b & REST) * N5\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 6)\n  res += (b & REST) * N6\n  if (b < MSB) {\n    return res\n  }\n\n  b = buf.get(offset + 7)\n  res += (b & REST) * N7\n  if (b < MSB) {\n    return res\n  }\n\n  throw new RangeError('Could not decode varint')\n}\n\nexport function encode (value: number): Uint8Array\nexport function encode (value: number, buf: Uint8Array, offset?: number): Uint8Array\nexport function encode (value: number, buf: Uint8ArrayList, offset?: number): Uint8ArrayList\nexport function encode <T extends Uint8Array | Uint8ArrayList = Uint8Array> (value: number, buf?: T, offset: number = 0): T {\n  if (buf == null) {\n    buf = allocUnsafe(encodingLength(value)) as T\n  }\n  if (buf instanceof Uint8Array) {\n    return encodeUint8Array(value, buf, offset) as T\n  } else {\n    return encodeUint8ArrayList(value, buf, offset) as T\n  }\n}\n\nexport function decode (buf: Uint8ArrayList | Uint8Array, offset: number = 0): number {\n  if (buf instanceof Uint8Array) {\n    return decodeUint8Array(buf, offset)\n  } else {\n    return decodeUint8ArrayList(buf, offset)\n  }\n}\n", "import { allocUnsafe } from './alloc.js'\nimport { asUint8Array } from './util/as-uint8array.js'\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Uint8Arrays\n */\nexport function concat (arrays: Uint8Array[], length?: number): Uint8Array {\n  if (globalThis.Buffer != null) {\n    return asUint8Array(globalThis.Buffer.concat(arrays, length))\n  }\n\n  if (length == null) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0)\n  }\n\n  const output = allocUnsafe(length)\n  let offset = 0\n\n  for (const arr of arrays) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return asUint8Array(output)\n}\n", "/**\n * @packageDocumentation\n *\n * A class that lets you do operations over a list of Uint8Arrays without\n * copying them.\n *\n * ```js\n * import { Uint8ArrayList } from 'uint8arraylist'\n *\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.subarray()\n * // -> Uint8Array([0, 1, 2, 3, 4, 5])\n *\n * list.consume(3)\n * list.subarray()\n * // -> Uint8Array([3, 4, 5])\n *\n * // you can also iterate over the list\n * for (const buf of list) {\n *   // ..do something with `buf`\n * }\n *\n * list.subarray(0, 1)\n * // -> Uint8Array([0])\n * ```\n *\n * ## Converting Uint8ArrayLists to Uint8Arrays\n *\n * There are two ways to turn a `Uint8ArrayList` into a `Uint8Array` - `.slice` and `.subarray` and one way to turn a `Uint8ArrayList` into a `Uint8ArrayList` with different contents - `.sublist`.\n *\n * ### slice\n *\n * Slice follows the same semantics as [Uint8Array.slice](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/slice) in that it creates a new `Uint8Array` and copies bytes into it using an optional offset & length.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.slice(0, 1)\n * // -> Uint8Array([0])\n * ```\n *\n * ### subarray\n *\n * Subarray attempts to follow the same semantics as [Uint8Array.subarray](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray) with one important different - this is a no-copy operation, unless the requested bytes span two internal buffers in which case it is a copy operation.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.subarray(0, 1)\n * // -> Uint8Array([0]) - no-copy\n *\n * list.subarray(2, 5)\n * // -> Uint8Array([2, 3, 4]) - copy\n * ```\n *\n * ### sublist\n *\n * Sublist creates and returns a new `Uint8ArrayList` that shares the underlying buffers with the original so is always a no-copy operation.\n *\n * ```js\n * const list = new Uint8ArrayList()\n * list.append(Uint8Array.from([0, 1, 2]))\n * list.append(Uint8Array.from([3, 4, 5]))\n *\n * list.sublist(0, 1)\n * // -> Uint8ArrayList([0]) - no-copy\n *\n * list.sublist(2, 5)\n * // -> Uint8ArrayList([2], [3, 4]) - no-copy\n * ```\n *\n * ## Inspiration\n *\n * Borrows liberally from [bl](https://www.npmjs.com/package/bl) but only uses native JS types.\n */\nimport { allocUnsafe, alloc } from 'uint8arrays/alloc'\nimport { concat } from 'uint8arrays/concat'\nimport { equals } from 'uint8arrays/equals'\n\nconst symbol = Symbol.for('@achingbrain/uint8arraylist')\n\nexport type Appendable = Uint8ArrayList | Uint8Array\n\nfunction findBufAndOffset (bufs: Uint8Array[], index: number): { buf: Uint8Array, index: number } {\n  if (index == null || index < 0) {\n    throw new RangeError('index is out of bounds')\n  }\n\n  let offset = 0\n\n  for (const buf of bufs) {\n    const bufEnd = offset + buf.byteLength\n\n    if (index < bufEnd) {\n      return {\n        buf,\n        index: index - offset\n      }\n    }\n\n    offset = bufEnd\n  }\n\n  throw new RangeError('index is out of bounds')\n}\n\n/**\n * Check if object is a CID instance\n *\n * @example\n *\n * ```js\n * import { isUint8ArrayList, Uint8ArrayList } from 'uint8arraylist'\n *\n * isUint8ArrayList(true) // false\n * isUint8ArrayList([]) // false\n * isUint8ArrayList(new Uint8ArrayList()) // true\n * ```\n */\nexport function isUint8ArrayList (value: any): value is Uint8ArrayList {\n  return Boolean(value?.[symbol])\n}\n\nexport class Uint8ArrayList implements Iterable<Uint8Array> {\n  private bufs: Uint8Array[]\n  public length: number\n  public readonly [symbol] = true\n\n  constructor (...data: Appendable[]) {\n    this.bufs = []\n    this.length = 0\n\n    if (data.length > 0) {\n      this.appendAll(data)\n    }\n  }\n\n  * [Symbol.iterator] (): Iterator<Uint8Array> {\n    yield * this.bufs\n  }\n\n  get byteLength (): number {\n    return this.length\n  }\n\n  /**\n   * Add one or more `bufs` to the end of this Uint8ArrayList\n   */\n  append (...bufs: Appendable[]): void {\n    this.appendAll(bufs)\n  }\n\n  /**\n   * Add all `bufs` to the end of this Uint8ArrayList\n   */\n  appendAll (bufs: Appendable[]): void {\n    let length = 0\n\n    for (const buf of bufs) {\n      if (buf instanceof Uint8Array) {\n        length += buf.byteLength\n        this.bufs.push(buf)\n      } else if (isUint8ArrayList(buf)) {\n        length += buf.byteLength\n        this.bufs.push(...buf.bufs)\n      } else {\n        throw new Error('Could not append value, must be an Uint8Array or a Uint8ArrayList')\n      }\n    }\n\n    this.length += length\n  }\n\n  /**\n   * Add one or more `bufs` to the start of this Uint8ArrayList\n   */\n  prepend (...bufs: Appendable[]): void {\n    this.prependAll(bufs)\n  }\n\n  /**\n   * Add all `bufs` to the start of this Uint8ArrayList\n   */\n  prependAll (bufs: Appendable[]): void {\n    let length = 0\n\n    for (const buf of bufs.reverse()) {\n      if (buf instanceof Uint8Array) {\n        length += buf.byteLength\n        this.bufs.unshift(buf)\n      } else if (isUint8ArrayList(buf)) {\n        length += buf.byteLength\n        this.bufs.unshift(...buf.bufs)\n      } else {\n        throw new Error('Could not prepend value, must be an Uint8Array or a Uint8ArrayList')\n      }\n    }\n\n    this.length += length\n  }\n\n  /**\n   * Read the value at `index`\n   */\n  get (index: number): number {\n    const res = findBufAndOffset(this.bufs, index)\n\n    return res.buf[res.index]\n  }\n\n  /**\n   * Set the value at `index` to `value`\n   */\n  set (index: number, value: number): void {\n    const res = findBufAndOffset(this.bufs, index)\n\n    res.buf[res.index] = value\n  }\n\n  /**\n   * Copy bytes from `buf` to the index specified by `offset`\n   */\n  write (buf: Appendable, offset: number = 0): void {\n    if (buf instanceof Uint8Array) {\n      for (let i = 0; i < buf.length; i++) {\n        this.set(offset + i, buf[i])\n      }\n    } else if (isUint8ArrayList(buf)) {\n      for (let i = 0; i < buf.length; i++) {\n        this.set(offset + i, buf.get(i))\n      }\n    } else {\n      throw new Error('Could not write value, must be an Uint8Array or a Uint8ArrayList')\n    }\n  }\n\n  /**\n   * Remove bytes from the front of the pool\n   */\n  consume (bytes: number): void {\n    // first, normalize the argument, in accordance with how Buffer does it\n    bytes = Math.trunc(bytes)\n\n    // do nothing if not a positive number\n    if (Number.isNaN(bytes) || bytes <= 0) {\n      return\n    }\n\n    // if consuming all bytes, skip iterating\n    if (bytes === this.byteLength) {\n      this.bufs = []\n      this.length = 0\n      return\n    }\n\n    while (this.bufs.length > 0) {\n      if (bytes >= this.bufs[0].byteLength) {\n        bytes -= this.bufs[0].byteLength\n        this.length -= this.bufs[0].byteLength\n        this.bufs.shift()\n      } else {\n        this.bufs[0] = this.bufs[0].subarray(bytes)\n        this.length -= bytes\n        break\n      }\n    }\n  }\n\n  /**\n   * Extracts a section of an array and returns a new array.\n   *\n   * This is a copy operation as it is with Uint8Arrays and Arrays\n   * - note this is different to the behaviour of Node Buffers.\n   */\n  slice (beginInclusive?: number, endExclusive?: number): Uint8Array {\n    const { bufs, length } = this._subList(beginInclusive, endExclusive)\n\n    return concat(bufs, length)\n  }\n\n  /**\n   * Returns a alloc from the given start and end element index.\n   *\n   * In the best case where the data extracted comes from a single Uint8Array\n   * internally this is a no-copy operation otherwise it is a copy operation.\n   */\n  subarray (beginInclusive?: number, endExclusive?: number): Uint8Array {\n    const { bufs, length } = this._subList(beginInclusive, endExclusive)\n\n    if (bufs.length === 1) {\n      return bufs[0]\n    }\n\n    return concat(bufs, length)\n  }\n\n  /**\n   * Returns a allocList from the given start and end element index.\n   *\n   * This is a no-copy operation.\n   */\n  sublist (beginInclusive?: number, endExclusive?: number): Uint8ArrayList {\n    const { bufs, length } = this._subList(beginInclusive, endExclusive)\n\n    const list = new Uint8ArrayList()\n    list.length = length\n    // don't loop, just set the bufs\n    list.bufs = [...bufs]\n\n    return list\n  }\n\n  private _subList (beginInclusive?: number, endExclusive?: number): { bufs: Uint8Array[], length: number } {\n    beginInclusive = beginInclusive ?? 0\n    endExclusive = endExclusive ?? this.length\n\n    if (beginInclusive < 0) {\n      beginInclusive = this.length + beginInclusive\n    }\n\n    if (endExclusive < 0) {\n      endExclusive = this.length + endExclusive\n    }\n\n    if (beginInclusive < 0 || endExclusive > this.length) {\n      throw new RangeError('index is out of bounds')\n    }\n\n    if (beginInclusive === endExclusive) {\n      return { bufs: [], length: 0 }\n    }\n\n    if (beginInclusive === 0 && endExclusive === this.length) {\n      return { bufs: this.bufs, length: this.length }\n    }\n\n    const bufs: Uint8Array[] = []\n    let offset = 0\n\n    for (let i = 0; i < this.bufs.length; i++) {\n      const buf = this.bufs[i]\n      const bufStart = offset\n      const bufEnd = bufStart + buf.byteLength\n\n      // for next loop\n      offset = bufEnd\n\n      if (beginInclusive >= bufEnd) {\n        // start after this buf\n        continue\n      }\n\n      const sliceStartInBuf = beginInclusive >= bufStart && beginInclusive < bufEnd\n      const sliceEndsInBuf = endExclusive > bufStart && endExclusive <= bufEnd\n\n      if (sliceStartInBuf && sliceEndsInBuf) {\n        // slice is wholly contained within this buffer\n        if (beginInclusive === bufStart && endExclusive === bufEnd) {\n          // requested whole buffer\n          bufs.push(buf)\n          break\n        }\n\n        // requested part of buffer\n        const start = beginInclusive - bufStart\n        bufs.push(buf.subarray(start, start + (endExclusive - beginInclusive)))\n        break\n      }\n\n      if (sliceStartInBuf) {\n        // slice starts in this buffer\n        if (beginInclusive === 0) {\n          // requested whole buffer\n          bufs.push(buf)\n          continue\n        }\n\n        // requested part of buffer\n        bufs.push(buf.subarray(beginInclusive - bufStart))\n        continue\n      }\n\n      if (sliceEndsInBuf) {\n        if (endExclusive === bufEnd) {\n          // requested whole buffer\n          bufs.push(buf)\n          break\n        }\n\n        // requested part of buffer\n        bufs.push(buf.subarray(0, endExclusive - bufStart))\n        break\n      }\n\n      // slice started before this buffer and ends after it\n      bufs.push(buf)\n    }\n\n    return { bufs, length: endExclusive - beginInclusive }\n  }\n\n  indexOf (search: Uint8ArrayList | Uint8Array, offset: number = 0): number {\n    if (!isUint8ArrayList(search) && !(search instanceof Uint8Array)) {\n      throw new TypeError('The \"value\" argument must be a Uint8ArrayList or Uint8Array')\n    }\n\n    const needle = search instanceof Uint8Array ? search : search.subarray()\n\n    offset = Number(offset ?? 0)\n\n    if (isNaN(offset)) {\n      offset = 0\n    }\n\n    if (offset < 0) {\n      offset = this.length + offset\n    }\n\n    if (offset < 0) {\n      offset = 0\n    }\n\n    if (search.length === 0) {\n      return offset > this.length ? this.length : offset\n    }\n\n    // https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string-search_algorithm\n    const M: number = needle.byteLength\n\n    if (M === 0) {\n      throw new TypeError('search must be at least 1 byte long')\n    }\n\n    // radix\n    const radix: number = 256\n    const rightmostPositions: Int32Array = new Int32Array(radix)\n\n    // position of the rightmost occurrence of the byte c in the pattern\n    for (let c: number = 0; c < radix; c++) {\n      // -1 for bytes not in pattern\n      rightmostPositions[c] = -1\n    }\n\n    for (let j = 0; j < M; j++) {\n      // rightmost position for bytes in pattern\n      rightmostPositions[needle[j]] = j\n    }\n\n    // Return offset of first match, -1 if no match\n    const right = rightmostPositions\n    const lastIndex = this.byteLength - needle.byteLength\n    const lastPatIndex = needle.byteLength - 1\n    let skip: number\n\n    for (let i = offset; i <= lastIndex; i += skip) {\n      skip = 0\n\n      for (let j = lastPatIndex; j >= 0; j--) {\n        const char: number = this.get(i + j)\n\n        if (needle[j] !== char) {\n          skip = Math.max(1, j - right[char])\n          break\n        }\n      }\n\n      if (skip === 0) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getInt8 (byteOffset: number): number {\n    const buf = this.subarray(byteOffset, byteOffset + 1)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getInt8(0)\n  }\n\n  setInt8 (byteOffset: number, value: number): void {\n    const buf = allocUnsafe(1)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setInt8(0, value)\n\n    this.write(buf, byteOffset)\n  }\n\n  getInt16 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 2)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getInt16(0, littleEndian)\n  }\n\n  setInt16 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(2)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setInt16(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getInt32 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getInt32(0, littleEndian)\n  }\n\n  setInt32 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setInt32(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getBigInt64 (byteOffset: number, littleEndian?: boolean): bigint {\n    const buf = this.subarray(byteOffset, byteOffset + 8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getBigInt64(0, littleEndian)\n  }\n\n  setBigInt64 (byteOffset: number, value: bigint, littleEndian?: boolean): void {\n    const buf = alloc(8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setBigInt64(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getUint8 (byteOffset: number): number {\n    const buf = this.subarray(byteOffset, byteOffset + 1)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getUint8(0)\n  }\n\n  setUint8 (byteOffset: number, value: number): void {\n    const buf = allocUnsafe(1)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setUint8(0, value)\n\n    this.write(buf, byteOffset)\n  }\n\n  getUint16 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 2)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getUint16(0, littleEndian)\n  }\n\n  setUint16 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(2)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setUint16(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getUint32 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getUint32(0, littleEndian)\n  }\n\n  setUint32 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setUint32(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getBigUint64 (byteOffset: number, littleEndian?: boolean): bigint {\n    const buf = this.subarray(byteOffset, byteOffset + 8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getBigUint64(0, littleEndian)\n  }\n\n  setBigUint64 (byteOffset: number, value: bigint, littleEndian?: boolean): void {\n    const buf = alloc(8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setBigUint64(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getFloat32 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getFloat32(0, littleEndian)\n  }\n\n  setFloat32 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(4)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setFloat32(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  getFloat64 (byteOffset: number, littleEndian?: boolean): number {\n    const buf = this.subarray(byteOffset, byteOffset + 8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n\n    return view.getFloat64(0, littleEndian)\n  }\n\n  setFloat64 (byteOffset: number, value: number, littleEndian?: boolean): void {\n    const buf = alloc(8)\n    const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    view.setFloat64(0, value, littleEndian)\n\n    this.write(buf, byteOffset)\n  }\n\n  equals (other: any): other is Uint8ArrayList {\n    if (other == null) {\n      return false\n    }\n\n    if (!(other instanceof Uint8ArrayList)) {\n      return false\n    }\n\n    if (other.bufs.length !== this.bufs.length) {\n      return false\n    }\n\n    for (let i = 0; i < this.bufs.length; i++) {\n      if (!equals(this.bufs[i], other.bufs[i])) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  /**\n   * Create a Uint8ArrayList from a pre-existing list of Uint8Arrays.  Use this\n   * method if you know the total size of all the Uint8Arrays ahead of time.\n   */\n  static fromUint8Arrays (bufs: Uint8Array[], length?: number): Uint8ArrayList {\n    const list = new Uint8ArrayList()\n    list.bufs = bufs\n\n    if (length == null) {\n      length = bufs.reduce((acc, curr) => acc + curr.byteLength, 0)\n    }\n\n    list.length = length\n\n    return list\n  }\n}\n\n/*\nfunction indexOf (needle: Uint8Array, haystack: Uint8Array, offset = 0) {\n  for (let i = offset; i < haystack.byteLength; i++) {\n    for (let j = 0; j < needle.length; j++) {\n      if (haystack[i + j] !== needle[j]) {\n        break\n      }\n\n      if (j === needle.byteLength -1) {\n        return i\n      }\n    }\n\n    if (haystack.byteLength - i < needle.byteLength) {\n      break\n    }\n  }\n\n  return -1\n}\n*/\n", "export function isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n", "import * as varint from 'uint8-varint'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { allocUnsafe } from 'uint8arrays/alloc'\nimport { isAsyncIterable } from './utils.js'\nimport type { LengthEncoderFunction } from './index.js'\nimport type { Source } from 'it-stream-types'\n\ninterface EncoderOptions {\n  lengthEncoder?: LengthEncoderFunction\n}\n\nconst defaultEncoder: LengthEncoderFunction = (length) => {\n  const lengthLength = varint.encodingLength(length)\n  const lengthBuf = allocUnsafe(lengthLength)\n\n  varint.encode(length, lengthBuf)\n\n  defaultEncoder.bytes = lengthLength\n\n  return lengthBuf\n}\ndefaultEncoder.bytes = 0\n\nexport function encode (source: Iterable<Uint8ArrayList | Uint8Array>, options?: EncoderOptions): Generator<Uint8Array, void, undefined>\nexport function encode (source: Source<Uint8ArrayList | Uint8Array>, options?: EncoderOptions): AsyncGenerator<Uint8Array, void, undefined>\nexport function encode (source: Source<Uint8ArrayList | Uint8Array>, options?: EncoderOptions): Generator<Uint8Array, void, undefined> | AsyncGenerator<Uint8Array, void, undefined> {\n  options = options ?? {}\n\n  const encodeLength = options.lengthEncoder ?? defaultEncoder\n\n  function * maybeYield (chunk: Uint8Array | Uint8ArrayList): Generator<Uint8Array, void, undefined> {\n    // length + data\n    const length = encodeLength(chunk.byteLength)\n\n    // yield only Uint8Arrays\n    if (length instanceof Uint8Array) {\n      yield length\n    } else {\n      yield * length\n    }\n\n    // yield only Uint8Arrays\n    if (chunk instanceof Uint8Array) {\n      yield chunk\n    } else {\n      yield * chunk\n    }\n  }\n\n  if (isAsyncIterable(source)) {\n    return (async function * () {\n      for await (const chunk of source) {\n        yield * maybeYield(chunk)\n      }\n    })()\n  }\n\n  return (function * () {\n    for (const chunk of source) {\n      yield * maybeYield(chunk)\n    }\n  })()\n}\n\nencode.single = (chunk: Uint8ArrayList | Uint8Array, options?: EncoderOptions) => {\n  options = options ?? {}\n  const encodeLength = options.lengthEncoder ?? defaultEncoder\n\n  return new Uint8ArrayList(\n    encodeLength(chunk.byteLength),\n    chunk\n  )\n}\n", "/* eslint max-depth: [\"error\", 6] */\n\nimport errCode from 'err-code'\nimport * as varint from 'uint8-varint'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport { isAsyncIterable } from './utils.js'\nimport type { LengthDecoderFunction } from './index.js'\nimport type { Reader } from 'it-reader'\nimport type { Source } from 'it-stream-types'\n\nexport interface ReadState {\n  dataLength: number\n}\n\nexport interface DecoderOptions {\n  lengthDecoder?: LengthDecoderFunction\n  onData?: (data: Uint8ArrayList) => void\n  onLength?: (length: number) => void\n  maxLengthLength?: number\n  maxDataLength?: number\n}\n\nexport interface ReadResult {\n  mode: string\n  chunk?: Uint8ArrayList\n  buffer: Uint8ArrayList\n  state?: ReadState\n  data?: Uint8ArrayList\n}\n\n// Maximum length of the length section of the message\nexport const MAX_LENGTH_LENGTH = 8 // Varint.encode(Number.MAX_SAFE_INTEGER).length\n// Maximum length of the data section of the message\nexport const MAX_DATA_LENGTH = 1024 * 1024 * 4\n\nenum ReadMode {\n  LENGTH,\n  DATA\n}\n\nconst defaultDecoder: LengthDecoderFunction = (buf) => {\n  const length = varint.decode(buf)\n  defaultDecoder.bytes = varint.encodingLength(length)\n\n  return length\n}\ndefaultDecoder.bytes = 0\n\nexport function decode (source: Iterable<Uint8ArrayList | Uint8Array>, options?: DecoderOptions): Generator<Uint8ArrayList, void, unknown>\nexport function decode (source: Source<Uint8ArrayList | Uint8Array>, options?: DecoderOptions): AsyncGenerator<Uint8ArrayList, void, unknown>\nexport function decode (source: Source<Uint8ArrayList | Uint8Array>, options?: DecoderOptions): Generator<Uint8ArrayList, void, unknown> | AsyncGenerator<Uint8ArrayList, void, unknown> {\n  const buffer = new Uint8ArrayList()\n  let mode = ReadMode.LENGTH\n  let dataLength = -1\n\n  const lengthDecoder = options?.lengthDecoder ?? defaultDecoder\n  const maxLengthLength = options?.maxLengthLength ?? MAX_LENGTH_LENGTH\n  const maxDataLength = options?.maxDataLength ?? MAX_DATA_LENGTH\n\n  function * maybeYield (): Generator<Uint8ArrayList> {\n    while (buffer.byteLength > 0) {\n      if (mode === ReadMode.LENGTH) {\n        // read length, ignore errors for short reads\n        try {\n          dataLength = lengthDecoder(buffer)\n\n          if (dataLength < 0) {\n            throw errCode(new Error('invalid message length'), 'ERR_INVALID_MSG_LENGTH')\n          }\n\n          if (dataLength > maxDataLength) {\n            throw errCode(new Error('message length too long'), 'ERR_MSG_DATA_TOO_LONG')\n          }\n\n          const dataLengthLength = lengthDecoder.bytes\n          buffer.consume(dataLengthLength)\n\n          if (options?.onLength != null) {\n            options.onLength(dataLength)\n          }\n\n          mode = ReadMode.DATA\n        } catch (err: any) {\n          if (err instanceof RangeError) {\n            if (buffer.byteLength > maxLengthLength) {\n              throw errCode(new Error('message length length too long'), 'ERR_MSG_LENGTH_TOO_LONG')\n            }\n\n            break\n          }\n\n          throw err\n        }\n      }\n\n      if (mode === ReadMode.DATA) {\n        if (buffer.byteLength < dataLength) {\n          // not enough data, wait for more\n          break\n        }\n\n        const data = buffer.sublist(0, dataLength)\n        buffer.consume(dataLength)\n\n        if (options?.onData != null) {\n          options.onData(data)\n        }\n\n        yield data\n\n        mode = ReadMode.LENGTH\n      }\n    }\n  }\n\n  if (isAsyncIterable(source)) {\n    return (async function * () {\n      for await (const buf of source) {\n        buffer.append(buf)\n\n        yield * maybeYield()\n      }\n\n      if (buffer.byteLength > 0) {\n        throw errCode(new Error('unexpected end of input'), 'ERR_UNEXPECTED_EOF')\n      }\n    })()\n  }\n\n  return (function * () {\n    for (const buf of source) {\n      buffer.append(buf)\n\n      yield * maybeYield()\n    }\n\n    if (buffer.byteLength > 0) {\n      throw errCode(new Error('unexpected end of input'), 'ERR_UNEXPECTED_EOF')\n    }\n  })()\n}\n\ndecode.fromReader = (reader: Reader, options?: DecoderOptions) => {\n  let byteLength = 1 // Read single byte chunks until the length is known\n\n  const varByteSource = (async function * () {\n    while (true) {\n      try {\n        const { done, value } = await reader.next(byteLength)\n\n        if (done === true) {\n          return\n        }\n\n        if (value != null) {\n          yield value\n        }\n      } catch (err: any) {\n        if (err.code === 'ERR_UNDER_READ') {\n          return { done: true, value: null }\n        }\n        throw err\n      } finally {\n        // Reset the byteLength so we continue to check for varints\n        byteLength = 1\n      }\n    }\n  }())\n\n  /**\n   * Once the length has been parsed, read chunk for that length\n   */\n  const onLength = (l: number): void => { byteLength = l }\n  return decode(varByteSource, {\n    ...(options ?? {}),\n    onLength\n  })\n}\n", "export default function pDefer() {\n\tconst deferred = {};\n\n\tdeferred.promise = new Promise((resolve, reject) => {\n\t\tdeferred.resolve = resolve;\n\t\tdeferred.reject = reject;\n\t});\n\n\treturn deferred;\n}\n", "// ported from https://www.npmjs.com/package/fast-fifo\n\nexport interface Next<T> {\n  done?: boolean\n  error?: Error\n  value?: T\n}\n\nclass FixedFIFO<T> {\n  public buffer: Array<Next<T> | undefined>\n  private readonly mask: number\n  private top: number\n  private btm: number\n  public next: FixedFIFO<T> | null\n\n  constructor (hwm: number) {\n    if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) {\n      throw new Error('Max size for a FixedFIFO should be a power of two')\n    }\n\n    this.buffer = new Array(hwm)\n    this.mask = hwm - 1\n    this.top = 0\n    this.btm = 0\n    this.next = null\n  }\n\n  push (data: Next<T>): boolean {\n    if (this.buffer[this.top] !== undefined) {\n      return false\n    }\n\n    this.buffer[this.top] = data\n    this.top = (this.top + 1) & this.mask\n\n    return true\n  }\n\n  shift (): Next<T> | undefined {\n    const last = this.buffer[this.btm]\n\n    if (last === undefined) {\n      return undefined\n    }\n\n    this.buffer[this.btm] = undefined\n    this.btm = (this.btm + 1) & this.mask\n    return last\n  }\n\n  isEmpty (): boolean {\n    return this.buffer[this.btm] === undefined\n  }\n}\n\nexport interface FIFOOptions {\n  /**\n   * When the queue reaches this size, it will be split into head/tail parts\n   */\n  splitLimit?: number\n}\n\nexport class FIFO<T> {\n  public size: number\n  private readonly hwm: number\n  private head: FixedFIFO<T>\n  private tail: FixedFIFO<T>\n\n  constructor (options: FIFOOptions = {}) {\n    this.hwm = options.splitLimit ?? 16\n    this.head = new FixedFIFO<T>(this.hwm)\n    this.tail = this.head\n    this.size = 0\n  }\n\n  calculateSize (obj: any): number {\n    if (obj?.byteLength != null) {\n      return obj.byteLength\n    }\n\n    return 1\n  }\n\n  push (val: Next<T>): void {\n    if (val?.value != null) {\n      this.size += this.calculateSize(val.value)\n    }\n\n    if (!this.head.push(val)) {\n      const prev = this.head\n      this.head = prev.next = new FixedFIFO<T>(2 * this.head.buffer.length)\n      this.head.push(val)\n    }\n  }\n\n  shift (): Next<T> | undefined {\n    let val = this.tail.shift()\n\n    if (val === undefined && (this.tail.next != null)) {\n      const next = this.tail.next\n      this.tail.next = null\n      this.tail = next\n      val = this.tail.shift()\n    }\n\n    if (val?.value != null) {\n      this.size -= this.calculateSize(val.value)\n    }\n\n    return val\n  }\n\n  isEmpty (): boolean {\n    return this.head.isEmpty()\n  }\n}\n", "/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\n\nimport deferred from 'p-defer'\nimport { FIFO, type Next } from './fifo.js'\n\nexport class AbortError extends Error {\n  type: string\n  code: string\n\n  constructor (message?: string, code?: string) {\n    super(message ?? 'The operation was aborted')\n    this.type = 'aborted'\n    this.code = code ?? 'ABORT_ERR'\n  }\n}\n\nexport interface AbortOptions {\n  signal?: AbortSignal\n}\n\ninterface BasePushable<T> {\n  /**\n   * End the iterable after all values in the buffer (if any) have been yielded. If an\n   * error is passed the buffer is cleared immediately and the next iteration will\n   * throw the passed error\n   */\n  end(err?: Error): this\n\n  /**\n   * Push a value into the iterable. Values are yielded from the iterable in the order\n   * they are pushed. Values not yet consumed from the iterable are buffered.\n   */\n  push(value: T): this\n\n  /**\n   * Returns a promise that resolves when the underlying queue becomes empty (e.g.\n   * this.readableLength === 0).\n   *\n   * If an AbortSignal is passed as an option and that signal aborts, it only\n   * causes the returned promise to reject - it does not end the pushable.\n   */\n  onEmpty(options?: AbortOptions): Promise<void>\n\n  /**\n   * This property contains the number of bytes (or objects) in the queue ready to be read.\n   *\n   * If `objectMode` is true, this is the number of objects in the queue, if false it's the\n   * total number of bytes in the queue.\n   */\n  readableLength: number\n}\n\n/**\n * An iterable that you can push values into.\n */\nexport interface Pushable<T, R = void, N = unknown> extends AsyncGenerator<T, R, N>, BasePushable<T> {}\n\n/**\n * Similar to `pushable`, except it yields multiple buffered chunks at a time. All values yielded from the iterable will be arrays.\n */\nexport interface PushableV<T, R = void, N = unknown> extends AsyncGenerator<T[], R, N>, BasePushable<T> {}\n\nexport interface Options {\n  /**\n   * A boolean value that means non-`Uint8Array`s will be passed to `.push`, default: `false`\n   */\n  objectMode?: boolean\n\n  /**\n   * A function called after *all* values have been yielded from the iterator (including\n   * buffered values). In the case when the iterator is ended with an error it will be\n   * passed the error as a parameter.\n   */\n  onEnd?(err?: Error): void\n}\n\nexport interface DoneResult { done: true }\nexport interface ValueResult<T> { done: false, value: T }\nexport type NextResult<T> = ValueResult<T> | DoneResult\n\ninterface getNext<T, V = T> { (buffer: FIFO<T>): NextResult<V> }\n\nexport interface ObjectPushableOptions extends Options {\n  objectMode: true\n}\n\nexport interface BytePushableOptions extends Options {\n  objectMode?: false\n}\n\n/**\n * Create a new async iterable. The values yielded from calls to `.next()`\n * or when used in a `for await of`loop are \"pushed\" into the iterable.\n * Returns an async iterable object with additional methods.\n */\nexport function pushable<T extends { byteLength: number } = Uint8Array> (options?: BytePushableOptions): Pushable<T>\nexport function pushable<T> (options: ObjectPushableOptions): Pushable<T>\nexport function pushable<T> (options: Options = {}): Pushable<T> {\n  const getNext = (buffer: FIFO<T>): NextResult<T> => {\n    const next: Next<T> | undefined = buffer.shift()\n\n    if (next == null) {\n      return { done: true }\n    }\n\n    if (next.error != null) {\n      throw next.error\n    }\n\n    return {\n      done: next.done === true,\n      // @ts-expect-error if done is false, value will be present\n      value: next.value\n    }\n  }\n\n  return _pushable<T, T, Pushable<T>>(getNext, options)\n}\n\nexport function pushableV<T extends { byteLength: number } = Uint8Array> (options?: BytePushableOptions): PushableV<T>\nexport function pushableV<T> (options: ObjectPushableOptions): PushableV<T>\nexport function pushableV<T> (options: Options = {}): PushableV<T> {\n  const getNext = (buffer: FIFO<T>): NextResult<T[]> => {\n    let next: Next<T> | undefined\n    const values: T[] = []\n\n    while (!buffer.isEmpty()) {\n      next = buffer.shift()\n\n      if (next == null) {\n        break\n      }\n\n      if (next.error != null) {\n        throw next.error\n      }\n\n      if (next.done === false) {\n        // @ts-expect-error if done is false value should be pushed\n        values.push(next.value)\n      }\n    }\n\n    if (next == null) {\n      return { done: true }\n    }\n\n    return {\n      done: next.done === true,\n      value: values\n    }\n  }\n\n  return _pushable<T, T[], PushableV<T>>(getNext, options)\n}\n\nfunction _pushable<PushType, ValueType, ReturnType> (getNext: getNext<PushType, ValueType>, options?: Options): ReturnType {\n  options = options ?? {}\n  let onEnd = options.onEnd\n  let buffer = new FIFO<PushType>()\n  let pushable: any\n  let onNext: ((next: Next<PushType>) => ReturnType) | null\n  let ended: boolean\n  let drain = deferred()\n\n  const waitNext = async (): Promise<NextResult<ValueType>> => {\n    try {\n      if (!buffer.isEmpty()) {\n        return getNext(buffer)\n      }\n\n      if (ended) {\n        return { done: true }\n      }\n\n      return await new Promise<NextResult<ValueType>>((resolve, reject) => {\n        onNext = (next: Next<PushType>) => {\n          onNext = null\n          buffer.push(next)\n\n          try {\n            resolve(getNext(buffer))\n          } catch (err) {\n            reject(err)\n          }\n\n          return pushable\n        }\n      })\n    } finally {\n      if (buffer.isEmpty()) {\n        // settle promise in the microtask queue to give consumers a chance to\n        // await after calling .push\n        queueMicrotask(() => {\n          drain.resolve()\n          drain = deferred()\n        })\n      }\n    }\n  }\n\n  const bufferNext = (next: Next<PushType>): ReturnType => {\n    if (onNext != null) {\n      return onNext(next)\n    }\n\n    buffer.push(next)\n    return pushable\n  }\n\n  const bufferError = (err: Error): ReturnType => {\n    buffer = new FIFO()\n\n    if (onNext != null) {\n      return onNext({ error: err })\n    }\n\n    buffer.push({ error: err })\n    return pushable\n  }\n\n  const push = (value: PushType): ReturnType => {\n    if (ended) {\n      return pushable\n    }\n\n    // @ts-expect-error `byteLength` is not declared on PushType\n    if (options?.objectMode !== true && value?.byteLength == null) {\n      throw new Error('objectMode was not true but tried to push non-Uint8Array value')\n    }\n\n    return bufferNext({ done: false, value })\n  }\n  const end = (err?: Error): ReturnType => {\n    if (ended) return pushable\n    ended = true\n\n    return (err != null) ? bufferError(err) : bufferNext({ done: true })\n  }\n  const _return = (): DoneResult => {\n    buffer = new FIFO()\n    end()\n\n    return { done: true }\n  }\n  const _throw = (err: Error): DoneResult => {\n    end(err)\n\n    return { done: true }\n  }\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next: waitNext,\n    return: _return,\n    throw: _throw,\n    push,\n    end,\n    get readableLength (): number {\n      return buffer.size\n    },\n    onEmpty: async (options?: AbortOptions) => {\n      const signal = options?.signal\n      signal?.throwIfAborted()\n\n      if (buffer.isEmpty()) {\n        return\n      }\n\n      let cancel: Promise<void> | undefined\n      let listener: (() => void) | undefined\n\n      if (signal != null) {\n        cancel = new Promise((resolve, reject) => {\n          listener = () => {\n            reject(new AbortError())\n          }\n\n          signal.addEventListener('abort', listener)\n        })\n      }\n\n      try {\n        await Promise.race([\n          drain.promise,\n          cancel\n        ])\n      } finally {\n        if (listener != null && signal != null) {\n          signal?.removeEventListener('abort', listener)\n        }\n      }\n    }\n  }\n\n  if (onEnd == null) {\n    return pushable\n  }\n\n  const _pushable = pushable\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next () {\n      return _pushable.next()\n    },\n    throw (err: Error) {\n      _pushable.throw(err)\n\n      if (onEnd != null) {\n        onEnd(err)\n        onEnd = undefined\n      }\n\n      return { done: true }\n    },\n    return () {\n      _pushable.return()\n\n      if (onEnd != null) {\n        onEnd()\n        onEnd = undefined\n      }\n\n      return { done: true }\n    },\n    push,\n    end (err: Error) {\n      _pushable.end(err)\n\n      if (onEnd != null) {\n        onEnd(err)\n        onEnd = undefined\n      }\n\n      return pushable\n    },\n    get readableLength () {\n      return _pushable.readableLength\n    },\n    onEmpty: (opts?: AbortOptions) => {\n      return _pushable.onEmpty(opts)\n    }\n  }\n\n  return pushable\n}\n", "/**\n * @packageDocumentation\n *\n * Merge several (async)iterables into one, yield values as they arrive.\n *\n * Nb. sources are iterated over in parallel so the order of emitted items is not guaranteed.\n *\n * @example\n *\n * ```javascript\n * import merge from 'it-merge'\n * import all from 'it-all'\n *\n * // This can also be an iterator, generator, etc\n * const values1 = [0, 1, 2, 3, 4]\n * const values2 = [5, 6, 7, 8, 9]\n *\n * const arr = all(merge(values1, values2))\n *\n * console.info(arr) // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import merge from 'it-merge'\n * import all from 'it-all'\n *\n * // This can also be an iterator, async iterator, generator, etc\n * const values1 = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n * const values2 = async function * () {\n *   yield * [5, 6, 7, 8, 9]\n * }\n *\n * const arr = await all(merge(values1(), values2()))\n *\n * console.info(arr) // 0, 1, 5, 6, 2, 3, 4, 7, 8, 9  <- nb. order is not guaranteed\n * ```\n */\n\nimport { pushable } from 'it-pushable'\n\nfunction isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n\n/**\n * Treat one or more iterables as a single iterable.\n *\n * Nb. sources are iterated over in parallel so the\n * order of emitted items is not guaranteed.\n */\nfunction merge <T> (...sources: Array<Iterable<T>>): Generator<T, void, undefined>\nfunction merge <T> (...sources: Array<AsyncIterable<T> | Iterable<T>>): AsyncGenerator<T, void, undefined>\nfunction merge <T> (...sources: Array<AsyncIterable<T> | Iterable<T>>): AsyncGenerator<T, void, undefined> | Generator<T, void, undefined> {\n  const syncSources: Array<Iterable<T>> = []\n\n  for (const source of sources) {\n    if (!isAsyncIterable(source)) {\n      syncSources.push(source)\n    }\n  }\n\n  if (syncSources.length === sources.length) {\n    // all sources are synchronous\n    return (function * () {\n      for (const source of syncSources) {\n        yield * source\n      }\n    })()\n  }\n\n  return (async function * () {\n    const output = pushable<T>({\n      objectMode: true\n    })\n\n    void Promise.resolve().then(async () => {\n      try {\n        await Promise.all(\n          sources.map(async (source) => {\n            for await (const item of source) {\n              output.push(item)\n            }\n          })\n        )\n\n        output.end()\n      } catch (err: any) {\n        output.end(err)\n      }\n    })\n\n    yield * output\n  })()\n}\n\nexport default merge\n", "import { pushable } from 'it-pushable'\nimport merge from 'it-merge'\nimport type { Duplex, Transform, Sink } from 'it-stream-types'\n\ninterface SourceFn<A = any> { (): A }\n\ntype PipeSource<A = any> =\n  Iterable<A> |\n  AsyncIterable<A> |\n  SourceFn<A> |\n  Duplex<A, any, any>\n\ntype PipeTransform<A = any, B = any> =\n  Transform<A, B> |\n  Duplex<B, A>\n\ntype PipeSink<A = any, B = any> =\n  Sink<A, B> |\n  Duplex<any, A, B>\n\ntype PipeOutput<A> =\n  A extends Sink<any> ? ReturnType<A> :\n    A extends Duplex<any, any, any> ? ReturnType<A['sink']> :\n      never\n\n// single item pipe output includes pipe source types\ntype SingleItemPipeOutput<A> =\n  A extends Iterable<any> ? A :\n    A extends AsyncIterable<any> ? A :\n      A extends SourceFn ? ReturnType<A> :\n        A extends Duplex<any, any, any> ? A['source'] :\n          PipeOutput<A>\n\ntype PipeFnInput<A> =\n  A extends Iterable<any> ? A :\n    A extends AsyncIterable<any> ? A :\n      A extends SourceFn ? ReturnType<A> :\n        A extends Transform<any, any> ? ReturnType<A> :\n          A extends Duplex<any, any, any> ? A['source'] :\n            never\n\n// one item, just a pass-through\nexport function pipe<\n  A extends PipeSource\n> (\n  source: A\n): SingleItemPipeOutput<A>\n\n// two items, source to sink\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeSink<PipeFnInput<A>>\n> (\n  source: A,\n  sink: B\n): PipeOutput<B>\n\n// three items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeSink<PipeFnInput<B>>\n> (\n  source: A,\n  transform1: B,\n  sink: C\n): PipeOutput<C>\n\n// many items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeSink<PipeFnInput<C>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  sink: D\n): PipeOutput<D>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeSink<PipeFnInput<D>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  sink: E\n): PipeOutput<E>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeSink<PipeFnInput<E>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  sink: F\n): PipeOutput<F>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeSink<PipeFnInput<F>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  sink: G\n): PipeOutput<G>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeSink<PipeFnInput<G>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  sink: H\n): PipeOutput<H>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeTransform<PipeFnInput<G>>,\n  I extends PipeSink<PipeFnInput<H>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  transform7: H,\n  sink: I\n): PipeOutput<I>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeTransform<PipeFnInput<G>>,\n  I extends PipeTransform<PipeFnInput<H>>,\n  J extends PipeSink<PipeFnInput<I>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  transform7: H,\n  transform8: I,\n  sink: J\n): PipeOutput<J>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeTransform<PipeFnInput<G>>,\n  I extends PipeTransform<PipeFnInput<H>>,\n  J extends PipeTransform<PipeFnInput<I>>,\n  K extends PipeSink<PipeFnInput<J>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  transform7: H,\n  transform8: I,\n  transform9: J,\n  sink: K\n): PipeOutput<K>\n\n// lots of items, source to sink with transform(s) in between\nexport function pipe<\n  A extends PipeSource,\n  B extends PipeTransform<PipeFnInput<A>>,\n  C extends PipeTransform<PipeFnInput<B>>,\n  D extends PipeTransform<PipeFnInput<C>>,\n  E extends PipeTransform<PipeFnInput<D>>,\n  F extends PipeTransform<PipeFnInput<E>>,\n  G extends PipeTransform<PipeFnInput<F>>,\n  H extends PipeTransform<PipeFnInput<G>>,\n  I extends PipeTransform<PipeFnInput<H>>,\n  J extends PipeTransform<PipeFnInput<I>>,\n  K extends PipeTransform<PipeFnInput<J>>,\n  L extends PipeSink<PipeFnInput<K>>\n> (\n  source: A,\n  transform1: B,\n  transform2: C,\n  transform3: D,\n  transform4: E,\n  transform5: F,\n  transform6: G,\n  transform7: H,\n  transform8: I,\n  transform9: J,\n  transform10: K,\n  sink: L\n): PipeOutput<L>\n\nexport function pipe (first: any, ...rest: any[]): any {\n  if (first == null) {\n    throw new Error('Empty pipeline')\n  }\n\n  // Duplex at start: wrap in function and return duplex source\n  if (isDuplex(first)) {\n    const duplex = first\n    first = () => duplex.source\n  // Iterable at start: wrap in function\n  } else if (isIterable(first) || isAsyncIterable(first)) {\n    const source = first\n    first = () => source\n  }\n\n  const fns = [first, ...rest]\n\n  if (fns.length > 1) {\n    // Duplex at end: use duplex sink\n    if (isDuplex(fns[fns.length - 1])) {\n      fns[fns.length - 1] = fns[fns.length - 1].sink\n    }\n  }\n\n  if (fns.length > 2) {\n    // Duplex in the middle, consume source with duplex sink and return duplex source\n    for (let i = 1; i < fns.length - 1; i++) {\n      if (isDuplex(fns[i])) {\n        fns[i] = duplexPipelineFn(fns[i])\n      }\n    }\n  }\n\n  return rawPipe(...fns)\n}\n\nexport const rawPipe = (...fns: any): any => {\n  let res\n  while (fns.length > 0) {\n    res = fns.shift()(res)\n  }\n  return res\n}\n\nconst isAsyncIterable = (obj: any): obj is AsyncIterable<unknown> => {\n  return obj?.[Symbol.asyncIterator] != null\n}\n\nconst isIterable = (obj: any): obj is Iterable<unknown> => {\n  return obj?.[Symbol.iterator] != null\n}\n\nconst isDuplex = (obj: any): obj is Duplex => {\n  if (obj == null) {\n    return false\n  }\n\n  return obj.sink != null && obj.source != null\n}\n\nconst duplexPipelineFn = (duplex: Duplex<any, any, any>) => {\n  return (source: any) => {\n    const p = duplex.sink(source)\n\n    if (p?.then != null) {\n      const stream = pushable<any>({\n        objectMode: true\n      })\n      p.then(() => {\n        stream.end()\n      }, (err: Error) => {\n        stream.end(err)\n      })\n\n      let sourceWrap: () => Iterable<any> | AsyncIterable<any>\n      const source = duplex.source\n\n      if (isAsyncIterable(source)) {\n        sourceWrap = async function * () {\n          yield * source\n          stream.end()\n        }\n      } else if (isIterable(source)) {\n        sourceWrap = function * () {\n          yield * source\n          stream.end()\n        }\n      } else {\n        throw new Error('Unknown duplex source type - must be Iterable or AsyncIterable')\n      }\n\n      return merge(stream, sourceWrap())\n    }\n\n    return duplex.source\n  }\n}\n", "export const second = 1000\nexport const minute = 60 * second\n\n// Protocol identifiers\n\nexport const FloodsubID = '/floodsub/1.0.0'\n\n/**\n * The protocol ID for version 1.0.0 of the Gossipsub protocol\n * It is advertised along with GossipsubIDv11 for backwards compatability\n */\nexport const GossipsubIDv10 = '/meshsub/1.0.0'\n\n/**\n * The protocol ID for version 1.1.0 of the Gossipsub protocol\n * See the spec for details about how v1.1.0 compares to v1.0.0:\n * https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/gossipsub-v1.1.md\n */\nexport const GossipsubIDv11 = '/meshsub/1.1.0'\n\n// Overlay parameters\n\n/**\n * GossipsubD sets the optimal degree for a Gossipsub topic mesh. For example, if GossipsubD == 6,\n * each peer will want to have about six peers in their mesh for each topic they're subscribed to.\n * GossipsubD should be set somewhere between GossipsubDlo and GossipsubDhi.\n */\nexport const GossipsubD = 6\n\n/**\n * GossipsubDlo sets the lower bound on the number of peers we keep in a Gossipsub topic mesh.\n * If we have fewer than GossipsubDlo peers, we will attempt to graft some more into the mesh at\n * the next heartbeat.\n */\nexport const GossipsubDlo = 4\n\n/**\n * GossipsubDhi sets the upper bound on the number of peers we keep in a Gossipsub topic mesh.\n * If we have more than GossipsubDhi peers, we will select some to prune from the mesh at the next heartbeat.\n */\nexport const GossipsubDhi = 12\n\n/**\n * GossipsubDscore affects how peers are selected when pruning a mesh due to over subscription.\n * At least GossipsubDscore of the retained peers will be high-scoring, while the remainder are\n * chosen randomly.\n */\nexport const GossipsubDscore = 4\n\n/**\n * GossipsubDout sets the quota for the number of outbound connections to maintain in a topic mesh.\n * When the mesh is pruned due to over subscription, we make sure that we have outbound connections\n * to at least GossipsubDout of the survivor peers. This prevents sybil attackers from overwhelming\n * our mesh with incoming connections.\n *\n * GossipsubDout must be set below GossipsubDlo, and must not exceed GossipsubD / 2.\n */\nexport const GossipsubDout = 2\n\n// Gossip parameters\n\n/**\n * GossipsubHistoryLength controls the size of the message cache used for gossip.\n * The message cache will remember messages for GossipsubHistoryLength heartbeats.\n */\nexport const GossipsubHistoryLength = 5\n\n/**\n * GossipsubHistoryGossip controls how many cached message ids we will advertise in\n * IHAVE gossip messages. When asked for our seen message IDs, we will return\n * only those from the most recent GossipsubHistoryGossip heartbeats. The slack between\n * GossipsubHistoryGossip and GossipsubHistoryLength allows us to avoid advertising messages\n * that will be expired by the time they're requested.\n *\n * GossipsubHistoryGossip must be less than or equal to GossipsubHistoryLength to\n * avoid a runtime panic.\n */\nexport const GossipsubHistoryGossip = 3\n\n/**\n * GossipsubDlazy affects how many peers we will emit gossip to at each heartbeat.\n * We will send gossip to at least GossipsubDlazy peers outside our mesh. The actual\n * number may be more, depending on GossipsubGossipFactor and how many peers we're\n * connected to.\n */\nexport const GossipsubDlazy = 6\n\n/**\n * GossipsubGossipFactor affects how many peers we will emit gossip to at each heartbeat.\n * We will send gossip to GossipsubGossipFactor * (total number of non-mesh peers), or\n * GossipsubDlazy, whichever is greater.\n */\nexport const GossipsubGossipFactor = 0.25\n\n/**\n * GossipsubGossipRetransmission controls how many times we will allow a peer to request\n * the same message id through IWANT gossip before we start ignoring them. This is designed\n * to prevent peers from spamming us with requests and wasting our resources.\n */\nexport const GossipsubGossipRetransmission = 3\n\n// Heartbeat interval\n\n/**\n * GossipsubHeartbeatInitialDelay is the short delay before the heartbeat timer begins\n * after the router is initialized.\n */\nexport const GossipsubHeartbeatInitialDelay = 100\n\n/**\n * GossipsubHeartbeatInterval controls the time between heartbeats.\n */\nexport const GossipsubHeartbeatInterval = second\n\n/**\n * GossipsubFanoutTTL controls how long we keep track of the fanout state. If it's been\n * GossipsubFanoutTTL since we've published to a topic that we're not subscribed to,\n * we'll delete the fanout map for that topic.\n */\nexport const GossipsubFanoutTTL = minute\n\n/**\n * GossipsubPrunePeers controls the number of peers to include in prune Peer eXchange.\n * When we prune a peer that's eligible for PX (has a good score, etc), we will try to\n * send them signed peer records for up to GossipsubPrunePeers other peers that we\n * know of.\n */\nexport const GossipsubPrunePeers = 16\n\n/**\n * GossipsubPruneBackoff controls the backoff time for pruned peers. This is how long\n * a peer must wait before attempting to graft into our mesh again after being pruned.\n * When pruning a peer, we send them our value of GossipsubPruneBackoff so they know\n * the minimum time to wait. Peers running older versions may not send a backoff time,\n * so if we receive a prune message without one, we will wait at least GossipsubPruneBackoff\n * before attempting to re-graft.\n */\nexport const GossipsubPruneBackoff = minute\n\n/**\n * Backoff to use when unsuscribing from a topic. Should not resubscribe to this topic before it expired.\n */\nexport const GossipsubUnsubscribeBackoff = 10 * second\n\n/**\n * GossipsubPruneBackoffTicks is the number of heartbeat ticks for attempting to prune expired\n * backoff timers.\n */\nexport const GossipsubPruneBackoffTicks = 15\n\n/**\n * GossipsubConnectors controls the number of active connection attempts for peers obtained through PX.\n */\nexport const GossipsubConnectors = 8\n\n/**\n * GossipsubMaxPendingConnections sets the maximum number of pending connections for peers attempted through px.\n */\nexport const GossipsubMaxPendingConnections = 128\n\n/**\n * GossipsubConnectionTimeout controls the timeout for connection attempts.\n */\nexport const GossipsubConnectionTimeout = 30 * second\n\n/**\n * GossipsubDirectConnectTicks is the number of heartbeat ticks for attempting to reconnect direct peers\n * that are not currently connected.\n */\nexport const GossipsubDirectConnectTicks = 300\n\n/**\n * GossipsubDirectConnectInitialDelay is the initial delay before opening connections to direct peers\n */\nexport const GossipsubDirectConnectInitialDelay = second\n\n/**\n * GossipsubOpportunisticGraftTicks is the number of heartbeat ticks for attempting to improve the mesh\n * with opportunistic grafting. Every GossipsubOpportunisticGraftTicks we will attempt to select some\n * high-scoring mesh peers to replace lower-scoring ones, if the median score of our mesh peers falls\n * below a threshold\n */\nexport const GossipsubOpportunisticGraftTicks = 60\n\n/**\n * GossipsubOpportunisticGraftPeers is the number of peers to opportunistically graft.\n */\nexport const GossipsubOpportunisticGraftPeers = 2\n\n/**\n * If a GRAFT comes before GossipsubGraftFloodThreshold has elapsed since the last PRUNE,\n * then there is an extra score penalty applied to the peer through P7.\n */\nexport const GossipsubGraftFloodThreshold = 10 * second\n\n/**\n * GossipsubMaxIHaveLength is the maximum number of messages to include in an IHAVE message.\n * Also controls the maximum number of IHAVE ids we will accept and request with IWANT from a\n * peer within a heartbeat, to protect from IHAVE floods. You should adjust this value from the\n * default if your system is pushing more than 5000 messages in GossipsubHistoryGossip heartbeats;\n * with the defaults this is 1666 messages/s.\n */\nexport const GossipsubMaxIHaveLength = 5000\n\n/**\n * GossipsubMaxIHaveMessages is the maximum number of IHAVE messages to accept from a peer within a heartbeat.\n */\nexport const GossipsubMaxIHaveMessages = 10\n\n/**\n * Time to wait for a message requested through IWANT following an IHAVE advertisement.\n * If the message is not received within this window, a broken promise is declared and\n * the router may apply bahavioural penalties.\n */\nexport const GossipsubIWantFollowupTime = 3 * second\n\n/**\n * Time in milliseconds to keep message ids in the seen cache\n */\nexport const GossipsubSeenTTL = 2 * minute\n\nexport const TimeCacheDuration = 120 * 1000\n\nexport const ERR_TOPIC_VALIDATOR_REJECT = 'ERR_TOPIC_VALIDATOR_REJECT'\nexport const ERR_TOPIC_VALIDATOR_IGNORE = 'ERR_TOPIC_VALIDATOR_IGNORE'\n\n/**\n * If peer score is better than this, we accept messages from this peer\n * within ACCEPT_FROM_WHITELIST_DURATION_MS from the last time computing score.\n **/\nexport const ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE = 0\n\n/**\n * If peer score >= ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE, accept up to this\n * number of messages from that peer.\n */\nexport const ACCEPT_FROM_WHITELIST_MAX_MESSAGES = 128\n\n/**\n * If peer score >= ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE, accept messages from\n * this peer up to this time duration.\n */\nexport const ACCEPT_FROM_WHITELIST_DURATION_MS = 1000\n\n/**\n * The default MeshMessageDeliveriesWindow to be used in metrics.\n */\nexport const DEFAULT_METRIC_MESH_MESSAGE_DELIVERIES_WINDOWS = 1000\n\n/** Wait for 1 more heartbeats before clearing a backoff */\nexport const BACKOFF_SLACK = 1\n", "import protobuf from 'protobufjs/minimal.js'\nimport type { IRPC, RPC } from './rpc.js'\n\nexport interface DecodeRPCLimits {\n  maxSubscriptions: number\n  maxMessages: number\n  maxIhaveMessageIDs: number\n  maxIwantMessageIDs: number\n  maxControlMessages: number\n  maxPeerInfos: number\n}\n\nexport const defaultDecodeRpcLimits: DecodeRPCLimits = {\n  maxSubscriptions: Infinity,\n  maxMessages: Infinity,\n  maxIhaveMessageIDs: Infinity,\n  maxIwantMessageIDs: Infinity,\n  maxControlMessages: Infinity,\n  maxPeerInfos: Infinity\n}\n\n/**\n * Copied code from src/message/rpc.cjs but with decode limits to prevent OOM attacks\n */\nexport function decodeRpc (bytes: Uint8Array, opts: DecodeRPCLimits): IRPC {\n  // Mutate to use the option as stateful counter. Must limit the total count of messageIDs across all IWANT, IHAVE\n  // else one count put 100 messageIDs into each 100 IWANT and \"get around\" the limit\n  opts = { ...opts }\n\n  const r = protobuf.Reader.create(bytes)\n  const l = bytes.length\n\n  const c = l === undefined ? r.len : r.pos + l\n  const m: IRPC = {}\n  while (r.pos < c) {\n    const t = r.uint32()\n    switch (t >>> 3) {\n      case 1:\n        if (!((m.subscriptions != null) && (m.subscriptions.length > 0))) m.subscriptions = []\n        if (m.subscriptions.length < opts.maxSubscriptions) m.subscriptions.push(decodeSubOpts(r, r.uint32()))\n        else r.skipType(t & 7)\n        break\n      case 2:\n        if (!((m.messages != null) && (m.messages.length > 0))) m.messages = []\n        if (m.messages.length < opts.maxMessages) m.messages.push(decodeMessage(r, r.uint32()))\n        else r.skipType(t & 7)\n        break\n      case 3:\n        m.control = decodeControlMessage(r, r.uint32(), opts)\n        break\n      default:\n        r.skipType(t & 7)\n        break\n    }\n  }\n  return m\n}\n\nfunction decodeSubOpts (r: protobuf.Reader, l: number): RPC.ISubOpts {\n  const c = l === undefined ? r.len : r.pos + l\n  const m: RPC.ISubOpts = {}\n  while (r.pos < c) {\n    const t = r.uint32()\n    switch (t >>> 3) {\n      case 1:\n        m.subscribe = r.bool()\n        break\n      case 2:\n        m.topic = r.string()\n        break\n      default:\n        r.skipType(t & 7)\n        break\n    }\n  }\n  return m\n}\n\nfunction decodeMessage (r: protobuf.Reader, l: number): RPC.IMessage {\n  const c = l === undefined ? r.len : r.pos + l\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  const m = {} as RPC.IMessage\n  while (r.pos < c) {\n    const t = r.uint32()\n    switch (t >>> 3) {\n      case 1:\n        m.from = r.bytes()\n        break\n      case 2:\n        m.data = r.bytes()\n        break\n      case 3:\n        m.seqno = r.bytes()\n        break\n      case 4:\n        m.topic = r.string()\n        break\n      case 5:\n        m.signature = r.bytes()\n        break\n      case 6:\n        m.key = r.bytes()\n        break\n      default:\n        r.skipType(t & 7)\n        break\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n  if (!m.topic) throw Error(\"missing required 'topic'\")\n  return m\n}\n\nfunction decodeControlMessage (r: protobuf.Reader, l: number, opts: DecodeRPCLimits): RPC.IControlMessage {\n  const c = l === undefined ? r.len : r.pos + l\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  const m = {} as RPC.IControlMessage\n  while (r.pos < c) {\n    const t = r.uint32()\n    switch (t >>> 3) {\n      case 1:\n        if (!((m.ihave != null) && (m.ihave.length > 0))) m.ihave = []\n        if (m.ihave.length < opts.maxControlMessages) m.ihave.push(decodeControlIHave(r, r.uint32(), opts))\n        else r.skipType(t & 7)\n        break\n      case 2:\n        if (!((m.iwant != null) && (m.iwant.length > 0))) m.iwant = []\n        if (m.iwant.length < opts.maxControlMessages) m.iwant.push(decodeControlIWant(r, r.uint32(), opts))\n        else r.skipType(t & 7)\n        break\n      case 3:\n        if (!((m.graft != null) && (m.graft.length > 0))) m.graft = []\n        if (m.graft.length < opts.maxControlMessages) m.graft.push(decodeControlGraft(r, r.uint32()))\n        else r.skipType(t & 7)\n        break\n      case 4:\n        if (!((m.prune != null) && (m.prune.length > 0))) m.prune = []\n        if (m.prune.length < opts.maxControlMessages) m.prune.push(decodeControlPrune(r, r.uint32(), opts))\n        else r.skipType(t & 7)\n        break\n      default:\n        r.skipType(t & 7)\n        break\n    }\n  }\n  return m\n}\n\nfunction decodeControlIHave (r: protobuf.Reader, l: number, opts: DecodeRPCLimits): RPC.IControlIHave {\n  const c = l === undefined ? r.len : r.pos + l\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  const m = {} as RPC.IControlIHave\n  while (r.pos < c) {\n    const t = r.uint32()\n    switch (t >>> 3) {\n      case 1:\n        m.topicID = r.string()\n        break\n      case 2:\n        if (!((m.messageIDs != null) && (m.messageIDs.length > 0))) m.messageIDs = []\n        if (opts.maxIhaveMessageIDs-- > 0) m.messageIDs.push(r.bytes())\n        else r.skipType(t & 7)\n        break\n      default:\n        r.skipType(t & 7)\n        break\n    }\n  }\n  return m\n}\n\nfunction decodeControlIWant (r: protobuf.Reader, l: number, opts: DecodeRPCLimits): RPC.IControlIWant {\n  const c = l === undefined ? r.len : r.pos + l\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  const m = {} as RPC.IControlIWant\n  while (r.pos < c) {\n    const t = r.uint32()\n    switch (t >>> 3) {\n      case 1:\n        if (!((m.messageIDs != null) && (m.messageIDs.length > 0))) m.messageIDs = []\n        if (opts.maxIwantMessageIDs-- > 0) m.messageIDs.push(r.bytes())\n        else r.skipType(t & 7)\n        break\n      default:\n        r.skipType(t & 7)\n        break\n    }\n  }\n  return m\n}\n\nfunction decodeControlGraft (r: protobuf.Reader, l: number): RPC.IControlGraft {\n  const c = l === undefined ? r.len : r.pos + l\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  const m = {} as RPC.IControlGraft\n  while (r.pos < c) {\n    const t = r.uint32()\n    switch (t >>> 3) {\n      case 1:\n        m.topicID = r.string()\n        break\n      default:\n        r.skipType(t & 7)\n        break\n    }\n  }\n  return m\n}\n\nfunction decodeControlPrune (r: protobuf.Reader, l: number, opts: DecodeRPCLimits): RPC.IControlPrune {\n  const c = l === undefined ? r.len : r.pos + l\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  const m = {} as RPC.IControlPrune\n  while (r.pos < c) {\n    const t = r.uint32()\n    switch (t >>> 3) {\n      case 1:\n        m.topicID = r.string()\n        break\n      case 2:\n        if (!((m.peers != null) && (m.peers.length > 0))) m.peers = []\n        if (opts.maxPeerInfos-- > 0) m.peers.push(decodePeerInfo(r, r.uint32()))\n        else r.skipType(t & 7)\n        break\n      case 3:\n        m.backoff = r.uint64() as unknown as number\n        break\n      default:\n        r.skipType(t & 7)\n        break\n    }\n  }\n  return m\n}\n\nfunction decodePeerInfo (r: protobuf.Reader, l: number): RPC.IPeerInfo {\n  const c = l === undefined ? r.len : r.pos + l\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  const m = {} as RPC.IPeerInfo\n  while (r.pos < c) {\n    const t = r.uint32()\n    switch (t >>> 3) {\n      case 1:\n        m.peerID = r.bytes()\n        break\n      case 2:\n        m.signedPeerRecord = r.bytes()\n        break\n      default:\n        r.skipType(t & 7)\n        break\n    }\n  }\n  return m\n}\n", "import cjs from \"./rpc.cjs\"\n\nexport const {RPC} = cjs\n", "import type { RPC } from './message/rpc.js'\nimport type { MessageId, MsgIdStr, PeerIdStr, TopicStr, MsgIdToStrFn } from './types.js'\n\nexport type CacheEntry = MessageId & {\n  topic: TopicStr\n}\n\nexport type MessageCacheRecord = Pick<MessageCacheEntry, 'message' | 'originatingPeers'>\n\ninterface MessageCacheEntry {\n  message: RPC.IMessage\n  /**\n   * Tracks if the message has been validated by the app layer and thus forwarded\n   */\n  validated: boolean\n  /**\n   * Tracks peers that sent this message before it has been validated by the app layer\n   */\n  originatingPeers: Set<PeerIdStr>\n  /**\n   * For every message and peer the number of times this peer asked for the message\n   */\n  iwantCounts: Map<PeerIdStr, number>\n}\n\nexport class MessageCache {\n  msgs = new Map<MsgIdStr, MessageCacheEntry>()\n\n  msgIdToStrFn: MsgIdToStrFn\n\n  history: CacheEntry[][] = []\n\n  /** Track with accounting of messages in the mcache that are not yet validated */\n  notValidatedCount = 0\n\n  /**\n   * Holds history of messages in timebounded history arrays\n   */\n  constructor (\n    /**\n     * The number of indices in the cache history used for gossiping. That means that a message\n     * won't get gossiped anymore when shift got called `gossip` many times after inserting the\n     * message in the cache.\n     */\n    private readonly gossip: number,\n    historyCapacity: number,\n    msgIdToStrFn: MsgIdToStrFn\n  ) {\n    this.msgIdToStrFn = msgIdToStrFn\n    for (let i = 0; i < historyCapacity; i++) {\n      this.history[i] = []\n    }\n  }\n\n  get size (): number {\n    return this.msgs.size\n  }\n\n  /**\n   * Adds a message to the current window and the cache\n   * Returns true if the message is not known and is inserted in the cache\n   */\n  put (messageId: MessageId, msg: RPC.IMessage, validated = false): boolean {\n    const { msgIdStr } = messageId\n    // Don't add duplicate entries to the cache.\n    if (this.msgs.has(msgIdStr)) {\n      return false\n    }\n\n    this.msgs.set(msgIdStr, {\n      message: msg,\n      validated,\n      originatingPeers: new Set(),\n      iwantCounts: new Map()\n    })\n\n    this.history[0].push({ ...messageId, topic: msg.topic })\n\n    if (!validated) {\n      this.notValidatedCount++\n    }\n\n    return true\n  }\n\n  observeDuplicate (msgId: MsgIdStr, fromPeerIdStr: PeerIdStr): void {\n    const entry = this.msgs.get(msgId)\n\n    if (\n      (entry != null) &&\n      // if the message is already validated, we don't need to store extra peers sending us\n      // duplicates as the message has already been forwarded\n      !entry.validated\n    ) {\n      entry.originatingPeers.add(fromPeerIdStr)\n    }\n  }\n\n  /**\n   * Retrieves a message from the cache by its ID, if it is still present\n   */\n  get (msgId: Uint8Array): RPC.IMessage | undefined {\n    return this.msgs.get(this.msgIdToStrFn(msgId))?.message\n  }\n\n  /**\n   * Increases the iwant count for the given message by one and returns the message together\n   * with the iwant if the message exists.\n   */\n  getWithIWantCount (msgIdStr: string, p: string): { msg: RPC.IMessage, count: number } | null {\n    const msg = this.msgs.get(msgIdStr)\n    if (msg == null) {\n      return null\n    }\n\n    const count = (msg.iwantCounts.get(p) ?? 0) + 1\n    msg.iwantCounts.set(p, count)\n\n    return { msg: msg.message, count }\n  }\n\n  /**\n   * Retrieves a list of message IDs for a set of topics\n   */\n  getGossipIDs (topics: Set<string>): Map<string, Uint8Array[]> {\n    const msgIdsByTopic = new Map<string, Uint8Array[]>()\n    for (let i = 0; i < this.gossip; i++) {\n      this.history[i].forEach((entry) => {\n        const msg = this.msgs.get(entry.msgIdStr)\n        if ((msg?.validated ?? false) && topics.has(entry.topic)) {\n          let msgIds = msgIdsByTopic.get(entry.topic)\n          if (msgIds == null) {\n            msgIds = []\n            msgIdsByTopic.set(entry.topic, msgIds)\n          }\n          msgIds.push(entry.msgId)\n        }\n      })\n    }\n\n    return msgIdsByTopic\n  }\n\n  /**\n   * Gets a message with msgId and tags it as validated.\n   * This function also returns the known peers that have sent us this message. This is used to\n   * prevent us sending redundant messages to peers who have already propagated it.\n   */\n  validate (msgId: MsgIdStr): MessageCacheRecord | null {\n    const entry = this.msgs.get(msgId)\n    if (entry == null) {\n      return null\n    }\n\n    if (!entry.validated) {\n      this.notValidatedCount--\n    }\n\n    const { message, originatingPeers } = entry\n    entry.validated = true\n    // Clear the known peers list (after a message is validated, it is forwarded and we no\n    // longer need to store the originating peers).\n    entry.originatingPeers = new Set()\n    return { message, originatingPeers }\n  }\n\n  /**\n   * Shifts the current window, discarding messages older than this.history.length of the cache\n   */\n  shift (): void {\n    const lastCacheEntries = this.history[this.history.length - 1]\n    lastCacheEntries.forEach((cacheEntry) => {\n      const entry = this.msgs.get(cacheEntry.msgIdStr)\n      if (entry != null) {\n        this.msgs.delete(cacheEntry.msgIdStr)\n        if (!entry.validated) {\n          this.notValidatedCount--\n        }\n      }\n    })\n\n    this.history.pop()\n    this.history.unshift([])\n  }\n\n  remove (msgId: MsgIdStr): MessageCacheRecord | null {\n    const entry = this.msgs.get(msgId)\n    if (entry == null) {\n      return null\n    }\n\n    // Keep the message on the history vector, it will be dropped on a shift()\n    this.msgs.delete(msgId)\n    return entry\n  }\n}\n", "import { type Message, TopicValidatorResult, type PrivateKey, type PeerId } from '@libp2p/interface'\nimport type { RPC } from './message/rpc.js'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\nexport type MsgIdStr = string\nexport type PeerIdStr = string\nexport type TopicStr = string\nexport type IPStr = string\n\nexport interface AddrInfo {\n  id: PeerId\n  addrs: Multiaddr[]\n}\n\n/**\n * Compute a local non-spec'ed msg-id for faster de-duplication of seen messages.\n * Used exclusively for a local seen_cache\n */\nexport interface FastMsgIdFn { (msg: RPC.IMessage): string | number }\n\n/**\n * By default, gossipsub only provide a browser friendly function to convert Uint8Array message id to string.\n * Application could use this option to provide a more efficient function.\n */\nexport interface MsgIdToStrFn { (msgId: Uint8Array): string }\n\n/**\n * Compute spec'ed msg-id. Used for IHAVE / IWANT messages\n */\nexport interface MsgIdFn {\n  (msg: Message): Promise<Uint8Array> | Uint8Array\n}\n\nexport interface DataTransform {\n  /**\n   * Takes the data published by peers on a topic and transforms the data.\n   * Should be the reverse of outboundTransform(). Example:\n   * - `inboundTransform()`: decompress snappy payload\n   * - `outboundTransform()`: compress snappy payload\n   */\n  inboundTransform(topic: TopicStr, data: Uint8Array): Uint8Array\n\n  /**\n   * Takes the data to be published (a topic and associated data) transforms the data. The\n   * transformed data will then be used to create a `RawGossipsubMessage` to be sent to peers.\n   */\n  outboundTransform(topic: TopicStr, data: Uint8Array): Uint8Array\n}\n\nexport enum SignaturePolicy {\n  /**\n   * On the producing side:\n   * - Build messages with the signature, key (from may be enough for certain inlineable public key types), from and seqno fields.\n   *\n   * On the consuming side:\n   * - Enforce the fields to be present, reject otherwise.\n   * - Propagate only if the fields are valid and signature can be verified, reject otherwise.\n   */\n  StrictSign = 'StrictSign',\n  /**\n   * On the producing side:\n   * - Build messages without the signature, key, from and seqno fields.\n   * - The corresponding protobuf key-value pairs are absent from the marshalled message, not just empty.\n   *\n   * On the consuming side:\n   * - Enforce the fields to be absent, reject otherwise.\n   * - Propagate only if the fields are absent, reject otherwise.\n   * - A message_id function will not be able to use the above fields, and should instead rely on the data field. A commonplace strategy is to calculate a hash.\n   */\n  StrictNoSign = 'StrictNoSign'\n}\n\nexport interface PublishOpts {\n  allowPublishToZeroPeers?: boolean\n  ignoreDuplicatePublishError?: boolean\n  /** serialize message once and send to all peers without control messages */\n  batchPublish?: boolean\n}\n\nexport enum PublishConfigType {\n  Signing,\n  Anonymous\n}\n\nexport type PublishConfig =\n  | {\n    type: PublishConfigType.Signing\n    author: PeerId\n    key: Uint8Array\n    privateKey: PrivateKey\n  }\n  | { type: PublishConfigType.Anonymous }\n\nexport type RejectReasonObj =\n  | { reason: RejectReason.Error, error: ValidateError }\n  | { reason: Exclude<RejectReason, RejectReason.Error> }\n\nexport enum RejectReason {\n  /**\n   * The message failed the configured validation during decoding.\n   * SelfOrigin is considered a ValidationError\n   */\n  Error = 'error',\n  /**\n   * Custom validator fn reported status IGNORE.\n   */\n  Ignore = 'ignore',\n  /**\n   * Custom validator fn reported status REJECT.\n   */\n  Reject = 'reject',\n  /**\n   * The peer that sent the message OR the source from field is blacklisted.\n   * Causes messages to be ignored, not penalized, neither do score record creation.\n   */\n  Blacklisted = 'blacklisted'\n}\n\nexport enum ValidateError {\n  /// The message has an invalid signature,\n  InvalidSignature = 'invalid_signature',\n  /// The sequence number was the incorrect size\n  InvalidSeqno = 'invalid_seqno',\n  /// The PeerId was invalid\n  InvalidPeerId = 'invalid_peerid',\n  /// Signature existed when validation has been sent to\n  /// [`crate::behaviour::MessageAuthenticity::Anonymous`].\n  SignaturePresent = 'signature_present',\n  /// Sequence number existed when validation has been sent to\n  /// [`crate::behaviour::MessageAuthenticity::Anonymous`].\n  SeqnoPresent = 'seqno_present',\n  /// Message source existed when validation has been sent to\n  /// [`crate::behaviour::MessageAuthenticity::Anonymous`].\n  FromPresent = 'from_present',\n  /// The data transformation failed.\n  TransformFailed = 'transform_failed'\n}\n\nexport enum MessageStatus {\n  duplicate = 'duplicate',\n  invalid = 'invalid',\n  valid = 'valid'\n}\n\n/**\n * Store both Uint8Array and string message id so that we don't have to convert data between the two.\n * See https://github.com/ChainSafe/js-libp2p-gossipsub/pull/274\n */\nexport interface MessageId {\n  msgId: Uint8Array\n  msgIdStr: MsgIdStr\n}\n\n/**\n * Typesafe conversion of MessageAcceptance -> RejectReason. TS ensures all values covered\n */\nexport function rejectReasonFromAcceptance (\n  acceptance: Exclude<TopicValidatorResult, TopicValidatorResult.Accept>\n): RejectReason.Ignore | RejectReason.Reject {\n  switch (acceptance) {\n    case TopicValidatorResult.Ignore:\n      return RejectReason.Ignore\n    case TopicValidatorResult.Reject:\n      return RejectReason.Reject\n    default:\n      throw new Error('Unreachable')\n  }\n}\n", "import { TopicValidatorResult } from '@libp2p/interface'\nimport {\n  MessageStatus,\n  type PeerIdStr,\n  RejectReason,\n  type RejectReasonObj,\n  type TopicStr,\n  type ValidateError\n} from './types.js'\nimport type { IRPC } from './message/rpc.js'\nimport type { PeerScoreThresholds } from './score/peer-score-thresholds.js'\n\n/** Topic label as provided in `topicStrToLabel` */\nexport type TopicLabel = string\nexport type TopicStrToLabel = Map<TopicStr, TopicLabel>\n\nexport enum MessageSource {\n  forward = 'forward',\n  publish = 'publish'\n}\n\ntype NoLabels = Record<string, never>\ntype LabelsGeneric = Record<string, string | number>\ntype LabelKeys<Labels extends LabelsGeneric> = Extract<keyof Labels, string>\ninterface CollectFn<Labels extends LabelsGeneric> { (metric: Gauge<Labels>): void }\n\nexport interface Gauge<Labels extends LabelsGeneric = NoLabels> {\n  inc: NoLabels extends Labels ? (value?: number) => void : (labels: Labels, value?: number) => void\n  set: NoLabels extends Labels ? (value: number) => void : (labels: Labels, value: number) => void\n\n  addCollect(collectFn: CollectFn<Labels>): void\n}\n\nexport interface Histogram<Labels extends LabelsGeneric = NoLabels> {\n  startTimer(): () => void\n\n  observe: NoLabels extends Labels ? (value: number) => void : (labels: Labels, value: number) => void\n\n  reset(): void\n}\n\nexport interface AvgMinMax<Labels extends LabelsGeneric = NoLabels> {\n  set: NoLabels extends Labels ? (values: number[]) => void : (labels: Labels, values: number[]) => void\n}\n\nexport type GaugeConfig<Labels extends LabelsGeneric> = {\n  name: string\n  help: string\n} & (NoLabels extends Labels ? { labelNames?: never } : { labelNames: [LabelKeys<Labels>, ...Array<LabelKeys<Labels>>] })\n\nexport type HistogramConfig<Labels extends LabelsGeneric> = GaugeConfig<Labels> & {\n  buckets?: number[]\n}\n\nexport type AvgMinMaxConfig<Labels extends LabelsGeneric> = GaugeConfig<Labels>\n\nexport interface MetricsRegister {\n  gauge<Labels extends LabelsGeneric = NoLabels>(config: GaugeConfig<Labels>): Gauge<Labels>\n  histogram<Labels extends LabelsGeneric = NoLabels>(config: HistogramConfig<Labels>): Histogram<Labels>\n  avgMinMax<Labels extends LabelsGeneric = NoLabels>(config: AvgMinMaxConfig<Labels>): AvgMinMax<Labels>\n}\n\nexport enum InclusionReason {\n  /** Peer was a fanaout peer. */\n  Fanout = 'fanout',\n  /** Included from random selection. */\n  Random = 'random',\n  /** Peer subscribed. */\n  Subscribed = 'subscribed',\n  /** On heartbeat, peer was included to fill the outbound quota. */\n  Outbound = 'outbound',\n  /** On heartbeat, not enough peers in mesh */\n  NotEnough = 'not_enough',\n  /** On heartbeat opportunistic grafting due to low mesh score */\n  Opportunistic = 'opportunistic'\n}\n\n/// Reasons why a peer was removed from the mesh.\nexport enum ChurnReason {\n  /// Peer disconnected.\n  Dc = 'disconnected',\n  /// Peer had a bad score.\n  BadScore = 'bad_score',\n  /// Peer sent a PRUNE.\n  Prune = 'prune',\n  /// Too many peers.\n  Excess = 'excess'\n}\n\n/// Kinds of reasons a peer's score has been penalized\nexport enum ScorePenalty {\n  /// A peer grafted before waiting the back-off time.\n  GraftBackoff = 'graft_backoff',\n  /// A Peer did not respond to an IWANT request in time.\n  BrokenPromise = 'broken_promise',\n  /// A Peer did not send enough messages as expected.\n  MessageDeficit = 'message_deficit',\n  /// Too many peers under one IP address.\n  IPColocation = 'IP_colocation'\n}\n\nexport enum IHaveIgnoreReason {\n  LowScore = 'low_score',\n  MaxIhave = 'max_ihave',\n  MaxIasked = 'max_iasked'\n}\n\nexport enum ScoreThreshold {\n  graylist = 'graylist',\n  publish = 'publish',\n  gossip = 'gossip',\n  mesh = 'mesh'\n}\n\nexport type PeersByScoreThreshold = Record<ScoreThreshold, number>\n\nexport interface ToSendGroupCount {\n  direct: number\n  floodsub: number\n  mesh: number\n  fanout: number\n}\n\nexport interface ToAddGroupCount {\n  fanout: number\n  random: number\n}\n\nexport type PromiseDeliveredStats =\n  | { expired: false, requestedCount: number, maxDeliverMs: number }\n  | { expired: true, maxDeliverMs: number }\n\nexport interface TopicScoreWeights<T> { p1w: T, p2w: T, p3w: T, p3bw: T, p4w: T }\nexport interface ScoreWeights<T> {\n  byTopic: Map<TopicLabel, TopicScoreWeights<T>>\n  p5w: T\n  p6w: T\n  p7w: T\n  score: T\n}\n\nexport type Metrics = ReturnType<typeof getMetrics>\n\n/**\n * A collection of metrics used throughout the Gossipsub behaviour.\n * NOTE: except for special reasons, do not add more than 1 label for frequent metrics,\n * there's a performance penalty as of June 2023.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/explicit-function-return-type\nexport function getMetrics (\n  register: MetricsRegister,\n  topicStrToLabel: TopicStrToLabel,\n  opts: { gossipPromiseExpireSec: number, behaviourPenaltyThreshold: number, maxMeshMessageDeliveriesWindowSec: number }\n) {\n  // Using function style instead of class to prevent having to re-declare all MetricsPrometheus types.\n\n  return {\n    /* Metrics for static config */\n    protocolsEnabled: register.gauge<{ protocol: string }>({\n      name: 'gossipsub_protocol',\n      help: 'Status of enabled protocols',\n      labelNames: ['protocol']\n    }),\n\n    /* Metrics per known topic */\n    /**\n     * Status of our subscription to this topic. This metric allows analyzing other topic metrics\n     * filtered by our current subscription status.\n     * = rust-libp2p `topic_subscription_status` */\n    topicSubscriptionStatus: register.gauge<{ topicStr: TopicStr }>({\n      name: 'gossipsub_topic_subscription_status',\n      help: 'Status of our subscription to this topic',\n      labelNames: ['topicStr']\n    }),\n    /** Number of peers subscribed to each topic. This allows us to analyze a topic's behaviour\n     * regardless of our subscription status. */\n    topicPeersCount: register.gauge<{ topicStr: TopicStr }>({\n      name: 'gossipsub_topic_peer_count',\n      help: 'Number of peers subscribed to each topic',\n      labelNames: ['topicStr']\n    }),\n\n    /* Metrics regarding mesh state */\n    /**\n     * Number of peers in our mesh. This metric should be updated with the count of peers for a\n     * topic in the mesh regardless of inclusion and churn events.\n     * = rust-libp2p `mesh_peer_counts` */\n    meshPeerCounts: register.gauge<{ topicStr: TopicStr }>({\n      name: 'gossipsub_mesh_peer_count',\n      help: 'Number of peers in our mesh',\n      labelNames: ['topicStr']\n    }),\n    /**\n     * Number of times we include peers in a topic mesh for different reasons.\n     * = rust-libp2p `mesh_peer_inclusion_events` */\n    meshPeerInclusionEventsFanout: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_mesh_peer_inclusion_events_fanout_total',\n      help: 'Number of times we include peers in a topic mesh for fanout reasons',\n      labelNames: ['topic']\n    }),\n    meshPeerInclusionEventsRandom: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_mesh_peer_inclusion_events_random_total',\n      help: 'Number of times we include peers in a topic mesh for random reasons',\n      labelNames: ['topic']\n    }),\n    meshPeerInclusionEventsSubscribed: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_mesh_peer_inclusion_events_subscribed_total',\n      help: 'Number of times we include peers in a topic mesh for subscribed reasons',\n      labelNames: ['topic']\n    }),\n    meshPeerInclusionEventsOutbound: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_mesh_peer_inclusion_events_outbound_total',\n      help: 'Number of times we include peers in a topic mesh for outbound reasons',\n      labelNames: ['topic']\n    }),\n    meshPeerInclusionEventsNotEnough: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_mesh_peer_inclusion_events_not_enough_total',\n      help: 'Number of times we include peers in a topic mesh for not_enough reasons',\n      labelNames: ['topic']\n    }),\n    meshPeerInclusionEventsOpportunistic: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_mesh_peer_inclusion_events_opportunistic_total',\n      help: 'Number of times we include peers in a topic mesh for opportunistic reasons',\n      labelNames: ['topic']\n    }),\n    meshPeerInclusionEventsUnknown: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_mesh_peer_inclusion_events_unknown_total',\n      help: 'Number of times we include peers in a topic mesh for unknown reasons',\n      labelNames: ['topic']\n    }),\n    /**\n     * Number of times we remove peers in a topic mesh for different reasons.\n     * = rust-libp2p `mesh_peer_churn_events` */\n    meshPeerChurnEventsDisconnected: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_peer_churn_events_disconnected_total',\n      help: 'Number of times we remove peers in a topic mesh for disconnected reasons',\n      labelNames: ['topic']\n    }),\n    meshPeerChurnEventsBadScore: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_peer_churn_events_bad_score_total',\n      help: 'Number of times we remove peers in a topic mesh for bad_score reasons',\n      labelNames: ['topic']\n    }),\n    meshPeerChurnEventsPrune: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_peer_churn_events_prune_total',\n      help: 'Number of times we remove peers in a topic mesh for prune reasons',\n      labelNames: ['topic']\n    }),\n    meshPeerChurnEventsExcess: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_peer_churn_events_excess_total',\n      help: 'Number of times we remove peers in a topic mesh for excess reasons',\n      labelNames: ['topic']\n    }),\n    meshPeerChurnEventsUnknown: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_peer_churn_events_unknown_total',\n      help: 'Number of times we remove peers in a topic mesh for unknown reasons',\n      labelNames: ['topic']\n    }),\n\n    /* General Metrics */\n    /**\n     * Gossipsub supports floodsub, gossipsub v1.0 and gossipsub v1.1. Peers are classified based\n     * on which protocol they support. This metric keeps track of the number of peers that are\n     * connected of each type. */\n    peersPerProtocol: register.gauge<{ protocol: string }>({\n      name: 'gossipsub_peers_per_protocol_count',\n      help: 'Peers connected for each topic',\n      labelNames: ['protocol']\n    }),\n    /** The time it takes to complete one iteration of the heartbeat. */\n    heartbeatDuration: register.histogram({\n      name: 'gossipsub_heartbeat_duration_seconds',\n      help: 'The time it takes to complete one iteration of the heartbeat',\n      // Should take <10ms, over 1s it's a huge issue that needs debugging, since a heartbeat will be cancelled\n      buckets: [0.01, 0.1, 1]\n    }),\n    /** Heartbeat run took longer than heartbeat interval so next is skipped */\n    heartbeatSkipped: register.gauge({\n      name: 'gossipsub_heartbeat_skipped',\n      help: 'Heartbeat run took longer than heartbeat interval so next is skipped'\n    }),\n\n    /**\n     * Message validation results for each topic.\n     * Invalid == Reject?\n     * = rust-libp2p `invalid_messages`, `accepted_messages`, `ignored_messages`, `rejected_messages` */\n    acceptedMessagesTotal: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_accepted_messages_total',\n      help: 'Total accepted messages for each topic',\n      labelNames: ['topic']\n    }),\n    ignoredMessagesTotal: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_ignored_messages_total',\n      help: 'Total ignored messages for each topic',\n      labelNames: ['topic']\n    }),\n    rejectedMessagesTotal: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_rejected_messages_total',\n      help: 'Total rejected messages for each topic',\n      labelNames: ['topic']\n    }),\n    unknownValidationResultsTotal: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_unknown_validation_results_total',\n      help: 'Total unknown validation results for each topic',\n      labelNames: ['topic']\n    }),\n    /**\n     * When the user validates a message, it tries to re propagate it to its mesh peers. If the\n     * message expires from the memcache before it can be validated, we count this a cache miss\n     * and it is an indicator that the memcache size should be increased.\n     * = rust-libp2p `mcache_misses` */\n    asyncValidationMcacheHit: register.gauge<{ hit: 'hit' | 'miss' }>({\n      name: 'gossipsub_async_validation_mcache_hit_total',\n      help: 'Async validation result reported by the user layer',\n      labelNames: ['hit']\n    }),\n\n    asyncValidationDelayFromFirstSeenSec: register.histogram({\n      name: 'gossipsub_async_validation_delay_from_first_seen',\n      help: 'Async validation report delay from first seen in second',\n      buckets: [0.01, 0.03, 0.1, 0.3, 1, 3, 10]\n    }),\n\n    asyncValidationUnknownFirstSeen: register.gauge({\n      name: 'gossipsub_async_validation_unknown_first_seen_count_total',\n      help: 'Async validation report unknown first seen value for message'\n    }),\n\n    // peer stream\n    peerReadStreamError: register.gauge({\n      name: 'gossipsub_peer_read_stream_err_count_total',\n      help: 'Peer read stream error'\n    }),\n\n    // RPC outgoing. Track byte length + data structure sizes\n    rpcRecvBytes: register.gauge({ name: 'gossipsub_rpc_recv_bytes_total', help: 'RPC recv' }),\n    rpcRecvCount: register.gauge({ name: 'gossipsub_rpc_recv_count_total', help: 'RPC recv' }),\n    rpcRecvSubscription: register.gauge({ name: 'gossipsub_rpc_recv_subscription_total', help: 'RPC recv' }),\n    rpcRecvMessage: register.gauge({ name: 'gossipsub_rpc_recv_message_total', help: 'RPC recv' }),\n    rpcRecvControl: register.gauge({ name: 'gossipsub_rpc_recv_control_total', help: 'RPC recv' }),\n    rpcRecvIHave: register.gauge({ name: 'gossipsub_rpc_recv_ihave_total', help: 'RPC recv' }),\n    rpcRecvIWant: register.gauge({ name: 'gossipsub_rpc_recv_iwant_total', help: 'RPC recv' }),\n    rpcRecvGraft: register.gauge({ name: 'gossipsub_rpc_recv_graft_total', help: 'RPC recv' }),\n    rpcRecvPrune: register.gauge({ name: 'gossipsub_rpc_recv_prune_total', help: 'RPC recv' }),\n    rpcDataError: register.gauge({ name: 'gossipsub_rpc_data_err_count_total', help: 'RPC data error' }),\n    rpcRecvError: register.gauge({ name: 'gossipsub_rpc_recv_err_count_total', help: 'RPC recv error' }),\n\n    /** Total count of RPC dropped because acceptFrom() == false */\n    rpcRecvNotAccepted: register.gauge({\n      name: 'gossipsub_rpc_rcv_not_accepted_total',\n      help: 'Total count of RPC dropped because acceptFrom() == false'\n    }),\n\n    // RPC incoming. Track byte length + data structure sizes\n    rpcSentBytes: register.gauge({ name: 'gossipsub_rpc_sent_bytes_total', help: 'RPC sent' }),\n    rpcSentCount: register.gauge({ name: 'gossipsub_rpc_sent_count_total', help: 'RPC sent' }),\n    rpcSentSubscription: register.gauge({ name: 'gossipsub_rpc_sent_subscription_total', help: 'RPC sent' }),\n    rpcSentMessage: register.gauge({ name: 'gossipsub_rpc_sent_message_total', help: 'RPC sent' }),\n    rpcSentControl: register.gauge({ name: 'gossipsub_rpc_sent_control_total', help: 'RPC sent' }),\n    rpcSentIHave: register.gauge({ name: 'gossipsub_rpc_sent_ihave_total', help: 'RPC sent' }),\n    rpcSentIWant: register.gauge({ name: 'gossipsub_rpc_sent_iwant_total', help: 'RPC sent' }),\n    rpcSentGraft: register.gauge({ name: 'gossipsub_rpc_sent_graft_total', help: 'RPC sent' }),\n    rpcSentPrune: register.gauge({ name: 'gossipsub_rpc_sent_prune_total', help: 'RPC sent' }),\n\n    // publish message. Track peers sent to and bytes\n    /** Total count of msg published by topic */\n    msgPublishCount: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_msg_publish_count_total',\n      help: 'Total count of msg published by topic',\n      labelNames: ['topic']\n    }),\n    /** Total count of peers that we publish a msg to */\n    msgPublishPeersByTopic: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_msg_publish_peers_total',\n      help: 'Total count of peers that we publish a msg to',\n      labelNames: ['topic']\n    }),\n    /** Total count of peers (by group) that we publish a msg to */\n    directPeersPublishedTotal: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_direct_peers_published_total',\n      help: 'Total direct peers that we publish a msg to',\n      labelNames: ['topic']\n    }),\n    floodsubPeersPublishedTotal: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_floodsub_peers_published_total',\n      help: 'Total floodsub peers that we publish a msg to',\n      labelNames: ['topic']\n    }),\n    meshPeersPublishedTotal: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_mesh_peers_published_total',\n      help: 'Total mesh peers that we publish a msg to',\n      labelNames: ['topic']\n    }),\n    fanoutPeersPublishedTotal: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_fanout_peers_published_total',\n      help: 'Total fanout peers that we publish a msg to',\n      labelNames: ['topic']\n    }),\n    /** Total count of msg publish data.length bytes */\n    msgPublishBytes: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_msg_publish_bytes_total',\n      help: 'Total count of msg publish data.length bytes',\n      labelNames: ['topic']\n    }),\n    /** Total time in seconds to publish a message */\n    msgPublishTime: register.histogram<{ topic: TopicLabel }>({\n      name: 'gossipsub_msg_publish_seconds',\n      help: 'Total time in seconds to publish a message',\n      buckets: [0.001, 0.002, 0.005, 0.01, 0.1, 0.5, 1],\n      labelNames: ['topic']\n    }),\n\n    /** Total count of msg forwarded by topic */\n    msgForwardCount: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_msg_forward_count_total',\n      help: 'Total count of msg forwarded by topic',\n      labelNames: ['topic']\n    }),\n    /** Total count of peers that we forward a msg to */\n    msgForwardPeers: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_msg_forward_peers_total',\n      help: 'Total count of peers that we forward a msg to',\n      labelNames: ['topic']\n    }),\n\n    /** Total count of recv msgs before any validation */\n    msgReceivedPreValidation: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_msg_received_prevalidation_total',\n      help: 'Total count of recv msgs before any validation',\n      labelNames: ['topic']\n    }),\n    /** Total count of recv msgs error */\n    msgReceivedError: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_msg_received_error_total',\n      help: 'Total count of recv msgs error',\n      labelNames: ['topic']\n    }),\n    /** Tracks distribution of recv msgs by duplicate, invalid, valid */\n    prevalidationInvalidTotal: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_pre_validation_invalid_total',\n      help: 'Total count of invalid messages received',\n      labelNames: ['topic']\n    }),\n    prevalidationValidTotal: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_pre_validation_valid_total',\n      help: 'Total count of valid messages received',\n      labelNames: ['topic']\n    }),\n    prevalidationDuplicateTotal: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_pre_validation_duplicate_total',\n      help: 'Total count of duplicate messages received',\n      labelNames: ['topic']\n    }),\n    prevalidationUnknownTotal: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_pre_validation_unknown_status_total',\n      help: 'Total count of unknown_status messages received',\n      labelNames: ['topic']\n    }),\n    /** Tracks specific reason of invalid */\n    msgReceivedInvalid: register.gauge<{ error: RejectReason | ValidateError }>({\n      name: 'gossipsub_msg_received_invalid_total',\n      help: 'Tracks specific reason of invalid',\n      labelNames: ['error']\n    }),\n    msgReceivedInvalidByTopic: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_msg_received_invalid_by_topic_total',\n      help: 'Tracks specific invalid message by topic',\n      labelNames: ['topic']\n    }),\n    /** Track duplicate message delivery time */\n    duplicateMsgDeliveryDelay: register.histogram<{ topic: TopicLabel }>({\n      name: 'gossisub_duplicate_msg_delivery_delay_seconds',\n      help: 'Time since the 1st duplicated message validated',\n      labelNames: ['topic'],\n      buckets: [\n        0.25 * opts.maxMeshMessageDeliveriesWindowSec,\n        0.5 * opts.maxMeshMessageDeliveriesWindowSec,\n        Number(opts.maxMeshMessageDeliveriesWindowSec),\n        2 * opts.maxMeshMessageDeliveriesWindowSec,\n        4 * opts.maxMeshMessageDeliveriesWindowSec\n      ]\n    }),\n    /** Total count of late msg delivery total by topic */\n    duplicateMsgLateDelivery: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossisub_duplicate_msg_late_delivery_total',\n      help: 'Total count of late duplicate message delivery by topic, which triggers P3 penalty',\n      labelNames: ['topic']\n    }),\n\n    duplicateMsgIgnored: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossisub_ignored_published_duplicate_msgs_total',\n      help: 'Total count of published duplicate message ignored by topic',\n      labelNames: ['topic']\n    }),\n\n    /* Metrics related to scoring */\n    /** Total times score() is called */\n    scoreFnCalls: register.gauge({\n      name: 'gossipsub_score_fn_calls_total',\n      help: 'Total times score() is called'\n    }),\n    /** Total times score() call actually computed computeScore(), no cache */\n    scoreFnRuns: register.gauge({\n      name: 'gossipsub_score_fn_runs_total',\n      help: 'Total times score() call actually computed computeScore(), no cache'\n    }),\n    scoreCachedDelta: register.histogram({\n      name: 'gossipsub_score_cache_delta',\n      help: 'Delta of score between cached values that expired',\n      buckets: [10, 100, 1000]\n    }),\n    /** Current count of peers by score threshold */\n    peersByScoreThreshold: register.gauge<{ threshold: ScoreThreshold }>({\n      name: 'gossipsub_peers_by_score_threshold_count',\n      help: 'Current count of peers by score threshold',\n      labelNames: ['threshold']\n    }),\n    score: register.avgMinMax({\n      name: 'gossipsub_score',\n      help: 'Avg min max of gossip scores'\n    }),\n    /**\n     * Separate score weights\n     * Need to use 2-label metrics in this case to debug the score weights\n     **/\n    scoreWeights: register.avgMinMax<{ topic?: TopicLabel, p: string }>({\n      name: 'gossipsub_score_weights',\n      help: 'Separate score weights',\n      labelNames: ['topic', 'p']\n    }),\n    /** Histogram of the scores for each mesh topic. */\n    // TODO: Not implemented\n    scorePerMesh: register.avgMinMax<{ topic: TopicLabel }>({\n      name: 'gossipsub_score_per_mesh',\n      help: 'Histogram of the scores for each mesh topic',\n      labelNames: ['topic']\n    }),\n    /** A counter of the kind of penalties being applied to peers. */\n    // TODO: Not fully implemented\n    scoringPenalties: register.gauge<{ penalty: ScorePenalty }>({\n      name: 'gossipsub_scoring_penalties_total',\n      help: 'A counter of the kind of penalties being applied to peers',\n      labelNames: ['penalty']\n    }),\n    behaviourPenalty: register.histogram({\n      name: 'gossipsub_peer_stat_behaviour_penalty',\n      help: 'Current peer stat behaviour_penalty at each scrape',\n      buckets: [\n        0.25 * opts.behaviourPenaltyThreshold,\n        0.5 * opts.behaviourPenaltyThreshold,\n        Number(opts.behaviourPenaltyThreshold),\n        2 * opts.behaviourPenaltyThreshold,\n        4 * opts.behaviourPenaltyThreshold\n      ]\n    }),\n\n    // TODO:\n    // - iasked per peer (on heartbeat)\n    // - when promise is resolved, track messages from promises\n\n    /** Total received IHAVE messages that we ignore for some reason */\n    ihaveRcvIgnored: register.gauge<{ reason: IHaveIgnoreReason }>({\n      name: 'gossipsub_ihave_rcv_ignored_total',\n      help: 'Total received IHAVE messages that we ignore for some reason',\n      labelNames: ['reason']\n    }),\n    /** Total received IHAVE messages by topic */\n    ihaveRcvMsgids: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_ihave_rcv_msgids_total',\n      help: 'Total received IHAVE messages by topic',\n      labelNames: ['topic']\n    }),\n    /**\n     * Total messages per topic we don't have. Not actual requests.\n     * The number of times we have decided that an IWANT control message is required for this\n     * topic. A very high metric might indicate an underperforming network.\n     * = rust-libp2p `topic_iwant_msgs` */\n    ihaveRcvNotSeenMsgids: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_ihave_rcv_not_seen_msgids_total',\n      help: 'Total messages per topic we do not have, not actual requests',\n      labelNames: ['topic']\n    }),\n\n    /** Total received IWANT messages by topic */\n    iwantRcvMsgids: register.gauge<{ topic: TopicLabel }>({\n      name: 'gossipsub_iwant_rcv_msgids_total',\n      help: 'Total received IWANT messages by topic',\n      labelNames: ['topic']\n    }),\n    /** Total requested messageIDs that we don't have */\n    iwantRcvDonthaveMsgids: register.gauge({\n      name: 'gossipsub_iwant_rcv_dont_have_msgids_total',\n      help: 'Total requested messageIDs that we do not have'\n    }),\n    iwantPromiseStarted: register.gauge({\n      name: 'gossipsub_iwant_promise_sent_total',\n      help: 'Total count of started IWANT promises'\n    }),\n    /** Total count of resolved IWANT promises */\n    iwantPromiseResolved: register.gauge({\n      name: 'gossipsub_iwant_promise_resolved_total',\n      help: 'Total count of resolved IWANT promises'\n    }),\n    /** Total count of resolved IWANT promises from duplicate messages */\n    iwantPromiseResolvedFromDuplicate: register.gauge({\n      name: 'gossipsub_iwant_promise_resolved_from_duplicate_total',\n      help: 'Total count of resolved IWANT promises from duplicate messages'\n    }),\n    /** Total count of peers we have asked IWANT promises that are resolved */\n    iwantPromiseResolvedPeers: register.gauge({\n      name: 'gossipsub_iwant_promise_resolved_peers',\n      help: 'Total count of peers we have asked IWANT promises that are resolved'\n    }),\n    iwantPromiseBroken: register.gauge({\n      name: 'gossipsub_iwant_promise_broken',\n      help: 'Total count of broken IWANT promises'\n    }),\n    iwantMessagePruned: register.gauge({\n      name: 'gossipsub_iwant_message_pruned',\n      help: 'Total count of pruned IWANT messages'\n    }),\n    /** Histogram of delivery time of resolved IWANT promises */\n    iwantPromiseDeliveryTime: register.histogram({\n      name: 'gossipsub_iwant_promise_delivery_seconds',\n      help: 'Histogram of delivery time of resolved IWANT promises',\n      buckets: [\n        0.5 * opts.gossipPromiseExpireSec,\n        Number(opts.gossipPromiseExpireSec),\n        2 * opts.gossipPromiseExpireSec,\n        4 * opts.gossipPromiseExpireSec\n      ]\n    }),\n    iwantPromiseUntracked: register.gauge({\n      name: 'gossip_iwant_promise_untracked',\n      help: 'Total count of untracked IWANT promise'\n    }),\n    /** Backoff time */\n    connectedPeersBackoffSec: register.histogram({\n      name: 'gossipsub_connected_peers_backoff_seconds',\n      help: 'Backoff time in seconds',\n      // Using 1 seconds as minimum as that's close to the heartbeat duration, no need for more resolution.\n      // As per spec, backoff times are 10 seconds for UnsubscribeBackoff and 60 seconds for PruneBackoff.\n      // Higher values of 60 seconds should not occur, but we add 120 seconds just in case\n      // https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/gossipsub-v1.1.md#overview-of-new-parameters\n      buckets: [1, 2, 4, 10, 20, 60, 120]\n    }),\n\n    /* Data structure sizes */\n    /** Unbounded cache sizes */\n    cacheSize: register.gauge<{ cache: string }>({\n      name: 'gossipsub_cache_size',\n      help: 'Unbounded cache sizes',\n      labelNames: ['cache']\n    }),\n    /** Current mcache msg count */\n    mcacheSize: register.gauge({\n      name: 'gossipsub_mcache_size',\n      help: 'Current mcache msg count'\n    }),\n    mcacheNotValidatedCount: register.gauge({\n      name: 'gossipsub_mcache_not_validated_count',\n      help: 'Current mcache msg count not validated'\n    }),\n\n    fastMsgIdCacheCollision: register.gauge({\n      name: 'gossipsub_fastmsgid_cache_collision_total',\n      help: 'Total count of key collisions on fastmsgid cache put'\n    }),\n\n    newConnectionCount: register.gauge<{ status: string }>({\n      name: 'gossipsub_new_connection_total',\n      help: 'Total new connection by status',\n      labelNames: ['status']\n    }),\n\n    topicStrToLabel,\n\n    toTopic (topicStr: TopicStr): TopicLabel {\n      return this.topicStrToLabel.get(topicStr) ?? topicStr\n    },\n\n    /** We joined a topic */\n    onJoin (topicStr: TopicStr): void {\n      this.topicSubscriptionStatus.set({ topicStr }, 1)\n      this.meshPeerCounts.set({ topicStr }, 0) // Reset count\n    },\n\n    /** We left a topic */\n    onLeave (topicStr: TopicStr): void {\n      this.topicSubscriptionStatus.set({ topicStr }, 0)\n      this.meshPeerCounts.set({ topicStr }, 0) // Reset count\n    },\n\n    /** Register the inclusion of peers in our mesh due to some reason. */\n    onAddToMesh (topicStr: TopicStr, reason: InclusionReason, count: number): void {\n      const topic = this.toTopic(topicStr)\n      switch (reason) {\n        case InclusionReason.Fanout:\n          this.meshPeerInclusionEventsFanout.inc({ topic }, count)\n          break\n        case InclusionReason.Random:\n          this.meshPeerInclusionEventsRandom.inc({ topic }, count)\n          break\n        case InclusionReason.Subscribed:\n          this.meshPeerInclusionEventsSubscribed.inc({ topic }, count)\n          break\n        case InclusionReason.Outbound:\n          this.meshPeerInclusionEventsOutbound.inc({ topic }, count)\n          break\n        case InclusionReason.NotEnough:\n          this.meshPeerInclusionEventsNotEnough.inc({ topic }, count)\n          break\n        case InclusionReason.Opportunistic:\n          this.meshPeerInclusionEventsOpportunistic.inc({ topic }, count)\n          break\n        default:\n          this.meshPeerInclusionEventsUnknown.inc({ topic }, count)\n          break\n      }\n    },\n\n    /** Register the removal of peers in our mesh due to some reason */\n    // - remove_peer_from_mesh()\n    // - heartbeat() Churn::BadScore\n    // - heartbeat() Churn::Excess\n    // - on_disconnect() Churn::Ds\n    onRemoveFromMesh (topicStr: TopicStr, reason: ChurnReason, count: number): void {\n      const topic = this.toTopic(topicStr)\n      switch (reason) {\n        case ChurnReason.Dc:\n          this.meshPeerChurnEventsDisconnected.inc({ topic }, count)\n          break\n        case ChurnReason.BadScore:\n          this.meshPeerChurnEventsBadScore.inc({ topic }, count)\n          break\n        case ChurnReason.Prune:\n          this.meshPeerChurnEventsPrune.inc({ topic }, count)\n          break\n        case ChurnReason.Excess:\n          this.meshPeerChurnEventsExcess.inc({ topic }, count)\n          break\n        default:\n          this.meshPeerChurnEventsUnknown.inc({ topic }, count)\n          break\n      }\n    },\n\n    /**\n     * Update validation result to metrics\n     *\n     * @param messageRecord - null means the message's mcache record was not known at the time of acceptance report\n     */\n    onReportValidation (\n      messageRecord: { message: { topic: TopicStr } } | null,\n      acceptance: TopicValidatorResult,\n      firstSeenTimestampMs: number | null\n    ): void {\n      this.asyncValidationMcacheHit.inc({ hit: messageRecord != null ? 'hit' : 'miss' })\n\n      if (messageRecord != null) {\n        const topic = this.toTopic(messageRecord.message.topic)\n        switch (acceptance) {\n          case TopicValidatorResult.Accept:\n            this.acceptedMessagesTotal.inc({ topic })\n            break\n          case TopicValidatorResult.Ignore:\n            this.ignoredMessagesTotal.inc({ topic })\n            break\n          case TopicValidatorResult.Reject:\n            this.rejectedMessagesTotal.inc({ topic })\n            break\n          default:\n            this.unknownValidationResultsTotal.inc({ topic })\n            break\n        }\n      }\n\n      if (firstSeenTimestampMs != null) {\n        this.asyncValidationDelayFromFirstSeenSec.observe((Date.now() - firstSeenTimestampMs) / 1000)\n      } else {\n        this.asyncValidationUnknownFirstSeen.inc()\n      }\n    },\n\n    /**\n     * - in handle_graft() Penalty::GraftBackoff\n     * - in apply_iwant_penalties() Penalty::BrokenPromise\n     * - in metric_score() P3 Penalty::MessageDeficit\n     * - in metric_score() P6 Penalty::IPColocation\n     */\n    onScorePenalty (penalty: ScorePenalty): void {\n      // Can this be labeled by topic too?\n      this.scoringPenalties.inc({ penalty }, 1)\n    },\n\n    onIhaveRcv (topicStr: TopicStr, ihave: number, idonthave: number): void {\n      const topic = this.toTopic(topicStr)\n      this.ihaveRcvMsgids.inc({ topic }, ihave)\n      this.ihaveRcvNotSeenMsgids.inc({ topic }, idonthave)\n    },\n\n    onIwantRcv (iwantByTopic: Map<TopicStr, number>, iwantDonthave: number): void {\n      for (const [topicStr, iwant] of iwantByTopic) {\n        const topic = this.toTopic(topicStr)\n        this.iwantRcvMsgids.inc({ topic }, iwant)\n      }\n\n      this.iwantRcvDonthaveMsgids.inc(iwantDonthave)\n    },\n\n    onForwardMsg (topicStr: TopicStr, tosendCount: number): void {\n      const topic = this.toTopic(topicStr)\n      this.msgForwardCount.inc({ topic }, 1)\n      this.msgForwardPeers.inc({ topic }, tosendCount)\n    },\n\n    onPublishMsg (\n      topicStr: TopicStr,\n      tosendGroupCount: ToSendGroupCount,\n      tosendCount: number,\n      dataLen: number,\n      ms: number\n    ): void {\n      const topic = this.toTopic(topicStr)\n      this.msgPublishCount.inc({ topic }, 1)\n      this.msgPublishBytes.inc({ topic }, tosendCount * dataLen)\n      this.msgPublishPeersByTopic.inc({ topic }, tosendCount)\n      this.directPeersPublishedTotal.inc({ topic }, tosendGroupCount.direct)\n      this.floodsubPeersPublishedTotal.inc({ topic }, tosendGroupCount.floodsub)\n      this.meshPeersPublishedTotal.inc({ topic }, tosendGroupCount.mesh)\n      this.fanoutPeersPublishedTotal.inc({ topic }, tosendGroupCount.fanout)\n      this.msgPublishTime.observe({ topic }, ms / 1000)\n    },\n\n    onMsgRecvPreValidation (topicStr: TopicStr): void {\n      const topic = this.toTopic(topicStr)\n      this.msgReceivedPreValidation.inc({ topic }, 1)\n    },\n\n    onMsgRecvError (topicStr: TopicStr): void {\n      const topic = this.toTopic(topicStr)\n      this.msgReceivedError.inc({ topic }, 1)\n    },\n\n    onPrevalidationResult (topicStr: TopicStr, status: MessageStatus): void {\n      const topic = this.toTopic(topicStr)\n      switch (status) {\n        case MessageStatus.duplicate:\n          this.prevalidationDuplicateTotal.inc({ topic })\n          break\n        case MessageStatus.invalid:\n          this.prevalidationInvalidTotal.inc({ topic })\n          break\n        case MessageStatus.valid:\n          this.prevalidationValidTotal.inc({ topic })\n          break\n        default:\n          this.prevalidationUnknownTotal.inc({ topic })\n          break\n      }\n    },\n\n    onMsgRecvInvalid (topicStr: TopicStr, reason: RejectReasonObj): void {\n      const topic = this.toTopic(topicStr)\n\n      const error = reason.reason === RejectReason.Error ? reason.error : reason.reason\n      this.msgReceivedInvalid.inc({ error }, 1)\n      this.msgReceivedInvalidByTopic.inc({ topic }, 1)\n    },\n\n    onDuplicateMsgDelivery (topicStr: TopicStr, deliveryDelayMs: number, isLateDelivery: boolean): void {\n      const topic = this.toTopic(topicStr)\n      this.duplicateMsgDeliveryDelay.observe({ topic }, deliveryDelayMs / 1000)\n      if (isLateDelivery) {\n        this.duplicateMsgLateDelivery.inc({ topic }, 1)\n      }\n    },\n\n    onPublishDuplicateMsg (topicStr: TopicStr): void {\n      const topic = this.toTopic(topicStr)\n      this.duplicateMsgIgnored.inc({ topic }, 1)\n    },\n\n    onPeerReadStreamError (): void {\n      this.peerReadStreamError.inc(1)\n    },\n\n    onRpcRecvError (): void {\n      this.rpcRecvError.inc(1)\n    },\n\n    onRpcDataError (): void {\n      this.rpcDataError.inc(1)\n    },\n\n    onRpcRecv (rpc: IRPC, rpcBytes: number): void {\n      this.rpcRecvBytes.inc(rpcBytes)\n      this.rpcRecvCount.inc(1)\n      if (rpc.subscriptions != null) this.rpcRecvSubscription.inc(rpc.subscriptions.length)\n      if (rpc.messages != null) this.rpcRecvMessage.inc(rpc.messages.length)\n      if (rpc.control != null) {\n        this.rpcRecvControl.inc(1)\n        if (rpc.control.ihave != null) this.rpcRecvIHave.inc(rpc.control.ihave.length)\n        if (rpc.control.iwant != null) this.rpcRecvIWant.inc(rpc.control.iwant.length)\n        if (rpc.control.graft != null) this.rpcRecvGraft.inc(rpc.control.graft.length)\n        if (rpc.control.prune != null) this.rpcRecvPrune.inc(rpc.control.prune.length)\n      }\n    },\n\n    onRpcSent (rpc: IRPC, rpcBytes: number): void {\n      this.rpcSentBytes.inc(rpcBytes)\n      this.rpcSentCount.inc(1)\n      if (rpc.subscriptions != null) this.rpcSentSubscription.inc(rpc.subscriptions.length)\n      if (rpc.messages != null) this.rpcSentMessage.inc(rpc.messages.length)\n      if (rpc.control != null) {\n        const ihave = rpc.control.ihave?.length ?? 0\n        const iwant = rpc.control.iwant?.length ?? 0\n        const graft = rpc.control.graft?.length ?? 0\n        const prune = rpc.control.prune?.length ?? 0\n        if (ihave > 0) this.rpcSentIHave.inc(ihave)\n        if (iwant > 0) this.rpcSentIWant.inc(iwant)\n        if (graft > 0) this.rpcSentGraft.inc(graft)\n        if (prune > 0) this.rpcSentPrune.inc(prune)\n        if (ihave > 0 || iwant > 0 || graft > 0 || prune > 0) this.rpcSentControl.inc(1)\n      }\n    },\n\n    registerScores (scores: number[], scoreThresholds: PeerScoreThresholds): void {\n      let graylist = 0\n      let publish = 0\n      let gossip = 0\n      let mesh = 0\n\n      for (const score of scores) {\n        if (score >= scoreThresholds.graylistThreshold) graylist++\n        if (score >= scoreThresholds.publishThreshold) publish++\n        if (score >= scoreThresholds.gossipThreshold) gossip++\n        if (score >= 0) mesh++\n      }\n\n      this.peersByScoreThreshold.set({ threshold: ScoreThreshold.graylist }, graylist)\n      this.peersByScoreThreshold.set({ threshold: ScoreThreshold.publish }, publish)\n      this.peersByScoreThreshold.set({ threshold: ScoreThreshold.gossip }, gossip)\n      this.peersByScoreThreshold.set({ threshold: ScoreThreshold.mesh }, mesh)\n\n      // Register full score too\n      this.score.set(scores)\n    },\n\n    registerScoreWeights (sw: ScoreWeights<number[]>): void {\n      for (const [topic, wsTopic] of sw.byTopic) {\n        this.scoreWeights.set({ topic, p: 'p1' }, wsTopic.p1w)\n        this.scoreWeights.set({ topic, p: 'p2' }, wsTopic.p2w)\n        this.scoreWeights.set({ topic, p: 'p3' }, wsTopic.p3w)\n        this.scoreWeights.set({ topic, p: 'p3b' }, wsTopic.p3bw)\n        this.scoreWeights.set({ topic, p: 'p4' }, wsTopic.p4w)\n      }\n\n      this.scoreWeights.set({ p: 'p5' }, sw.p5w)\n      this.scoreWeights.set({ p: 'p6' }, sw.p6w)\n      this.scoreWeights.set({ p: 'p7' }, sw.p7w)\n    },\n\n    registerScorePerMesh (mesh: Map<TopicStr, Set<PeerIdStr>>, scoreByPeer: Map<PeerIdStr, number>): void {\n      const peersPerTopicLabel = new Map<TopicLabel, Set<PeerIdStr>>()\n\n      mesh.forEach((peers, topicStr) => {\n        // Aggregate by known topicLabel or throw to 'unknown'. This prevent too high cardinality\n        const topicLabel = this.topicStrToLabel.get(topicStr) ?? 'unknown'\n        let peersInMesh = peersPerTopicLabel.get(topicLabel)\n        if (peersInMesh == null) {\n          peersInMesh = new Set()\n          peersPerTopicLabel.set(topicLabel, peersInMesh)\n        }\n        peers.forEach((p) => peersInMesh?.add(p))\n      })\n\n      for (const [topic, peers] of peersPerTopicLabel) {\n        const meshScores: number[] = []\n        peers.forEach((peer) => {\n          meshScores.push(scoreByPeer.get(peer) ?? 0)\n        })\n        this.scorePerMesh.set({ topic }, meshScores)\n      }\n    }\n  }\n}\n", "export const ERR_INVALID_PEER_SCORE_PARAMS = 'ERR_INVALID_PEER_SCORE_PARAMS'\nexport const ERR_INVALID_PEER_SCORE_THRESHOLDS = 'ERR_INVALID_PEER_SCORE_THRESHOLDS'\n", "import { CodeError } from '@libp2p/interface'\nimport { ERR_INVALID_PEER_SCORE_PARAMS } from './constants.js'\n\n// This file defines PeerScoreParams and TopicScoreParams interfaces\n// as well as constructors, default constructors, and validation functions\n// for these interfaces\n\nexport interface PeerScoreParams {\n  /**\n   * Score parameters per topic.\n   */\n  topics: Record<string, TopicScoreParams>\n\n  /**\n   * Aggregate topic score cap; this limits the total contribution of topics towards a positive\n   * score. It must be positive (or 0 for no cap).\n   */\n  topicScoreCap: number\n\n  /**\n   * P5: Application-specific peer scoring\n   */\n  appSpecificScore(p: string): number\n  appSpecificWeight: number\n\n  /**\n   * P6: IP-colocation factor.\n   * The parameter has an associated counter which counts the number of peers with the same IP.\n   * If the number of peers in the same IP exceeds IPColocationFactorThreshold, then the value\n   * is the square of the difference, ie (PeersInSameIP - IPColocationThreshold)^2.\n   * If the number of peers in the same IP is less than the threshold, then the value is 0.\n   * The weight of the parameter MUST be negative, unless you want to disable for testing.\n   * Note: In order to simulate many IPs in a managable manner when testing, you can set the weight to 0\n   * thus disabling the IP colocation penalty.\n   */\n  IPColocationFactorWeight: number\n  IPColocationFactorThreshold: number\n  IPColocationFactorWhitelist: Set<string>\n\n  /**\n   * P7: behavioural pattern penalties.\n   * This parameter has an associated counter which tracks misbehaviour as detected by the\n   * router. The router currently applies penalties for the following behaviors:\n   * - attempting to re-graft before the prune backoff time has elapsed.\n   * - not following up in IWANT requests for messages advertised with IHAVE.\n   *\n   * The value of the parameter is the square of the counter, which decays with  BehaviourPenaltyDecay.\n   * The weight of the parameter MUST be negative (or zero to disable).\n   */\n  behaviourPenaltyWeight: number\n  behaviourPenaltyThreshold: number\n  behaviourPenaltyDecay: number\n\n  /**\n   * the decay interval for parameter counters.\n   */\n  decayInterval: number\n\n  /**\n   * counter value below which it is considered 0.\n   */\n  decayToZero: number\n\n  /**\n   * time to remember counters for a disconnected peer.\n   */\n  retainScore: number\n}\n\nexport interface TopicScoreParams {\n  /**\n   * The weight of the topic.\n   */\n  topicWeight: number\n\n  /**\n   * P1: time in the mesh\n   * This is the time the peer has ben grafted in the mesh.\n   * The value of the parameter is the time/TimeInMeshQuantum, capped by TimeInMeshCap\n   * The weight of the parameter MUST be positive (or zero to disable).\n   */\n  timeInMeshWeight: number\n  timeInMeshQuantum: number\n  timeInMeshCap: number\n\n  /**\n   * P2: first message deliveries\n   * This is the number of message deliveries in the topic.\n   * The value of the parameter is a counter, decaying with FirstMessageDeliveriesDecay, and capped\n   * by FirstMessageDeliveriesCap.\n   * The weight of the parameter MUST be positive (or zero to disable).\n   */\n  firstMessageDeliveriesWeight: number\n  firstMessageDeliveriesDecay: number\n  firstMessageDeliveriesCap: number\n\n  /**\n   * P3: mesh message deliveries\n   * This is the number of message deliveries in the mesh, within the MeshMessageDeliveriesWindow of\n   * message validation; deliveries during validation also count and are retroactively applied\n   * when validation succeeds.\n   * This window accounts for the minimum time before a hostile mesh peer trying to game the score\n   * could replay back a valid message we just sent them.\n   * It effectively tracks first and near-first deliveries, ie a message seen from a mesh peer\n   * before we have forwarded it to them.\n   * The parameter has an associated counter, decaying with MeshMessageDeliveriesDecay.\n   * If the counter exceeds the threshold, its value is 0.\n   * If the counter is below the MeshMessageDeliveriesThreshold, the value is the square of\n   * the deficit, ie (MessageDeliveriesThreshold - counter)^2\n   * The penalty is only activated after MeshMessageDeliveriesActivation time in the mesh.\n   * The weight of the parameter MUST be negative (or zero to disable).\n   */\n  meshMessageDeliveriesWeight: number\n  meshMessageDeliveriesDecay: number\n  meshMessageDeliveriesCap: number\n  meshMessageDeliveriesThreshold: number\n  meshMessageDeliveriesWindow: number\n  meshMessageDeliveriesActivation: number\n\n  /**\n   * P3b: sticky mesh propagation failures\n   * This is a sticky penalty that applies when a peer gets pruned from the mesh with an active\n   * mesh message delivery penalty.\n   * The weight of the parameter MUST be negative (or zero to disable)\n   */\n  meshFailurePenaltyWeight: number\n  meshFailurePenaltyDecay: number\n\n  /**\n   * P4: invalid messages\n   * This is the number of invalid messages in the topic.\n   * The value of the parameter is the square of the counter, decaying with\n   * InvalidMessageDeliveriesDecay.\n   * The weight of the parameter MUST be negative (or zero to disable).\n   */\n  invalidMessageDeliveriesWeight: number\n  invalidMessageDeliveriesDecay: number\n}\n\nexport const defaultPeerScoreParams: PeerScoreParams = {\n  topics: {},\n  topicScoreCap: 10.0,\n  appSpecificScore: () => 0.0,\n  appSpecificWeight: 10.0,\n  IPColocationFactorWeight: -5.0,\n  IPColocationFactorThreshold: 10.0,\n  IPColocationFactorWhitelist: new Set(),\n  behaviourPenaltyWeight: -10.0,\n  behaviourPenaltyThreshold: 0.0,\n  behaviourPenaltyDecay: 0.2,\n  decayInterval: 1000.0,\n  decayToZero: 0.1,\n  retainScore: 3600 * 1000\n}\n\nexport const defaultTopicScoreParams: TopicScoreParams = {\n  topicWeight: 0.5,\n  timeInMeshWeight: 1,\n  timeInMeshQuantum: 1,\n  timeInMeshCap: 3600,\n\n  firstMessageDeliveriesWeight: 1,\n  firstMessageDeliveriesDecay: 0.5,\n  firstMessageDeliveriesCap: 2000,\n\n  meshMessageDeliveriesWeight: -1,\n  meshMessageDeliveriesDecay: 0.5,\n  meshMessageDeliveriesCap: 100,\n  meshMessageDeliveriesThreshold: 20,\n  meshMessageDeliveriesWindow: 10,\n  meshMessageDeliveriesActivation: 5000,\n\n  meshFailurePenaltyWeight: -1,\n  meshFailurePenaltyDecay: 0.5,\n\n  invalidMessageDeliveriesWeight: -1,\n  invalidMessageDeliveriesDecay: 0.3\n}\n\nexport function createPeerScoreParams (p: Partial<PeerScoreParams> = {}): PeerScoreParams {\n  return {\n    ...defaultPeerScoreParams,\n    ...p,\n    topics: (p.topics != null)\n      ? Object.entries(p.topics).reduce<Record<string, TopicScoreParams>>((topics, [topic, topicScoreParams]) => {\n        topics[topic] = createTopicScoreParams(topicScoreParams)\n        return topics\n      }, {})\n      : {}\n  }\n}\n\nexport function createTopicScoreParams (p: Partial<TopicScoreParams> = {}): TopicScoreParams {\n  return {\n    ...defaultTopicScoreParams,\n    ...p\n  }\n}\n\n// peer score parameter validation\nexport function validatePeerScoreParams (p: PeerScoreParams): void {\n  for (const [topic, params] of Object.entries(p.topics)) {\n    try {\n      validateTopicScoreParams(params)\n    } catch (e) {\n      throw new CodeError(\n        `invalid score parameters for topic ${topic}: ${(e as Error).message}`,\n        ERR_INVALID_PEER_SCORE_PARAMS\n      )\n    }\n  }\n\n  // check that the topic score is 0 or something positive\n  if (p.topicScoreCap < 0) {\n    throw new CodeError('invalid topic score cap; must be positive (or 0 for no cap)', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n\n  // check that we have an app specific score; the weight can be anything (but expected positive)\n  if (p.appSpecificScore === null || p.appSpecificScore === undefined) {\n    throw new CodeError('missing application specific score function', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n\n  // check the IP colocation factor\n  if (p.IPColocationFactorWeight > 0) {\n    throw new CodeError(\n      'invalid IPColocationFactorWeight; must be negative (or 0 to disable)',\n      ERR_INVALID_PEER_SCORE_PARAMS\n    )\n  }\n  if (p.IPColocationFactorWeight !== 0 && p.IPColocationFactorThreshold < 1) {\n    throw new CodeError('invalid IPColocationFactorThreshold; must be at least 1', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n\n  // check the behaviour penalty\n  if (p.behaviourPenaltyWeight > 0) {\n    throw new CodeError(\n      'invalid BehaviourPenaltyWeight; must be negative (or 0 to disable)',\n      ERR_INVALID_PEER_SCORE_PARAMS\n    )\n  }\n  if (p.behaviourPenaltyWeight !== 0 && (p.behaviourPenaltyDecay <= 0 || p.behaviourPenaltyDecay >= 1)) {\n    throw new CodeError('invalid BehaviourPenaltyDecay; must be between 0 and 1', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n\n  // check the decay parameters\n  if (p.decayInterval < 1000) {\n    throw new CodeError('invalid DecayInterval; must be at least 1s', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n  if (p.decayToZero <= 0 || p.decayToZero >= 1) {\n    throw new CodeError('invalid DecayToZero; must be between 0 and 1', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n\n  // no need to check the score retention; a value of 0 means that we don't retain scores\n}\n\n// eslint-disable-next-line complexity\nexport function validateTopicScoreParams (p: TopicScoreParams): void {\n  // make sure we have a sane topic weight\n  if (p.topicWeight < 0) {\n    throw new CodeError('invalid topic weight; must be >= 0', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n\n  // check P1\n  if (p.timeInMeshQuantum === 0) {\n    throw new CodeError('invalid TimeInMeshQuantum; must be non zero', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n  if (p.timeInMeshWeight < 0) {\n    throw new CodeError('invalid TimeInMeshWeight; must be positive (or 0 to disable)', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n  if (p.timeInMeshWeight !== 0 && p.timeInMeshQuantum <= 0) {\n    throw new CodeError('invalid TimeInMeshQuantum; must be positive', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n  if (p.timeInMeshWeight !== 0 && p.timeInMeshCap <= 0) {\n    throw new CodeError('invalid TimeInMeshCap; must be positive', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n\n  // check P2\n  if (p.firstMessageDeliveriesWeight < 0) {\n    throw new CodeError(\n      'invallid FirstMessageDeliveriesWeight; must be positive (or 0 to disable)',\n      ERR_INVALID_PEER_SCORE_PARAMS\n    )\n  }\n  if (\n    p.firstMessageDeliveriesWeight !== 0 &&\n    (p.firstMessageDeliveriesDecay <= 0 || p.firstMessageDeliveriesDecay >= 1)\n  ) {\n    throw new CodeError('invalid FirstMessageDeliveriesDecay; must be between 0 and 1', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n  if (p.firstMessageDeliveriesWeight !== 0 && p.firstMessageDeliveriesCap <= 0) {\n    throw new CodeError('invalid FirstMessageDeliveriesCap; must be positive', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n\n  // check P3\n  if (p.meshMessageDeliveriesWeight > 0) {\n    throw new CodeError(\n      'invalid MeshMessageDeliveriesWeight; must be negative (or 0 to disable)',\n      ERR_INVALID_PEER_SCORE_PARAMS\n    )\n  }\n  if (p.meshMessageDeliveriesWeight !== 0 && (p.meshMessageDeliveriesDecay <= 0 || p.meshMessageDeliveriesDecay >= 1)) {\n    throw new CodeError('invalid MeshMessageDeliveriesDecay; must be between 0 and 1', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n  if (p.meshMessageDeliveriesWeight !== 0 && p.meshMessageDeliveriesCap <= 0) {\n    throw new CodeError('invalid MeshMessageDeliveriesCap; must be positive', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n  if (p.meshMessageDeliveriesWeight !== 0 && p.meshMessageDeliveriesThreshold <= 0) {\n    throw new CodeError('invalid MeshMessageDeliveriesThreshold; must be positive', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n  if (p.meshMessageDeliveriesWindow < 0) {\n    throw new CodeError('invalid MeshMessageDeliveriesWindow; must be non-negative', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n  if (p.meshMessageDeliveriesWeight !== 0 && p.meshMessageDeliveriesActivation < 1000) {\n    throw new CodeError('invalid MeshMessageDeliveriesActivation; must be at least 1s', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n\n  // check P3b\n  if (p.meshFailurePenaltyWeight > 0) {\n    throw new CodeError(\n      'invalid MeshFailurePenaltyWeight; must be negative (or 0 to disable)',\n      ERR_INVALID_PEER_SCORE_PARAMS\n    )\n  }\n  if (p.meshFailurePenaltyWeight !== 0 && (p.meshFailurePenaltyDecay <= 0 || p.meshFailurePenaltyDecay >= 1)) {\n    throw new CodeError('invalid MeshFailurePenaltyDecay; must be between 0 and 1', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n\n  // check P4\n  if (p.invalidMessageDeliveriesWeight > 0) {\n    throw new CodeError(\n      'invalid InvalidMessageDeliveriesWeight; must be negative (or 0 to disable)',\n      ERR_INVALID_PEER_SCORE_PARAMS\n    )\n  }\n  if (p.invalidMessageDeliveriesDecay <= 0 || p.invalidMessageDeliveriesDecay >= 1) {\n    throw new CodeError('invalid InvalidMessageDeliveriesDecay; must be between 0 and 1', ERR_INVALID_PEER_SCORE_PARAMS)\n  }\n}\n", "import { CodeError } from '@libp2p/interface'\nimport { ERR_INVALID_PEER_SCORE_THRESHOLDS } from './constants.js'\n\n// This file defines PeerScoreThresholds interface\n// as well as a constructor, default constructor, and validation function\n// for this interface\n\nexport interface PeerScoreThresholds {\n  /**\n   * gossipThreshold is the score threshold below which gossip propagation is supressed;\n   * should be negative.\n   */\n  gossipThreshold: number\n\n  /**\n   * publishThreshold is the score threshold below which we shouldn't publish when using flood\n   * publishing (also applies to fanout and floodsub peers); should be negative and <= GossipThreshold.\n   */\n  publishThreshold: number\n\n  /**\n   * graylistThreshold is the score threshold below which message processing is supressed altogether,\n   * implementing an effective graylist according to peer score; should be negative and <= PublisThreshold.\n   */\n  graylistThreshold: number\n\n  /**\n   * acceptPXThreshold is the score threshold below which PX will be ignored; this should be positive\n   * and limited to scores attainable by bootstrappers and other trusted nodes.\n   */\n  acceptPXThreshold: number\n\n  /**\n   * opportunisticGraftThreshold is the median mesh score threshold before triggering opportunistic\n   * grafting; this should have a small positive value.\n   */\n  opportunisticGraftThreshold: number\n}\n\nexport const defaultPeerScoreThresholds: PeerScoreThresholds = {\n  gossipThreshold: -10,\n  publishThreshold: -50,\n  graylistThreshold: -80,\n  acceptPXThreshold: 10,\n  opportunisticGraftThreshold: 20\n}\n\nexport function createPeerScoreThresholds (p: Partial<PeerScoreThresholds> = {}): PeerScoreThresholds {\n  return {\n    ...defaultPeerScoreThresholds,\n    ...p\n  }\n}\n\nexport function validatePeerScoreThresholds (p: PeerScoreThresholds): void {\n  if (p.gossipThreshold > 0) {\n    throw new CodeError('invalid gossip threshold; it must be <= 0', ERR_INVALID_PEER_SCORE_THRESHOLDS)\n  }\n  if (p.publishThreshold > 0 || p.publishThreshold > p.gossipThreshold) {\n    throw new CodeError(\n      'invalid publish threshold; it must be <= 0 and <= gossip threshold',\n      ERR_INVALID_PEER_SCORE_THRESHOLDS\n    )\n  }\n  if (p.graylistThreshold > 0 || p.graylistThreshold > p.publishThreshold) {\n    throw new CodeError(\n      'invalid graylist threshold; it must be <= 0 and <= publish threshold',\n      ERR_INVALID_PEER_SCORE_THRESHOLDS\n    )\n  }\n  if (p.acceptPXThreshold < 0) {\n    throw new CodeError('invalid accept PX threshold; it must be >= 0', ERR_INVALID_PEER_SCORE_THRESHOLDS)\n  }\n  if (p.opportunisticGraftThreshold < 0) {\n    throw new CodeError('invalid opportunistic grafting threshold; it must be >= 0', ERR_INVALID_PEER_SCORE_THRESHOLDS)\n  }\n}\n", "/**\n * Exclude up to `ineed` items from a set if item meets condition `cond`\n */\nexport function removeItemsFromSet<T> (\n  superSet: Set<T>,\n  ineed: number,\n  cond: (peer: T) => boolean = () => true\n): Set<T> {\n  const subset = new Set<T>()\n  if (ineed <= 0) return subset\n\n  for (const id of superSet) {\n    if (subset.size >= ineed) break\n    if (cond(id)) {\n      subset.add(id)\n      superSet.delete(id)\n    }\n  }\n\n  return subset\n}\n\n/**\n * Exclude up to `ineed` items from a set\n */\nexport function removeFirstNItemsFromSet<T> (superSet: Set<T>, ineed: number): Set<T> {\n  return removeItemsFromSet(superSet, ineed, () => true)\n}\n\nexport class MapDef<K, V> extends Map<K, V> {\n  constructor (private readonly getDefault: () => V) {\n    super()\n  }\n\n  getOrDefault (key: K): V {\n    let value = super.get(key)\n    if (value === undefined) {\n      value = this.getDefault()\n      this.set(key, value)\n    }\n    return value\n  }\n}\n", "import type { PeerScoreParams } from './peer-score-params.js'\nimport type { PeerStats } from './peer-stats.js'\n\nexport function computeScore (\n  peer: string,\n  pstats: PeerStats,\n  params: PeerScoreParams,\n  peerIPs: Map<string, Set<string>>\n): number {\n  let score = 0\n\n  // topic stores\n  Object.entries(pstats.topics).forEach(([topic, tstats]) => {\n    // the topic parameters\n    const topicParams = params.topics[topic]\n    if (topicParams === undefined) {\n      // we are not scoring this topic\n      return\n    }\n\n    let topicScore = 0\n\n    // P1: time in Mesh\n    if (tstats.inMesh) {\n      let p1 = tstats.meshTime / topicParams.timeInMeshQuantum\n      if (p1 > topicParams.timeInMeshCap) {\n        p1 = topicParams.timeInMeshCap\n      }\n      topicScore += p1 * topicParams.timeInMeshWeight\n    }\n\n    // P2: first message deliveries\n    let p2 = tstats.firstMessageDeliveries\n    if (p2 > topicParams.firstMessageDeliveriesCap) {\n      p2 = topicParams.firstMessageDeliveriesCap\n    }\n    topicScore += p2 * topicParams.firstMessageDeliveriesWeight\n\n    // P3: mesh message deliveries\n    if (\n      tstats.meshMessageDeliveriesActive &&\n      tstats.meshMessageDeliveries < topicParams.meshMessageDeliveriesThreshold\n    ) {\n      const deficit = topicParams.meshMessageDeliveriesThreshold - tstats.meshMessageDeliveries\n      const p3 = deficit * deficit\n      topicScore += p3 * topicParams.meshMessageDeliveriesWeight\n    }\n\n    // P3b:\n    // NOTE: the weight of P3b is negative (validated in validateTopicScoreParams) so this detracts\n    const p3b = tstats.meshFailurePenalty\n    topicScore += p3b * topicParams.meshFailurePenaltyWeight\n\n    // P4: invalid messages\n    // NOTE: the weight of P4 is negative (validated in validateTopicScoreParams) so this detracts\n    const p4 = tstats.invalidMessageDeliveries * tstats.invalidMessageDeliveries\n    topicScore += p4 * topicParams.invalidMessageDeliveriesWeight\n\n    // update score, mixing with topic weight\n    score += topicScore * topicParams.topicWeight\n  })\n\n  // apply the topic score cap, if any\n  if (params.topicScoreCap > 0 && score > params.topicScoreCap) {\n    score = params.topicScoreCap\n  }\n\n  // P5: application-specific score\n  const p5 = params.appSpecificScore(peer)\n  score += p5 * params.appSpecificWeight\n\n  // P6: IP colocation factor\n  pstats.knownIPs.forEach((ip) => {\n    if (params.IPColocationFactorWhitelist.has(ip)) {\n      return\n    }\n\n    // P6 has a cliff (IPColocationFactorThreshold)\n    // It's only applied if at least that many peers are connected to us from that source IP addr.\n    // It is quadratic, and the weight is negative (validated in validatePeerScoreParams)\n    const peersInIP = peerIPs.get(ip)\n    const numPeersInIP = (peersInIP != null) ? peersInIP.size : 0\n    if (numPeersInIP > params.IPColocationFactorThreshold) {\n      const surplus = numPeersInIP - params.IPColocationFactorThreshold\n      const p6 = surplus * surplus\n      score += p6 * params.IPColocationFactorWeight\n    }\n  })\n\n  // P7: behavioural pattern penalty\n  if (pstats.behaviourPenalty > params.behaviourPenaltyThreshold) {\n    const excess = pstats.behaviourPenalty - params.behaviourPenaltyThreshold\n    const p7 = excess * excess\n    score += p7 * params.behaviourPenaltyWeight\n  }\n\n  return score\n}\n", "import Denque from 'denque'\nimport { TimeCacheDuration } from '../constants.js'\n\nexport enum DeliveryRecordStatus {\n  /**\n   * we don't know (yet) if the message is valid\n   */\n  unknown,\n  /**\n   * we know the message is valid\n   */\n  valid,\n  /**\n   * we know the message is invalid\n   */\n  invalid,\n  /**\n   * we were instructed by the validator to ignore the message\n   */\n  ignored\n}\n\nexport interface DeliveryRecord {\n  status: DeliveryRecordStatus\n  firstSeenTsMs: number\n  validated: number\n  peers: Set<string>\n}\n\ninterface DeliveryQueueEntry {\n  msgId: string\n  expire: number\n}\n\n/**\n * Map of canonical message ID to DeliveryRecord\n *\n * Maintains an internal queue for efficient gc of old messages\n */\nexport class MessageDeliveries {\n  private readonly records: Map<string, DeliveryRecord>\n  public queue: Denque<DeliveryQueueEntry>\n\n  constructor () {\n    this.records = new Map()\n    this.queue = new Denque()\n  }\n\n  getRecord (msgIdStr: string): DeliveryRecord | undefined {\n    return this.records.get(msgIdStr)\n  }\n\n  ensureRecord (msgIdStr: string): DeliveryRecord {\n    let drec = this.records.get(msgIdStr)\n    if (drec != null) {\n      return drec\n    }\n\n    // record doesn't exist yet\n    // create record\n    drec = {\n      status: DeliveryRecordStatus.unknown,\n      firstSeenTsMs: Date.now(),\n      validated: 0,\n      peers: new Set()\n    }\n    this.records.set(msgIdStr, drec)\n\n    // and add msgId to the queue\n    const entry: DeliveryQueueEntry = {\n      msgId: msgIdStr,\n      expire: Date.now() + TimeCacheDuration\n    }\n    this.queue.push(entry)\n\n    return drec\n  }\n\n  gc (): void {\n    const now = Date.now()\n    // queue is sorted by expiry time\n    // remove expired messages, remove from queue until first un-expired message found\n    let head = this.queue.peekFront()\n    while ((head != null) && head.expire < now) {\n      this.records.delete(head.msgId)\n      this.queue.shift()\n      head = this.queue.peekFront()\n    }\n  }\n\n  clear (): void {\n    this.records.clear()\n    this.queue.clear()\n  }\n}\n", "import { type MsgIdStr, type PeerIdStr, RejectReason, type TopicStr, type IPStr } from '../types.js'\nimport { MapDef } from '../utils/set.js'\nimport { computeScore } from './compute-score.js'\nimport { MessageDeliveries, DeliveryRecordStatus } from './message-deliveries.js'\nimport { type PeerScoreParams, validatePeerScoreParams } from './peer-score-params.js'\nimport type { PeerStats, TopicStats } from './peer-stats.js'\nimport type { Metrics, ScorePenalty } from '../metrics.js'\nimport type { ComponentLogger, Logger } from '@libp2p/interface'\n\ninterface PeerScoreOpts {\n  /**\n   * Miliseconds to cache computed score per peer\n   */\n  scoreCacheValidityMs: number\n\n  computeScore?: typeof computeScore\n}\n\ninterface ScoreCacheEntry {\n  /** The cached score */\n  score: number\n  /** Unix timestamp in miliseconds, the time after which the cached score for a peer is no longer valid */\n  cacheUntil: number\n}\n\nexport type PeerScoreStatsDump = Record<PeerIdStr, PeerStats>\n\nexport class PeerScore {\n  /**\n   * Per-peer stats for score calculation\n   */\n  readonly peerStats = new Map<PeerIdStr, PeerStats>()\n  /**\n   * IP colocation tracking; maps IP => set of peers.\n   */\n  readonly peerIPs = new MapDef<PeerIdStr, Set<IPStr>>(() => new Set())\n  /**\n   * Cache score up to decayInterval if topic stats are unchanged.\n   */\n  readonly scoreCache = new Map<PeerIdStr, ScoreCacheEntry>()\n  /**\n   * Recent message delivery timing/participants\n   */\n  readonly deliveryRecords = new MessageDeliveries()\n\n  _backgroundInterval?: ReturnType<typeof setInterval>\n\n  private readonly scoreCacheValidityMs: number\n  private readonly computeScore: typeof computeScore\n  private readonly log: Logger\n\n  constructor (readonly params: PeerScoreParams, private readonly metrics: Metrics | null, componentLogger: ComponentLogger, opts: PeerScoreOpts) {\n    validatePeerScoreParams(params)\n    this.scoreCacheValidityMs = opts.scoreCacheValidityMs\n    this.computeScore = opts.computeScore ?? computeScore\n    this.log = componentLogger.forComponent('libp2p:gossipsub:score')\n  }\n\n  get size (): number {\n    return this.peerStats.size\n  }\n\n  /**\n   * Start PeerScore instance\n   */\n  start (): void {\n    if (this._backgroundInterval != null) {\n      this.log('Peer score already running')\n      return\n    }\n    this._backgroundInterval = setInterval(() => { this.background() }, this.params.decayInterval)\n    this.log('started')\n  }\n\n  /**\n   * Stop PeerScore instance\n   */\n  stop (): void {\n    if (this._backgroundInterval == null) {\n      this.log('Peer score already stopped')\n      return\n    }\n    clearInterval(this._backgroundInterval)\n    delete this._backgroundInterval\n    this.peerIPs.clear()\n    this.peerStats.clear()\n    this.deliveryRecords.clear()\n    this.log('stopped')\n  }\n\n  /**\n   * Periodic maintenance\n   */\n  background (): void {\n    this.refreshScores()\n    this.deliveryRecords.gc()\n  }\n\n  dumpPeerScoreStats (): PeerScoreStatsDump {\n    return Object.fromEntries(Array.from(this.peerStats.entries()).map(([peer, stats]) => [peer, stats]))\n  }\n\n  messageFirstSeenTimestampMs (msgIdStr: MsgIdStr): number | null {\n    const drec = this.deliveryRecords.getRecord(msgIdStr)\n    return (drec != null) ? drec.firstSeenTsMs : null\n  }\n\n  /**\n   * Decays scores, and purges score records for disconnected peers once their expiry has elapsed.\n   */\n  public refreshScores (): void {\n    const now = Date.now()\n    const decayToZero = this.params.decayToZero\n\n    this.peerStats.forEach((pstats, id) => {\n      if (!pstats.connected) {\n        // has the retention period expired?\n        if (now > pstats.expire) {\n          // yes, throw it away (but clean up the IP tracking first)\n          this.removeIPsForPeer(id, pstats.knownIPs)\n          this.peerStats.delete(id)\n          this.scoreCache.delete(id)\n        }\n\n        // we don't decay retained scores, as the peer is not active.\n        // this way the peer cannot reset a negative score by simply disconnecting and reconnecting,\n        // unless the retention period has elapsed.\n        // similarly, a well behaved peer does not lose its score by getting disconnected.\n        return\n      }\n\n      Object.entries(pstats.topics).forEach(([topic, tstats]) => {\n        const tparams = this.params.topics[topic]\n        if (tparams === undefined) {\n          // we are not scoring this topic\n          // should be unreachable, we only add scored topics to pstats\n          return\n        }\n\n        // decay counters\n        tstats.firstMessageDeliveries *= tparams.firstMessageDeliveriesDecay\n        if (tstats.firstMessageDeliveries < decayToZero) {\n          tstats.firstMessageDeliveries = 0\n        }\n\n        tstats.meshMessageDeliveries *= tparams.meshMessageDeliveriesDecay\n        if (tstats.meshMessageDeliveries < decayToZero) {\n          tstats.meshMessageDeliveries = 0\n        }\n\n        tstats.meshFailurePenalty *= tparams.meshFailurePenaltyDecay\n        if (tstats.meshFailurePenalty < decayToZero) {\n          tstats.meshFailurePenalty = 0\n        }\n\n        tstats.invalidMessageDeliveries *= tparams.invalidMessageDeliveriesDecay\n        if (tstats.invalidMessageDeliveries < decayToZero) {\n          tstats.invalidMessageDeliveries = 0\n        }\n\n        // update mesh time and activate mesh message delivery parameter if need be\n        if (tstats.inMesh) {\n          tstats.meshTime = now - tstats.graftTime\n          if (tstats.meshTime > tparams.meshMessageDeliveriesActivation) {\n            tstats.meshMessageDeliveriesActive = true\n          }\n        }\n      })\n\n      // decay P7 counter\n      pstats.behaviourPenalty *= this.params.behaviourPenaltyDecay\n      if (pstats.behaviourPenalty < decayToZero) {\n        pstats.behaviourPenalty = 0\n      }\n    })\n  }\n\n  /**\n   * Return the score for a peer\n   */\n  score (id: PeerIdStr): number {\n    this.metrics?.scoreFnCalls.inc()\n\n    const pstats = this.peerStats.get(id)\n    if (pstats == null) {\n      return 0\n    }\n\n    const now = Date.now()\n    const cacheEntry = this.scoreCache.get(id)\n\n    // Found cached score within validity period\n    if ((cacheEntry != null) && cacheEntry.cacheUntil > now) {\n      return cacheEntry.score\n    }\n\n    this.metrics?.scoreFnRuns.inc()\n\n    const score = this.computeScore(id, pstats, this.params, this.peerIPs)\n    const cacheUntil = now + this.scoreCacheValidityMs\n\n    if (cacheEntry != null) {\n      this.metrics?.scoreCachedDelta.observe(Math.abs(score - cacheEntry.score))\n      cacheEntry.score = score\n      cacheEntry.cacheUntil = cacheUntil\n    } else {\n      this.scoreCache.set(id, { score, cacheUntil })\n    }\n\n    return score\n  }\n\n  /**\n   * Apply a behavioural penalty to a peer\n   */\n  addPenalty (id: PeerIdStr, penalty: number, penaltyLabel: ScorePenalty): void {\n    const pstats = this.peerStats.get(id)\n    if (pstats != null) {\n      pstats.behaviourPenalty += penalty\n      this.metrics?.onScorePenalty(penaltyLabel)\n    }\n  }\n\n  addPeer (id: PeerIdStr): void {\n    // create peer stats (not including topic stats for each topic to be scored)\n    // topic stats will be added as needed\n    const pstats: PeerStats = {\n      connected: true,\n      expire: 0,\n      topics: {},\n      knownIPs: new Set(),\n      behaviourPenalty: 0\n    }\n    this.peerStats.set(id, pstats)\n  }\n\n  /** Adds a new IP to a peer, if the peer is not known the update is ignored */\n  addIP (id: PeerIdStr, ip: string): void {\n    const pstats = this.peerStats.get(id)\n    if (pstats != null) {\n      pstats.knownIPs.add(ip)\n    }\n\n    this.peerIPs.getOrDefault(ip).add(id)\n  }\n\n  /** Remove peer association with IP */\n  removeIP (id: PeerIdStr, ip: string): void {\n    const pstats = this.peerStats.get(id)\n    if (pstats != null) {\n      pstats.knownIPs.delete(ip)\n    }\n\n    const peersWithIP = this.peerIPs.get(ip)\n    if (peersWithIP != null) {\n      peersWithIP.delete(id)\n      if (peersWithIP.size === 0) {\n        this.peerIPs.delete(ip)\n      }\n    }\n  }\n\n  removePeer (id: PeerIdStr): void {\n    const pstats = this.peerStats.get(id)\n    if (pstats == null) {\n      return\n    }\n\n    // decide whether to retain the score; this currently only retains non-positive scores\n    // to dissuade attacks on the score function.\n    if (this.score(id) > 0) {\n      this.removeIPsForPeer(id, pstats.knownIPs)\n      this.peerStats.delete(id)\n      return\n    }\n\n    // furthermore, when we decide to retain the score, the firstMessageDelivery counters are\n    // reset to 0 and mesh delivery penalties applied.\n    Object.entries(pstats.topics).forEach(([topic, tstats]) => {\n      tstats.firstMessageDeliveries = 0\n\n      const threshold = this.params.topics[topic].meshMessageDeliveriesThreshold\n      if (tstats.inMesh && tstats.meshMessageDeliveriesActive && tstats.meshMessageDeliveries < threshold) {\n        const deficit = threshold - tstats.meshMessageDeliveries\n        tstats.meshFailurePenalty += deficit * deficit\n      }\n\n      tstats.inMesh = false\n      tstats.meshMessageDeliveriesActive = false\n    })\n\n    pstats.connected = false\n    pstats.expire = Date.now() + this.params.retainScore\n  }\n\n  /** Handles scoring functionality as a peer GRAFTs to a topic. */\n  graft (id: PeerIdStr, topic: TopicStr): void {\n    const pstats = this.peerStats.get(id)\n    if (pstats != null) {\n      const tstats = this.getPtopicStats(pstats, topic)\n      if (tstats != null) {\n        // if we are scoring the topic, update the mesh status.\n        tstats.inMesh = true\n        tstats.graftTime = Date.now()\n        tstats.meshTime = 0\n        tstats.meshMessageDeliveriesActive = false\n      }\n    }\n  }\n\n  /** Handles scoring functionality as a peer PRUNEs from a topic. */\n  prune (id: PeerIdStr, topic: TopicStr): void {\n    const pstats = this.peerStats.get(id)\n    if (pstats != null) {\n      const tstats = this.getPtopicStats(pstats, topic)\n      if (tstats != null) {\n        // sticky mesh delivery rate failure penalty\n        const threshold = this.params.topics[topic].meshMessageDeliveriesThreshold\n        if (tstats.meshMessageDeliveriesActive && tstats.meshMessageDeliveries < threshold) {\n          const deficit = threshold - tstats.meshMessageDeliveries\n          tstats.meshFailurePenalty += deficit * deficit\n        }\n        tstats.meshMessageDeliveriesActive = false\n        tstats.inMesh = false\n\n        // TODO: Consider clearing score cache on important penalties\n        // this.scoreCache.delete(id)\n      }\n    }\n  }\n\n  validateMessage (msgIdStr: MsgIdStr): void {\n    this.deliveryRecords.ensureRecord(msgIdStr)\n  }\n\n  deliverMessage (from: PeerIdStr, msgIdStr: MsgIdStr, topic: TopicStr): void {\n    this.markFirstMessageDelivery(from, topic)\n\n    const drec = this.deliveryRecords.ensureRecord(msgIdStr)\n    const now = Date.now()\n\n    // defensive check that this is the first delivery trace -- delivery status should be unknown\n    if (drec.status !== DeliveryRecordStatus.unknown) {\n      this.log(\n        'unexpected delivery: message from %s was first seen %s ago and has delivery status %s',\n        from,\n        now - drec.firstSeenTsMs,\n        DeliveryRecordStatus[drec.status]\n      )\n      return\n    }\n\n    // mark the message as valid and reward mesh peers that have already forwarded it to us\n    drec.status = DeliveryRecordStatus.valid\n    drec.validated = now\n    drec.peers.forEach((p) => {\n      // this check is to make sure a peer can't send us a message twice and get a double count\n      // if it is a first delivery.\n      if (p !== from.toString()) {\n        this.markDuplicateMessageDelivery(p, topic)\n      }\n    })\n  }\n\n  /**\n   * Similar to `rejectMessage` except does not require the message id or reason for an invalid message.\n   */\n  rejectInvalidMessage (from: PeerIdStr, topic: TopicStr): void {\n    this.markInvalidMessageDelivery(from, topic)\n  }\n\n  rejectMessage (from: PeerIdStr, msgIdStr: MsgIdStr, topic: TopicStr, reason: RejectReason): void {\n    // eslint-disable-next-line default-case\n    switch (reason) {\n      // these messages are not tracked, but the peer is penalized as they are invalid\n      case RejectReason.Error:\n        this.markInvalidMessageDelivery(from, topic)\n        return\n\n      // we ignore those messages, so do nothing.\n      case RejectReason.Blacklisted:\n        return\n\n      // the rest are handled after record creation\n    }\n\n    const drec = this.deliveryRecords.ensureRecord(msgIdStr)\n\n    // defensive check that this is the first rejection -- delivery status should be unknown\n    if (drec.status !== DeliveryRecordStatus.unknown) {\n      this.log(\n        'unexpected rejection: message from %s was first seen %s ago and has delivery status %d',\n        from,\n        Date.now() - drec.firstSeenTsMs,\n        DeliveryRecordStatus[drec.status]\n      )\n      return\n    }\n\n    if (reason === RejectReason.Ignore) {\n      // we were explicitly instructed by the validator to ignore the message but not penalize the peer\n      drec.status = DeliveryRecordStatus.ignored\n      drec.peers.clear()\n      return\n    }\n\n    // mark the message as invalid and penalize peers that have already forwarded it.\n    drec.status = DeliveryRecordStatus.invalid\n\n    this.markInvalidMessageDelivery(from, topic)\n    drec.peers.forEach((p) => {\n      this.markInvalidMessageDelivery(p, topic)\n    })\n\n    // release the delivery time tracking map to free some memory early\n    drec.peers.clear()\n  }\n\n  duplicateMessage (from: PeerIdStr, msgIdStr: MsgIdStr, topic: TopicStr): void {\n    const drec = this.deliveryRecords.ensureRecord(msgIdStr)\n\n    if (drec.peers.has(from)) {\n      // we have already seen this duplicate\n      return\n    }\n\n    // eslint-disable-next-line default-case\n    switch (drec.status) {\n      case DeliveryRecordStatus.unknown:\n        // the message is being validated; track the peer delivery and wait for\n        // the Deliver/Reject/Ignore notification.\n        drec.peers.add(from)\n        break\n\n      case DeliveryRecordStatus.valid:\n        // mark the peer delivery time to only count a duplicate delivery once.\n        drec.peers.add(from)\n        this.markDuplicateMessageDelivery(from, topic, drec.validated)\n        break\n\n      case DeliveryRecordStatus.invalid:\n        // we no longer track delivery time\n        this.markInvalidMessageDelivery(from, topic)\n        break\n\n      case DeliveryRecordStatus.ignored:\n        // the message was ignored; do nothing (we don't know if it was valid)\n        break\n    }\n  }\n\n  /**\n   * Increments the \"invalid message deliveries\" counter for all scored topics the message is published in.\n   */\n  public markInvalidMessageDelivery (from: PeerIdStr, topic: TopicStr): void {\n    const pstats = this.peerStats.get(from)\n    if (pstats != null) {\n      const tstats = this.getPtopicStats(pstats, topic)\n      if (tstats != null) {\n        tstats.invalidMessageDeliveries += 1\n      }\n    }\n  }\n\n  /**\n   * Increments the \"first message deliveries\" counter for all scored topics the message is published in,\n   * as well as the \"mesh message deliveries\" counter, if the peer is in the mesh for the topic.\n   * Messages already known (with the seenCache) are counted with markDuplicateMessageDelivery()\n   */\n  public markFirstMessageDelivery (from: PeerIdStr, topic: TopicStr): void {\n    const pstats = this.peerStats.get(from)\n    if (pstats != null) {\n      const tstats = this.getPtopicStats(pstats, topic)\n      if (tstats != null) {\n        let cap = this.params.topics[topic].firstMessageDeliveriesCap\n        tstats.firstMessageDeliveries = Math.min(cap, tstats.firstMessageDeliveries + 1)\n\n        if (tstats.inMesh) {\n          cap = this.params.topics[topic].meshMessageDeliveriesCap\n          tstats.meshMessageDeliveries = Math.min(cap, tstats.meshMessageDeliveries + 1)\n        }\n      }\n    }\n  }\n\n  /**\n   * Increments the \"mesh message deliveries\" counter for messages we've seen before,\n   * as long the message was received within the P3 window.\n   */\n  public markDuplicateMessageDelivery (from: PeerIdStr, topic: TopicStr, validatedTime?: number): void {\n    const pstats = this.peerStats.get(from)\n    if (pstats != null) {\n      const now = validatedTime !== undefined ? Date.now() : 0\n\n      const tstats = this.getPtopicStats(pstats, topic)\n      // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n      if (tstats != null && tstats.inMesh) {\n        const tparams = this.params.topics[topic]\n\n        // check against the mesh delivery window -- if the validated time is passed as 0, then\n        // the message was received before we finished validation and thus falls within the mesh\n        // delivery window.\n        if (validatedTime !== undefined) {\n          const deliveryDelayMs = now - validatedTime\n          const isLateDelivery = deliveryDelayMs > tparams.meshMessageDeliveriesWindow\n          this.metrics?.onDuplicateMsgDelivery(topic, deliveryDelayMs, isLateDelivery)\n\n          if (isLateDelivery) {\n            return\n          }\n        }\n\n        const cap = tparams.meshMessageDeliveriesCap\n        tstats.meshMessageDeliveries = Math.min(cap, tstats.meshMessageDeliveries + 1)\n      }\n    }\n  }\n\n  /**\n   * Removes an IP list from the tracking list for a peer.\n   */\n  private removeIPsForPeer (id: PeerIdStr, ipsToRemove: Set<IPStr>): void {\n    for (const ipToRemove of ipsToRemove) {\n      const peerSet = this.peerIPs.get(ipToRemove)\n      if (peerSet != null) {\n        peerSet.delete(id)\n        if (peerSet.size === 0) {\n          this.peerIPs.delete(ipToRemove)\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns topic stats if they exist, otherwise if the supplied parameters score the\n   * topic, inserts the default stats and returns a reference to those. If neither apply, returns None.\n   */\n  private getPtopicStats (pstats: PeerStats, topic: TopicStr): TopicStats | null {\n    let topicStats: TopicStats | undefined = pstats.topics[topic]\n\n    if (topicStats !== undefined) {\n      return topicStats\n    }\n\n    if (this.params.topics[topic] !== undefined) {\n      topicStats = {\n        inMesh: false,\n        graftTime: 0,\n        meshTime: 0,\n        firstMessageDeliveries: 0,\n        meshMessageDeliveries: 0,\n        meshMessageDeliveriesActive: false,\n        meshFailurePenalty: 0,\n        invalidMessageDeliveries: 0\n      }\n      pstats.topics[topic] = topicStats\n\n      return topicStats\n    }\n\n    return null\n  }\n}\n", "import type { PeerScoreParams } from './peer-score-params.js'\nimport type { PeerStats } from './peer-stats.js'\n\ntype TopicLabel = string\ntype TopicStr = string\ntype TopicStrToLabel = Map<TopicStr, TopicLabel>\n\nexport interface TopicScoreWeights<T> {\n  p1w: T\n  p2w: T\n  p3w: T\n  p3bw: T\n  p4w: T\n}\nexport interface ScoreWeights<T> {\n  byTopic: Map<TopicLabel, TopicScoreWeights<T>>\n  p5w: T\n  p6w: T\n  p7w: T\n  score: T\n}\n\nexport function computeScoreWeights (\n  peer: string,\n  pstats: PeerStats,\n  params: PeerScoreParams,\n  peerIPs: Map<string, Set<string>>,\n  topicStrToLabel: TopicStrToLabel\n): ScoreWeights<number> {\n  let score = 0\n\n  const byTopic = new Map<TopicLabel, TopicScoreWeights<number>>()\n\n  // topic stores\n  Object.entries(pstats.topics).forEach(([topic, tstats]) => {\n    // the topic parameters\n    // Aggregate by known topicLabel or throw to 'unknown'. This prevent too high cardinality\n    const topicLabel = topicStrToLabel.get(topic) ?? 'unknown'\n    const topicParams = params.topics[topic]\n    if (topicParams === undefined) {\n      // we are not scoring this topic\n      return\n    }\n\n    let topicScores = byTopic.get(topicLabel)\n    if (topicScores == null) {\n      topicScores = {\n        p1w: 0,\n        p2w: 0,\n        p3w: 0,\n        p3bw: 0,\n        p4w: 0\n      }\n      byTopic.set(topicLabel, topicScores)\n    }\n\n    let p1w = 0\n    let p2w = 0\n    let p3w = 0\n    let p3bw = 0\n    let p4w = 0\n\n    // P1: time in Mesh\n    if (tstats.inMesh) {\n      const p1 = Math.max(tstats.meshTime / topicParams.timeInMeshQuantum, topicParams.timeInMeshCap)\n      p1w += p1 * topicParams.timeInMeshWeight\n    }\n\n    // P2: first message deliveries\n    let p2 = tstats.firstMessageDeliveries\n    if (p2 > topicParams.firstMessageDeliveriesCap) {\n      p2 = topicParams.firstMessageDeliveriesCap\n    }\n    p2w += p2 * topicParams.firstMessageDeliveriesWeight\n\n    // P3: mesh message deliveries\n    if (\n      tstats.meshMessageDeliveriesActive &&\n      tstats.meshMessageDeliveries < topicParams.meshMessageDeliveriesThreshold\n    ) {\n      const deficit = topicParams.meshMessageDeliveriesThreshold - tstats.meshMessageDeliveries\n      const p3 = deficit * deficit\n      p3w += p3 * topicParams.meshMessageDeliveriesWeight\n    }\n\n    // P3b:\n    // NOTE: the weight of P3b is negative (validated in validateTopicScoreParams) so this detracts\n    const p3b = tstats.meshFailurePenalty\n    p3bw += p3b * topicParams.meshFailurePenaltyWeight\n\n    // P4: invalid messages\n    // NOTE: the weight of P4 is negative (validated in validateTopicScoreParams) so this detracts\n    const p4 = tstats.invalidMessageDeliveries * tstats.invalidMessageDeliveries\n    p4w += p4 * topicParams.invalidMessageDeliveriesWeight\n\n    // update score, mixing with topic weight\n    score += (p1w + p2w + p3w + p3bw + p4w) * topicParams.topicWeight\n\n    topicScores.p1w += p1w\n    topicScores.p2w += p2w\n    topicScores.p3w += p3w\n    topicScores.p3bw += p3bw\n    topicScores.p4w += p4w\n  })\n\n  // apply the topic score cap, if any\n  if (params.topicScoreCap > 0 && score > params.topicScoreCap) {\n    score = params.topicScoreCap\n\n    // Proportionally apply cap to all individual contributions\n    const capF = params.topicScoreCap / score\n    for (const ws of byTopic.values()) {\n      ws.p1w *= capF\n      ws.p2w *= capF\n      ws.p3w *= capF\n      ws.p3bw *= capF\n      ws.p4w *= capF\n    }\n  }\n\n  let p5w = 0\n  let p6w = 0\n  let p7w = 0\n\n  // P5: application-specific score\n  const p5 = params.appSpecificScore(peer)\n  p5w += p5 * params.appSpecificWeight\n\n  // P6: IP colocation factor\n  pstats.knownIPs.forEach((ip) => {\n    if (params.IPColocationFactorWhitelist.has(ip)) {\n      return\n    }\n\n    // P6 has a cliff (IPColocationFactorThreshold)\n    // It's only applied if at least that many peers are connected to us from that source IP addr.\n    // It is quadratic, and the weight is negative (validated in validatePeerScoreParams)\n    const peersInIP = peerIPs.get(ip)\n    const numPeersInIP = (peersInIP != null) ? peersInIP.size : 0\n    if (numPeersInIP > params.IPColocationFactorThreshold) {\n      const surplus = numPeersInIP - params.IPColocationFactorThreshold\n      const p6 = surplus * surplus\n      p6w += p6 * params.IPColocationFactorWeight\n    }\n  })\n\n  // P7: behavioural pattern penalty\n  const p7 = pstats.behaviourPenalty * pstats.behaviourPenalty\n  p7w += p7 * params.behaviourPenaltyWeight\n\n  score += p5w + p6w + p7w\n\n  return {\n    byTopic,\n    p5w,\n    p6w,\n    p7w,\n    score\n  }\n}\n\nexport function computeAllPeersScoreWeights (\n  peerIdStrs: Iterable<string>,\n  peerStats: Map<string, PeerStats>,\n  params: PeerScoreParams,\n  peerIPs: Map<string, Set<string>>,\n  topicStrToLabel: TopicStrToLabel\n): ScoreWeights<number[]> {\n  const sw: ScoreWeights<number[]> = {\n    byTopic: new Map(),\n    p5w: [],\n    p6w: [],\n    p7w: [],\n    score: []\n  }\n\n  for (const peerIdStr of peerIdStrs) {\n    const pstats = peerStats.get(peerIdStr)\n    if (pstats != null) {\n      const swPeer = computeScoreWeights(peerIdStr, pstats, params, peerIPs, topicStrToLabel)\n\n      for (const [topic, swPeerTopic] of swPeer.byTopic) {\n        let swTopic = sw.byTopic.get(topic)\n        if (swTopic == null) {\n          swTopic = {\n            p1w: [],\n            p2w: [],\n            p3w: [],\n            p3bw: [],\n            p4w: []\n          }\n          sw.byTopic.set(topic, swTopic)\n        }\n\n        swTopic.p1w.push(swPeerTopic.p1w)\n        swTopic.p2w.push(swPeerTopic.p2w)\n        swTopic.p3w.push(swPeerTopic.p3w)\n        swTopic.p3bw.push(swPeerTopic.p3bw)\n        swTopic.p4w.push(swPeerTopic.p4w)\n      }\n\n      sw.p5w.push(swPeer.p5w)\n      sw.p6w.push(swPeer.p6w)\n      sw.p7w.push(swPeer.p7w)\n      sw.score.push(swPeer.score)\n    } else {\n      sw.p5w.push(0)\n      sw.p6w.push(0)\n      sw.p7w.push(0)\n      sw.score.push(0)\n    }\n  }\n\n  return sw\n}\n", "\nexport class AbortError extends Error {\n  type: string\n  code: string\n\n  constructor (message?: string, code?: string) {\n    super(message ?? 'The operation was aborted')\n    this.type = 'aborted'\n    this.code = code ?? 'ABORT_ERR'\n  }\n}\n", "\n// If the passed object is an (async) iterable, then get the iterator\n// If it's probably an iterator already (i.e. has next function) return it\n// else throw\nexport function getIterator <T> (obj: AsyncIterable<T>): AsyncIterator<T>\nexport function getIterator <T> (obj: AsyncIterator<T>): AsyncIterator<T>\nexport function getIterator <T> (obj: Iterable<T>): Iterator<T>\nexport function getIterator <T> (obj: Iterator<T>): Iterator<T>\nexport function getIterator <T> (obj: any): AsyncIterator<T> | Iterator <T>\nexport function getIterator <T> (obj: any): AsyncIterator<T> | Iterator <T> {\n  if (obj != null) {\n    if (typeof obj[Symbol.iterator] === 'function') {\n      return obj[Symbol.iterator]()\n    }\n    if (typeof obj[Symbol.asyncIterator] === 'function') {\n      return obj[Symbol.asyncIterator]()\n    }\n    if (typeof obj.next === 'function') {\n      return obj // probably an iterator\n    }\n  }\n  throw new Error('argument is not an iterator or iterable')\n}\n", "/**\n * @packageDocumentation\n *\n * @example\n *\n * ```js\n * import { abortableSource } from 'abortable-iterator'\n *\n * async function main () {\n *   // An example function that creates an async iterator that yields an increasing\n *   // number every x milliseconds and NEVER ENDS!\n *   const asyncCounter = async function * (start, delay) {\n *     let i = start\n *     while (true) {\n *       yield new Promise(resolve => setTimeout(() => resolve(i++), delay))\n *     }\n *   }\n *\n *   // Create a counter that'll yield numbers from 0 upwards every second\n *   const everySecond = asyncCounter(0, 1000)\n *\n *   // Make everySecond abortable!\n *   const controller = new AbortController()\n *   const abortableEverySecond = abortableSource(everySecond, controller.signal)\n *\n *   // Abort after 5 seconds\n *   setTimeout(() => controller.abort(), 5000)\n *\n *   try {\n *     // Start the iteration, which will throw after 5 seconds when it is aborted\n *     for await (const n of abortableEverySecond) {\n *       console.log(n)\n *     }\n *   } catch (err) {\n *     if (err.code === 'ERR_ABORTED') {\n *       // Expected - all ok :D\n *     } else {\n *       throw err\n *     }\n *   }\n * }\n *\n * main()\n * ```\n */\n\nimport { AbortError } from './abort-error.js'\nimport { getIterator } from 'get-iterator'\nimport type { Duplex, Source, Sink } from 'it-stream-types'\n\nexport interface Options<T> {\n  onReturnError?: (err: Error) => void\n  onAbort?: (source: Source<T>) => void\n  abortMessage?: string\n  abortCode?: string\n  returnOnAbort?: boolean\n}\n\n/**\n * Wrap an iterator to make it abortable, allow cleanup when aborted via onAbort\n */\nexport function abortableSource <T> (source: Source<T>, signal: AbortSignal, options?: Options<T>): AsyncGenerator<T> {\n  const opts: Options<T> = options ?? {}\n  const iterator = getIterator<T>(source)\n\n  async function * abortable (): AsyncGenerator<Awaited<T>, void, unknown> {\n    let nextAbortHandler: (() => void) | null\n    const abortHandler = (): void => {\n      if (nextAbortHandler != null) nextAbortHandler()\n    }\n\n    signal.addEventListener('abort', abortHandler)\n\n    while (true) {\n      let result: IteratorResult<T, any>\n      try {\n        if (signal.aborted) {\n          const { abortMessage, abortCode } = opts\n          throw new AbortError(abortMessage, abortCode)\n        }\n\n        const abort = new Promise<any>((resolve, reject) => { // eslint-disable-line no-loop-func\n          nextAbortHandler = () => {\n            const { abortMessage, abortCode } = opts\n            reject(new AbortError(abortMessage, abortCode))\n          }\n        })\n\n        // Race the iterator and the abort signals\n        result = await Promise.race([abort, iterator.next()])\n        nextAbortHandler = null\n      } catch (err: any) {\n        signal.removeEventListener('abort', abortHandler)\n\n        // Might not have been aborted by a known signal\n        const isKnownAborter = err.type === 'aborted' && signal.aborted\n\n        if (isKnownAborter && (opts.onAbort != null)) {\n          // Do any custom abort handling for the iterator\n          opts.onAbort(source)\n        }\n\n        // End the iterator if it is a generator\n        if (typeof iterator.return === 'function') {\n          try {\n            const p = iterator.return()\n\n            if (p instanceof Promise) { // eslint-disable-line max-depth\n              p.catch(err => {\n                if (opts.onReturnError != null) {\n                  opts.onReturnError(err)\n                }\n              })\n            }\n          } catch (err: any) {\n            if (opts.onReturnError != null) { // eslint-disable-line max-depth\n              opts.onReturnError(err)\n            }\n          }\n        }\n\n        if (isKnownAborter && opts.returnOnAbort === true) {\n          return\n        }\n\n        throw err\n      }\n\n      if (result.done === true) {\n        break\n      }\n\n      yield result.value\n    }\n\n    signal.removeEventListener('abort', abortHandler)\n  }\n\n  return abortable()\n}\n\nexport function abortableSink <T, R = Promise<void>> (sink: Sink<AsyncIterable<T>, R>, signal: AbortSignal, options?: Options<T>): Sink<Source<T>, R> {\n  return (source: Source<T>) => sink(abortableSource(source, signal, options))\n}\n\nexport function abortableDuplex <TSource, TSink = TSource, RSink = Promise<void>> (duplex: Duplex<AsyncIterable<TSource>, Source<TSink>, RSink>, signal: AbortSignal, options?: Options<TSource>): Duplex<AsyncGenerator<TSource>, Source<TSink>, RSink> {\n  return {\n    sink: abortableSink(duplex.sink, signal, {\n      ...options,\n      onAbort: undefined\n    }),\n    source: abortableSource(duplex.source, signal, options)\n  }\n}\n\nexport { AbortError }\nexport { abortableSink as abortableTransform }\n", "import { abortableSource } from 'abortable-iterator'\nimport { encode, decode } from 'it-length-prefixed'\nimport merge from 'it-merge'\nimport { pipe } from 'it-pipe'\nimport { pushable, type Pushable } from 'it-pushable'\nimport type { Stream } from '@libp2p/interface'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\ninterface OutboundStreamOpts {\n  /** Max size in bytes for pushable buffer. If full, will throw on .push */\n  maxBufferSize?: number\n}\n\ninterface InboundStreamOpts {\n  /** Max size in bytes for reading messages from the stream */\n  maxDataLength?: number\n}\n\nexport class OutboundStream {\n  private readonly pushable: Pushable<Uint8Array>\n  private readonly lpPushable: Pushable<Uint8ArrayList>\n  private readonly closeController: AbortController\n  private readonly maxBufferSize: number\n\n  constructor (private readonly rawStream: Stream, errCallback: (e: Error) => void, opts: OutboundStreamOpts) {\n    this.pushable = pushable({ objectMode: false })\n    this.lpPushable = pushable({ objectMode: false })\n    this.closeController = new AbortController()\n    this.maxBufferSize = opts.maxBufferSize ?? Infinity\n\n    pipe(\n      abortableSource(\n        merge<Uint8Array | Uint8ArrayList>(\n          this.lpPushable,\n          pipe(\n            this.pushable,\n            (source) => encode(source)\n          )\n        ), this.closeController.signal, { returnOnAbort: true }\n      ),\n      this.rawStream\n    ).catch(errCallback)\n  }\n\n  get protocol (): string {\n    // TODO remove this non-nullish assertion after https://github.com/libp2p/js-libp2p-interfaces/pull/265 is incorporated\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.rawStream.protocol!\n  }\n\n  push (data: Uint8Array): void {\n    if (this.pushable.readableLength > this.maxBufferSize) {\n      throw Error(`OutboundStream buffer full, size > ${this.maxBufferSize}`)\n    }\n\n    this.pushable.push(data)\n  }\n\n  /**\n   * Same to push() but this is prefixed data so no need to encode length prefixed again\n   */\n  pushPrefixed (data: Uint8ArrayList): void {\n    if (this.lpPushable.readableLength > this.maxBufferSize) {\n      throw Error(`OutboundStream buffer full, size > ${this.maxBufferSize}`)\n    }\n    this.lpPushable.push(data)\n  }\n\n  async close (): Promise<void> {\n    this.closeController.abort()\n    // similar to pushable.end() but clear the internal buffer\n    await this.pushable.return()\n    await this.lpPushable.return()\n    await this.rawStream.close()\n  }\n}\n\nexport class InboundStream {\n  public readonly source: AsyncIterable<Uint8ArrayList>\n\n  private readonly rawStream: Stream\n  private readonly closeController: AbortController\n\n  constructor (rawStream: Stream, opts: InboundStreamOpts = {}) {\n    this.rawStream = rawStream\n    this.closeController = new AbortController()\n\n    this.source = abortableSource(\n      pipe(this.rawStream, (source) => decode(source, opts)),\n      this.closeController.signal,\n      {\n        returnOnAbort: true\n      }\n    )\n  }\n\n  async close (): Promise<void> {\n    this.closeController.abort()\n    await this.rawStream.close()\n  }\n}\n", "import { type MsgIdStr, type MsgIdToStrFn, type PeerIdStr, RejectReason } from './types.js'\nimport type { Metrics } from './metrics.js'\n\n/**\n * IWantTracer is an internal tracer that tracks IWANT requests in order to penalize\n * peers who don't follow up on IWANT requests after an IHAVE advertisement.\n * The tracking of promises is probabilistic to avoid using too much memory.\n *\n * Note: Do not confuse these 'promises' with JS Promise objects.\n * These 'promises' are merely expectations of a peer's behavior.\n */\nexport class IWantTracer {\n  /**\n   * Promises to deliver a message\n   * Map per message id, per peer, promise expiration time\n   */\n  private readonly promises = new Map<MsgIdStr, Map<PeerIdStr, number>>()\n  /**\n   * First request time by msgId. Used for metrics to track expire times.\n   * Necessary to know if peers are actually breaking promises or simply sending them a bit later\n   */\n  private readonly requestMsByMsg = new Map<MsgIdStr, number>()\n  private readonly requestMsByMsgExpire: number\n\n  constructor (\n    private readonly gossipsubIWantFollowupMs: number,\n    private readonly msgIdToStrFn: MsgIdToStrFn,\n    private readonly metrics: Metrics | null\n  ) {\n    this.requestMsByMsgExpire = 10 * gossipsubIWantFollowupMs\n  }\n\n  get size (): number {\n    return this.promises.size\n  }\n\n  get requestMsByMsgSize (): number {\n    return this.requestMsByMsg.size\n  }\n\n  /**\n   * Track a promise to deliver a message from a list of msgIds we are requesting\n   */\n  addPromise (from: PeerIdStr, msgIds: Uint8Array[]): void {\n    // pick msgId randomly from the list\n    const ix = Math.floor(Math.random() * msgIds.length)\n    const msgId = msgIds[ix]\n    const msgIdStr = this.msgIdToStrFn(msgId)\n\n    let expireByPeer = this.promises.get(msgIdStr)\n    if (expireByPeer == null) {\n      expireByPeer = new Map()\n      this.promises.set(msgIdStr, expireByPeer)\n    }\n\n    const now = Date.now()\n\n    // If a promise for this message id and peer already exists we don't update the expiry\n    if (!expireByPeer.has(from)) {\n      expireByPeer.set(from, now + this.gossipsubIWantFollowupMs)\n\n      if (this.metrics != null) {\n        this.metrics.iwantPromiseStarted.inc(1)\n        if (!this.requestMsByMsg.has(msgIdStr)) {\n          this.requestMsByMsg.set(msgIdStr, now)\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns the number of broken promises for each peer who didn't follow up on an IWANT request.\n   *\n   * This should be called not too often relative to the expire times, since it iterates over the whole data.\n   */\n  getBrokenPromises (): Map<PeerIdStr, number> {\n    const now = Date.now()\n    const result = new Map<PeerIdStr, number>()\n\n    let brokenPromises = 0\n\n    this.promises.forEach((expireByPeer, msgId) => {\n      expireByPeer.forEach((expire, p) => {\n        // the promise has been broken\n        if (expire < now) {\n          // add 1 to result\n          result.set(p, (result.get(p) ?? 0) + 1)\n          // delete from tracked promises\n          expireByPeer.delete(p)\n          // for metrics\n          brokenPromises++\n        }\n      })\n      // clean up empty promises for a msgId\n      if (expireByPeer.size === 0) {\n        this.promises.delete(msgId)\n      }\n    })\n\n    this.metrics?.iwantPromiseBroken.inc(brokenPromises)\n\n    return result\n  }\n\n  /**\n   * Someone delivered a message, stop tracking promises for it\n   */\n  deliverMessage (msgIdStr: MsgIdStr, isDuplicate = false): void {\n    this.trackMessage(msgIdStr)\n\n    const expireByPeer = this.promises.get(msgIdStr)\n\n    // Expired promise, check requestMsByMsg\n    if (expireByPeer != null) {\n      this.promises.delete(msgIdStr)\n\n      if (this.metrics != null) {\n        this.metrics.iwantPromiseResolved.inc(1)\n        if (isDuplicate) this.metrics.iwantPromiseResolvedFromDuplicate.inc(1)\n        this.metrics.iwantPromiseResolvedPeers.inc(expireByPeer.size)\n      }\n    }\n  }\n\n  /**\n   * A message got rejected, so we can stop tracking promises and let the score penalty apply from invalid message delivery,\n   * unless its an obviously invalid message.\n   */\n  rejectMessage (msgIdStr: MsgIdStr, reason: RejectReason): void {\n    this.trackMessage(msgIdStr)\n\n    // A message got rejected, so we can stop tracking promises and let the score penalty apply.\n    // With the expection of obvious invalid messages\n    switch (reason) {\n      case RejectReason.Error:\n        return\n      default:\n        break\n    }\n\n    this.promises.delete(msgIdStr)\n  }\n\n  clear (): void {\n    this.promises.clear()\n  }\n\n  prune (): void {\n    const maxMs = Date.now() - this.requestMsByMsgExpire\n    let count = 0\n\n    for (const [k, v] of this.requestMsByMsg.entries()) {\n      if (v < maxMs) {\n        // messages that stay too long in the requestMsByMsg map, delete\n        this.requestMsByMsg.delete(k)\n        count++\n      } else {\n        // recent messages, keep them\n        // sort by insertion order\n        break\n      }\n    }\n\n    this.metrics?.iwantMessagePruned.inc(count)\n  }\n\n  private trackMessage (msgIdStr: MsgIdStr): void {\n    if (this.metrics != null) {\n      const requestMs = this.requestMsByMsg.get(msgIdStr)\n      if (requestMs !== undefined) {\n        this.metrics.iwantPromiseDeliveryTime.observe((Date.now() - requestMs) / 1000)\n        this.requestMsByMsg.delete(msgIdStr)\n      }\n    }\n  }\n}\n", "/* eslint-env browser */\n\n// Check native crypto exists and is enabled (In insecure context `self.crypto`\n// exists but `self.crypto.subtle` does not).\nexport default {\n  get (win = globalThis) {\n    const nativeCrypto = win.crypto\n\n    if (nativeCrypto == null || nativeCrypto.subtle == null) {\n      throw Object.assign(\n        new Error(\n          'Missing Web Crypto API. ' +\n          'The most likely cause of this error is that this page is being accessed ' +\n          'from an insecure context (i.e. not HTTPS). For more information and ' +\n          'possible resolutions see ' +\n          'https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api'\n        ),\n        { code: 'ERR_MISSING_WEB_CRYPTO' }\n      )\n    }\n\n    return nativeCrypto\n  }\n}\n", "import { CodeError } from '@libp2p/interface'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { identity } from 'multiformats/hashes/identity'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { isPromise } from '../util.js'\nimport * as crypto from './ed25519.js'\nimport { exporter } from './exporter.js'\nimport * as pbm from './keys.js'\nimport type { Multibase } from 'multiformats'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport class Ed25519PublicKey {\n  private readonly _key: Uint8Array\n\n  constructor (key: Uint8Array) {\n    this._key = ensureKey(key, crypto.publicKeyLength)\n  }\n\n  verify (data: Uint8Array | Uint8ArrayList, sig: Uint8Array): boolean {\n    return crypto.hashAndVerify(this._key, sig, data)\n  }\n\n  marshal (): Uint8Array {\n    return this._key\n  }\n\n  get bytes (): Uint8Array {\n    return pbm.PublicKey.encode({\n      Type: pbm.KeyType.Ed25519,\n      Data: this.marshal()\n    }).subarray()\n  }\n\n  equals (key: any): boolean {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  hash (): Uint8Array | Promise<Uint8Array> {\n    const p = sha256.digest(this.bytes)\n\n    if (isPromise(p)) {\n      return p.then(({ bytes }) => bytes)\n    }\n\n    return p.bytes\n  }\n}\n\nexport class Ed25519PrivateKey {\n  private readonly _key: Uint8Array\n  private readonly _publicKey: Uint8Array\n\n  // key       - 64 byte Uint8Array containing private key\n  // publicKey - 32 byte Uint8Array containing public key\n  constructor (key: Uint8Array, publicKey: Uint8Array) {\n    this._key = ensureKey(key, crypto.privateKeyLength)\n    this._publicKey = ensureKey(publicKey, crypto.publicKeyLength)\n  }\n\n  sign (message: Uint8Array | Uint8ArrayList): Uint8Array {\n    return crypto.hashAndSign(this._key, message)\n  }\n\n  get public (): Ed25519PublicKey {\n    return new Ed25519PublicKey(this._publicKey)\n  }\n\n  marshal (): Uint8Array {\n    return this._key\n  }\n\n  get bytes (): Uint8Array {\n    return pbm.PrivateKey.encode({\n      Type: pbm.KeyType.Ed25519,\n      Data: this.marshal()\n    }).subarray()\n  }\n\n  equals (key: any): boolean {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  async hash (): Promise<Uint8Array> {\n    const p = sha256.digest(this.bytes)\n    let bytes: Uint8Array\n\n    if (isPromise(p)) {\n      ({ bytes } = await p)\n    } else {\n      bytes = p.bytes\n    }\n\n    return bytes\n  }\n\n  /**\n   * Gets the ID of the key.\n   *\n   * The key id is the base58 encoding of the identity multihash containing its public key.\n   * The public key is a protobuf encoding containing a type and the DER encoding\n   * of the PKCS SubjectPublicKeyInfo.\n   *\n   * @returns {Promise<string>}\n   */\n  async id (): Promise<string> {\n    const encoding = identity.digest(this.public.bytes)\n    return base58btc.encode(encoding.bytes).substring(1)\n  }\n\n  /**\n   * Exports the key into a password protected `format`\n   */\n  async export (password: string, format = 'libp2p-key'): Promise<Multibase<'m'>> {\n    if (format === 'libp2p-key') {\n      return exporter(this.bytes, password)\n    } else {\n      throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT')\n    }\n  }\n}\n\nexport function unmarshalEd25519PrivateKey (bytes: Uint8Array): Ed25519PrivateKey {\n  // Try the old, redundant public key version\n  if (bytes.length > crypto.privateKeyLength) {\n    bytes = ensureKey(bytes, crypto.privateKeyLength + crypto.publicKeyLength)\n    const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength)\n    const publicKeyBytes = bytes.subarray(crypto.privateKeyLength, bytes.length)\n    return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes)\n  }\n\n  bytes = ensureKey(bytes, crypto.privateKeyLength)\n  const privateKeyBytes = bytes.subarray(0, crypto.privateKeyLength)\n  const publicKeyBytes = bytes.subarray(crypto.publicKeyLength)\n  return new Ed25519PrivateKey(privateKeyBytes, publicKeyBytes)\n}\n\nexport function unmarshalEd25519PublicKey (bytes: Uint8Array): Ed25519PublicKey {\n  bytes = ensureKey(bytes, crypto.publicKeyLength)\n  return new Ed25519PublicKey(bytes)\n}\n\nexport async function generateKeyPair (): Promise<Ed25519PrivateKey> {\n  const { privateKey, publicKey } = crypto.generateKey()\n  return new Ed25519PrivateKey(privateKey, publicKey)\n}\n\nexport async function generateKeyPairFromSeed (seed: Uint8Array): Promise<Ed25519PrivateKey> {\n  const { privateKey, publicKey } = crypto.generateKeyFromSeed(seed)\n  return new Ed25519PrivateKey(privateKey, publicKey)\n}\n\nfunction ensureKey (key: Uint8Array, length: number): Uint8Array {\n  key = Uint8Array.from(key ?? [])\n  if (key.length !== length) {\n    throw new CodeError(`Key must be a Uint8Array of length ${length}, got ${key.length}`, 'ERR_INVALID_KEY_TYPE')\n  }\n  return key\n}\n", "import { bases } from 'multiformats/basics'\nimport { allocUnsafe } from '../alloc.js'\nimport type { MultibaseCodec } from 'multiformats'\n\nfunction createCodec (name: string, prefix: string, encode: (buf: Uint8Array) => string, decode: (str: string) => Uint8Array): MultibaseCodec<any> {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: {\n      decode\n    }\n  }\n}\n\nconst string = createCodec('utf8', 'u', (buf) => {\n  const decoder = new TextDecoder('utf8')\n  return 'u' + decoder.decode(buf)\n}, (str) => {\n  const encoder = new TextEncoder()\n  return encoder.encode(str.substring(1))\n})\n\nconst ascii = createCodec('ascii', 'a', (buf) => {\n  let string = 'a'\n\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i])\n  }\n  return string\n}, (str) => {\n  str = str.substring(1)\n  const buf = allocUnsafe(str.length)\n\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i)\n  }\n\n  return buf\n})\n\nexport type SupportedEncodings = 'utf8' | 'utf-8' | 'hex' | 'latin1' | 'ascii' | 'binary' | keyof typeof bases\n\nconst BASES: Record<SupportedEncodings, MultibaseCodec<any>> = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii,\n  binary: ascii,\n\n  ...bases\n}\n\nexport default BASES\n", "import { asUint8Array } from './util/as-uint8array.js'\nimport bases, { type SupportedEncodings } from './util/bases.js'\n\nexport type { SupportedEncodings }\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString (string: string, encoding: SupportedEncodings = 'utf8'): Uint8Array {\n  const base = bases[encoding]\n\n  if (base == null) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'))\n  }\n\n  // add multibase prefix\n  return base.decoder.decode(`${base.prefix}${string}`) // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n", "import { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nexport function base64urlToBuffer (str: string, len?: number): Uint8Array {\n  let buf = uint8ArrayFromString(str, 'base64urlpad')\n\n  if (len != null) {\n    if (buf.length > len) throw new Error('byte array longer than desired length')\n    buf = uint8ArrayConcat([new Uint8Array(len - buf.length), buf])\n  }\n\n  return buf\n}\n\nexport function isPromise <T = unknown> (thing: any): thing is Promise<T> {\n  if (thing == null) {\n    return false\n  }\n\n  return typeof thing.then === 'function' &&\n    typeof thing.catch === 'function' &&\n    typeof thing.finally === 'function'\n}\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\n// copied from utils\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\nfunction isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\n// Other libraries would silently corrupt the data instead of throwing an error,\n// when they don't support it.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!isBytes(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (!isBytes(a)) throw new Error('Uint8Array expected');\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!isBytes(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (isBytes(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    if (!isBytes(a)) throw new Error('Uint8Array expected');\n    sum += a.length;\n  }\n  let res = new Uint8Array(sum);\n  let pad = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || isBytes(val),\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) \u2261 1    if a is a square (mod p)\n  // (a | p) \u2261 -1   if a is not a square (mod p)\n  // (a | p) \u2261 0    if a \u2261 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) \u2261 -1 and set c \u2261 zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be \u2261 -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P \u2261 3 (mod 4)\n  // \u221An = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q \u2261 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P \u2261 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / \uD835\uDC4A) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(\uD835\uDC4A\u22121) * (Math.ceil(\uD835\uDC5B / \uD835\uDC4A) + 1), where:\n     * - \uD835\uDC4A is the window size\n     * - \uD835\uDC5B is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax\u00B2 + y\u00B2 = 1 + dx\u00B2y\u00B2\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, FHash, Hex } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n\n// Edwards curves must declare params a & d.\nexport type CurveType = BasicCurve<bigint> & {\n  a: bigint; // curve param a\n  d: bigint; // curve param d\n  hash: FHash; // Hashing\n  randomBytes: (bytesLength?: number) => Uint8Array; // CSPRNG\n  adjustScalarBytes?: (bytes: Uint8Array) => Uint8Array; // clears bits to get valid field elemtn\n  domain?: (data: Uint8Array, ctx: Uint8Array, phflag: boolean) => Uint8Array; // Used for hashing\n  uvRatio?: (u: bigint, v: bigint) => { isValid: boolean; value: bigint }; // Ratio \u221A(u/v)\n  prehash?: FHash; // RFC 8032 pre-hashing of messages to sign() / verify()\n  mapToCurve?: (scalar: bigint[]) => AffinePoint<bigint>; // for hash-to-curve standard\n};\n\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    curve,\n    {\n      hash: 'function',\n      a: 'bigint',\n      d: 'bigint',\n      randomBytes: 'function',\n    },\n    {\n      adjustScalarBytes: 'function',\n      domain: 'function',\n      uvRatio: 'function',\n      mapToCurve: 'function',\n    }\n  );\n  // Set defaults\n  return Object.freeze({ ...opts } as const);\n}\n\n// Instance of Extended Point with coordinates in X, Y, Z, T\nexport interface ExtPointType extends Group<ExtPointType> {\n  readonly ex: bigint;\n  readonly ey: bigint;\n  readonly ez: bigint;\n  readonly et: bigint;\n  get x(): bigint;\n  get y(): bigint;\n  assertValidity(): void;\n  multiply(scalar: bigint): ExtPointType;\n  multiplyUnsafe(scalar: bigint): ExtPointType;\n  isSmallOrder(): boolean;\n  isTorsionFree(): boolean;\n  clearCofactor(): ExtPointType;\n  toAffine(iz?: bigint): AffinePoint<bigint>;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n}\n// Static methods of Extended Point with coordinates in X, Y, Z, T\nexport interface ExtPointConstructor extends GroupConstructor<ExtPointType> {\n  new (x: bigint, y: bigint, z: bigint, t: bigint): ExtPointType;\n  fromAffine(p: AffinePoint<bigint>): ExtPointType;\n  fromHex(hex: Hex): ExtPointType;\n  fromPrivateKey(privateKey: Hex): ExtPointType;\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: Hex) => Uint8Array;\n  sign: (message: Hex, privateKey: Hex, options?: { context?: Hex }) => Uint8Array;\n  verify: (\n    sig: Hex,\n    message: Hex,\n    publicKey: Hex,\n    options?: { context?: Hex; zip215: boolean }\n  ) => boolean;\n  ExtendedPoint: ExtPointConstructor;\n  utils: {\n    randomPrivateKey: () => Uint8Array;\n    getExtendedPublicKey: (key: Hex) => {\n      head: Uint8Array;\n      prefix: Uint8Array;\n      scalar: bigint;\n      point: ExtPointType;\n      pointBytes: Uint8Array;\n    };\n  };\n};\n\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const {\n    Fp,\n    n: CURVE_ORDER,\n    prehash: prehash,\n    hash: cHash,\n    randomBytes,\n    nByteLength,\n    h: cofactor,\n  } = CURVE;\n  const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n  const modP = Fp.create; // Function overrides\n\n  // sqrt(u/v)\n  const uvRatio =\n    CURVE.uvRatio ||\n    ((u: bigint, v: bigint) => {\n      try {\n        return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n      } catch (e) {\n        return { isValid: false, value: _0n };\n      }\n    });\n  const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes: Uint8Array) => bytes); // NOOP\n  const domain =\n    CURVE.domain ||\n    ((data: Uint8Array, ctx: Uint8Array, phflag: boolean) => {\n      if (ctx.length || phflag) throw new Error('Contexts/pre-hash are not supported');\n      return data;\n    }); // NOOP\n  const inBig = (n: bigint) => typeof n === 'bigint' && _0n < n; // n in [1..]\n  const inRange = (n: bigint, max: bigint) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n  const in0MaskRange = (n: bigint) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n  function assertInRange(n: bigint, max: bigint) {\n    // n in [1..max-1]\n    if (inRange(n, max)) return n;\n    throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n  }\n  function assertGE0(n: bigint) {\n    // n in [0..CURVE_ORDER-1]\n    return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n  }\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function isPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ExtendedPoint expected');\n  }\n  // Extended Point works in extended coordinates: (x, y, z, t) \u220B (x=x/z, y=y/z, t=xy).\n  // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n  class Point implements ExtPointType {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    static readonly ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n\n    constructor(\n      readonly ex: bigint,\n      readonly ey: bigint,\n      readonly ez: bigint,\n      readonly et: bigint\n    ) {\n      if (!in0MaskRange(ex)) throw new Error('x required');\n      if (!in0MaskRange(ey)) throw new Error('y required');\n      if (!in0MaskRange(ez)) throw new Error('z required');\n      if (!in0MaskRange(et)) throw new Error('t required');\n    }\n\n    get x(): bigint {\n      return this.toAffine().x;\n    }\n    get y(): bigint {\n      return this.toAffine().y;\n    }\n\n    static fromAffine(p: AffinePoint<bigint>): Point {\n      if (p instanceof Point) throw new Error('extended point not allowed');\n      const { x, y } = p || {};\n      if (!in0MaskRange(x) || !in0MaskRange(y)) throw new Error('invalid affine point');\n      return new Point(x, y, _1n, modP(x * y));\n    }\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.ez));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n    // Not required for fromHex(), which always creates valid points.\n    // Could be useful for fromAffine().\n    assertValidity(): void {\n      const { a, d } = CURVE;\n      if (this.is0()) throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n      // Equation in affine coordinates: ax\u00B2 + y\u00B2 = 1 + dx\u00B2y\u00B2\n      // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX\u00B2 + Y\u00B2)Z\u00B2 = Z\u2074 + dX\u00B2Y\u00B2\n      const { ex: X, ey: Y, ez: Z, et: T } = this;\n      const X2 = modP(X * X); // X\u00B2\n      const Y2 = modP(Y * Y); // Y\u00B2\n      const Z2 = modP(Z * Z); // Z\u00B2\n      const Z4 = modP(Z2 * Z2); // Z\u2074\n      const aX2 = modP(X2 * a); // aX\u00B2\n      const left = modP(Z2 * modP(aX2 + Y2)); // (aX\u00B2 + Y\u00B2)Z\u00B2\n      const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z\u2074 + dX\u00B2Y\u00B2\n      if (left !== right) throw new Error('bad point: equation left != right (1)');\n      // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n      const XY = modP(X * Y);\n      const ZT = modP(Z * T);\n      if (XY !== ZT) throw new Error('bad point: equation left != right (2)');\n    }\n\n    // Compare one point to another.\n    equals(other: Point): boolean {\n      isPoint(other);\n      const { ex: X1, ey: Y1, ez: Z1 } = this;\n      const { ex: X2, ey: Y2, ez: Z2 } = other;\n      const X1Z2 = modP(X1 * Z2);\n      const X2Z1 = modP(X2 * Z1);\n      const Y1Z2 = modP(Y1 * Z2);\n      const Y2Z1 = modP(Y2 * Z1);\n      return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n\n    protected is0(): boolean {\n      return this.equals(Point.ZERO);\n    }\n\n    negate(): Point {\n      // Flips point sign to a negative one (-x, y in affine coords)\n      return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n    }\n\n    // Fast algo for doubling Extended Point.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n    // Cost: 4M + 4S + 1*a + 6add + 1*2.\n    double(): Point {\n      const { a } = CURVE;\n      const { ex: X1, ey: Y1, ez: Z1 } = this;\n      const A = modP(X1 * X1); // A = X12\n      const B = modP(Y1 * Y1); // B = Y12\n      const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n      const D = modP(a * A); // D = a*A\n      const x1y1 = X1 + Y1;\n      const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n      const G = D + B; // G = D+B\n      const F = G - C; // F = G-C\n      const H = D - B; // H = D-B\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    // Fast algo for adding 2 Extended Points.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n    // Cost: 9M + 1*a + 1*d + 7add.\n    add(other: Point) {\n      isPoint(other);\n      const { a, d } = CURVE;\n      const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n      const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n      // Faster algo for adding 2 Extended Points when curve's a=-1.\n      // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n      // Cost: 8M + 8add + 2*2.\n      // Note: It does not check whether the `other` point is valid.\n      if (a === BigInt(-1)) {\n        const A = modP((Y1 - X1) * (Y2 + X2));\n        const B = modP((Y1 + X1) * (Y2 - X2));\n        const F = modP(B - A);\n        if (F === _0n) return this.double(); // Same point. Tests say it doesn't affect timing\n        const C = modP(Z1 * _2n * T2);\n        const D = modP(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = modP(E * F);\n        const Y3 = modP(G * H);\n        const T3 = modP(E * H);\n        const Z3 = modP(F * G);\n        return new Point(X3, Y3, Z3, T3);\n      }\n      const A = modP(X1 * X2); // A = X1*X2\n      const B = modP(Y1 * Y2); // B = Y1*Y2\n      const C = modP(T1 * d * T2); // C = T1*d*T2\n      const D = modP(Z1 * Z2); // D = Z1*Z2\n      const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n      const F = D - C; // F = D-C\n      const G = D + C; // G = D+C\n      const H = modP(B - a * A); // H = B-a*A\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    subtract(other: Point): Point {\n      return this.add(other.negate());\n    }\n\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n    }\n\n    // Constant-time multiplication.\n    multiply(scalar: bigint): Point {\n      const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n      return Point.normalizeZ([p, f])[0];\n    }\n\n    // Non-constant-time multiplication. Uses double-and-add algorithm.\n    // It's faster, but should only be used when you don't care about\n    // an exposed private key e.g. sig verification.\n    // Does NOT allow scalars higher than CURVE.n.\n    multiplyUnsafe(scalar: bigint): Point {\n      let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n      if (n === _0n) return I;\n      if (this.equals(I) || n === _1n) return this;\n      if (this.equals(G)) return this.wNAF(n).p;\n      return wnaf.unsafeLadder(this, n);\n    }\n\n    // Checks if point is of small order.\n    // If you add something to small order point, you will have \"dirty\"\n    // point with torsion component.\n    // Multiplies point by cofactor and checks if the result is 0.\n    isSmallOrder(): boolean {\n      return this.multiplyUnsafe(cofactor).is0();\n    }\n\n    // Multiplies point by curve order and checks if the result is 0.\n    // Returns `false` is the point is dirty.\n    isTorsionFree(): boolean {\n      return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n    }\n\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    toAffine(iz?: bigint): AffinePoint<bigint> {\n      const { ex: x, ey: y, ez: z } = this;\n      const is0 = this.is0();\n      if (iz == null) iz = is0 ? _8n : (Fp.inv(z) as bigint); // 8 was chosen arbitrarily\n      const ax = modP(x * iz);\n      const ay = modP(y * iz);\n      const zz = modP(z * iz);\n      if (is0) return { x: _0n, y: _1n };\n      if (zz !== _1n) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n\n    clearCofactor(): Point {\n      const { h: cofactor } = CURVE;\n      if (cofactor === _1n) return this;\n      return this.multiplyUnsafe(cofactor);\n    }\n\n    // Converts hash string or Uint8Array to Point.\n    // Uses algo from RFC8032 5.1.3.\n    static fromHex(hex: Hex, zip215 = false): Point {\n      const { d, a } = CURVE;\n      const len = Fp.BYTES;\n      hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n      const normed = hex.slice(); // copy again, we'll manipulate it\n      const lastByte = hex[len - 1]; // select last byte\n      normed[len - 1] = lastByte & ~0x80; // clear last bit\n      const y = ut.bytesToNumberLE(normed);\n      if (y === _0n) {\n        // y=0 is allowed\n      } else {\n        // RFC8032 prohibits >= p, but ZIP215 doesn't\n        if (zip215) assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n        else assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n      }\n\n      // Ed25519: x\u00B2 = (y\u00B2-1)/(dy\u00B2+1) mod p. Ed448: x\u00B2 = (y\u00B2-1)/(dy\u00B2-1) mod p. Generic case:\n      // ax\u00B2+y\u00B2=1+dx\u00B2y\u00B2 => y\u00B2-1=dx\u00B2y\u00B2-ax\u00B2 => y\u00B2-1=x\u00B2(dy\u00B2-a) => x\u00B2=(y\u00B2-1)/(dy\u00B2-a)\n      const y2 = modP(y * y); // denominator is always non-0 mod p.\n      const u = modP(y2 - _1n); // u = y\u00B2 - 1\n      const v = modP(d * y2 - a); // v = d y\u00B2 + 1.\n      let { isValid, value: x } = uvRatio(u, v); // \u221A(u/v)\n      if (!isValid) throw new Error('Point.fromHex: invalid y coordinate');\n      const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n      const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n      if (!zip215 && x === _0n && isLastByteOdd)\n        // if x=0 and x_0 = 1, fail\n        throw new Error('Point.fromHex: x=0 and x_0=1');\n      if (isLastByteOdd !== isXOdd) x = modP(-x); // if x_0 != x mod 2, set x = p-x\n      return Point.fromAffine({ x, y });\n    }\n    static fromPrivateKey(privKey: Hex) {\n      return getExtendedPublicKey(privKey).point;\n    }\n    toRawBytes(): Uint8Array {\n      const { x, y } = this.toAffine();\n      const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n      bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n      return bytes; // and use the last byte to encode sign of x\n    }\n    toHex(): string {\n      return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n    }\n  }\n  const { BASE: G, ZERO: I } = Point;\n  const wnaf = wNAF(Point, nByteLength * 8);\n\n  function modN(a: bigint) {\n    return mod(a, CURVE_ORDER);\n  }\n  // Little-endian SHA512 with modulo n\n  function modN_LE(hash: Uint8Array): bigint {\n    return modN(ut.bytesToNumberLE(hash));\n  }\n\n  /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n  function getExtendedPublicKey(key: Hex) {\n    const len = nByteLength;\n    key = ensureBytes('private key', key, len);\n    // Hash private key with curve's hash function to produce uniformingly random input\n    // Check byte lengths: ensure(64, h(ensure(32, key)))\n    const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n    const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n    const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n    const scalar = modN_LE(head); // The actual private scalar\n    const point = G.multiply(scalar); // Point on Edwards curve aka public key\n    const pointBytes = point.toRawBytes(); // Uint8Array representation\n    return { head, prefix, scalar, point, pointBytes };\n  }\n\n  // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n  function getPublicKey(privKey: Hex): Uint8Array {\n    return getExtendedPublicKey(privKey).pointBytes;\n  }\n\n  // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n  function hashDomainToScalar(context: Hex = new Uint8Array(), ...msgs: Uint8Array[]) {\n    const msg = ut.concatBytes(...msgs);\n    return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n  }\n\n  /** Signs message with privateKey. RFC8032 5.1.6 */\n  function sign(msg: Hex, privKey: Hex, options: { context?: Hex } = {}): Uint8Array {\n    msg = ensureBytes('message', msg);\n    if (prehash) msg = prehash(msg); // for ed25519ph etc.\n    const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n    const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n    const R = G.multiply(r).toRawBytes(); // R = rG\n    const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n    const s = modN(r + k * scalar); // S = (r + k * s) mod L\n    assertGE0(s); // 0 <= s < l\n    const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n    return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n  }\n\n  const verifyOpts: { context?: Hex; zip215?: boolean } = VERIFY_DEFAULT;\n  function verify(sig: Hex, msg: Hex, publicKey: Hex, options = verifyOpts): boolean {\n    const { context, zip215 } = options;\n    const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n    sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n    msg = ensureBytes('message', msg);\n    if (prehash) msg = prehash(msg); // for ed25519ph, etc\n\n    const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n    // zip215: true is good for consensus-critical apps and allows points < 2^256\n    // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n    let A, R, SB;\n    try {\n      A = Point.fromHex(publicKey, zip215);\n      R = Point.fromHex(sig.slice(0, len), zip215);\n      SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n    } catch (error) {\n      return false;\n    }\n    if (!zip215 && A.isSmallOrder()) return false;\n\n    const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n    const RkA = R.add(A.multiplyUnsafe(k));\n    // [8][S]B = [8]R + [8][k]A'\n    return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n  }\n\n  G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n\n  const utils = {\n    getExtendedPublicKey,\n    // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n    randomPrivateKey: (): Uint8Array => randomBytes(Fp.BYTES),\n\n    /**\n     * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n     * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n     * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n     * @param windowSize 2, 4, 8, 16\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3));\n      return point;\n    },\n  };\n\n  return {\n    CURVE,\n    getPublicKey,\n    sign,\n    verify,\n    ExtendedPoint: Point,\n    utils,\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { ExtPointType, twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport {\n  bytesToHex,\n  bytesToNumberLE,\n  ensureBytes,\n  equalBytes,\n  Hex,\n  numberToBytesLE,\n} from './abstract/utils.js';\nimport { createHasher, htfBasicOpts, expand_message_xmd } from './abstract/hash-to-curve.js';\nimport { AffinePoint, Group } from './abstract/curve.js';\n\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\n\nconst ED25519_P = BigInt(\n  '57896044618658097711785492504343953926634992332820282019728792003956564819949'\n);\n// \u221A(-1) aka \u221A(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt(\n  '19681161376707505956807079304988542015446066515923890162744021073123829784752'\n);\n\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n\nfunction ed25519_pow_2_252_3(x: bigint) {\n  const P = ED25519_P;\n  const x2 = (x * x) % P;\n  const b2 = (x2 * x) % P; // x^3, 11\n  const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n  const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n  const b10 = (pow2(b5, _5n, P) * b5) % P;\n  const b20 = (pow2(b10, _10n, P) * b10) % P;\n  const b40 = (pow2(b20, _20n, P) * b20) % P;\n  const b80 = (pow2(b40, _40n, P) * b40) % P;\n  const b160 = (pow2(b80, _80n, P) * b80) % P;\n  const b240 = (pow2(b160, _80n, P) * b80) % P;\n  const b250 = (pow2(b240, _10n, P) * b10) % P;\n  const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n  // ^ To pow to (p+3)/8, multiply it by x.\n  return { pow_p_5_8, b2 };\n}\n\nfunction adjustScalarBytes(bytes: Uint8Array): Uint8Array {\n  // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n  // set the three least significant bits of the first byte\n  bytes[0] &= 248; // 0b1111_1000\n  // and the most significant bit of the last to zero,\n  bytes[31] &= 127; // 0b0111_1111\n  // set the second most significant bit of the last byte to 1\n  bytes[31] |= 64; // 0b0100_0000\n  return bytes;\n}\n\n// sqrt(u/v)\nfunction uvRatio(u: bigint, v: bigint): { isValid: boolean; value: bigint } {\n  const P = ED25519_P;\n  const v3 = mod(v * v * v, P); // v\u00B3\n  const v7 = mod(v3 * v3 * v, P); // v\u2077\n  // (p+3)/8 and (p-5)/8\n  const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n  let x = mod(u * v3 * pow, P); // (uv\u00B3)(uv\u2077)^(p-5)/8\n  const vx2 = mod(v * x * x, P); // vx\u00B2\n  const root1 = x; // First root candidate\n  const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n  const useRoot1 = vx2 === u; // If vx\u00B2 = u (mod p), x is a square root\n  const useRoot2 = vx2 === mod(-u, P); // If vx\u00B2 = -u, set x <-- x * 2^((p-1)/4)\n  const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx\u00B2 = -u\u221A(-1)\n  if (useRoot1) x = root1;\n  if (useRoot2 || noRoot) x = root2; // We return root2 anyway, for const-time\n  if (isNegativeLE(x, P)) x = mod(-x, P);\n  return { isValid: useRoot1 || useRoot2, value: x };\n}\n\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n  '0100000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n  '0000000000000000000000000000000000000000000000000000000000000080',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n  'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n  '0000000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\n\nconst Fp = Field(ED25519_P, undefined, true);\n\nconst ed25519Defaults = {\n  // Param: a\n  a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n  // d is equal to -121665/121666 over finite field.\n  // Negative number is P - number, and division is invert(number, P)\n  d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n  // Finite field \uD835\uDD3Dp over which we'll do calculations; 2n**255n - 19n\n  Fp,\n  // Subgroup order: how many points curve has\n  // 2n**252n + 27742317777372353535851937790883648493n;\n  n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n  // Cofactor\n  h: BigInt(8),\n  // Base point (x, y) aka generator point\n  Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n  Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n  hash: sha512,\n  randomBytes,\n  adjustScalarBytes,\n  // dom2\n  // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n  // Constant-time, u/\u221Av\n  uvRatio,\n} as const;\n\nexport const ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);\n\nfunction ed25519_domain(data: Uint8Array, ctx: Uint8Array, phflag: boolean) {\n  if (ctx.length > 255) throw new Error('Context is too big');\n  return concatBytes(\n    utf8ToBytes('SigEd25519 no Ed25519 collisions'),\n    new Uint8Array([phflag ? 1 : 0, ctx.length]),\n    ctx,\n    data\n  );\n}\n\nexport const ed25519ctx = /* @__PURE__ */ twistedEdwards({\n  ...ed25519Defaults,\n  domain: ed25519_domain,\n});\nexport const ed25519ph = /* @__PURE__ */ twistedEdwards({\n  ...ed25519Defaults,\n  domain: ed25519_domain,\n  prehash: sha512,\n});\n\nexport const x25519 = /* @__PURE__ */ (() =>\n  montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x: bigint): bigint => {\n      const P = ED25519_P;\n      // x^(p-2) aka x^(2^255-21)\n      const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n      return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n  }))();\n\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub: Hex): Uint8Array {\n  const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n  const _1n = BigInt(1);\n  return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv: Uint8Array): Uint8Array {\n  const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n  return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\n\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\n\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u: bigint) {\n  let tv1 = Fp.sqr(u);       //  1.  tv1 = u^2\n  tv1 = Fp.mul(tv1, _2n);       //  2.  tv1 = 2 * tv1\n  let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n  let x1n = Fp.neg(ELL2_J);  //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n  let tv2 = Fp.sqr(xd);      //  5.  tv2 = xd^2\n  let gxd = Fp.mul(tv2, xd);    //  6.  gxd = tv2 * xd        # gxd = xd^3\n  let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n  gx1 = Fp.mul(gx1, x1n);       //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n  gx1 = Fp.add(gx1, tv2);       //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n  gx1 = Fp.mul(gx1, x1n);       //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n  let tv3 = Fp.sqr(gxd);     //  11. tv3 = gxd^2\n  tv2 = Fp.sqr(tv3);         //  12. tv2 = tv3^2           # gxd^4\n  tv3 = Fp.mul(tv3, gxd);       //  13. tv3 = tv3 * gxd       # gxd^3\n  tv3 = Fp.mul(tv3, gx1);       //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n  tv2 = Fp.mul(tv2, tv3);       //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n  let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n  y11 = Fp.mul(y11, tv3);       //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n  let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n  tv2 = Fp.sqr(y11);         //  19. tv2 = y11^2\n  tv2 = Fp.mul(tv2, gxd);       //  20. tv2 = tv2 * gxd\n  let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n  let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n  let x2n = Fp.mul(x1n, tv1);   //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n  let y21 = Fp.mul(y11, u);     //  24. y21 = y11 * u\n  y21 = Fp.mul(y21, ELL2_C2);   //  25. y21 = y21 * c2\n  let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n  let gx2 = Fp.mul(gx1, tv1);   //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n  tv2 = Fp.sqr(y21);         //  28. tv2 = y21^2\n  tv2 = Fp.mul(tv2, gxd);       //  29. tv2 = tv2 * gxd\n  let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n  let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n  tv2 = Fp.sqr(y1);          //  32. tv2 = y1^2\n  tv2 = Fp.mul(tv2, gxd);       //  33. tv2 = tv2 * gxd\n  let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n  let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n  let y = Fp.cmov(y2, y1, e3);  //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n  let e4 = Fp.isOdd(y);         //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n  y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n  return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\n\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u: bigint) {\n  const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n  // map_to_curve_elligator2_curve25519(u)\n  let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n  xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n  let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n  let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n  let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n  let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n  let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n  xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n  xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n  yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n  yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n\n  const inv = Fp.invertBatch([xd, yd]); // batch division\n  return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\n\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    ed25519.ExtendedPoint,\n    (scalars: bigint[]) => map_to_curve_elligator2_edwards25519(scalars[0]),\n    {\n      DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n      encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha512,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n\nfunction assertRstPoint(other: unknown) {\n  if (!(other instanceof RistPoint)) throw new Error('RistrettoPoint expected');\n}\n\n// \u221A(-1) aka \u221A(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// \u221A(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt(\n  '25063068953384623474111414158702152701244531502492656460079210482610430750235'\n);\n// 1 / \u221A(a-d)\nconst INVSQRT_A_MINUS_D = BigInt(\n  '54469307008909316920995813868745141605393597292927456921205312896311721017578'\n);\n// 1-d\u00B2\nconst ONE_MINUS_D_SQ = BigInt(\n  '1159843021668779879193775521855586647937357759715417654439879720876111806838'\n);\n// (d-1)\u00B2\nconst D_MINUS_ONE_SQ = BigInt(\n  '40440834346308536858101042469323190826248399146238708352240133220865137265952'\n);\n// Calculates 1/\u221A(number)\nconst invertSqrt = (number: bigint) => uvRatio(_1n, number);\n\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes: Uint8Array) =>\n  ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n\ntype ExtendedPoint = ExtPointType;\n\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0: bigint): ExtendedPoint {\n  const { d } = ed25519.CURVE;\n  const P = ed25519.CURVE.Fp.ORDER;\n  const mod = ed25519.CURVE.Fp.create;\n  const r = mod(SQRT_M1 * r0 * r0); // 1\n  const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n  let c = BigInt(-1); // 3\n  const D = mod((c - d * r) * mod(r + d)); // 4\n  let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n  let s_ = mod(s * r0); // 6\n  if (!isNegativeLE(s_, P)) s_ = mod(-s_);\n  if (!Ns_D_is_sq) s = s_; // 7\n  if (!Ns_D_is_sq) c = r; // 8\n  const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n  const s2 = s * s;\n  const W0 = mod((s + s) * D); // 10\n  const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n  const W2 = mod(_1n - s2); // 12\n  const W3 = mod(_1n + s2); // 13\n  return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint implements Group<RistPoint> {\n  static BASE: RistPoint;\n  static ZERO: RistPoint;\n  // Private property to discourage combining ExtendedPoint + RistrettoPoint\n  // Always use Ristretto encoding/decoding instead.\n  constructor(private readonly ep: ExtendedPoint) {}\n\n  static fromAffine(ap: AffinePoint<bigint>) {\n    return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n  }\n\n  /**\n   * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n   * The hash-to-group operation applies Elligator twice and adds the results.\n   * **Note:** this is one-way map, there is no conversion from point to hash.\n   * https://ristretto.group/formulas/elligator.html\n   * @param hex 64-byte output of a hash function\n   */\n  static hashToCurve(hex: Hex): RistPoint {\n    hex = ensureBytes('ristrettoHash', hex, 64);\n    const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n    const R1 = calcElligatorRistrettoMap(r1);\n    const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n    const R2 = calcElligatorRistrettoMap(r2);\n    return new RistPoint(R1.add(R2));\n  }\n\n  /**\n   * Converts ristretto-encoded string to ristretto point.\n   * https://ristretto.group/formulas/decoding.html\n   * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n   */\n  static fromHex(hex: Hex): RistPoint {\n    hex = ensureBytes('ristrettoHex', hex, 32);\n    const { a, d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n    const s = bytes255ToNumberLE(hex);\n    // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n    // 3. Check that s is non-negative, or else abort\n    if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P)) throw new Error(emsg);\n    const s2 = mod(s * s);\n    const u1 = mod(_1n + a * s2); // 4 (a is -1)\n    const u2 = mod(_1n - a * s2); // 5\n    const u1_2 = mod(u1 * u1);\n    const u2_2 = mod(u2 * u2);\n    const v = mod(a * d * u1_2 - u2_2); // 6\n    const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n    const Dx = mod(I * u2); // 8\n    const Dy = mod(I * Dx * v); // 9\n    let x = mod((s + s) * Dx); // 10\n    if (isNegativeLE(x, P)) x = mod(-x); // 10\n    const y = mod(u1 * Dy); // 11\n    const t = mod(x * y); // 12\n    if (!isValid || isNegativeLE(t, P) || y === _0n) throw new Error(emsg);\n    return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n  }\n\n  /**\n   * Encodes ristretto point to Uint8Array.\n   * https://ristretto.group/formulas/encoding.html\n   */\n  toRawBytes(): Uint8Array {\n    let { ex: x, ey: y, ez: z, et: t } = this.ep;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const u1 = mod(mod(z + y) * mod(z - y)); // 1\n    const u2 = mod(x * y); // 2\n    // Square root always exists\n    const u2sq = mod(u2 * u2);\n    const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n    const D1 = mod(invsqrt * u1); // 4\n    const D2 = mod(invsqrt * u2); // 5\n    const zInv = mod(D1 * D2 * t); // 6\n    let D: bigint; // 7\n    if (isNegativeLE(t * zInv, P)) {\n      let _x = mod(y * SQRT_M1);\n      let _y = mod(x * SQRT_M1);\n      x = _x;\n      y = _y;\n      D = mod(D1 * INVSQRT_A_MINUS_D);\n    } else {\n      D = D2; // 8\n    }\n    if (isNegativeLE(x * zInv, P)) y = mod(-y); // 9\n    let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n    if (isNegativeLE(s, P)) s = mod(-s);\n    return numberToBytesLE(s, 32); // 11\n  }\n\n  toHex(): string {\n    return bytesToHex(this.toRawBytes());\n  }\n\n  toString(): string {\n    return this.toHex();\n  }\n\n  // Compare one point to another.\n  equals(other: RistPoint): boolean {\n    assertRstPoint(other);\n    const { ex: X1, ey: Y1 } = this.ep;\n    const { ex: X2, ey: Y2 } = other.ep;\n    const mod = ed25519.CURVE.Fp.create;\n    // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n    const one = mod(X1 * Y2) === mod(Y1 * X2);\n    const two = mod(Y1 * Y2) === mod(X1 * X2);\n    return one || two;\n  }\n\n  add(other: RistPoint): RistPoint {\n    assertRstPoint(other);\n    return new RistPoint(this.ep.add(other.ep));\n  }\n\n  subtract(other: RistPoint): RistPoint {\n    assertRstPoint(other);\n    return new RistPoint(this.ep.subtract(other.ep));\n  }\n\n  multiply(scalar: bigint): RistPoint {\n    return new RistPoint(this.ep.multiply(scalar));\n  }\n\n  multiplyUnsafe(scalar: bigint): RistPoint {\n    return new RistPoint(this.ep.multiplyUnsafe(scalar));\n  }\n\n  double(): RistPoint {\n    return new RistPoint(this.ep.double());\n  }\n\n  negate(): RistPoint {\n    return new RistPoint(this.ep.negate());\n  }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n  if (!RistPoint.BASE) RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n  if (!RistPoint.ZERO) RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n  return RistPoint;\n})();\n\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg: Uint8Array, options: htfBasicOpts) => {\n  const d = options.DST;\n  const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n  const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n  const P = RistPoint.hashToCurve(uniform_bytes);\n  return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n", "import { ed25519 as ed } from '@noble/curves/ed25519'\nimport type { Uint8ArrayKeyPair } from './interface.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nconst PUBLIC_KEY_BYTE_LENGTH = 32\nconst PRIVATE_KEY_BYTE_LENGTH = 64 // private key is actually 32 bytes but for historical reasons we concat private and public keys\nconst KEYS_BYTE_LENGTH = 32\n\nexport { PUBLIC_KEY_BYTE_LENGTH as publicKeyLength }\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength }\n\nexport function generateKey (): Uint8ArrayKeyPair {\n  // the actual private key (32 bytes)\n  const privateKeyRaw = ed.utils.randomPrivateKey()\n  const publicKey = ed.getPublicKey(privateKeyRaw)\n\n  // concatenated the public key to the private key\n  const privateKey = concatKeys(privateKeyRaw, publicKey)\n\n  return {\n    privateKey,\n    publicKey\n  }\n}\n\n/**\n * Generate keypair from a 32 byte uint8array\n */\nexport function generateKeyFromSeed (seed: Uint8Array): Uint8ArrayKeyPair {\n  if (seed.length !== KEYS_BYTE_LENGTH) {\n    throw new TypeError('\"seed\" must be 32 bytes in length.')\n  } else if (!(seed instanceof Uint8Array)) {\n    throw new TypeError('\"seed\" must be a node.js Buffer, or Uint8Array.')\n  }\n\n  // based on node forges algorithm, the seed is used directly as private key\n  const privateKeyRaw = seed\n  const publicKey = ed.getPublicKey(privateKeyRaw)\n\n  const privateKey = concatKeys(privateKeyRaw, publicKey)\n\n  return {\n    privateKey,\n    publicKey\n  }\n}\n\nexport function hashAndSign (privateKey: Uint8Array, msg: Uint8Array | Uint8ArrayList): Uint8Array {\n  const privateKeyRaw = privateKey.subarray(0, KEYS_BYTE_LENGTH)\n\n  return ed.sign(msg instanceof Uint8Array ? msg : msg.subarray(), privateKeyRaw)\n}\n\nexport function hashAndVerify (publicKey: Uint8Array, sig: Uint8Array, msg: Uint8Array | Uint8ArrayList): boolean {\n  return ed.verify(sig, msg instanceof Uint8Array ? msg : msg.subarray(), publicKey)\n}\n\nfunction concatKeys (privateKeyRaw: Uint8Array, publicKey: Uint8Array): Uint8Array {\n  const privateKey = new Uint8Array(PRIVATE_KEY_BYTE_LENGTH)\n  for (let i = 0; i < KEYS_BYTE_LENGTH; i++) {\n    privateKey[i] = privateKeyRaw[i]\n    privateKey[KEYS_BYTE_LENGTH + i] = publicKey[i]\n  }\n  return privateKey\n}\n", "import { concat } from 'uint8arrays/concat'\nimport { fromString } from 'uint8arrays/from-string'\nimport webcrypto from '../webcrypto.js'\nimport type { CreateOptions, AESCipher } from './interface.js'\n\n// WebKit on Linux does not support deriving a key from an empty PBKDF2 key.\n// So, as a workaround, we provide the generated key as a constant. We test that\n// this generated key is accurate in test/workaround.spec.ts\n// Generated via:\n// await crypto.subtle.exportKey('jwk',\n//   await crypto.subtle.deriveKey(\n//     { name: 'PBKDF2', salt: new Uint8Array(16), iterations: 32767, hash: { name: 'SHA-256' } },\n//     await crypto.subtle.importKey('raw', new Uint8Array(0), { name: 'PBKDF2' }, false, ['deriveKey']),\n//     { name: 'AES-GCM', length: 128 }, true, ['encrypt', 'decrypt'])\n// )\nexport const derivedEmptyPasswordKey = { alg: 'A128GCM', ext: true, k: 'scm9jmO_4BJAgdwWGVulLg', key_ops: ['encrypt', 'decrypt'], kty: 'oct' }\n\n// Based off of code from https://github.com/luke-park/SecureCompatibleEncryptionExamples\n\nexport function create (opts?: CreateOptions): AESCipher {\n  const algorithm = opts?.algorithm ?? 'AES-GCM'\n  let keyLength = opts?.keyLength ?? 16\n  const nonceLength = opts?.nonceLength ?? 12\n  const digest = opts?.digest ?? 'SHA-256'\n  const saltLength = opts?.saltLength ?? 16\n  const iterations = opts?.iterations ?? 32767\n\n  const crypto = webcrypto.get()\n  keyLength *= 8 // Browser crypto uses bits instead of bytes\n\n  /**\n   * Uses the provided password to derive a pbkdf2 key. The key\n   * will then be used to encrypt the data.\n   */\n  async function encrypt (data: Uint8Array, password: string | Uint8Array): Promise<Uint8Array> {\n    const salt = crypto.getRandomValues(new Uint8Array(saltLength))\n    const nonce = crypto.getRandomValues(new Uint8Array(nonceLength))\n    const aesGcm = { name: algorithm, iv: nonce }\n\n    if (typeof password === 'string') {\n      password = fromString(password)\n    }\n\n    let cryptoKey: CryptoKey\n    if (password.length === 0) {\n      cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['encrypt'])\n      try {\n        const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } }\n        const runtimeDerivedEmptyPassword = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey'])\n        cryptoKey = await crypto.subtle.deriveKey(deriveParams, runtimeDerivedEmptyPassword, { name: algorithm, length: keyLength }, true, ['encrypt'])\n      } catch {\n        cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['encrypt'])\n      }\n    } else {\n      // Derive a key using PBKDF2.\n      const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } }\n      const rawKey = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey'])\n      cryptoKey = await crypto.subtle.deriveKey(deriveParams, rawKey, { name: algorithm, length: keyLength }, true, ['encrypt'])\n    }\n\n    // Encrypt the string.\n    const ciphertext = await crypto.subtle.encrypt(aesGcm, cryptoKey, data)\n    return concat([salt, aesGcm.iv, new Uint8Array(ciphertext)])\n  }\n\n  /**\n   * Uses the provided password to derive a pbkdf2 key. The key\n   * will then be used to decrypt the data. The options used to create\n   * this decryption cipher must be the same as those used to create\n   * the encryption cipher.\n   */\n  async function decrypt (data: Uint8Array, password: string | Uint8Array): Promise<Uint8Array> {\n    const salt = data.subarray(0, saltLength)\n    const nonce = data.subarray(saltLength, saltLength + nonceLength)\n    const ciphertext = data.subarray(saltLength + nonceLength)\n    const aesGcm = { name: algorithm, iv: nonce }\n\n    if (typeof password === 'string') {\n      password = fromString(password)\n    }\n\n    let cryptoKey: CryptoKey\n    if (password.length === 0) {\n      try {\n        const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } }\n        const runtimeDerivedEmptyPassword = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey'])\n        cryptoKey = await crypto.subtle.deriveKey(deriveParams, runtimeDerivedEmptyPassword, { name: algorithm, length: keyLength }, true, ['decrypt'])\n      } catch {\n        cryptoKey = await crypto.subtle.importKey('jwk', derivedEmptyPasswordKey, { name: 'AES-GCM' }, true, ['decrypt'])\n      }\n    } else {\n      // Derive the key using PBKDF2.\n      const deriveParams = { name: 'PBKDF2', salt, iterations, hash: { name: digest } }\n      const rawKey = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveKey'])\n      cryptoKey = await crypto.subtle.deriveKey(deriveParams, rawKey, { name: algorithm, length: keyLength }, true, ['decrypt'])\n    }\n\n    // Decrypt the string.\n    const plaintext = await crypto.subtle.decrypt(aesGcm, cryptoKey, ciphertext)\n    return new Uint8Array(plaintext)\n  }\n\n  const cipher: AESCipher = {\n    encrypt,\n    decrypt\n  }\n\n  return cipher\n}\n", "import { base64 } from 'multiformats/bases/base64'\nimport * as ciphers from '../ciphers/aes-gcm.js'\nimport type { Multibase } from 'multiformats'\n\n/**\n * Exports the given PrivateKey as a base64 encoded string.\n * The PrivateKey is encrypted via a password derived PBKDF2 key\n * leveraging the aes-gcm cipher algorithm.\n */\nexport async function exporter (privateKey: Uint8Array, password: string): Promise<Multibase<'m'>> {\n  const cipher = ciphers.create()\n  const encryptedKey = await cipher.encrypt(privateKey, password)\n  return base64.encode(encryptedKey)\n}\n", "const f32 = new Float32Array([-0])\nconst f8b = new Uint8Array(f32.buffer)\n\n/**\n * Writes a 32 bit float to a buffer using little endian byte order\n */\nexport function writeFloatLE (val: number, buf: Uint8Array, pos: number): void {\n  f32[0] = val\n  buf[pos] = f8b[0]\n  buf[pos + 1] = f8b[1]\n  buf[pos + 2] = f8b[2]\n  buf[pos + 3] = f8b[3]\n}\n\n/**\n * Writes a 32 bit float to a buffer using big endian byte order\n */\nexport function writeFloatBE (val: number, buf: Uint8Array, pos: number): void {\n  f32[0] = val\n  buf[pos] = f8b[3]\n  buf[pos + 1] = f8b[2]\n  buf[pos + 2] = f8b[1]\n  buf[pos + 3] = f8b[0]\n}\n\n/**\n * Reads a 32 bit float from a buffer using little endian byte order\n */\nexport function readFloatLE (buf: Uint8Array, pos: number): number {\n  f8b[0] = buf[pos]\n  f8b[1] = buf[pos + 1]\n  f8b[2] = buf[pos + 2]\n  f8b[3] = buf[pos + 3]\n  return f32[0]\n}\n\n/**\n * Reads a 32 bit float from a buffer using big endian byte order\n */\nexport function readFloatBE (buf: Uint8Array, pos: number): number {\n  f8b[3] = buf[pos]\n  f8b[2] = buf[pos + 1]\n  f8b[1] = buf[pos + 2]\n  f8b[0] = buf[pos + 3]\n  return f32[0]\n}\n\nconst f64 = new Float64Array([-0])\nconst d8b = new Uint8Array(f64.buffer)\n\n/**\n * Writes a 64 bit double to a buffer using little endian byte order\n */\nexport function writeDoubleLE (val: number, buf: Uint8Array, pos: number): void {\n  f64[0] = val\n  buf[pos] = d8b[0]\n  buf[pos + 1] = d8b[1]\n  buf[pos + 2] = d8b[2]\n  buf[pos + 3] = d8b[3]\n  buf[pos + 4] = d8b[4]\n  buf[pos + 5] = d8b[5]\n  buf[pos + 6] = d8b[6]\n  buf[pos + 7] = d8b[7]\n}\n\n/**\n * Writes a 64 bit double to a buffer using big endian byte order\n */\nexport function writeDoubleBE (val: number, buf: Uint8Array, pos: number): void {\n  f64[0] = val\n  buf[pos] = d8b[7]\n  buf[pos + 1] = d8b[6]\n  buf[pos + 2] = d8b[5]\n  buf[pos + 3] = d8b[4]\n  buf[pos + 4] = d8b[3]\n  buf[pos + 5] = d8b[2]\n  buf[pos + 6] = d8b[1]\n  buf[pos + 7] = d8b[0]\n}\n\n/**\n * Reads a 64 bit double from a buffer using little endian byte order\n */\nexport function readDoubleLE (buf: Uint8Array, pos: number): number {\n  d8b[0] = buf[pos]\n  d8b[1] = buf[pos + 1]\n  d8b[2] = buf[pos + 2]\n  d8b[3] = buf[pos + 3]\n  d8b[4] = buf[pos + 4]\n  d8b[5] = buf[pos + 5]\n  d8b[6] = buf[pos + 6]\n  d8b[7] = buf[pos + 7]\n  return f64[0]\n}\n\n/**\n * Reads a 64 bit double from a buffer using big endian byte order\n */\nexport function readDoubleBE (buf: Uint8Array, pos: number): number {\n  d8b[7] = buf[pos]\n  d8b[6] = buf[pos + 1]\n  d8b[5] = buf[pos + 2]\n  d8b[4] = buf[pos + 3]\n  d8b[3] = buf[pos + 4]\n  d8b[2] = buf[pos + 5]\n  d8b[1] = buf[pos + 6]\n  d8b[0] = buf[pos + 7]\n  return f64[0]\n}\n", "// the largest BigInt we can safely downcast to a Number\nconst MAX_SAFE_NUMBER_INTEGER = BigInt(Number.MAX_SAFE_INTEGER)\nconst MIN_SAFE_NUMBER_INTEGER = BigInt(Number.MIN_SAFE_INTEGER)\n\n/**\n * Constructs new long bits.\n *\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @function Object() { [native code] }\n * @param {number} lo - Low 32 bits, unsigned\n * @param {number} hi - High 32 bits, unsigned\n */\nexport class LongBits {\n  public lo: number\n  public hi: number\n\n  constructor (lo: number, hi: number) {\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits\n     */\n    this.lo = lo | 0\n\n    /**\n     * High bits\n     */\n    this.hi = hi | 0\n  }\n\n  /**\n   * Converts this long bits to a possibly unsafe JavaScript number\n   */\n  toNumber (unsigned: boolean = false): number {\n    if (!unsigned && (this.hi >>> 31) > 0) {\n      const lo = ~this.lo + 1 >>> 0\n      let hi = ~this.hi >>> 0\n      if (lo === 0) {\n        hi = hi + 1 >>> 0\n      }\n      return -(lo + hi * 4294967296)\n    }\n    return this.lo + this.hi * 4294967296\n  }\n\n  /**\n   * Converts this long bits to a bigint\n   */\n  toBigInt (unsigned: boolean = false): bigint {\n    if (unsigned) {\n      return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n)\n    }\n\n    if ((this.hi >>> 31) !== 0) {\n      const lo = ~this.lo + 1 >>> 0\n      let hi = ~this.hi >>> 0\n      if (lo === 0) {\n        hi = hi + 1 >>> 0\n      }\n      return -(BigInt(lo) + (BigInt(hi) << 32n))\n    }\n\n    return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n)\n  }\n\n  /**\n   * Converts this long bits to a string\n   */\n  toString (unsigned: boolean = false): string {\n    return this.toBigInt(unsigned).toString()\n  }\n\n  /**\n   * Zig-zag encodes this long bits\n   */\n  zzEncode (): this {\n    const mask = this.hi >> 31\n    this.hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0\n    this.lo = (this.lo << 1 ^ mask) >>> 0\n    return this\n  }\n\n  /**\n   * Zig-zag decodes this long bits\n   */\n  zzDecode (): this {\n    const mask = -(this.lo & 1)\n    this.lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0\n    this.hi = (this.hi >>> 1 ^ mask) >>> 0\n    return this\n  }\n\n  /**\n   * Calculates the length of this longbits when encoded as a varint.\n   */\n  length (): number {\n    const part0 = this.lo\n    const part1 = (this.lo >>> 28 | this.hi << 4) >>> 0\n    const part2 = this.hi >>> 24\n    return part2 === 0\n      ? part1 === 0\n        ? part0 < 16384\n          ? part0 < 128 ? 1 : 2\n          : part0 < 2097152 ? 3 : 4\n        : part1 < 16384\n          ? part1 < 128 ? 5 : 6\n          : part1 < 2097152 ? 7 : 8\n      : part2 < 128 ? 9 : 10\n  }\n\n  /**\n   * Constructs new long bits from the specified number\n   */\n  static fromBigInt (value: bigint): LongBits {\n    if (value === 0n) {\n      return zero\n    }\n\n    if (value < MAX_SAFE_NUMBER_INTEGER && value > MIN_SAFE_NUMBER_INTEGER) {\n      return this.fromNumber(Number(value))\n    }\n\n    const negative = value < 0n\n\n    if (negative) {\n      value = -value\n    }\n\n    let hi = value >> 32n\n    let lo = value - (hi << 32n)\n\n    if (negative) {\n      hi = ~hi | 0n\n      lo = ~lo | 0n\n\n      if (++lo > TWO_32) {\n        lo = 0n\n        if (++hi > TWO_32) { hi = 0n }\n      }\n    }\n\n    return new LongBits(Number(lo), Number(hi))\n  }\n\n  /**\n   * Constructs new long bits from the specified number\n   */\n  static fromNumber (value: number): LongBits {\n    if (value === 0) { return zero }\n    const sign = value < 0\n    if (sign) { value = -value }\n    let lo = value >>> 0\n    let hi = (value - lo) / 4294967296 >>> 0\n    if (sign) {\n      hi = ~hi >>> 0\n      lo = ~lo >>> 0\n      if (++lo > 4294967295) {\n        lo = 0\n        if (++hi > 4294967295) { hi = 0 }\n      }\n    }\n    return new LongBits(lo, hi)\n  }\n\n  /**\n   * Constructs new long bits from a number, long or string\n   */\n  static from (value: bigint | number | string | { low: number, high: number }): LongBits {\n    if (typeof value === 'number') {\n      return LongBits.fromNumber(value)\n    }\n    if (typeof value === 'bigint') {\n      return LongBits.fromBigInt(value)\n    }\n    if (typeof value === 'string') {\n      return LongBits.fromBigInt(BigInt(value))\n    }\n    return value.low != null || value.high != null ? new LongBits(value.low >>> 0, value.high >>> 0) : zero\n  }\n}\n\nconst zero = new LongBits(0, 0)\nzero.toBigInt = function () { return 0n }\nzero.zzEncode = zero.zzDecode = function () { return this }\nzero.length = function () { return 1 }\n\nconst TWO_32 = 4294967296n\n", "/**\n * Calculates the UTF8 byte length of a string\n */\nexport function length (string: string): number {\n  let len = 0\n  let c = 0\n  for (let i = 0; i < string.length; ++i) {\n    c = string.charCodeAt(i)\n\n    if (c < 128) {\n      len += 1\n    } else if (c < 2048) {\n      len += 2\n    } else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n      ++i\n      len += 4\n    } else {\n      len += 3\n    }\n  }\n\n  return len\n}\n\n/**\n * Reads UTF8 bytes as a string\n */\nexport function read (buffer: Uint8Array, start: number, end: number): string {\n  const len = end - start\n\n  if (len < 1) {\n    return ''\n  }\n\n  let parts: string[] | undefined\n  const chunk: number[] = []\n  let i = 0 // char offset\n  let t: number // temporary\n\n  while (start < end) {\n    t = buffer[start++]\n\n    if (t < 128) {\n      chunk[i++] = t\n    } else if (t > 191 && t < 224) {\n      chunk[i++] = (t & 31) << 6 | buffer[start++] & 63\n    } else if (t > 239 && t < 365) {\n      t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000\n      chunk[i++] = 0xD800 + (t >> 10)\n      chunk[i++] = 0xDC00 + (t & 1023)\n    } else {\n      chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63\n    }\n\n    if (i > 8191) {\n      (parts ?? (parts = [])).push(String.fromCharCode.apply(String, chunk))\n      i = 0\n    }\n  }\n\n  if (parts != null) {\n    if (i > 0) {\n      parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)))\n    }\n\n    return parts.join('')\n  }\n\n  return String.fromCharCode.apply(String, chunk.slice(0, i))\n}\n\n/**\n * Writes a string as UTF8 bytes\n */\nexport function write (string: string, buffer: Uint8Array, offset: number): number {\n  const start = offset\n  let c1 // character 1\n  let c2 // character 2\n\n  for (let i = 0; i < string.length; ++i) {\n    c1 = string.charCodeAt(i)\n\n    if (c1 < 128) {\n      buffer[offset++] = c1\n    } else if (c1 < 2048) {\n      buffer[offset++] = c1 >> 6 | 192\n      buffer[offset++] = c1 & 63 | 128\n    } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n      c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF)\n      ++i\n      buffer[offset++] = c1 >> 18 | 240\n      buffer[offset++] = c1 >> 12 & 63 | 128\n      buffer[offset++] = c1 >> 6 & 63 | 128\n      buffer[offset++] = c1 & 63 | 128\n    } else {\n      buffer[offset++] = c1 >> 12 | 224\n      buffer[offset++] = c1 >> 6 & 63 | 128\n      buffer[offset++] = c1 & 63 | 128\n    }\n  }\n\n  return offset - start\n}\n", "import { readFloatLE, readDoubleLE } from './float.js'\nimport { LongBits } from './longbits.js'\nimport * as utf8 from './utf8.js'\nimport type { Reader } from '../index.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\n/* istanbul ignore next */\nfunction indexOutOfRange (reader: Reader, writeLength?: number): RangeError {\n  return RangeError(`index out of range: ${reader.pos} + ${writeLength ?? 1} > ${reader.len}`)\n}\n\nfunction readFixed32End (buf: Uint8Array, end: number): number { // note that this uses `end`, not `pos`\n  return (buf[end - 4] |\n        buf[end - 3] << 8 |\n        buf[end - 2] << 16 |\n        buf[end - 1] << 24) >>> 0\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n */\nexport class Uint8ArrayReader implements Reader {\n  public buf: Uint8Array\n  public pos: number\n  public len: number\n\n  public _slice = Uint8Array.prototype.subarray\n\n  constructor (buffer: Uint8Array) {\n    /**\n     * Read buffer\n     */\n    this.buf = buffer\n\n    /**\n     * Read buffer position\n     */\n    this.pos = 0\n\n    /**\n     * Read buffer length\n     */\n    this.len = buffer.length\n  }\n\n  /**\n   * Reads a varint as an unsigned 32 bit value\n   */\n  uint32 (): number {\n    let value = 4294967295\n\n    value = (this.buf[this.pos] & 127) >>> 0; if (this.buf[this.pos++] < 128) return value\n    value = (value | (this.buf[this.pos] & 127) << 7) >>> 0; if (this.buf[this.pos++] < 128) return value\n    value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value\n    value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value\n    value = (value | (this.buf[this.pos] & 15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value\n\n    if ((this.pos += 5) > this.len) {\n      this.pos = this.len\n      throw indexOutOfRange(this, 10)\n    }\n\n    return value\n  }\n\n  /**\n   * Reads a varint as a signed 32 bit value\n   */\n  int32 (): number {\n    return this.uint32() | 0\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 32 bit value\n   */\n  sint32 (): number {\n    const value = this.uint32()\n    return value >>> 1 ^ -(value & 1) | 0\n  }\n\n  /**\n   * Reads a varint as a boolean\n   */\n  bool (): boolean {\n    return this.uint32() !== 0\n  }\n\n  /**\n   * Reads fixed 32 bits as an unsigned 32 bit integer\n   */\n  fixed32 (): number {\n    if (this.pos + 4 > this.len) { throw indexOutOfRange(this, 4) }\n\n    const res = readFixed32End(this.buf, this.pos += 4)\n\n    return res\n  }\n\n  /**\n   * Reads fixed 32 bits as a signed 32 bit integer\n   */\n  sfixed32 (): number {\n    if (this.pos + 4 > this.len) {\n      throw indexOutOfRange(this, 4)\n    }\n\n    const res = readFixed32End(this.buf, this.pos += 4) | 0\n\n    return res\n  }\n\n  /**\n   * Reads a float (32 bit) as a number\n   */\n  float (): number {\n    if (this.pos + 4 > this.len) {\n      throw indexOutOfRange(this, 4)\n    }\n\n    const value = readFloatLE(this.buf, this.pos)\n    this.pos += 4\n    return value\n  }\n\n  /**\n   * Reads a double (64 bit float) as a number\n   */\n  double (): number {\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len) { throw indexOutOfRange(this, 4) }\n\n    const value = readDoubleLE(this.buf, this.pos)\n    this.pos += 8\n    return value\n  }\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint\n   */\n  bytes (): Uint8Array {\n    const length = this.uint32()\n    const start = this.pos\n    const end = this.pos + length\n\n    /* istanbul ignore if */\n    if (end > this.len) {\n      throw indexOutOfRange(this, length)\n    }\n\n    this.pos += length\n\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n      ? new Uint8Array(0)\n      : this.buf.subarray(start, end)\n  }\n\n  /**\n   * Reads a string preceded by its byte length as a varint\n   */\n  string (): string {\n    const bytes = this.bytes()\n    return utf8.read(bytes, 0, bytes.length)\n  }\n\n  /**\n   * Skips the specified number of bytes if specified, otherwise skips a varint\n   */\n  skip (length?: number): this {\n    if (typeof length === 'number') {\n      /* istanbul ignore if */\n      if (this.pos + length > this.len) { throw indexOutOfRange(this, length) }\n      this.pos += length\n    } else {\n      do {\n        /* istanbul ignore if */\n        if (this.pos >= this.len) {\n          throw indexOutOfRange(this)\n        }\n      } while ((this.buf[this.pos++] & 128) !== 0)\n    }\n    return this\n  }\n\n  /**\n   * Skips the next element of the specified wire type\n   */\n  skipType (wireType: number): this {\n    switch (wireType) {\n      case 0:\n        this.skip()\n        break\n      case 1:\n        this.skip(8)\n        break\n      case 2:\n        this.skip(this.uint32())\n        break\n      case 3:\n        while ((wireType = this.uint32() & 7) !== 4) {\n          this.skipType(wireType)\n        }\n        break\n      case 5:\n        this.skip(4)\n        break\n\n        /* istanbul ignore next */\n      default:\n        throw Error(`invalid wire type ${wireType} at offset ${this.pos}`)\n    }\n    return this\n  }\n\n  private readLongVarint (): LongBits {\n    // tends to deopt with local vars for octet etc.\n    const bits = new LongBits(0, 0)\n    let i = 0\n    if (this.len - this.pos > 4) { // fast route (lo)\n      for (; i < 4; ++i) {\n        // 1st..4th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n      // 5th\n      bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0\n      bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0\n      if (this.buf[this.pos++] < 128) { return bits }\n      i = 0\n    } else {\n      for (; i < 3; ++i) {\n        /* istanbul ignore if */\n        if (this.pos >= this.len) { throw indexOutOfRange(this) }\n        // 1st..3th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n      // 4th\n      bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0\n      return bits\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n      for (; i < 5; ++i) {\n        // 6th..10th\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n    } else {\n      for (; i < 5; ++i) {\n        if (this.pos >= this.len) {\n          throw indexOutOfRange(this)\n        }\n\n        // 6th..10th\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0\n        if (this.buf[this.pos++] < 128) { return bits }\n      }\n    }\n\n    throw Error('invalid varint encoding')\n  }\n\n  private readFixed64 (): LongBits {\n    if (this.pos + 8 > this.len) {\n      throw indexOutOfRange(this, 8)\n    }\n\n    const lo = readFixed32End(this.buf, this.pos += 4)\n    const hi = readFixed32End(this.buf, this.pos += 4)\n\n    return new LongBits(lo, hi)\n  }\n\n  /**\n   * Reads a varint as a signed 64 bit value\n   */\n  int64 (): bigint {\n    return this.readLongVarint().toBigInt()\n  }\n\n  /**\n   * Reads a varint as a signed 64 bit value returned as a possibly unsafe\n   * JavaScript number\n   */\n  int64Number (): number {\n    return this.readLongVarint().toNumber()\n  }\n\n  /**\n   * Reads a varint as a signed 64 bit value returned as a string\n   */\n  int64String (): string {\n    return this.readLongVarint().toString()\n  }\n\n  /**\n   * Reads a varint as an unsigned 64 bit value\n   */\n  uint64 (): bigint {\n    return this.readLongVarint().toBigInt(true)\n  }\n\n  /**\n   * Reads a varint as an unsigned 64 bit value returned as a possibly unsafe\n   * JavaScript number\n   */\n  uint64Number (): number {\n    return this.readLongVarint().toNumber(true)\n  }\n\n  /**\n   * Reads a varint as an unsigned 64 bit value returned as a string\n   */\n  uint64String (): string {\n    return this.readLongVarint().toString(true)\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value\n   */\n  sint64 (): bigint {\n    return this.readLongVarint().zzDecode().toBigInt()\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value returned as a\n   * possibly unsafe JavaScript number\n   */\n  sint64Number (): number {\n    return this.readLongVarint().zzDecode().toNumber()\n  }\n\n  /**\n   * Reads a zig-zag encoded varint as a signed 64 bit value returned as a\n   * string\n   */\n  sint64String (): string {\n    return this.readLongVarint().zzDecode().toString()\n  }\n\n  /**\n   * Reads fixed 64 bits\n   */\n  fixed64 (): bigint {\n    return this.readFixed64().toBigInt()\n  }\n\n  /**\n   * Reads fixed 64 bits returned as a possibly unsafe JavaScript number\n   */\n  fixed64Number (): number {\n    return this.readFixed64().toNumber()\n  }\n\n  /**\n   * Reads fixed 64 bits returned as a string\n   */\n  fixed64String (): string {\n    return this.readFixed64().toString()\n  }\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits\n   */\n  sfixed64 (): bigint {\n    return this.readFixed64().toBigInt()\n  }\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits returned as a possibly unsafe\n   * JavaScript number\n   */\n  sfixed64Number (): number {\n    return this.readFixed64().toNumber()\n  }\n\n  /**\n   * Reads zig-zag encoded fixed 64 bits returned as a string\n   */\n  sfixed64String (): string {\n    return this.readFixed64().toString()\n  }\n}\n\nexport function createReader (buf: Uint8Array | Uint8ArrayList): Reader {\n  return new Uint8ArrayReader(buf instanceof Uint8Array ? buf : buf.subarray())\n}\n", "import { createReader } from './utils/reader.js'\nimport type { Codec } from './codec.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport function decodeMessage <T> (buf: Uint8Array | Uint8ArrayList, codec: Codec<T>): T {\n  const reader = createReader(buf)\n\n  return codec.decode(reader)\n}\n", "import { allocUnsafe } from 'uint8arrays/alloc'\n\n/**\n * A general purpose buffer pool\n */\nexport default function pool (size?: number): (size: number) => Uint8Array {\n  const SIZE = size ?? 8192\n  const MAX = SIZE >>> 1\n  let slab: Uint8Array\n  let offset = SIZE\n  return function poolAlloc (size: number) {\n    if (size < 1 || size > MAX) {\n      return allocUnsafe(size)\n    }\n\n    if (offset + size > SIZE) {\n      slab = allocUnsafe(SIZE)\n      offset = 0\n    }\n\n    const buf = slab.subarray(offset, offset += size)\n\n    if ((offset & 7) !== 0) {\n      // align to 32 bit\n      offset = (offset | 7) + 1\n    }\n\n    return buf\n  }\n}\n", "import { allocUnsafe } from 'uint8arrays/alloc'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { writeFloatLE, writeDoubleLE } from './float.js'\nimport { LongBits } from './longbits.js'\nimport pool from './pool.js'\nimport * as utf8 from './utf8.js'\nimport type { Writer } from '../index.js'\n\ninterface WriterOperation<T> {\n  (val: T, buf: Uint8Array, pos: number): any\n}\n\n/**\n * Constructs a new writer operation instance.\n *\n * @classdesc Scheduled writer operation\n */\nclass Op<T> {\n  /**\n   * Function to call\n   */\n  public fn: WriterOperation<T>\n\n  /**\n   * Value byte length\n   */\n  public len: number\n\n  /**\n   * Next operation\n   */\n  public next?: Op<any>\n\n  /**\n   * Value to write\n   */\n  public val: T\n\n  constructor (fn: WriterOperation<T>, len: number, val: T) {\n    this.fn = fn\n    this.len = len\n    this.next = undefined\n    this.val = val // type varies\n  }\n}\n\n/* istanbul ignore next */\nfunction noop (): void {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance\n */\nclass State {\n  /**\n   * Current head\n   */\n  public head: Op<any>\n\n  /**\n   * Current tail\n   */\n  public tail: Op<any>\n\n  /**\n   * Current buffer length\n   */\n  public len: number\n\n  /**\n   * Next state\n   */\n  public next?: State\n\n  constructor (writer: Uint8ArrayWriter) {\n    this.head = writer.head\n    this.tail = writer.tail\n    this.len = writer.len\n    this.next = writer.states\n  }\n}\n\nconst bufferPool = pool()\n\n/**\n * Allocates a buffer of the specified size\n */\nfunction alloc (size: number): Uint8Array {\n  if (globalThis.Buffer != null) {\n    return allocUnsafe(size)\n  }\n\n  return bufferPool(size)\n}\n\n/**\n * When a value is written, the writer calculates its byte length and puts it into a linked\n * list of operations to perform when finish() is called. This both allows us to allocate\n * buffers of the exact required size and reduces the amount of work we have to do compared\n * to first calculating over objects and then encoding over objects. In our case, the encoding\n * part is just a linked list walk calling operations with already prepared values.\n */\nclass Uint8ArrayWriter implements Writer {\n  /**\n   * Current length\n   */\n  public len: number\n\n  /**\n   * Operations head\n   */\n  public head: Op<any>\n\n  /**\n   * Operations tail\n   */\n  public tail: Op<any>\n\n  /**\n   * Linked forked states\n   */\n  public states?: any\n\n  constructor () {\n    this.len = 0\n    this.head = new Op(noop, 0, 0)\n    this.tail = this.head\n    this.states = null\n  }\n\n  /**\n   * Pushes a new operation to the queue\n   */\n  _push (fn: WriterOperation<any>, len: number, val: any): this {\n    this.tail = this.tail.next = new Op(fn, len, val)\n    this.len += len\n\n    return this\n  }\n\n  /**\n   * Writes an unsigned 32 bit value as a varint\n   */\n  uint32 (value: number): this {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n      (value = value >>> 0) <\n                128\n        ? 1\n        : value < 16384\n          ? 2\n          : value < 2097152\n            ? 3\n            : value < 268435456\n              ? 4\n              : 5,\n      value)).len\n    return this\n  }\n\n  /**\n   * Writes a signed 32 bit value as a varint`\n   */\n  int32 (value: number): this {\n    return value < 0\n      ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n      : this.uint32(value)\n  }\n\n  /**\n   * Writes a 32 bit value as a varint, zig-zag encoded\n   */\n  sint32 (value: number): this {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64 (value: bigint): this {\n    const bits = LongBits.fromBigInt(value)\n    return this._push(writeVarint64, bits.length(), bits)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64Number (value: number): this {\n    const bits = LongBits.fromNumber(value)\n    return this._push(writeVarint64, bits.length(), bits)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as a varint\n   */\n  uint64String (value: string): this {\n    return this.uint64(BigInt(value))\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64 (value: bigint): this {\n    return this.uint64(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64Number (value: number): this {\n    return this.uint64Number(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint\n   */\n  int64String (value: string): this {\n    return this.uint64String(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64 (value: bigint): this {\n    const bits = LongBits.fromBigInt(value).zzEncode()\n    return this._push(writeVarint64, bits.length(), bits)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64Number (value: number): this {\n    const bits = LongBits.fromNumber(value).zzEncode()\n    return this._push(writeVarint64, bits.length(), bits)\n  }\n\n  /**\n   * Writes a signed 64 bit value as a varint, zig-zag encoded\n   */\n  sint64String (value: string): this {\n    return this.sint64(BigInt(value))\n  }\n\n  /**\n   * Writes a boolish value as a varint\n   */\n  bool (value: boolean): this {\n    return this._push(writeByte, 1, value ? 1 : 0)\n  }\n\n  /**\n   * Writes an unsigned 32 bit value as fixed 32 bits\n   */\n  fixed32 (value: number): this {\n    return this._push(writeFixed32, 4, value >>> 0)\n  }\n\n  /**\n   * Writes a signed 32 bit value as fixed 32 bits\n   */\n  sfixed32 (value: number): this {\n    return this.fixed32(value)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64 (value: bigint): this {\n    const bits = LongBits.fromBigInt(value)\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64Number (value: number): this {\n    const bits = LongBits.fromNumber(value)\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi)\n  }\n\n  /**\n   * Writes an unsigned 64 bit value as fixed 64 bits\n   */\n  fixed64String (value: string): this {\n    return this.fixed64(BigInt(value))\n  }\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64 (value: bigint): this {\n    return this.fixed64(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64Number (value: number): this {\n    return this.fixed64Number(value)\n  }\n\n  /**\n   * Writes a signed 64 bit value as fixed 64 bits\n   */\n  sfixed64String (value: string): this {\n    return this.fixed64String(value)\n  }\n\n  /**\n   * Writes a float (32 bit)\n   */\n  float (value: number): this {\n    return this._push(writeFloatLE, 4, value)\n  }\n\n  /**\n   * Writes a double (64 bit float).\n   *\n   * @function\n   * @param {number} value - Value to write\n   * @returns {Writer} `this`\n   */\n  double (value: number): this {\n    return this._push(writeDoubleLE, 8, value)\n  }\n\n  /**\n   * Writes a sequence of bytes\n   */\n  bytes (value: Uint8Array): this {\n    const len = value.length >>> 0\n\n    if (len === 0) {\n      return this._push(writeByte, 1, 0)\n    }\n\n    return this.uint32(len)._push(writeBytes, len, value)\n  }\n\n  /**\n   * Writes a string\n   */\n  string (value: string): this {\n    const len = utf8.length(value)\n    return len !== 0\n      ? this.uint32(len)._push(utf8.write, len, value)\n      : this._push(writeByte, 1, 0)\n  }\n\n  /**\n   * Forks this writer's state by pushing it to a stack.\n   * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n   */\n  fork (): this {\n    this.states = new State(this)\n    this.head = this.tail = new Op(noop, 0, 0)\n    this.len = 0\n    return this\n  }\n\n  /**\n   * Resets this instance to the last state\n   */\n  reset (): this {\n    if (this.states != null) {\n      this.head = this.states.head\n      this.tail = this.states.tail\n      this.len = this.states.len\n      this.states = this.states.next\n    } else {\n      this.head = this.tail = new Op(noop, 0, 0)\n      this.len = 0\n    }\n    return this\n  }\n\n  /**\n   * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n   */\n  ldelim (): this {\n    const head = this.head\n    const tail = this.tail\n    const len = this.len\n    this.reset().uint32(len)\n    if (len !== 0) {\n      this.tail.next = head.next // skip noop\n      this.tail = tail\n      this.len += len\n    }\n    return this\n  }\n\n  /**\n   * Finishes the write operation\n   */\n  finish (): Uint8Array {\n    let head = this.head.next // skip noop\n    const buf = alloc(this.len)\n    let pos = 0\n    while (head != null) {\n      head.fn(head.val, buf, pos)\n      pos += head.len\n      head = head.next\n    }\n    // this.head = this.tail = null;\n    return buf\n  }\n}\n\nfunction writeByte (val: number, buf: Uint8Array, pos: number): void {\n  buf[pos] = val & 255\n}\n\nfunction writeVarint32 (val: number, buf: Uint8Array, pos: number): void {\n  while (val > 127) {\n    buf[pos++] = val & 127 | 128\n    val >>>= 7\n  }\n  buf[pos] = val\n}\n\n/**\n * Constructs a new varint writer operation instance.\n *\n * @classdesc Scheduled varint writer operation\n */\nclass VarintOp extends Op<number> {\n  public next?: Op<any>\n\n  constructor (len: number, val: number) {\n    super(writeVarint32, len, val)\n    this.next = undefined\n  }\n}\n\nfunction writeVarint64 (val: LongBits, buf: Uint8Array, pos: number): void {\n  while (val.hi !== 0) {\n    buf[pos++] = val.lo & 127 | 128\n    val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0\n    val.hi >>>= 7\n  }\n  while (val.lo > 127) {\n    buf[pos++] = val.lo & 127 | 128\n    val.lo = val.lo >>> 7\n  }\n  buf[pos++] = val.lo\n}\n\nfunction writeFixed32 (val: number, buf: Uint8Array, pos: number): void {\n  buf[pos] = val & 255\n  buf[pos + 1] = val >>> 8 & 255\n  buf[pos + 2] = val >>> 16 & 255\n  buf[pos + 3] = val >>> 24\n}\n\nfunction writeBytes (val: Uint8Array, buf: Uint8Array, pos: number): void {\n  buf.set(val, pos)\n}\n\nif (globalThis.Buffer != null) {\n  Uint8ArrayWriter.prototype.bytes = function (value: Uint8Array) {\n    const len = value.length >>> 0\n\n    this.uint32(len)\n\n    if (len > 0) {\n      this._push(writeBytesBuffer, len, value)\n    }\n\n    return this\n  }\n\n  Uint8ArrayWriter.prototype.string = function (value: string) {\n    const len = globalThis.Buffer.byteLength(value)\n\n    this.uint32(len)\n\n    if (len > 0) {\n      this._push(writeStringBuffer, len, value)\n    }\n\n    return this\n  }\n}\n\nfunction writeBytesBuffer (val: Uint8Array, buf: Uint8Array, pos: number): void {\n  buf.set(val, pos) // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n  // also works for plain array values\n}\n\nfunction writeStringBuffer (val: string, buf: Uint8Array, pos: number): void {\n  if (val.length < 40) {\n    // plain js is faster for short strings (probably due to redundant assertions)\n    utf8.write(val, buf, pos)\n    // @ts-expect-error buf isn't a Uint8Array?\n  } else if (buf.utf8Write != null) {\n    // @ts-expect-error buf isn't a Uint8Array?\n    buf.utf8Write(val, pos)\n  } else {\n    buf.set(uint8ArrayFromString(val), pos)\n  }\n}\n\n/**\n * Creates a new writer\n */\nexport function createWriter (): Writer {\n  return new Uint8ArrayWriter()\n}\n", "import { createWriter } from './utils/writer.js'\nimport type { Codec } from './codec.js'\n\nexport function encodeMessage <T> (message: T, codec: Codec<T>): Uint8Array {\n  const w = createWriter()\n\n  codec.encode(message, w, {\n    lengthDelimited: false\n  })\n\n  return w.finish()\n}\n", "import type { Writer, Reader } from './index.js'\n\n// https://developers.google.com/protocol-buffers/docs/encoding#structure\nexport enum CODEC_TYPES {\n  VARINT = 0,\n  BIT64,\n  LENGTH_DELIMITED,\n  START_GROUP,\n  END_GROUP,\n  BIT32\n}\n\nexport interface EncodeOptions {\n  lengthDelimited?: boolean\n  writeDefaults?: boolean\n}\n\nexport interface EncodeFunction<T> {\n  (value: Partial<T>, writer: Writer, opts?: EncodeOptions): void\n}\n\nexport interface DecodeFunction<T> {\n  (reader: Reader, length?: number): T\n}\n\nexport interface Codec<T> {\n  name: string\n  type: CODEC_TYPES\n  encode: EncodeFunction<T>\n  decode: DecodeFunction<T>\n}\n\nexport function createCodec <T> (name: string, type: CODEC_TYPES, encode: EncodeFunction<T>, decode: DecodeFunction<T>): Codec<T> {\n  return {\n    name,\n    type,\n    encode,\n    decode\n  }\n}\n", "import { createCodec, CODEC_TYPES } from '../codec.js'\nimport type { DecodeFunction, EncodeFunction, Codec } from '../codec.js'\n\nexport function enumeration <T> (v: any): Codec<T> {\n  function findValue (val: string | number): number {\n    // Use the reverse mapping to look up the enum key for the stored value\n    // https://www.typescriptlang.org/docs/handbook/enums.html#reverse-mappings\n    if (v[val.toString()] == null) {\n      throw new Error('Invalid enum value')\n    }\n\n    return v[val]\n  }\n\n  const encode: EncodeFunction<number | string> = function enumEncode (val, writer) {\n    const enumValue = findValue(val)\n\n    writer.int32(enumValue)\n  }\n\n  const decode: DecodeFunction<number | string> = function enumDecode (reader) {\n    const val = reader.int32()\n\n    return findValue(val)\n  }\n\n  // @ts-expect-error yeah yeah\n  return createCodec('enum', CODEC_TYPES.VARINT, encode, decode)\n}\n", "import { createCodec, CODEC_TYPES, type EncodeOptions, type Codec } from '../codec.js'\nimport type { Reader, Writer } from '../index.js'\n\nexport interface Factory<A, T> {\n  new (obj: A): T\n}\n\nexport function message <T> (encode: (obj: Partial<T>, writer: Writer, opts?: EncodeOptions) => void, decode: (reader: Reader, length?: number) => T): Codec<T> {\n  return createCodec('message', CODEC_TYPES.LENGTH_DELIMITED, encode, decode)\n}\n", "/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime'\nimport type { Codec } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport enum KeyType {\n  RSA = 'RSA',\n  Ed25519 = 'Ed25519',\n  Secp256k1 = 'Secp256k1'\n}\n\nenum __KeyTypeValues {\n  RSA = 0,\n  Ed25519 = 1,\n  Secp256k1 = 2\n}\n\nexport namespace KeyType {\n  export const codec = (): Codec<KeyType> => {\n    return enumeration<KeyType>(__KeyTypeValues)\n  }\n}\nexport interface PublicKey {\n  Type?: KeyType\n  Data?: Uint8Array\n}\n\nexport namespace PublicKey {\n  let _codec: Codec<PublicKey>\n\n  export const codec = (): Codec<PublicKey> => {\n    if (_codec == null) {\n      _codec = message<PublicKey>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.Type != null) {\n          w.uint32(8)\n          KeyType.codec().encode(obj.Type, w)\n        }\n\n        if (obj.Data != null) {\n          w.uint32(18)\n          w.bytes(obj.Data)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.Type = KeyType.codec().decode(reader)\n              break\n            case 2:\n              obj.Data = reader.bytes()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<PublicKey>): Uint8Array => {\n    return encodeMessage(obj, PublicKey.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): PublicKey => {\n    return decodeMessage(buf, PublicKey.codec())\n  }\n}\n\nexport interface PrivateKey {\n  Type?: KeyType\n  Data?: Uint8Array\n}\n\nexport namespace PrivateKey {\n  let _codec: Codec<PrivateKey>\n\n  export const codec = (): Codec<PrivateKey> => {\n    if (_codec == null) {\n      _codec = message<PrivateKey>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.Type != null) {\n          w.uint32(8)\n          KeyType.codec().encode(obj.Type, w)\n        }\n\n        if (obj.Data != null) {\n          w.uint32(18)\n          w.bytes(obj.Data)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.Type = KeyType.codec().decode(reader)\n              break\n            case 2:\n              obj.Data = reader.bytes()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Partial<PrivateKey>): Uint8Array => {\n    return encodeMessage(obj, PrivateKey.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): PrivateKey => {\n    return decodeMessage(buf, PrivateKey.codec())\n  }\n}\n", "import bases, { type SupportedEncodings } from './util/bases.js'\n\nexport type { SupportedEncodings }\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString (array: Uint8Array, encoding: SupportedEncodings = 'utf8'): string {\n  const base = bases[encoding]\n\n  if (base == null) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8')\n  }\n\n  // strip multibase prefix\n  return base.encoder.encode(array).substring(1)\n}\n", "import { CodeError } from '@libp2p/interface'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { isPromise } from '../util.js'\nimport { exporter } from './exporter.js'\nimport * as pbm from './keys.js'\nimport * as crypto from './rsa.js'\nimport type { Multibase } from 'multiformats'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport const MAX_RSA_KEY_SIZE = 8192\n\nexport class RsaPublicKey {\n  private readonly _key: JsonWebKey\n\n  constructor (key: JsonWebKey) {\n    this._key = key\n  }\n\n  verify (data: Uint8Array | Uint8ArrayList, sig: Uint8Array): boolean | Promise<boolean> {\n    return crypto.hashAndVerify(this._key, sig, data)\n  }\n\n  marshal (): Uint8Array {\n    return crypto.utils.jwkToPkix(this._key)\n  }\n\n  get bytes (): Uint8Array {\n    return pbm.PublicKey.encode({\n      Type: pbm.KeyType.RSA,\n      Data: this.marshal()\n    }).subarray()\n  }\n\n  equals (key: any): boolean | boolean {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  hash (): Uint8Array | Promise<Uint8Array> {\n    const p = sha256.digest(this.bytes)\n\n    if (isPromise(p)) {\n      return p.then(({ bytes }) => bytes)\n    }\n\n    return p.bytes\n  }\n}\n\nexport class RsaPrivateKey {\n  private readonly _key: JsonWebKey\n  private readonly _publicKey: JsonWebKey\n\n  constructor (key: JsonWebKey, publicKey: JsonWebKey) {\n    this._key = key\n    this._publicKey = publicKey\n  }\n\n  genSecret (): Uint8Array {\n    return crypto.getRandomValues(16)\n  }\n\n  sign (message: Uint8Array | Uint8ArrayList): Uint8Array | Promise<Uint8Array> {\n    return crypto.hashAndSign(this._key, message)\n  }\n\n  get public (): RsaPublicKey {\n    if (this._publicKey == null) {\n      throw new CodeError('public key not provided', 'ERR_PUBKEY_NOT_PROVIDED')\n    }\n\n    return new RsaPublicKey(this._publicKey)\n  }\n\n  marshal (): Uint8Array {\n    return crypto.utils.jwkToPkcs1(this._key)\n  }\n\n  get bytes (): Uint8Array {\n    return pbm.PrivateKey.encode({\n      Type: pbm.KeyType.RSA,\n      Data: this.marshal()\n    }).subarray()\n  }\n\n  equals (key: any): boolean {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  hash (): Uint8Array | Promise<Uint8Array> {\n    const p = sha256.digest(this.bytes)\n\n    if (isPromise(p)) {\n      return p.then(({ bytes }) => bytes)\n    }\n\n    return p.bytes\n  }\n\n  /**\n   * Gets the ID of the key.\n   *\n   * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n   * The public key is a protobuf encoding containing a type and the DER encoding\n   * of the PKCS SubjectPublicKeyInfo.\n   */\n  async id (): Promise<string> {\n    const hash = await this.public.hash()\n    return uint8ArrayToString(hash, 'base58btc')\n  }\n\n  /**\n   * Exports the key as libp2p-key - a aes-gcm encrypted value with the key\n   * derived from the password.\n   *\n   * To export it as a password protected PEM file, please use the `exportPEM`\n   * function from `@libp2p/rsa`.\n   */\n  async export (password: string, format = 'pkcs-8'): Promise<Multibase<'m'>> {\n    if (format === 'pkcs-8') {\n      return crypto.utils.exportToPem(this, password)\n    } else if (format === 'libp2p-key') {\n      return exporter(this.bytes, password)\n    } else {\n      throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT')\n    }\n  }\n}\n\nexport async function unmarshalRsaPrivateKey (bytes: Uint8Array): Promise<RsaPrivateKey> {\n  const jwk = crypto.utils.pkcs1ToJwk(bytes)\n\n  if (crypto.keySize(jwk) > MAX_RSA_KEY_SIZE) {\n    throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE')\n  }\n\n  const keys = await crypto.unmarshalPrivateKey(jwk)\n\n  return new RsaPrivateKey(keys.privateKey, keys.publicKey)\n}\n\nexport function unmarshalRsaPublicKey (bytes: Uint8Array): RsaPublicKey {\n  const jwk = crypto.utils.pkixToJwk(bytes)\n\n  if (crypto.keySize(jwk) > MAX_RSA_KEY_SIZE) {\n    throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE')\n  }\n\n  return new RsaPublicKey(jwk)\n}\n\nexport async function fromJwk (jwk: JsonWebKey): Promise<RsaPrivateKey> {\n  if (crypto.keySize(jwk) > MAX_RSA_KEY_SIZE) {\n    throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE')\n  }\n\n  const keys = await crypto.unmarshalPrivateKey(jwk)\n\n  return new RsaPrivateKey(keys.privateKey, keys.publicKey)\n}\n\nexport async function generateKeyPair (bits: number): Promise<RsaPrivateKey> {\n  if (bits > MAX_RSA_KEY_SIZE) {\n    throw new CodeError('key size is too large', 'ERR_KEY_SIZE_TOO_LARGE')\n  }\n\n  const keys = await crypto.generateKey(bits)\n\n  return new RsaPrivateKey(keys.privateKey, keys.publicKey)\n}\n", "import { CodeError } from '@libp2p/interface'\nimport { randomBytes as randB } from '@noble/hashes/utils'\n\n/**\n * Generates a Uint8Array with length `number` populated by random bytes\n */\nexport default function randomBytes (length: number): Uint8Array {\n  if (isNaN(length) || length <= 0) {\n    throw new CodeError('random bytes length must be a Number bigger than 0', 'ERR_INVALID_LENGTH')\n  }\n  return randB(length)\n}\n", "import { CodeError } from '@libp2p/interface'\nimport { pbkdf2Async } from '@noble/hashes/pbkdf2'\nimport { sha512 } from '@noble/hashes/sha512'\nimport * as asn1js from 'asn1js'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport randomBytes from '../random-bytes.js'\nimport webcrypto from '../webcrypto.js'\nimport { type RsaPrivateKey, unmarshalRsaPrivateKey } from './rsa-class.js'\n\n/**\n * Convert a PKCS#1 in ASN1 DER format to a JWK key\n */\nexport function pkcs1ToJwk (bytes: Uint8Array): JsonWebKey {\n  const { result } = asn1js.fromBER(bytes)\n\n  // @ts-expect-error this looks fragile but DER is a canonical format so we are\n  // safe to have deeply property chains like this\n  const values: asn1js.Integer[] = result.valueBlock.value\n\n  const key = {\n    n: uint8ArrayToString(bnToBuf(values[1].toBigInt()), 'base64url'),\n    e: uint8ArrayToString(bnToBuf(values[2].toBigInt()), 'base64url'),\n    d: uint8ArrayToString(bnToBuf(values[3].toBigInt()), 'base64url'),\n    p: uint8ArrayToString(bnToBuf(values[4].toBigInt()), 'base64url'),\n    q: uint8ArrayToString(bnToBuf(values[5].toBigInt()), 'base64url'),\n    dp: uint8ArrayToString(bnToBuf(values[6].toBigInt()), 'base64url'),\n    dq: uint8ArrayToString(bnToBuf(values[7].toBigInt()), 'base64url'),\n    qi: uint8ArrayToString(bnToBuf(values[8].toBigInt()), 'base64url'),\n    kty: 'RSA',\n    alg: 'RS256'\n  }\n\n  return key\n}\n\n/**\n * Convert a JWK key into PKCS#1 in ASN1 DER format\n */\nexport function jwkToPkcs1 (jwk: JsonWebKey): Uint8Array {\n  if (jwk.n == null || jwk.e == null || jwk.d == null || jwk.p == null || jwk.q == null || jwk.dp == null || jwk.dq == null || jwk.qi == null) {\n    throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS')\n  }\n\n  const root = new asn1js.Sequence({\n    value: [\n      new asn1js.Integer({ value: 0 }),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.n, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.e, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.d, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.p, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.q, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.dp, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.dq, 'base64url'))),\n      asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.qi, 'base64url')))\n    ]\n  })\n\n  const der = root.toBER()\n\n  return new Uint8Array(der, 0, der.byteLength)\n}\n\n/**\n * Convert a PKCIX in ASN1 DER format to a JWK key\n */\nexport function pkixToJwk (bytes: Uint8Array): JsonWebKey {\n  const { result } = asn1js.fromBER(bytes)\n\n  // @ts-expect-error this looks fragile but DER is a canonical format so we are\n  // safe to have deeply property chains like this\n  const values: asn1js.Integer[] = result.valueBlock.value[1].valueBlock.value[0].valueBlock.value\n\n  return {\n    kty: 'RSA',\n    n: uint8ArrayToString(bnToBuf(values[0].toBigInt()), 'base64url'),\n    e: uint8ArrayToString(bnToBuf(values[1].toBigInt()), 'base64url')\n  }\n}\n\n/**\n * Convert a JWK key to PKCIX in ASN1 DER format\n */\nexport function jwkToPkix (jwk: JsonWebKey): Uint8Array {\n  if (jwk.n == null || jwk.e == null) {\n    throw new CodeError('JWK was missing components', 'ERR_INVALID_PARAMETERS')\n  }\n\n  const root = new asn1js.Sequence({\n    value: [\n      new asn1js.Sequence({\n        value: [\n          // rsaEncryption\n          new asn1js.ObjectIdentifier({\n            value: '1.2.840.113549.1.1.1'\n          }),\n          new asn1js.Null()\n        ]\n      }),\n      // this appears to be a bug in asn1js.js - this should really be a Sequence\n      // and not a BitString but it generates the same bytes as node-forge so \uD83E\uDD37\u200D\u2642\uFE0F\n      new asn1js.BitString({\n        valueHex: new asn1js.Sequence({\n          value: [\n            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.n, 'base64url'))),\n            asn1js.Integer.fromBigInt(bufToBn(uint8ArrayFromString(jwk.e, 'base64url')))\n          ]\n        }).toBER()\n      })\n    ]\n  })\n\n  const der = root.toBER()\n\n  return new Uint8Array(der, 0, der.byteLength)\n}\n\nfunction bnToBuf (bn: bigint): Uint8Array {\n  let hex = bn.toString(16)\n\n  if (hex.length % 2 > 0) {\n    hex = `0${hex}`\n  }\n\n  const len = hex.length / 2\n  const u8 = new Uint8Array(len)\n\n  let i = 0\n  let j = 0\n\n  while (i < len) {\n    u8[i] = parseInt(hex.slice(j, j + 2), 16)\n    i += 1\n    j += 2\n  }\n\n  return u8\n}\n\nfunction bufToBn (u8: Uint8Array): bigint {\n  const hex: string[] = []\n\n  u8.forEach(function (i) {\n    let h = i.toString(16)\n\n    if (h.length % 2 > 0) {\n      h = `0${h}`\n    }\n\n    hex.push(h)\n  })\n\n  return BigInt('0x' + hex.join(''))\n}\n\nconst SALT_LENGTH = 16\nconst KEY_SIZE = 32\nconst ITERATIONS = 10000\n\nexport async function exportToPem (privateKey: RsaPrivateKey, password: string): Promise<string> {\n  const crypto = webcrypto.get()\n\n  // PrivateKeyInfo\n  const keyWrapper = new asn1js.Sequence({\n    value: [\n      // version (0)\n      new asn1js.Integer({ value: 0 }),\n\n      // privateKeyAlgorithm\n      new asn1js.Sequence({\n        value: [\n        // rsaEncryption OID\n          new asn1js.ObjectIdentifier({\n            value: '1.2.840.113549.1.1.1'\n          }),\n          new asn1js.Null()\n        ]\n      }),\n\n      // PrivateKey\n      new asn1js.OctetString({\n        valueHex: privateKey.marshal()\n      })\n    ]\n  })\n\n  const keyBuf = keyWrapper.toBER()\n  const keyArr = new Uint8Array(keyBuf, 0, keyBuf.byteLength)\n  const salt = randomBytes(SALT_LENGTH)\n\n  const encryptionKey = await pbkdf2Async(\n    sha512,\n    password,\n    salt, {\n      c: ITERATIONS,\n      dkLen: KEY_SIZE\n    }\n  )\n\n  const iv = randomBytes(16)\n  const cryptoKey = await crypto.subtle.importKey('raw', encryptionKey, 'AES-CBC', false, ['encrypt'])\n  const encrypted = await crypto.subtle.encrypt({\n    name: 'AES-CBC',\n    iv\n  }, cryptoKey, keyArr)\n\n  const pbkdf2Params = new asn1js.Sequence({\n    value: [\n      // salt\n      new asn1js.OctetString({ valueHex: salt }),\n\n      // iteration count\n      new asn1js.Integer({ value: ITERATIONS }),\n\n      // key length\n      new asn1js.Integer({ value: KEY_SIZE }),\n\n      // AlgorithmIdentifier\n      new asn1js.Sequence({\n        value: [\n          // hmacWithSHA512\n          new asn1js.ObjectIdentifier({ value: '1.2.840.113549.2.11' }),\n          new asn1js.Null()\n        ]\n      })\n    ]\n  })\n\n  const encryptionAlgorithm = new asn1js.Sequence({\n    value: [\n      // pkcs5PBES2\n      new asn1js.ObjectIdentifier({\n        value: '1.2.840.113549.1.5.13'\n      }),\n      new asn1js.Sequence({\n        value: [\n          // keyDerivationFunc\n          new asn1js.Sequence({\n            value: [\n              // pkcs5PBKDF2\n              new asn1js.ObjectIdentifier({\n                value: '1.2.840.113549.1.5.12'\n              }),\n              // PBKDF2-params\n              pbkdf2Params\n            ]\n          }),\n\n          // encryptionScheme\n          new asn1js.Sequence({\n            value: [\n              // aes256-CBC\n              new asn1js.ObjectIdentifier({\n                value: '2.16.840.1.101.3.4.1.42'\n              }),\n              // iv\n              new asn1js.OctetString({\n                valueHex: iv\n              })\n            ]\n          })\n        ]\n      })\n    ]\n  })\n\n  const finalWrapper = new asn1js.Sequence({\n    value: [\n      encryptionAlgorithm,\n      new asn1js.OctetString({ valueHex: encrypted })\n    ]\n  })\n\n  const finalWrapperBuf = finalWrapper.toBER()\n  const finalWrapperArr = new Uint8Array(finalWrapperBuf, 0, finalWrapperBuf.byteLength)\n\n  return [\n    '-----BEGIN ENCRYPTED PRIVATE KEY-----',\n    ...uint8ArrayToString(finalWrapperArr, 'base64pad').split(/(.{64})/).filter(Boolean),\n    '-----END ENCRYPTED PRIVATE KEY-----'\n  ].join('\\n')\n}\n\nexport async function importFromPem (pem: string, password: string): Promise<RsaPrivateKey> {\n  const crypto = webcrypto.get()\n  let plaintext: Uint8Array\n\n  if (pem.includes('-----BEGIN ENCRYPTED PRIVATE KEY-----')) {\n    const key = uint8ArrayFromString(\n      pem\n        .replace('-----BEGIN ENCRYPTED PRIVATE KEY-----', '')\n        .replace('-----END ENCRYPTED PRIVATE KEY-----', '')\n        .replace(/\\n/g, '')\n        .trim(),\n      'base64pad'\n    )\n\n    const { result } = asn1js.fromBER(key)\n\n    const {\n      iv,\n      salt,\n      iterations,\n      keySize,\n      cipherText\n    } = findEncryptedPEMData(result)\n\n    const encryptionKey = await pbkdf2Async(\n      sha512,\n      password,\n      salt, {\n        c: iterations,\n        dkLen: keySize\n      }\n    )\n\n    const cryptoKey = await crypto.subtle.importKey('raw', encryptionKey, 'AES-CBC', false, ['decrypt'])\n    const decrypted = toUint8Array(await crypto.subtle.decrypt({\n      name: 'AES-CBC',\n      iv\n    }, cryptoKey, cipherText))\n\n    const { result: decryptedResult } = asn1js.fromBER(decrypted)\n    plaintext = findPEMData(decryptedResult)\n  } else if (pem.includes('-----BEGIN PRIVATE KEY-----')) {\n    const key = uint8ArrayFromString(\n      pem\n        .replace('-----BEGIN PRIVATE KEY-----', '')\n        .replace('-----END PRIVATE KEY-----', '')\n        .replace(/\\n/g, '')\n        .trim(),\n      'base64pad'\n    )\n\n    const { result } = asn1js.fromBER(key)\n\n    plaintext = findPEMData(result)\n  } else {\n    throw new CodeError('Could not parse private key from PEM data', 'ERR_INVALID_PARAMETERS')\n  }\n\n  return unmarshalRsaPrivateKey(plaintext)\n}\n\nfunction findEncryptedPEMData (root: any): { cipherText: Uint8Array, iv: Uint8Array, salt: Uint8Array, iterations: number, keySize: number } {\n  const encryptionAlgorithm = root.valueBlock.value[0]\n  const scheme = encryptionAlgorithm.valueBlock.value[0].toString()\n\n  if (scheme !== 'OBJECT IDENTIFIER : 1.2.840.113549.1.5.13') {\n    throw new CodeError('Only pkcs5PBES2 encrypted private keys are supported', 'ERR_INVALID_PARAMS')\n  }\n\n  const keyDerivationFunc = encryptionAlgorithm.valueBlock.value[1].valueBlock.value[0]\n  const keyDerivationFuncName = keyDerivationFunc.valueBlock.value[0].toString()\n\n  if (keyDerivationFuncName !== 'OBJECT IDENTIFIER : 1.2.840.113549.1.5.12') {\n    throw new CodeError('Only pkcs5PBKDF2 key derivation functions are supported', 'ERR_INVALID_PARAMS')\n  }\n\n  const pbkdf2Params = keyDerivationFunc.valueBlock.value[1]\n\n  const salt = toUint8Array(pbkdf2Params.valueBlock.value[0].getValue())\n\n  let iterations = ITERATIONS\n  let keySize = KEY_SIZE\n\n  if (pbkdf2Params.valueBlock.value.length === 3) {\n    iterations = Number((pbkdf2Params.valueBlock.value[1] as asn1js.Integer).toBigInt())\n    keySize = Number((pbkdf2Params.valueBlock.value[2]).toBigInt())\n  } else if (pbkdf2Params.valueBlock.value.length === 2) {\n    throw new CodeError('Could not derive key size and iterations from PEM file - please use @libp2p/rsa to re-import your key', 'ERR_INVALID_PARAMS')\n  }\n\n  const encryptionScheme = encryptionAlgorithm.valueBlock.value[1].valueBlock.value[1]\n  const encryptionSchemeName = encryptionScheme.valueBlock.value[0].toString()\n\n  if (encryptionSchemeName === 'OBJECT IDENTIFIER : 1.2.840.113549.3.7') {\n    // des-EDE3-CBC\n  } else if (encryptionSchemeName === 'OBJECT IDENTIFIER : 1.3.14.3.2.7') {\n    // des-CBC\n  } else if (encryptionSchemeName === 'OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.2') {\n    // aes128-CBC\n  } else if (encryptionSchemeName === 'OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.22') {\n    // aes192-CBC\n  } else if (encryptionSchemeName === 'OBJECT IDENTIFIER : 2.16.840.1.101.3.4.1.42') {\n    // aes256-CBC\n  } else {\n    throw new CodeError('Only AES-CBC encryption schemes are supported', 'ERR_INVALID_PARAMS')\n  }\n\n  const iv = toUint8Array(encryptionScheme.valueBlock.value[1].getValue())\n\n  return {\n    cipherText: toUint8Array(root.valueBlock.value[1].getValue()),\n    salt,\n    iterations,\n    keySize,\n    iv\n  }\n}\n\nfunction findPEMData (seq: any): Uint8Array {\n  return toUint8Array(seq.valueBlock.value[2].getValue())\n}\n\nfunction toUint8Array (buf: ArrayBuffer): Uint8Array {\n  return new Uint8Array(buf, 0, buf.byteLength)\n}\n", "import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assertHash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assertNumber(c);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + \u22EF + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ \u22EF ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc\u22121)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + \u22EF + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ \u22EF ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, () => {\n      // Uc = PRF(Password, Uc\u22121)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n", "/*!\n * Copyright (c) 2014, GMO GlobalSign\n * Copyright (c) 2015-2022, Peculiar Ventures\n * All rights reserved.\n * \n * Author 2014-2019, Yury Strozhevsky\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n * \n * * Redistributions in binary form must reproduce the above copyright notice, this\n *   list of conditions and the following disclaimer in the documentation and/or\n *   other materials provided with the distribution.\n * \n * * Neither the name of the copyright holder nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nimport * as pvtsutils from 'pvtsutils';\nimport * as pvutils from 'pvutils';\n\nfunction assertBigInt() {\r\n    if (typeof BigInt === \"undefined\") {\r\n        throw new Error(\"BigInt is not defined. Your environment doesn't implement BigInt.\");\r\n    }\r\n}\r\nfunction concat(buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (let i = 0; i < buffers.length; i++) {\r\n        const buffer = buffers[i];\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retView = new Uint8Array(outputLength);\r\n    for (let i = 0; i < buffers.length; i++) {\r\n        const buffer = buffers[i];\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retView.buffer;\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof Uint8Array)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be 'Uint8Array'\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\nclass ViewWriter {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n    write(buf) {\r\n        this.items.push(buf);\r\n    }\r\n    final() {\r\n        return concat(this.items);\r\n    }\r\n}\n\nconst powers2 = [new Uint8Array([1])];\r\nconst digitsString = \"0123456789\";\r\nconst NAME = \"name\";\r\nconst VALUE_HEX_VIEW = \"valueHexView\";\r\nconst IS_HEX_ONLY = \"isHexOnly\";\r\nconst ID_BLOCK = \"idBlock\";\r\nconst TAG_CLASS = \"tagClass\";\r\nconst TAG_NUMBER = \"tagNumber\";\r\nconst IS_CONSTRUCTED = \"isConstructed\";\r\nconst FROM_BER = \"fromBER\";\r\nconst TO_BER = \"toBER\";\r\nconst LOCAL = \"local\";\r\nconst EMPTY_STRING = \"\";\r\nconst EMPTY_BUFFER = new ArrayBuffer(0);\r\nconst EMPTY_VIEW = new Uint8Array(0);\r\nconst END_OF_CONTENT_NAME = \"EndOfContent\";\r\nconst OCTET_STRING_NAME = \"OCTET STRING\";\r\nconst BIT_STRING_NAME = \"BIT STRING\";\n\nfunction HexBlock(BaseClass) {\r\n    var _a;\r\n    return _a = class Some extends BaseClass {\r\n            constructor(...args) {\r\n                var _a;\r\n                super(...args);\r\n                const params = args[0] || {};\r\n                this.isHexOnly = (_a = params.isHexOnly) !== null && _a !== void 0 ? _a : false;\r\n                this.valueHexView = params.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(params.valueHex) : EMPTY_VIEW;\r\n            }\r\n            get valueHex() {\r\n                return this.valueHexView.slice().buffer;\r\n            }\r\n            set valueHex(value) {\r\n                this.valueHexView = new Uint8Array(value);\r\n            }\r\n            fromBER(inputBuffer, inputOffset, inputLength) {\r\n                const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\r\n                if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n                    return -1;\r\n                }\r\n                const endLength = inputOffset + inputLength;\r\n                this.valueHexView = view.subarray(inputOffset, endLength);\r\n                if (!this.valueHexView.length) {\r\n                    this.warnings.push(\"Zero buffer length\");\r\n                    return inputOffset;\r\n                }\r\n                this.blockLength = inputLength;\r\n                return endLength;\r\n            }\r\n            toBER(sizeOnly = false) {\r\n                if (!this.isHexOnly) {\r\n                    this.error = \"Flag 'isHexOnly' is not set, abort\";\r\n                    return EMPTY_BUFFER;\r\n                }\r\n                if (sizeOnly) {\r\n                    return new ArrayBuffer(this.valueHexView.byteLength);\r\n                }\r\n                return (this.valueHexView.byteLength === this.valueHexView.buffer.byteLength)\r\n                    ? this.valueHexView.buffer\r\n                    : this.valueHexView.slice().buffer;\r\n            }\r\n            toJSON() {\r\n                return {\r\n                    ...super.toJSON(),\r\n                    isHexOnly: this.isHexOnly,\r\n                    valueHex: pvtsutils.Convert.ToHex(this.valueHexView),\r\n                };\r\n            }\r\n        },\r\n        _a.NAME = \"hexBlock\",\r\n        _a;\r\n}\n\nclass LocalBaseBlock {\r\n    constructor({ blockLength = 0, error = EMPTY_STRING, warnings = [], valueBeforeDecode = EMPTY_VIEW, } = {}) {\r\n        this.blockLength = blockLength;\r\n        this.error = error;\r\n        this.warnings = warnings;\r\n        this.valueBeforeDecodeView = pvtsutils.BufferSourceConverter.toUint8Array(valueBeforeDecode);\r\n    }\r\n    static blockName() {\r\n        return this.NAME;\r\n    }\r\n    get valueBeforeDecode() {\r\n        return this.valueBeforeDecodeView.slice().buffer;\r\n    }\r\n    set valueBeforeDecode(value) {\r\n        this.valueBeforeDecodeView = new Uint8Array(value);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            blockName: this.constructor.NAME,\r\n            blockLength: this.blockLength,\r\n            error: this.error,\r\n            warnings: this.warnings,\r\n            valueBeforeDecode: pvtsutils.Convert.ToHex(this.valueBeforeDecodeView),\r\n        };\r\n    }\r\n}\r\nLocalBaseBlock.NAME = \"baseBlock\";\n\nclass ValueBlock extends LocalBaseBlock {\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\r\n    }\r\n}\r\nValueBlock.NAME = \"valueBlock\";\n\nclass LocalIdentificationBlock extends HexBlock(LocalBaseBlock) {\r\n    constructor({ idBlock = {}, } = {}) {\r\n        var _a, _b, _c, _d;\r\n        super();\r\n        if (idBlock) {\r\n            this.isHexOnly = (_a = idBlock.isHexOnly) !== null && _a !== void 0 ? _a : false;\r\n            this.valueHexView = idBlock.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(idBlock.valueHex) : EMPTY_VIEW;\r\n            this.tagClass = (_b = idBlock.tagClass) !== null && _b !== void 0 ? _b : -1;\r\n            this.tagNumber = (_c = idBlock.tagNumber) !== null && _c !== void 0 ? _c : -1;\r\n            this.isConstructed = (_d = idBlock.isConstructed) !== null && _d !== void 0 ? _d : false;\r\n        }\r\n        else {\r\n            this.tagClass = -1;\r\n            this.tagNumber = -1;\r\n            this.isConstructed = false;\r\n        }\r\n    }\r\n    toBER(sizeOnly = false) {\r\n        let firstOctet = 0;\r\n        switch (this.tagClass) {\r\n            case 1:\r\n                firstOctet |= 0x00;\r\n                break;\r\n            case 2:\r\n                firstOctet |= 0x40;\r\n                break;\r\n            case 3:\r\n                firstOctet |= 0x80;\r\n                break;\r\n            case 4:\r\n                firstOctet |= 0xC0;\r\n                break;\r\n            default:\r\n                this.error = \"Unknown tag class\";\r\n                return EMPTY_BUFFER;\r\n        }\r\n        if (this.isConstructed)\r\n            firstOctet |= 0x20;\r\n        if (this.tagNumber < 31 && !this.isHexOnly) {\r\n            const retView = new Uint8Array(1);\r\n            if (!sizeOnly) {\r\n                let number = this.tagNumber;\r\n                number &= 0x1F;\r\n                firstOctet |= number;\r\n                retView[0] = firstOctet;\r\n            }\r\n            return retView.buffer;\r\n        }\r\n        if (!this.isHexOnly) {\r\n            const encodedBuf = pvutils.utilToBase(this.tagNumber, 7);\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const size = encodedBuf.byteLength;\r\n            const retView = new Uint8Array(size + 1);\r\n            retView[0] = (firstOctet | 0x1F);\r\n            if (!sizeOnly) {\r\n                for (let i = 0; i < (size - 1); i++)\r\n                    retView[i + 1] = encodedView[i] | 0x80;\r\n                retView[size] = encodedView[size - 1];\r\n            }\r\n            return retView.buffer;\r\n        }\r\n        const retView = new Uint8Array(this.valueHexView.byteLength + 1);\r\n        retView[0] = (firstOctet | 0x1F);\r\n        if (!sizeOnly) {\r\n            const curView = this.valueHexView;\r\n            for (let i = 0; i < (curView.length - 1); i++)\r\n                retView[i + 1] = curView[i] | 0x80;\r\n            retView[this.valueHexView.byteLength] = curView[curView.length - 1];\r\n        }\r\n        return retView.buffer;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        if (intBuffer.length === 0) {\r\n            this.error = \"Zero buffer length\";\r\n            return -1;\r\n        }\r\n        const tagClassMask = intBuffer[0] & 0xC0;\r\n        switch (tagClassMask) {\r\n            case 0x00:\r\n                this.tagClass = (1);\r\n                break;\r\n            case 0x40:\r\n                this.tagClass = (2);\r\n                break;\r\n            case 0x80:\r\n                this.tagClass = (3);\r\n                break;\r\n            case 0xC0:\r\n                this.tagClass = (4);\r\n                break;\r\n            default:\r\n                this.error = \"Unknown tag class\";\r\n                return -1;\r\n        }\r\n        this.isConstructed = (intBuffer[0] & 0x20) === 0x20;\r\n        this.isHexOnly = false;\r\n        const tagNumberMask = intBuffer[0] & 0x1F;\r\n        if (tagNumberMask !== 0x1F) {\r\n            this.tagNumber = (tagNumberMask);\r\n            this.blockLength = 1;\r\n        }\r\n        else {\r\n            let count = 1;\r\n            let intTagNumberBuffer = this.valueHexView = new Uint8Array(255);\r\n            let tagNumberBufferMaxLength = 255;\r\n            while (intBuffer[count] & 0x80) {\r\n                intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\r\n                count++;\r\n                if (count >= intBuffer.length) {\r\n                    this.error = \"End of input reached before message was fully decoded\";\r\n                    return -1;\r\n                }\r\n                if (count === tagNumberBufferMaxLength) {\r\n                    tagNumberBufferMaxLength += 255;\r\n                    const tempBufferView = new Uint8Array(tagNumberBufferMaxLength);\r\n                    for (let i = 0; i < intTagNumberBuffer.length; i++)\r\n                        tempBufferView[i] = intTagNumberBuffer[i];\r\n                    intTagNumberBuffer = this.valueHexView = new Uint8Array(tagNumberBufferMaxLength);\r\n                }\r\n            }\r\n            this.blockLength = (count + 1);\r\n            intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\r\n            const tempBufferView = new Uint8Array(count);\r\n            for (let i = 0; i < count; i++)\r\n                tempBufferView[i] = intTagNumberBuffer[i];\r\n            intTagNumberBuffer = this.valueHexView = new Uint8Array(count);\r\n            intTagNumberBuffer.set(tempBufferView);\r\n            if (this.blockLength <= 9)\r\n                this.tagNumber = pvutils.utilFromBase(intTagNumberBuffer, 7);\r\n            else {\r\n                this.isHexOnly = true;\r\n                this.warnings.push(\"Tag too long, represented as hex-coded\");\r\n            }\r\n        }\r\n        if (((this.tagClass === 1)) &&\r\n            (this.isConstructed)) {\r\n            switch (this.tagNumber) {\r\n                case 1:\r\n                case 2:\r\n                case 5:\r\n                case 6:\r\n                case 9:\r\n                case 13:\r\n                case 14:\r\n                case 23:\r\n                case 24:\r\n                case 31:\r\n                case 32:\r\n                case 33:\r\n                case 34:\r\n                    this.error = \"Constructed encoding used for primitive type\";\r\n                    return -1;\r\n            }\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            tagClass: this.tagClass,\r\n            tagNumber: this.tagNumber,\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalIdentificationBlock.NAME = \"identificationBlock\";\n\nclass LocalLengthBlock extends LocalBaseBlock {\r\n    constructor({ lenBlock = {}, } = {}) {\r\n        var _a, _b, _c;\r\n        super();\r\n        this.isIndefiniteForm = (_a = lenBlock.isIndefiniteForm) !== null && _a !== void 0 ? _a : false;\r\n        this.longFormUsed = (_b = lenBlock.longFormUsed) !== null && _b !== void 0 ? _b : false;\r\n        this.length = (_c = lenBlock.length) !== null && _c !== void 0 ? _c : 0;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = view.subarray(inputOffset, inputOffset + inputLength);\r\n        if (intBuffer.length === 0) {\r\n            this.error = \"Zero buffer length\";\r\n            return -1;\r\n        }\r\n        if (intBuffer[0] === 0xFF) {\r\n            this.error = \"Length block 0xFF is reserved by standard\";\r\n            return -1;\r\n        }\r\n        this.isIndefiniteForm = intBuffer[0] === 0x80;\r\n        if (this.isIndefiniteForm) {\r\n            this.blockLength = 1;\r\n            return (inputOffset + this.blockLength);\r\n        }\r\n        this.longFormUsed = !!(intBuffer[0] & 0x80);\r\n        if (this.longFormUsed === false) {\r\n            this.length = (intBuffer[0]);\r\n            this.blockLength = 1;\r\n            return (inputOffset + this.blockLength);\r\n        }\r\n        const count = intBuffer[0] & 0x7F;\r\n        if (count > 8) {\r\n            this.error = \"Too big integer\";\r\n            return -1;\r\n        }\r\n        if ((count + 1) > intBuffer.length) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        const lenOffset = inputOffset + 1;\r\n        const lengthBufferView = view.subarray(lenOffset, lenOffset + count);\r\n        if (lengthBufferView[count - 1] === 0x00)\r\n            this.warnings.push(\"Needlessly long encoded length\");\r\n        this.length = pvutils.utilFromBase(lengthBufferView, 8);\r\n        if (this.longFormUsed && (this.length <= 127))\r\n            this.warnings.push(\"Unnecessary usage of long length form\");\r\n        this.blockLength = count + 1;\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toBER(sizeOnly = false) {\r\n        let retBuf;\r\n        let retView;\r\n        if (this.length > 127)\r\n            this.longFormUsed = true;\r\n        if (this.isIndefiniteForm) {\r\n            retBuf = new ArrayBuffer(1);\r\n            if (sizeOnly === false) {\r\n                retView = new Uint8Array(retBuf);\r\n                retView[0] = 0x80;\r\n            }\r\n            return retBuf;\r\n        }\r\n        if (this.longFormUsed) {\r\n            const encodedBuf = pvutils.utilToBase(this.length, 8);\r\n            if (encodedBuf.byteLength > 127) {\r\n                this.error = \"Too big length\";\r\n                return (EMPTY_BUFFER);\r\n            }\r\n            retBuf = new ArrayBuffer(encodedBuf.byteLength + 1);\r\n            if (sizeOnly)\r\n                return retBuf;\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            retView = new Uint8Array(retBuf);\r\n            retView[0] = encodedBuf.byteLength | 0x80;\r\n            for (let i = 0; i < encodedBuf.byteLength; i++)\r\n                retView[i + 1] = encodedView[i];\r\n            return retBuf;\r\n        }\r\n        retBuf = new ArrayBuffer(1);\r\n        if (sizeOnly === false) {\r\n            retView = new Uint8Array(retBuf);\r\n            retView[0] = this.length;\r\n        }\r\n        return retBuf;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            isIndefiniteForm: this.isIndefiniteForm,\r\n            longFormUsed: this.longFormUsed,\r\n            length: this.length,\r\n        };\r\n    }\r\n}\r\nLocalLengthBlock.NAME = \"lengthBlock\";\n\nconst typeStore = {};\n\nclass BaseBlock extends LocalBaseBlock {\r\n    constructor({ name = EMPTY_STRING, optional = false, primitiveSchema, ...parameters } = {}, valueBlockType) {\r\n        super(parameters);\r\n        this.name = name;\r\n        this.optional = optional;\r\n        if (primitiveSchema) {\r\n            this.primitiveSchema = primitiveSchema;\r\n        }\r\n        this.idBlock = new LocalIdentificationBlock(parameters);\r\n        this.lenBlock = new LocalLengthBlock(parameters);\r\n        this.valueBlock = valueBlockType ? new valueBlockType(parameters) : new ValueBlock(parameters);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const _writer = writer || new ViewWriter();\r\n        if (!writer) {\r\n            prepareIndefiniteForm(this);\r\n        }\r\n        const idBlockBuf = this.idBlock.toBER(sizeOnly);\r\n        _writer.write(idBlockBuf);\r\n        if (this.lenBlock.isIndefiniteForm) {\r\n            _writer.write(new Uint8Array([0x80]).buffer);\r\n            this.valueBlock.toBER(sizeOnly, _writer);\r\n            _writer.write(new ArrayBuffer(2));\r\n        }\r\n        else {\r\n            const valueBlockBuf = this.valueBlock.toBER(sizeOnly);\r\n            this.lenBlock.length = valueBlockBuf.byteLength;\r\n            const lenBlockBuf = this.lenBlock.toBER(sizeOnly);\r\n            _writer.write(lenBlockBuf);\r\n            _writer.write(valueBlockBuf);\r\n        }\r\n        if (!writer) {\r\n            return _writer.final();\r\n        }\r\n        return EMPTY_BUFFER;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            idBlock: this.idBlock.toJSON(),\r\n            lenBlock: this.lenBlock.toJSON(),\r\n            valueBlock: this.valueBlock.toJSON(),\r\n            name: this.name,\r\n            optional: this.optional,\r\n        };\r\n        if (this.primitiveSchema)\r\n            object.primitiveSchema = this.primitiveSchema.toJSON();\r\n        return object;\r\n    }\r\n    toString(encoding = \"ascii\") {\r\n        if (encoding === \"ascii\") {\r\n            return this.onAsciiEncoding();\r\n        }\r\n        return pvtsutils.Convert.ToHex(this.toBER());\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${pvtsutils.Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`;\r\n    }\r\n    isEqual(other) {\r\n        if (this === other) {\r\n            return true;\r\n        }\r\n        if (!(other instanceof this.constructor)) {\r\n            return false;\r\n        }\r\n        const thisRaw = this.toBER();\r\n        const otherRaw = other.toBER();\r\n        return pvutils.isEqualBuffer(thisRaw, otherRaw);\r\n    }\r\n}\r\nBaseBlock.NAME = \"BaseBlock\";\r\nfunction prepareIndefiniteForm(baseBlock) {\r\n    if (baseBlock instanceof typeStore.Constructed) {\r\n        for (const value of baseBlock.valueBlock.value) {\r\n            if (prepareIndefiniteForm(value)) {\r\n                baseBlock.lenBlock.isIndefiniteForm = true;\r\n            }\r\n        }\r\n    }\r\n    return !!baseBlock.lenBlock.isIndefiniteForm;\r\n}\n\nclass BaseStringBlock extends BaseBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}, stringValueBlockType) {\r\n        super(parameters, stringValueBlockType);\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.value;\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.value = value;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        this.fromBuffer(this.valueBlock.valueHexView);\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : '${this.valueBlock.value}'`;\r\n    }\r\n}\r\nBaseStringBlock.NAME = \"BaseStringBlock\";\n\nclass LocalPrimitiveValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ isHexOnly = true, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isHexOnly = isHexOnly;\r\n    }\r\n}\r\nLocalPrimitiveValueBlock.NAME = \"PrimitiveValueBlock\";\n\nvar _a$w;\r\nclass Primitive extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalPrimitiveValueBlock);\r\n        this.idBlock.isConstructed = false;\r\n    }\r\n}\r\n_a$w = Primitive;\r\n(() => {\r\n    typeStore.Primitive = _a$w;\r\n})();\r\nPrimitive.NAME = \"PRIMITIVE\";\n\nfunction localChangeType(inputObject, newType) {\r\n    if (inputObject instanceof newType) {\r\n        return inputObject;\r\n    }\r\n    const newObject = new newType();\r\n    newObject.idBlock = inputObject.idBlock;\r\n    newObject.lenBlock = inputObject.lenBlock;\r\n    newObject.warnings = inputObject.warnings;\r\n    newObject.valueBeforeDecodeView = inputObject.valueBeforeDecodeView;\r\n    return newObject;\r\n}\r\nfunction localFromBER(inputBuffer, inputOffset = 0, inputLength = inputBuffer.length) {\r\n    const incomingOffset = inputOffset;\r\n    let returnObject = new BaseBlock({}, ValueBlock);\r\n    const baseBlock = new LocalBaseBlock();\r\n    if (!checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)) {\r\n        returnObject.error = baseBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    const intBuffer = inputBuffer.subarray(inputOffset, inputOffset + inputLength);\r\n    if (!intBuffer.length) {\r\n        returnObject.error = \"Zero buffer length\";\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    let resultOffset = returnObject.idBlock.fromBER(inputBuffer, inputOffset, inputLength);\r\n    if (returnObject.idBlock.warnings.length) {\r\n        returnObject.warnings.concat(returnObject.idBlock.warnings);\r\n    }\r\n    if (resultOffset === -1) {\r\n        returnObject.error = returnObject.idBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    inputOffset = resultOffset;\r\n    inputLength -= returnObject.idBlock.blockLength;\r\n    resultOffset = returnObject.lenBlock.fromBER(inputBuffer, inputOffset, inputLength);\r\n    if (returnObject.lenBlock.warnings.length) {\r\n        returnObject.warnings.concat(returnObject.lenBlock.warnings);\r\n    }\r\n    if (resultOffset === -1) {\r\n        returnObject.error = returnObject.lenBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    inputOffset = resultOffset;\r\n    inputLength -= returnObject.lenBlock.blockLength;\r\n    if (!returnObject.idBlock.isConstructed &&\r\n        returnObject.lenBlock.isIndefiniteForm) {\r\n        returnObject.error = \"Indefinite length form used for primitive encoding form\";\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    let newASN1Type = BaseBlock;\r\n    switch (returnObject.idBlock.tagClass) {\r\n        case 1:\r\n            if ((returnObject.idBlock.tagNumber >= 37) &&\r\n                (returnObject.idBlock.isHexOnly === false)) {\r\n                returnObject.error = \"UNIVERSAL 37 and upper tags are reserved by ASN.1 standard\";\r\n                return {\r\n                    offset: -1,\r\n                    result: returnObject\r\n                };\r\n            }\r\n            switch (returnObject.idBlock.tagNumber) {\r\n                case 0:\r\n                    if ((returnObject.idBlock.isConstructed) &&\r\n                        (returnObject.lenBlock.length > 0)) {\r\n                        returnObject.error = \"Type [UNIVERSAL 0] is reserved\";\r\n                        return {\r\n                            offset: -1,\r\n                            result: returnObject\r\n                        };\r\n                    }\r\n                    newASN1Type = typeStore.EndOfContent;\r\n                    break;\r\n                case 1:\r\n                    newASN1Type = typeStore.Boolean;\r\n                    break;\r\n                case 2:\r\n                    newASN1Type = typeStore.Integer;\r\n                    break;\r\n                case 3:\r\n                    newASN1Type = typeStore.BitString;\r\n                    break;\r\n                case 4:\r\n                    newASN1Type = typeStore.OctetString;\r\n                    break;\r\n                case 5:\r\n                    newASN1Type = typeStore.Null;\r\n                    break;\r\n                case 6:\r\n                    newASN1Type = typeStore.ObjectIdentifier;\r\n                    break;\r\n                case 10:\r\n                    newASN1Type = typeStore.Enumerated;\r\n                    break;\r\n                case 12:\r\n                    newASN1Type = typeStore.Utf8String;\r\n                    break;\r\n                case 13:\r\n                    newASN1Type = typeStore.RelativeObjectIdentifier;\r\n                    break;\r\n                case 14:\r\n                    newASN1Type = typeStore.TIME;\r\n                    break;\r\n                case 15:\r\n                    returnObject.error = \"[UNIVERSAL 15] is reserved by ASN.1 standard\";\r\n                    return {\r\n                        offset: -1,\r\n                        result: returnObject\r\n                    };\r\n                case 16:\r\n                    newASN1Type = typeStore.Sequence;\r\n                    break;\r\n                case 17:\r\n                    newASN1Type = typeStore.Set;\r\n                    break;\r\n                case 18:\r\n                    newASN1Type = typeStore.NumericString;\r\n                    break;\r\n                case 19:\r\n                    newASN1Type = typeStore.PrintableString;\r\n                    break;\r\n                case 20:\r\n                    newASN1Type = typeStore.TeletexString;\r\n                    break;\r\n                case 21:\r\n                    newASN1Type = typeStore.VideotexString;\r\n                    break;\r\n                case 22:\r\n                    newASN1Type = typeStore.IA5String;\r\n                    break;\r\n                case 23:\r\n                    newASN1Type = typeStore.UTCTime;\r\n                    break;\r\n                case 24:\r\n                    newASN1Type = typeStore.GeneralizedTime;\r\n                    break;\r\n                case 25:\r\n                    newASN1Type = typeStore.GraphicString;\r\n                    break;\r\n                case 26:\r\n                    newASN1Type = typeStore.VisibleString;\r\n                    break;\r\n                case 27:\r\n                    newASN1Type = typeStore.GeneralString;\r\n                    break;\r\n                case 28:\r\n                    newASN1Type = typeStore.UniversalString;\r\n                    break;\r\n                case 29:\r\n                    newASN1Type = typeStore.CharacterString;\r\n                    break;\r\n                case 30:\r\n                    newASN1Type = typeStore.BmpString;\r\n                    break;\r\n                case 31:\r\n                    newASN1Type = typeStore.DATE;\r\n                    break;\r\n                case 32:\r\n                    newASN1Type = typeStore.TimeOfDay;\r\n                    break;\r\n                case 33:\r\n                    newASN1Type = typeStore.DateTime;\r\n                    break;\r\n                case 34:\r\n                    newASN1Type = typeStore.Duration;\r\n                    break;\r\n                default: {\r\n                    const newObject = returnObject.idBlock.isConstructed\r\n                        ? new typeStore.Constructed()\r\n                        : new typeStore.Primitive();\r\n                    newObject.idBlock = returnObject.idBlock;\r\n                    newObject.lenBlock = returnObject.lenBlock;\r\n                    newObject.warnings = returnObject.warnings;\r\n                    returnObject = newObject;\r\n                }\r\n            }\r\n            break;\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n        default: {\r\n            newASN1Type = returnObject.idBlock.isConstructed\r\n                ? typeStore.Constructed\r\n                : typeStore.Primitive;\r\n        }\r\n    }\r\n    returnObject = localChangeType(returnObject, newASN1Type);\r\n    resultOffset = returnObject.fromBER(inputBuffer, inputOffset, returnObject.lenBlock.isIndefiniteForm ? inputLength : returnObject.lenBlock.length);\r\n    returnObject.valueBeforeDecodeView = inputBuffer.subarray(incomingOffset, incomingOffset + returnObject.blockLength);\r\n    return {\r\n        offset: resultOffset,\r\n        result: returnObject\r\n    };\r\n}\r\nfunction fromBER(inputBuffer) {\r\n    if (!inputBuffer.byteLength) {\r\n        const result = new BaseBlock({}, ValueBlock);\r\n        result.error = \"Input buffer has zero length\";\r\n        return {\r\n            offset: -1,\r\n            result\r\n        };\r\n    }\r\n    return localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).slice(), 0, inputBuffer.byteLength);\r\n}\n\nfunction checkLen(indefiniteLength, length) {\r\n    if (indefiniteLength) {\r\n        return 1;\r\n    }\r\n    return length;\r\n}\r\nclass LocalConstructedValueBlock extends ValueBlock {\r\n    constructor({ value = [], isIndefiniteForm = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n        this.isIndefiniteForm = isIndefiniteForm;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        this.valueBeforeDecodeView = view.subarray(inputOffset, inputOffset + inputLength);\r\n        if (this.valueBeforeDecodeView.length === 0) {\r\n            this.warnings.push(\"Zero buffer length\");\r\n            return inputOffset;\r\n        }\r\n        let currentOffset = inputOffset;\r\n        while (checkLen(this.isIndefiniteForm, inputLength) > 0) {\r\n            const returnObject = localFromBER(view, currentOffset, inputLength);\r\n            if (returnObject.offset === -1) {\r\n                this.error = returnObject.result.error;\r\n                this.warnings.concat(returnObject.result.warnings);\r\n                return -1;\r\n            }\r\n            currentOffset = returnObject.offset;\r\n            this.blockLength += returnObject.result.blockLength;\r\n            inputLength -= returnObject.result.blockLength;\r\n            this.value.push(returnObject.result);\r\n            if (this.isIndefiniteForm && returnObject.result.constructor.NAME === END_OF_CONTENT_NAME) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.isIndefiniteForm) {\r\n            if (this.value[this.value.length - 1].constructor.NAME === END_OF_CONTENT_NAME) {\r\n                this.value.pop();\r\n            }\r\n            else {\r\n                this.warnings.push(\"No EndOfContent block encoded\");\r\n            }\r\n        }\r\n        return currentOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const _writer = writer || new ViewWriter();\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            this.value[i].toBER(sizeOnly, _writer);\r\n        }\r\n        if (!writer) {\r\n            return _writer.final();\r\n        }\r\n        return EMPTY_BUFFER;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            isIndefiniteForm: this.isIndefiniteForm,\r\n            value: [],\r\n        };\r\n        for (const value of this.value) {\r\n            object.value.push(value.toJSON());\r\n        }\r\n        return object;\r\n    }\r\n}\r\nLocalConstructedValueBlock.NAME = \"ConstructedValueBlock\";\n\nvar _a$v;\r\nclass Constructed extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalConstructedValueBlock);\r\n        this.idBlock.isConstructed = true;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    onAsciiEncoding() {\r\n        const values = [];\r\n        for (const value of this.valueBlock.value) {\r\n            values.push(value.toString(\"ascii\").split(\"\\n\").map(o => `  ${o}`).join(\"\\n\"));\r\n        }\r\n        const blockName = this.idBlock.tagClass === 3\r\n            ? `[${this.idBlock.tagNumber}]`\r\n            : this.constructor.NAME;\r\n        return values.length\r\n            ? `${blockName} :\\n${values.join(\"\\n\")}`\r\n            : `${blockName} :`;\r\n    }\r\n}\r\n_a$v = Constructed;\r\n(() => {\r\n    typeStore.Constructed = _a$v;\r\n})();\r\nConstructed.NAME = \"CONSTRUCTED\";\n\nclass LocalEndOfContentValueBlock extends ValueBlock {\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        return inputOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return EMPTY_BUFFER;\r\n    }\r\n}\r\nLocalEndOfContentValueBlock.override = \"EndOfContentValueBlock\";\n\nvar _a$u;\r\nclass EndOfContent extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalEndOfContentValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 0;\r\n    }\r\n}\r\n_a$u = EndOfContent;\r\n(() => {\r\n    typeStore.EndOfContent = _a$u;\r\n})();\r\nEndOfContent.NAME = END_OF_CONTENT_NAME;\n\nvar _a$t;\r\nclass Null extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, ValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 5;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (this.lenBlock.length > 0)\r\n            this.warnings.push(\"Non-zero length of value block for Null type\");\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        this.blockLength += inputLength;\r\n        if ((inputOffset + inputLength) > inputBuffer.byteLength) {\r\n            this.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n            return -1;\r\n        }\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const retBuf = new ArrayBuffer(2);\r\n        if (!sizeOnly) {\r\n            const retView = new Uint8Array(retBuf);\r\n            retView[0] = 0x05;\r\n            retView[1] = 0x00;\r\n        }\r\n        if (writer) {\r\n            writer.write(retBuf);\r\n        }\r\n        return retBuf;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME}`;\r\n    }\r\n}\r\n_a$t = Null;\r\n(() => {\r\n    typeStore.Null = _a$t;\r\n})();\r\nNull.NAME = \"NULL\";\n\nclass LocalBooleanValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ value, ...parameters } = {}) {\r\n        super(parameters);\r\n        if (parameters.valueHex) {\r\n            this.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(parameters.valueHex);\r\n        }\r\n        else {\r\n            this.valueHexView = new Uint8Array(1);\r\n        }\r\n        if (value) {\r\n            this.value = value;\r\n        }\r\n    }\r\n    get value() {\r\n        for (const octet of this.valueHexView) {\r\n            if (octet > 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    set value(value) {\r\n        this.valueHexView[0] = value ? 0xFF : 0x00;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        this.valueHexView = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        if (inputLength > 1)\r\n            this.warnings.push(\"Boolean value encoded in more then 1 octet\");\r\n        this.isHexOnly = true;\r\n        pvutils.utilDecodeTC.call(this);\r\n        this.blockLength = inputLength;\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER() {\r\n        return this.valueHexView.slice();\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.value,\r\n        };\r\n    }\r\n}\r\nLocalBooleanValueBlock.NAME = \"BooleanValueBlock\";\n\nvar _a$s;\r\nclass Boolean extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalBooleanValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 1;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.value;\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.value = value;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.getValue}`;\r\n    }\r\n}\r\n_a$s = Boolean;\r\n(() => {\r\n    typeStore.Boolean = _a$s;\r\n})();\r\nBoolean.NAME = \"BOOLEAN\";\n\nclass LocalOctetStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\r\n    constructor({ isConstructed = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isConstructed = isConstructed;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = 0;\r\n        if (this.isConstructed) {\r\n            this.isHexOnly = false;\r\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\r\n            if (resultOffset === -1)\r\n                return resultOffset;\r\n            for (let i = 0; i < this.value.length; i++) {\r\n                const currentBlockName = this.value[i].constructor.NAME;\r\n                if (currentBlockName === END_OF_CONTENT_NAME) {\r\n                    if (this.isIndefiniteForm)\r\n                        break;\r\n                    else {\r\n                        this.error = \"EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only\";\r\n                        return -1;\r\n                    }\r\n                }\r\n                if (currentBlockName !== OCTET_STRING_NAME) {\r\n                    this.error = \"OCTET STRING may consists of OCTET STRINGs only\";\r\n                    return -1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.isHexOnly = true;\r\n            resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\r\n            this.blockLength = inputLength;\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        if (this.isConstructed)\r\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\r\n        return sizeOnly\r\n            ? new ArrayBuffer(this.valueHexView.byteLength)\r\n            : this.valueHexView.slice().buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalOctetStringValueBlock.NAME = \"OctetStringValueBlock\";\n\nvar _a$r;\r\nclass OctetString extends BaseBlock {\r\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\r\n        var _b, _c;\r\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\r\n        super({\r\n            idBlock: {\r\n                isConstructed: parameters.isConstructed,\r\n                ...idBlock,\r\n            },\r\n            lenBlock: {\r\n                ...lenBlock,\r\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\r\n            },\r\n            ...parameters,\r\n        }, LocalOctetStringValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 4;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        if (inputLength === 0) {\r\n            if (this.idBlock.error.length === 0)\r\n                this.blockLength += this.idBlock.blockLength;\r\n            if (this.lenBlock.error.length === 0)\r\n                this.blockLength += this.lenBlock.blockLength;\r\n            return inputOffset;\r\n        }\r\n        if (!this.valueBlock.isConstructed) {\r\n            const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\r\n            const buf = view.subarray(inputOffset, inputOffset + inputLength);\r\n            try {\r\n                if (buf.byteLength) {\r\n                    const asn = localFromBER(buf, 0, buf.byteLength);\r\n                    if (asn.offset !== -1 && asn.offset === inputLength) {\r\n                        this.valueBlock.value = [asn.result];\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\r\n    }\r\n    onAsciiEncoding() {\r\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\r\n            return Constructed.prototype.onAsciiEncoding.call(this);\r\n        }\r\n        return `${this.constructor.NAME} : ${pvtsutils.Convert.ToHex(this.valueBlock.valueHexView)}`;\r\n    }\r\n    getValue() {\r\n        if (!this.idBlock.isConstructed) {\r\n            return this.valueBlock.valueHexView.slice().buffer;\r\n        }\r\n        const array = [];\r\n        for (const content of this.valueBlock.value) {\r\n            if (content instanceof OctetString) {\r\n                array.push(content.valueBlock.valueHexView);\r\n            }\r\n        }\r\n        return pvtsutils.BufferSourceConverter.concat(array);\r\n    }\r\n}\r\n_a$r = OctetString;\r\n(() => {\r\n    typeStore.OctetString = _a$r;\r\n})();\r\nOctetString.NAME = OCTET_STRING_NAME;\n\nclass LocalBitStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\r\n    constructor({ unusedBits = 0, isConstructed = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.unusedBits = unusedBits;\r\n        this.isConstructed = isConstructed;\r\n        this.blockLength = this.valueHexView.byteLength;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (!inputLength) {\r\n            return inputOffset;\r\n        }\r\n        let resultOffset = -1;\r\n        if (this.isConstructed) {\r\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\r\n            if (resultOffset === -1)\r\n                return resultOffset;\r\n            for (const value of this.value) {\r\n                const currentBlockName = value.constructor.NAME;\r\n                if (currentBlockName === END_OF_CONTENT_NAME) {\r\n                    if (this.isIndefiniteForm)\r\n                        break;\r\n                    else {\r\n                        this.error = \"EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only\";\r\n                        return -1;\r\n                    }\r\n                }\r\n                if (currentBlockName !== BIT_STRING_NAME) {\r\n                    this.error = \"BIT STRING may consists of BIT STRINGs only\";\r\n                    return -1;\r\n                }\r\n                const valueBlock = value.valueBlock;\r\n                if ((this.unusedBits > 0) && (valueBlock.unusedBits > 0)) {\r\n                    this.error = \"Using of \\\"unused bits\\\" inside constructive BIT STRING allowed for least one only\";\r\n                    return -1;\r\n                }\r\n                this.unusedBits = valueBlock.unusedBits;\r\n            }\r\n            return resultOffset;\r\n        }\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.unusedBits = intBuffer[0];\r\n        if (this.unusedBits > 7) {\r\n            this.error = \"Unused bits for BitString must be in range 0-7\";\r\n            return -1;\r\n        }\r\n        if (!this.unusedBits) {\r\n            const buf = intBuffer.subarray(1);\r\n            try {\r\n                if (buf.byteLength) {\r\n                    const asn = localFromBER(buf, 0, buf.byteLength);\r\n                    if (asn.offset !== -1 && asn.offset === (inputLength - 1)) {\r\n                        this.value = [asn.result];\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        this.valueHexView = intBuffer.subarray(1);\r\n        this.blockLength = intBuffer.length;\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        if (this.isConstructed) {\r\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\r\n        }\r\n        if (sizeOnly) {\r\n            return new ArrayBuffer(this.valueHexView.byteLength + 1);\r\n        }\r\n        if (!this.valueHexView.byteLength) {\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(this.valueHexView.length + 1);\r\n        retView[0] = this.unusedBits;\r\n        retView.set(this.valueHexView, 1);\r\n        return retView.buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            unusedBits: this.unusedBits,\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalBitStringValueBlock.NAME = \"BitStringValueBlock\";\n\nvar _a$q;\r\nclass BitString extends BaseBlock {\r\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\r\n        var _b, _c;\r\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\r\n        super({\r\n            idBlock: {\r\n                isConstructed: parameters.isConstructed,\r\n                ...idBlock,\r\n            },\r\n            lenBlock: {\r\n                ...lenBlock,\r\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\r\n            },\r\n            ...parameters,\r\n        }, LocalBitStringValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 3;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\r\n    }\r\n    onAsciiEncoding() {\r\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\r\n            return Constructed.prototype.onAsciiEncoding.call(this);\r\n        }\r\n        else {\r\n            const bits = [];\r\n            const valueHex = this.valueBlock.valueHexView;\r\n            for (const byte of valueHex) {\r\n                bits.push(byte.toString(2).padStart(8, \"0\"));\r\n            }\r\n            const bitsStr = bits.join(\"\");\r\n            return `${this.constructor.NAME} : ${bitsStr.substring(0, bitsStr.length - this.valueBlock.unusedBits)}`;\r\n        }\r\n    }\r\n}\r\n_a$q = BitString;\r\n(() => {\r\n    typeStore.BitString = _a$q;\r\n})();\r\nBitString.NAME = BIT_STRING_NAME;\n\nvar _a$p;\r\nfunction viewAdd(first, second) {\r\n    const c = new Uint8Array([0]);\r\n    const firstView = new Uint8Array(first);\r\n    const secondView = new Uint8Array(second);\r\n    let firstViewCopy = firstView.slice(0);\r\n    const firstViewCopyLength = firstViewCopy.length - 1;\r\n    const secondViewCopy = secondView.slice(0);\r\n    const secondViewCopyLength = secondViewCopy.length - 1;\r\n    let value = 0;\r\n    const max = (secondViewCopyLength < firstViewCopyLength) ? firstViewCopyLength : secondViewCopyLength;\r\n    let counter = 0;\r\n    for (let i = max; i >= 0; i--, counter++) {\r\n        switch (true) {\r\n            case (counter < secondViewCopy.length):\r\n                value = firstViewCopy[firstViewCopyLength - counter] + secondViewCopy[secondViewCopyLength - counter] + c[0];\r\n                break;\r\n            default:\r\n                value = firstViewCopy[firstViewCopyLength - counter] + c[0];\r\n        }\r\n        c[0] = value / 10;\r\n        switch (true) {\r\n            case (counter >= firstViewCopy.length):\r\n                firstViewCopy = pvutils.utilConcatView(new Uint8Array([value % 10]), firstViewCopy);\r\n                break;\r\n            default:\r\n                firstViewCopy[firstViewCopyLength - counter] = value % 10;\r\n        }\r\n    }\r\n    if (c[0] > 0)\r\n        firstViewCopy = pvutils.utilConcatView(c, firstViewCopy);\r\n    return firstViewCopy;\r\n}\r\nfunction power2(n) {\r\n    if (n >= powers2.length) {\r\n        for (let p = powers2.length; p <= n; p++) {\r\n            const c = new Uint8Array([0]);\r\n            let digits = (powers2[p - 1]).slice(0);\r\n            for (let i = (digits.length - 1); i >= 0; i--) {\r\n                const newValue = new Uint8Array([(digits[i] << 1) + c[0]]);\r\n                c[0] = newValue[0] / 10;\r\n                digits[i] = newValue[0] % 10;\r\n            }\r\n            if (c[0] > 0)\r\n                digits = pvutils.utilConcatView(c, digits);\r\n            powers2.push(digits);\r\n        }\r\n    }\r\n    return powers2[n];\r\n}\r\nfunction viewSub(first, second) {\r\n    let b = 0;\r\n    const firstView = new Uint8Array(first);\r\n    const secondView = new Uint8Array(second);\r\n    const firstViewCopy = firstView.slice(0);\r\n    const firstViewCopyLength = firstViewCopy.length - 1;\r\n    const secondViewCopy = secondView.slice(0);\r\n    const secondViewCopyLength = secondViewCopy.length - 1;\r\n    let value;\r\n    let counter = 0;\r\n    for (let i = secondViewCopyLength; i >= 0; i--, counter++) {\r\n        value = firstViewCopy[firstViewCopyLength - counter] - secondViewCopy[secondViewCopyLength - counter] - b;\r\n        switch (true) {\r\n            case (value < 0):\r\n                b = 1;\r\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\r\n                break;\r\n            default:\r\n                b = 0;\r\n                firstViewCopy[firstViewCopyLength - counter] = value;\r\n        }\r\n    }\r\n    if (b > 0) {\r\n        for (let i = (firstViewCopyLength - secondViewCopyLength + 1); i >= 0; i--, counter++) {\r\n            value = firstViewCopy[firstViewCopyLength - counter] - b;\r\n            if (value < 0) {\r\n                b = 1;\r\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\r\n            }\r\n            else {\r\n                b = 0;\r\n                firstViewCopy[firstViewCopyLength - counter] = value;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return firstViewCopy.slice();\r\n}\r\nclass LocalIntegerValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ value, ...parameters } = {}) {\r\n        super(parameters);\r\n        this._valueDec = 0;\r\n        if (parameters.valueHex) {\r\n            this.setValueHex();\r\n        }\r\n        if (value !== undefined) {\r\n            this.valueDec = value;\r\n        }\r\n    }\r\n    setValueHex() {\r\n        if (this.valueHexView.length >= 4) {\r\n            this.warnings.push(\"Too big Integer for decoding, hex only\");\r\n            this.isHexOnly = true;\r\n            this._valueDec = 0;\r\n        }\r\n        else {\r\n            this.isHexOnly = false;\r\n            if (this.valueHexView.length > 0) {\r\n                this._valueDec = pvutils.utilDecodeTC.call(this);\r\n            }\r\n        }\r\n    }\r\n    set valueDec(v) {\r\n        this._valueDec = v;\r\n        this.isHexOnly = false;\r\n        this.valueHexView = new Uint8Array(pvutils.utilEncodeTC(v));\r\n    }\r\n    get valueDec() {\r\n        return this._valueDec;\r\n    }\r\n    fromDER(inputBuffer, inputOffset, inputLength, expectedLength = 0) {\r\n        const offset = this.fromBER(inputBuffer, inputOffset, inputLength);\r\n        if (offset === -1)\r\n            return offset;\r\n        const view = this.valueHexView;\r\n        if ((view[0] === 0x00) && ((view[1] & 0x80) !== 0)) {\r\n            this.valueHexView = view.subarray(1);\r\n        }\r\n        else {\r\n            if (expectedLength !== 0) {\r\n                if (view.length < expectedLength) {\r\n                    if ((expectedLength - view.length) > 1)\r\n                        expectedLength = view.length + 1;\r\n                    this.valueHexView = view.subarray(expectedLength - view.length);\r\n                }\r\n            }\r\n        }\r\n        return offset;\r\n    }\r\n    toDER(sizeOnly = false) {\r\n        const view = this.valueHexView;\r\n        switch (true) {\r\n            case ((view[0] & 0x80) !== 0):\r\n                {\r\n                    const updatedView = new Uint8Array(this.valueHexView.length + 1);\r\n                    updatedView[0] = 0x00;\r\n                    updatedView.set(view, 1);\r\n                    this.valueHexView = updatedView;\r\n                }\r\n                break;\r\n            case ((view[0] === 0x00) && ((view[1] & 0x80) === 0)):\r\n                {\r\n                    this.valueHexView = this.valueHexView.subarray(1);\r\n                }\r\n                break;\r\n        }\r\n        return this.toBER(sizeOnly);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\r\n        if (resultOffset === -1) {\r\n            return resultOffset;\r\n        }\r\n        this.setValueHex();\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return sizeOnly\r\n            ? new ArrayBuffer(this.valueHexView.length)\r\n            : this.valueHexView.slice().buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n        };\r\n    }\r\n    toString() {\r\n        const firstBit = (this.valueHexView.length * 8) - 1;\r\n        let digits = new Uint8Array((this.valueHexView.length * 8) / 3);\r\n        let bitNumber = 0;\r\n        let currentByte;\r\n        const asn1View = this.valueHexView;\r\n        let result = \"\";\r\n        let flag = false;\r\n        for (let byteNumber = (asn1View.byteLength - 1); byteNumber >= 0; byteNumber--) {\r\n            currentByte = asn1View[byteNumber];\r\n            for (let i = 0; i < 8; i++) {\r\n                if ((currentByte & 1) === 1) {\r\n                    switch (bitNumber) {\r\n                        case firstBit:\r\n                            digits = viewSub(power2(bitNumber), digits);\r\n                            result = \"-\";\r\n                            break;\r\n                        default:\r\n                            digits = viewAdd(digits, power2(bitNumber));\r\n                    }\r\n                }\r\n                bitNumber++;\r\n                currentByte >>= 1;\r\n            }\r\n        }\r\n        for (let i = 0; i < digits.length; i++) {\r\n            if (digits[i])\r\n                flag = true;\r\n            if (flag)\r\n                result += digitsString.charAt(digits[i]);\r\n        }\r\n        if (flag === false)\r\n            result += digitsString.charAt(0);\r\n        return result;\r\n    }\r\n}\r\n_a$p = LocalIntegerValueBlock;\r\nLocalIntegerValueBlock.NAME = \"IntegerValueBlock\";\r\n(() => {\r\n    Object.defineProperty(_a$p.prototype, \"valueHex\", {\r\n        set: function (v) {\r\n            this.valueHexView = new Uint8Array(v);\r\n            this.setValueHex();\r\n        },\r\n        get: function () {\r\n            return this.valueHexView.slice().buffer;\r\n        },\r\n    });\r\n})();\n\nvar _a$o;\r\nclass Integer extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalIntegerValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 2;\r\n    }\r\n    toBigInt() {\r\n        assertBigInt();\r\n        return BigInt(this.valueBlock.toString());\r\n    }\r\n    static fromBigInt(value) {\r\n        assertBigInt();\r\n        const bigIntValue = BigInt(value);\r\n        const writer = new ViewWriter();\r\n        const hex = bigIntValue.toString(16).replace(/^-/, \"\");\r\n        const view = new Uint8Array(pvtsutils.Convert.FromHex(hex));\r\n        if (bigIntValue < 0) {\r\n            const first = new Uint8Array(view.length + (view[0] & 0x80 ? 1 : 0));\r\n            first[0] |= 0x80;\r\n            const firstInt = BigInt(`0x${pvtsutils.Convert.ToHex(first)}`);\r\n            const secondInt = firstInt + bigIntValue;\r\n            const second = pvtsutils.BufferSourceConverter.toUint8Array(pvtsutils.Convert.FromHex(secondInt.toString(16)));\r\n            second[0] |= 0x80;\r\n            writer.write(second);\r\n        }\r\n        else {\r\n            if (view[0] & 0x80) {\r\n                writer.write(new Uint8Array([0]));\r\n            }\r\n            writer.write(view);\r\n        }\r\n        const res = new Integer({\r\n            valueHex: writer.final(),\r\n        });\r\n        return res;\r\n    }\r\n    convertToDER() {\r\n        const integer = new Integer({ valueHex: this.valueBlock.valueHexView });\r\n        integer.valueBlock.toDER();\r\n        return integer;\r\n    }\r\n    convertFromDER() {\r\n        return new Integer({\r\n            valueHex: this.valueBlock.valueHexView[0] === 0\r\n                ? this.valueBlock.valueHexView.subarray(1)\r\n                : this.valueBlock.valueHexView,\r\n        });\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString()}`;\r\n    }\r\n}\r\n_a$o = Integer;\r\n(() => {\r\n    typeStore.Integer = _a$o;\r\n})();\r\nInteger.NAME = \"INTEGER\";\n\nvar _a$n;\r\nclass Enumerated extends Integer {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 10;\r\n    }\r\n}\r\n_a$n = Enumerated;\r\n(() => {\r\n    typeStore.Enumerated = _a$n;\r\n})();\r\nEnumerated.NAME = \"ENUMERATED\";\n\nclass LocalSidValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ valueDec = -1, isFirstSid = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.valueDec = valueDec;\r\n        this.isFirstSid = isFirstSid;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (!inputLength) {\r\n            return inputOffset;\r\n        }\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.valueHexView = new Uint8Array(inputLength);\r\n        for (let i = 0; i < inputLength; i++) {\r\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\r\n            this.blockLength++;\r\n            if ((intBuffer[i] & 0x80) === 0x00)\r\n                break;\r\n        }\r\n        const tempView = new Uint8Array(this.blockLength);\r\n        for (let i = 0; i < this.blockLength; i++) {\r\n            tempView[i] = this.valueHexView[i];\r\n        }\r\n        this.valueHexView = tempView;\r\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        if (this.valueHexView[0] === 0x00)\r\n            this.warnings.push(\"Needlessly long format of SID encoding\");\r\n        if (this.blockLength <= 8)\r\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\r\n        else {\r\n            this.isHexOnly = true;\r\n            this.warnings.push(\"Too big SID for decoding, hex only\");\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    set valueBigInt(value) {\r\n        assertBigInt();\r\n        let bits = BigInt(value).toString(2);\r\n        while (bits.length % 7) {\r\n            bits = \"0\" + bits;\r\n        }\r\n        const bytes = new Uint8Array(bits.length / 7);\r\n        for (let i = 0; i < bytes.length; i++) {\r\n            bytes[i] = parseInt(bits.slice(i * 7, i * 7 + 7), 2) + (i + 1 < bytes.length ? 0x80 : 0);\r\n        }\r\n        this.fromBER(bytes.buffer, 0, bytes.length);\r\n    }\r\n    toBER(sizeOnly) {\r\n        if (this.isHexOnly) {\r\n            if (sizeOnly)\r\n                return (new ArrayBuffer(this.valueHexView.byteLength));\r\n            const curView = this.valueHexView;\r\n            const retView = new Uint8Array(this.blockLength);\r\n            for (let i = 0; i < (this.blockLength - 1); i++)\r\n                retView[i] = curView[i] | 0x80;\r\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\r\n            return retView.buffer;\r\n        }\r\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\r\n        if (encodedBuf.byteLength === 0) {\r\n            this.error = \"Error during encoding SID value\";\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(encodedBuf.byteLength);\r\n        if (!sizeOnly) {\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const len = encodedBuf.byteLength - 1;\r\n            for (let i = 0; i < len; i++)\r\n                retView[i] = encodedView[i] | 0x80;\r\n            retView[len] = encodedView[len];\r\n        }\r\n        return retView;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        if (this.isHexOnly)\r\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\r\n        else {\r\n            if (this.isFirstSid) {\r\n                let sidValue = this.valueDec;\r\n                if (this.valueDec <= 39)\r\n                    result = \"0.\";\r\n                else {\r\n                    if (this.valueDec <= 79) {\r\n                        result = \"1.\";\r\n                        sidValue -= 40;\r\n                    }\r\n                    else {\r\n                        result = \"2.\";\r\n                        sidValue -= 80;\r\n                    }\r\n                }\r\n                result += sidValue.toString();\r\n            }\r\n            else\r\n                result = this.valueDec.toString();\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n            isFirstSid: this.isFirstSid,\r\n        };\r\n    }\r\n}\r\nLocalSidValueBlock.NAME = \"sidBlock\";\n\nclass LocalObjectIdentifierValueBlock extends ValueBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = [];\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = inputOffset;\r\n        while (inputLength > 0) {\r\n            const sidBlock = new LocalSidValueBlock();\r\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\r\n            if (resultOffset === -1) {\r\n                this.blockLength = 0;\r\n                this.error = sidBlock.error;\r\n                return resultOffset;\r\n            }\r\n            if (this.value.length === 0)\r\n                sidBlock.isFirstSid = true;\r\n            this.blockLength += sidBlock.blockLength;\r\n            inputLength -= sidBlock.blockLength;\r\n            this.value.push(sidBlock);\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        const retBuffers = [];\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            const valueBuf = this.value[i].toBER(sizeOnly);\r\n            if (valueBuf.byteLength === 0) {\r\n                this.error = this.value[i].error;\r\n                return EMPTY_BUFFER;\r\n            }\r\n            retBuffers.push(valueBuf);\r\n        }\r\n        return concat(retBuffers);\r\n    }\r\n    fromString(string) {\r\n        this.value = [];\r\n        let pos1 = 0;\r\n        let pos2 = 0;\r\n        let sid = \"\";\r\n        let flag = false;\r\n        do {\r\n            pos2 = string.indexOf(\".\", pos1);\r\n            if (pos2 === -1)\r\n                sid = string.substring(pos1);\r\n            else\r\n                sid = string.substring(pos1, pos2);\r\n            pos1 = pos2 + 1;\r\n            if (flag) {\r\n                const sidBlock = this.value[0];\r\n                let plus = 0;\r\n                switch (sidBlock.valueDec) {\r\n                    case 0:\r\n                        break;\r\n                    case 1:\r\n                        plus = 40;\r\n                        break;\r\n                    case 2:\r\n                        plus = 80;\r\n                        break;\r\n                    default:\r\n                        this.value = [];\r\n                        return;\r\n                }\r\n                const parsedSID = parseInt(sid, 10);\r\n                if (isNaN(parsedSID))\r\n                    return;\r\n                sidBlock.valueDec = parsedSID + plus;\r\n                flag = false;\r\n            }\r\n            else {\r\n                const sidBlock = new LocalSidValueBlock();\r\n                if (sid > Number.MAX_SAFE_INTEGER) {\r\n                    assertBigInt();\r\n                    const sidValue = BigInt(sid);\r\n                    sidBlock.valueBigInt = sidValue;\r\n                }\r\n                else {\r\n                    sidBlock.valueDec = parseInt(sid, 10);\r\n                    if (isNaN(sidBlock.valueDec))\r\n                        return;\r\n                }\r\n                if (!this.value.length) {\r\n                    sidBlock.isFirstSid = true;\r\n                    flag = true;\r\n                }\r\n                this.value.push(sidBlock);\r\n            }\r\n        } while (pos2 !== -1);\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        let isHexOnly = false;\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            isHexOnly = this.value[i].isHexOnly;\r\n            let sidStr = this.value[i].toString();\r\n            if (i !== 0)\r\n                result = `${result}.`;\r\n            if (isHexOnly) {\r\n                sidStr = `{${sidStr}}`;\r\n                if (this.value[i].isFirstSid)\r\n                    result = `2.{${sidStr} - 80}`;\r\n                else\r\n                    result += sidStr;\r\n            }\r\n            else\r\n                result += sidStr;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            value: this.toString(),\r\n            sidArray: [],\r\n        };\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            object.sidArray.push(this.value[i].toJSON());\r\n        }\r\n        return object;\r\n    }\r\n}\r\nLocalObjectIdentifierValueBlock.NAME = \"ObjectIdentifierValueBlock\";\n\nvar _a$m;\r\nclass ObjectIdentifier extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalObjectIdentifierValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 6;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.toString();\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.fromString(value);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.getValue(),\r\n        };\r\n    }\r\n}\r\n_a$m = ObjectIdentifier;\r\n(() => {\r\n    typeStore.ObjectIdentifier = _a$m;\r\n})();\r\nObjectIdentifier.NAME = \"OBJECT IDENTIFIER\";\n\nclass LocalRelativeSidValueBlock extends HexBlock(LocalBaseBlock) {\r\n    constructor({ valueDec = 0, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.valueDec = valueDec;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (inputLength === 0)\r\n            return inputOffset;\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength))\r\n            return -1;\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.valueHexView = new Uint8Array(inputLength);\r\n        for (let i = 0; i < inputLength; i++) {\r\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\r\n            this.blockLength++;\r\n            if ((intBuffer[i] & 0x80) === 0x00)\r\n                break;\r\n        }\r\n        const tempView = new Uint8Array(this.blockLength);\r\n        for (let i = 0; i < this.blockLength; i++)\r\n            tempView[i] = this.valueHexView[i];\r\n        this.valueHexView = tempView;\r\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        if (this.valueHexView[0] === 0x00)\r\n            this.warnings.push(\"Needlessly long format of SID encoding\");\r\n        if (this.blockLength <= 8)\r\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\r\n        else {\r\n            this.isHexOnly = true;\r\n            this.warnings.push(\"Too big SID for decoding, hex only\");\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toBER(sizeOnly) {\r\n        if (this.isHexOnly) {\r\n            if (sizeOnly)\r\n                return (new ArrayBuffer(this.valueHexView.byteLength));\r\n            const curView = this.valueHexView;\r\n            const retView = new Uint8Array(this.blockLength);\r\n            for (let i = 0; i < (this.blockLength - 1); i++)\r\n                retView[i] = curView[i] | 0x80;\r\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\r\n            return retView.buffer;\r\n        }\r\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\r\n        if (encodedBuf.byteLength === 0) {\r\n            this.error = \"Error during encoding SID value\";\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(encodedBuf.byteLength);\r\n        if (!sizeOnly) {\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const len = encodedBuf.byteLength - 1;\r\n            for (let i = 0; i < len; i++)\r\n                retView[i] = encodedView[i] | 0x80;\r\n            retView[len] = encodedView[len];\r\n        }\r\n        return retView.buffer;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        if (this.isHexOnly)\r\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\r\n        else {\r\n            result = this.valueDec.toString();\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n        };\r\n    }\r\n}\r\nLocalRelativeSidValueBlock.NAME = \"relativeSidBlock\";\n\nclass LocalRelativeObjectIdentifierValueBlock extends ValueBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = [];\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = inputOffset;\r\n        while (inputLength > 0) {\r\n            const sidBlock = new LocalRelativeSidValueBlock();\r\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\r\n            if (resultOffset === -1) {\r\n                this.blockLength = 0;\r\n                this.error = sidBlock.error;\r\n                return resultOffset;\r\n            }\r\n            this.blockLength += sidBlock.blockLength;\r\n            inputLength -= sidBlock.blockLength;\r\n            this.value.push(sidBlock);\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const retBuffers = [];\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            const valueBuf = this.value[i].toBER(sizeOnly);\r\n            if (valueBuf.byteLength === 0) {\r\n                this.error = this.value[i].error;\r\n                return EMPTY_BUFFER;\r\n            }\r\n            retBuffers.push(valueBuf);\r\n        }\r\n        return concat(retBuffers);\r\n    }\r\n    fromString(string) {\r\n        this.value = [];\r\n        let pos1 = 0;\r\n        let pos2 = 0;\r\n        let sid = \"\";\r\n        do {\r\n            pos2 = string.indexOf(\".\", pos1);\r\n            if (pos2 === -1)\r\n                sid = string.substring(pos1);\r\n            else\r\n                sid = string.substring(pos1, pos2);\r\n            pos1 = pos2 + 1;\r\n            const sidBlock = new LocalRelativeSidValueBlock();\r\n            sidBlock.valueDec = parseInt(sid, 10);\r\n            if (isNaN(sidBlock.valueDec))\r\n                return true;\r\n            this.value.push(sidBlock);\r\n        } while (pos2 !== -1);\r\n        return true;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        let isHexOnly = false;\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            isHexOnly = this.value[i].isHexOnly;\r\n            let sidStr = this.value[i].toString();\r\n            if (i !== 0)\r\n                result = `${result}.`;\r\n            if (isHexOnly) {\r\n                sidStr = `{${sidStr}}`;\r\n                result += sidStr;\r\n            }\r\n            else\r\n                result += sidStr;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            value: this.toString(),\r\n            sidArray: [],\r\n        };\r\n        for (let i = 0; i < this.value.length; i++)\r\n            object.sidArray.push(this.value[i].toJSON());\r\n        return object;\r\n    }\r\n}\r\nLocalRelativeObjectIdentifierValueBlock.NAME = \"RelativeObjectIdentifierValueBlock\";\n\nvar _a$l;\r\nclass RelativeObjectIdentifier extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalRelativeObjectIdentifierValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 13;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.toString();\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.fromString(value);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.getValue(),\r\n        };\r\n    }\r\n}\r\n_a$l = RelativeObjectIdentifier;\r\n(() => {\r\n    typeStore.RelativeObjectIdentifier = _a$l;\r\n})();\r\nRelativeObjectIdentifier.NAME = \"RelativeObjectIdentifier\";\n\nvar _a$k;\r\nclass Sequence extends Constructed {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 16;\r\n    }\r\n}\r\n_a$k = Sequence;\r\n(() => {\r\n    typeStore.Sequence = _a$k;\r\n})();\r\nSequence.NAME = \"SEQUENCE\";\n\nvar _a$j;\r\nclass Set extends Constructed {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 17;\r\n    }\r\n}\r\n_a$j = Set;\r\n(() => {\r\n    typeStore.Set = _a$j;\r\n})();\r\nSet.NAME = \"SET\";\n\nclass LocalStringValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isHexOnly = true;\r\n        this.value = EMPTY_STRING;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.value,\r\n        };\r\n    }\r\n}\r\nLocalStringValueBlock.NAME = \"StringValueBlock\";\n\nclass LocalSimpleStringValueBlock extends LocalStringValueBlock {\r\n}\r\nLocalSimpleStringValueBlock.NAME = \"SimpleStringValueBlock\";\n\nclass LocalSimpleStringBlock extends BaseStringBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters, LocalSimpleStringValueBlock);\r\n    }\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.value = String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\r\n    }\r\n    fromString(inputString) {\r\n        const strLen = inputString.length;\r\n        const view = this.valueBlock.valueHexView = new Uint8Array(strLen);\r\n        for (let i = 0; i < strLen; i++)\r\n            view[i] = inputString.charCodeAt(i);\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalSimpleStringBlock.NAME = \"SIMPLE STRING\";\n\nclass LocalUtf8StringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        try {\r\n            this.valueBlock.value = pvtsutils.Convert.ToUtf8String(inputBuffer);\r\n        }\r\n        catch (ex) {\r\n            this.warnings.push(`Error during \"decodeURIComponent\": ${ex}, using raw string`);\r\n            this.valueBlock.value = pvtsutils.Convert.ToBinary(inputBuffer);\r\n        }\r\n    }\r\n    fromString(inputString) {\r\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf8String(inputString));\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalUtf8StringValueBlock.NAME = \"Utf8StringValueBlock\";\n\nvar _a$i;\r\nclass Utf8String extends LocalUtf8StringValueBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 12;\r\n    }\r\n}\r\n_a$i = Utf8String;\r\n(() => {\r\n    typeStore.Utf8String = _a$i;\r\n})();\r\nUtf8String.NAME = \"UTF8String\";\n\nclass LocalBmpStringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.value = pvtsutils.Convert.ToUtf16String(inputBuffer);\r\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n    }\r\n    fromString(inputString) {\r\n        this.valueBlock.value = inputString;\r\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf16String(inputString));\r\n    }\r\n}\r\nLocalBmpStringValueBlock.NAME = \"BmpStringValueBlock\";\n\nvar _a$h;\r\nclass BmpString extends LocalBmpStringValueBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 30;\r\n    }\r\n}\r\n_a$h = BmpString;\r\n(() => {\r\n    typeStore.BmpString = _a$h;\r\n})();\r\nBmpString.NAME = \"BMPString\";\n\nclass LocalUniversalStringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        const copyBuffer = ArrayBuffer.isView(inputBuffer) ? inputBuffer.slice().buffer : inputBuffer.slice(0);\r\n        const valueView = new Uint8Array(copyBuffer);\r\n        for (let i = 0; i < valueView.length; i += 4) {\r\n            valueView[i] = valueView[i + 3];\r\n            valueView[i + 1] = valueView[i + 2];\r\n            valueView[i + 2] = 0x00;\r\n            valueView[i + 3] = 0x00;\r\n        }\r\n        this.valueBlock.value = String.fromCharCode.apply(null, new Uint32Array(copyBuffer));\r\n    }\r\n    fromString(inputString) {\r\n        const strLength = inputString.length;\r\n        const valueHexView = this.valueBlock.valueHexView = new Uint8Array(strLength * 4);\r\n        for (let i = 0; i < strLength; i++) {\r\n            const codeBuf = pvutils.utilToBase(inputString.charCodeAt(i), 8);\r\n            const codeView = new Uint8Array(codeBuf);\r\n            if (codeView.length > 4)\r\n                continue;\r\n            const dif = 4 - codeView.length;\r\n            for (let j = (codeView.length - 1); j >= 0; j--)\r\n                valueHexView[i * 4 + j + dif] = codeView[j];\r\n        }\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalUniversalStringValueBlock.NAME = \"UniversalStringValueBlock\";\n\nvar _a$g;\r\nclass UniversalString extends LocalUniversalStringValueBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 28;\r\n    }\r\n}\r\n_a$g = UniversalString;\r\n(() => {\r\n    typeStore.UniversalString = _a$g;\r\n})();\r\nUniversalString.NAME = \"UniversalString\";\n\nvar _a$f;\r\nclass NumericString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 18;\r\n    }\r\n}\r\n_a$f = NumericString;\r\n(() => {\r\n    typeStore.NumericString = _a$f;\r\n})();\r\nNumericString.NAME = \"NumericString\";\n\nvar _a$e;\r\nclass PrintableString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 19;\r\n    }\r\n}\r\n_a$e = PrintableString;\r\n(() => {\r\n    typeStore.PrintableString = _a$e;\r\n})();\r\nPrintableString.NAME = \"PrintableString\";\n\nvar _a$d;\r\nclass TeletexString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 20;\r\n    }\r\n}\r\n_a$d = TeletexString;\r\n(() => {\r\n    typeStore.TeletexString = _a$d;\r\n})();\r\nTeletexString.NAME = \"TeletexString\";\n\nvar _a$c;\r\nclass VideotexString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 21;\r\n    }\r\n}\r\n_a$c = VideotexString;\r\n(() => {\r\n    typeStore.VideotexString = _a$c;\r\n})();\r\nVideotexString.NAME = \"VideotexString\";\n\nvar _a$b;\r\nclass IA5String extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 22;\r\n    }\r\n}\r\n_a$b = IA5String;\r\n(() => {\r\n    typeStore.IA5String = _a$b;\r\n})();\r\nIA5String.NAME = \"IA5String\";\n\nvar _a$a;\r\nclass GraphicString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 25;\r\n    }\r\n}\r\n_a$a = GraphicString;\r\n(() => {\r\n    typeStore.GraphicString = _a$a;\r\n})();\r\nGraphicString.NAME = \"GraphicString\";\n\nvar _a$9;\r\nclass VisibleString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 26;\r\n    }\r\n}\r\n_a$9 = VisibleString;\r\n(() => {\r\n    typeStore.VisibleString = _a$9;\r\n})();\r\nVisibleString.NAME = \"VisibleString\";\n\nvar _a$8;\r\nclass GeneralString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 27;\r\n    }\r\n}\r\n_a$8 = GeneralString;\r\n(() => {\r\n    typeStore.GeneralString = _a$8;\r\n})();\r\nGeneralString.NAME = \"GeneralString\";\n\nvar _a$7;\r\nclass CharacterString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 29;\r\n    }\r\n}\r\n_a$7 = CharacterString;\r\n(() => {\r\n    typeStore.CharacterString = _a$7;\r\n})();\r\nCharacterString.NAME = \"CharacterString\";\n\nvar _a$6;\r\nclass UTCTime extends VisibleString {\r\n    constructor({ value, valueDate, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.year = 0;\r\n        this.month = 0;\r\n        this.day = 0;\r\n        this.hour = 0;\r\n        this.minute = 0;\r\n        this.second = 0;\r\n        if (value) {\r\n            this.fromString(value);\r\n            this.valueBlock.valueHexView = new Uint8Array(value.length);\r\n            for (let i = 0; i < value.length; i++)\r\n                this.valueBlock.valueHexView[i] = value.charCodeAt(i);\r\n        }\r\n        if (valueDate) {\r\n            this.fromDate(valueDate);\r\n            this.valueBlock.valueHexView = new Uint8Array(this.toBuffer());\r\n        }\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 23;\r\n    }\r\n    fromBuffer(inputBuffer) {\r\n        this.fromString(String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer)));\r\n    }\r\n    toBuffer() {\r\n        const str = this.toString();\r\n        const buffer = new ArrayBuffer(str.length);\r\n        const view = new Uint8Array(buffer);\r\n        for (let i = 0; i < str.length; i++)\r\n            view[i] = str.charCodeAt(i);\r\n        return buffer;\r\n    }\r\n    fromDate(inputDate) {\r\n        this.year = inputDate.getUTCFullYear();\r\n        this.month = inputDate.getUTCMonth() + 1;\r\n        this.day = inputDate.getUTCDate();\r\n        this.hour = inputDate.getUTCHours();\r\n        this.minute = inputDate.getUTCMinutes();\r\n        this.second = inputDate.getUTCSeconds();\r\n    }\r\n    toDate() {\r\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second)));\r\n    }\r\n    fromString(inputString) {\r\n        const parser = /(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})Z/ig;\r\n        const parserArray = parser.exec(inputString);\r\n        if (parserArray === null) {\r\n            this.error = \"Wrong input string for conversion\";\r\n            return;\r\n        }\r\n        const year = parseInt(parserArray[1], 10);\r\n        if (year >= 50)\r\n            this.year = 1900 + year;\r\n        else\r\n            this.year = 2000 + year;\r\n        this.month = parseInt(parserArray[2], 10);\r\n        this.day = parseInt(parserArray[3], 10);\r\n        this.hour = parseInt(parserArray[4], 10);\r\n        this.minute = parseInt(parserArray[5], 10);\r\n        this.second = parseInt(parserArray[6], 10);\r\n    }\r\n    toString(encoding = \"iso\") {\r\n        if (encoding === \"iso\") {\r\n            const outputArray = new Array(7);\r\n            outputArray[0] = pvutils.padNumber(((this.year < 2000) ? (this.year - 1900) : (this.year - 2000)), 2);\r\n            outputArray[1] = pvutils.padNumber(this.month, 2);\r\n            outputArray[2] = pvutils.padNumber(this.day, 2);\r\n            outputArray[3] = pvutils.padNumber(this.hour, 2);\r\n            outputArray[4] = pvutils.padNumber(this.minute, 2);\r\n            outputArray[5] = pvutils.padNumber(this.second, 2);\r\n            outputArray[6] = \"Z\";\r\n            return outputArray.join(\"\");\r\n        }\r\n        return super.toString(encoding);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.toDate().toISOString()}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            year: this.year,\r\n            month: this.month,\r\n            day: this.day,\r\n            hour: this.hour,\r\n            minute: this.minute,\r\n            second: this.second,\r\n        };\r\n    }\r\n}\r\n_a$6 = UTCTime;\r\n(() => {\r\n    typeStore.UTCTime = _a$6;\r\n})();\r\nUTCTime.NAME = \"UTCTime\";\n\nvar _a$5;\r\nclass GeneralizedTime extends UTCTime {\r\n    constructor(parameters = {}) {\r\n        var _b;\r\n        super(parameters);\r\n        (_b = this.millisecond) !== null && _b !== void 0 ? _b : (this.millisecond = 0);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 24;\r\n    }\r\n    fromDate(inputDate) {\r\n        super.fromDate(inputDate);\r\n        this.millisecond = inputDate.getUTCMilliseconds();\r\n    }\r\n    toDate() {\r\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)));\r\n    }\r\n    fromString(inputString) {\r\n        let isUTC = false;\r\n        let timeString = \"\";\r\n        let dateTimeString = \"\";\r\n        let fractionPart = 0;\r\n        let parser;\r\n        let hourDifference = 0;\r\n        let minuteDifference = 0;\r\n        if (inputString[inputString.length - 1] === \"Z\") {\r\n            timeString = inputString.substring(0, inputString.length - 1);\r\n            isUTC = true;\r\n        }\r\n        else {\r\n            const number = new Number(inputString[inputString.length - 1]);\r\n            if (isNaN(number.valueOf()))\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            timeString = inputString;\r\n        }\r\n        if (isUTC) {\r\n            if (timeString.indexOf(\"+\") !== -1)\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            if (timeString.indexOf(\"-\") !== -1)\r\n                throw new Error(\"Wrong input string for conversion\");\r\n        }\r\n        else {\r\n            let multiplier = 1;\r\n            let differencePosition = timeString.indexOf(\"+\");\r\n            let differenceString = \"\";\r\n            if (differencePosition === -1) {\r\n                differencePosition = timeString.indexOf(\"-\");\r\n                multiplier = -1;\r\n            }\r\n            if (differencePosition !== -1) {\r\n                differenceString = timeString.substring(differencePosition + 1);\r\n                timeString = timeString.substring(0, differencePosition);\r\n                if ((differenceString.length !== 2) && (differenceString.length !== 4))\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                let number = parseInt(differenceString.substring(0, 2), 10);\r\n                if (isNaN(number.valueOf()))\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                hourDifference = multiplier * number;\r\n                if (differenceString.length === 4) {\r\n                    number = parseInt(differenceString.substring(2, 4), 10);\r\n                    if (isNaN(number.valueOf()))\r\n                        throw new Error(\"Wrong input string for conversion\");\r\n                    minuteDifference = multiplier * number;\r\n                }\r\n            }\r\n        }\r\n        let fractionPointPosition = timeString.indexOf(\".\");\r\n        if (fractionPointPosition === -1)\r\n            fractionPointPosition = timeString.indexOf(\",\");\r\n        if (fractionPointPosition !== -1) {\r\n            const fractionPartCheck = new Number(`0${timeString.substring(fractionPointPosition)}`);\r\n            if (isNaN(fractionPartCheck.valueOf()))\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            fractionPart = fractionPartCheck.valueOf();\r\n            dateTimeString = timeString.substring(0, fractionPointPosition);\r\n        }\r\n        else\r\n            dateTimeString = timeString;\r\n        switch (true) {\r\n            case (dateTimeString.length === 8):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1)\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                break;\r\n            case (dateTimeString.length === 10):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    let fractionResult = 60 * fractionPart;\r\n                    this.minute = Math.floor(fractionResult);\r\n                    fractionResult = 60 * (fractionResult - this.minute);\r\n                    this.second = Math.floor(fractionResult);\r\n                    fractionResult = 1000 * (fractionResult - this.second);\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            case (dateTimeString.length === 12):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    let fractionResult = 60 * fractionPart;\r\n                    this.second = Math.floor(fractionResult);\r\n                    fractionResult = 1000 * (fractionResult - this.second);\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            case (dateTimeString.length === 14):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    const fractionResult = 1000 * fractionPart;\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"Wrong input string for conversion\");\r\n        }\r\n        const parserArray = parser.exec(dateTimeString);\r\n        if (parserArray === null)\r\n            throw new Error(\"Wrong input string for conversion\");\r\n        for (let j = 1; j < parserArray.length; j++) {\r\n            switch (j) {\r\n                case 1:\r\n                    this.year = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 2:\r\n                    this.month = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 3:\r\n                    this.day = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 4:\r\n                    this.hour = parseInt(parserArray[j], 10) + hourDifference;\r\n                    break;\r\n                case 5:\r\n                    this.minute = parseInt(parserArray[j], 10) + minuteDifference;\r\n                    break;\r\n                case 6:\r\n                    this.second = parseInt(parserArray[j], 10);\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n            }\r\n        }\r\n        if (isUTC === false) {\r\n            const tempDate = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\r\n            this.year = tempDate.getUTCFullYear();\r\n            this.month = tempDate.getUTCMonth();\r\n            this.day = tempDate.getUTCDay();\r\n            this.hour = tempDate.getUTCHours();\r\n            this.minute = tempDate.getUTCMinutes();\r\n            this.second = tempDate.getUTCSeconds();\r\n            this.millisecond = tempDate.getUTCMilliseconds();\r\n        }\r\n    }\r\n    toString(encoding = \"iso\") {\r\n        if (encoding === \"iso\") {\r\n            const outputArray = [];\r\n            outputArray.push(pvutils.padNumber(this.year, 4));\r\n            outputArray.push(pvutils.padNumber(this.month, 2));\r\n            outputArray.push(pvutils.padNumber(this.day, 2));\r\n            outputArray.push(pvutils.padNumber(this.hour, 2));\r\n            outputArray.push(pvutils.padNumber(this.minute, 2));\r\n            outputArray.push(pvutils.padNumber(this.second, 2));\r\n            if (this.millisecond !== 0) {\r\n                outputArray.push(\".\");\r\n                outputArray.push(pvutils.padNumber(this.millisecond, 3));\r\n            }\r\n            outputArray.push(\"Z\");\r\n            return outputArray.join(\"\");\r\n        }\r\n        return super.toString(encoding);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            millisecond: this.millisecond,\r\n        };\r\n    }\r\n}\r\n_a$5 = GeneralizedTime;\r\n(() => {\r\n    typeStore.GeneralizedTime = _a$5;\r\n})();\r\nGeneralizedTime.NAME = \"GeneralizedTime\";\n\nvar _a$4;\r\nclass DATE extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 31;\r\n    }\r\n}\r\n_a$4 = DATE;\r\n(() => {\r\n    typeStore.DATE = _a$4;\r\n})();\r\nDATE.NAME = \"DATE\";\n\nvar _a$3;\r\nclass TimeOfDay extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 32;\r\n    }\r\n}\r\n_a$3 = TimeOfDay;\r\n(() => {\r\n    typeStore.TimeOfDay = _a$3;\r\n})();\r\nTimeOfDay.NAME = \"TimeOfDay\";\n\nvar _a$2;\r\nclass DateTime extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 33;\r\n    }\r\n}\r\n_a$2 = DateTime;\r\n(() => {\r\n    typeStore.DateTime = _a$2;\r\n})();\r\nDateTime.NAME = \"DateTime\";\n\nvar _a$1;\r\nclass Duration extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 34;\r\n    }\r\n}\r\n_a$1 = Duration;\r\n(() => {\r\n    typeStore.Duration = _a$1;\r\n})();\r\nDuration.NAME = \"Duration\";\n\nvar _a;\r\nclass TIME extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 14;\r\n    }\r\n}\r\n_a = TIME;\r\n(() => {\r\n    typeStore.TIME = _a;\r\n})();\r\nTIME.NAME = \"TIME\";\n\nclass Any {\r\n    constructor({ name = EMPTY_STRING, optional = false, } = {}) {\r\n        this.name = name;\r\n        this.optional = optional;\r\n    }\r\n}\n\nclass Choice extends Any {\r\n    constructor({ value = [], ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n    }\r\n}\n\nclass Repeated extends Any {\r\n    constructor({ value = new Any(), local = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n        this.local = local;\r\n    }\r\n}\n\nclass RawData {\r\n    constructor({ data = EMPTY_VIEW } = {}) {\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(data);\r\n    }\r\n    get data() {\r\n        return this.dataView.slice().buffer;\r\n    }\r\n    set data(value) {\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(value);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const endLength = inputOffset + inputLength;\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).subarray(inputOffset, endLength);\r\n        return endLength;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return this.dataView.slice().buffer;\r\n    }\r\n}\n\nfunction compareSchema(root, inputData, inputSchema) {\r\n    if (inputSchema instanceof Choice) {\r\n        for (let j = 0; j < inputSchema.value.length; j++) {\r\n            const result = compareSchema(root, inputData, inputSchema.value[j]);\r\n            if (result.verified) {\r\n                return {\r\n                    verified: true,\r\n                    result: root\r\n                };\r\n            }\r\n        }\r\n        {\r\n            const _result = {\r\n                verified: false,\r\n                result: {\r\n                    error: \"Wrong values for Choice type\"\r\n                },\r\n            };\r\n            if (inputSchema.hasOwnProperty(NAME))\r\n                _result.name = inputSchema.name;\r\n            return _result;\r\n        }\r\n    }\r\n    if (inputSchema instanceof Any) {\r\n        if (inputSchema.hasOwnProperty(NAME))\r\n            root[inputSchema.name] = inputData;\r\n        return {\r\n            verified: true,\r\n            result: root\r\n        };\r\n    }\r\n    if ((root instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong root object\" }\r\n        };\r\n    }\r\n    if ((inputData instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 data\" }\r\n        };\r\n    }\r\n    if ((inputSchema instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((ID_BLOCK in inputSchema) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((FROM_BER in inputSchema.idBlock) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((TO_BER in inputSchema.idBlock) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    const encodedId = inputSchema.idBlock.toBER(false);\r\n    if (encodedId.byteLength === 0) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Error encoding idBlock for ASN.1 schema\" }\r\n        };\r\n    }\r\n    const decodedOffset = inputSchema.idBlock.fromBER(encodedId, 0, encodedId.byteLength);\r\n    if (decodedOffset === -1) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Error decoding idBlock for ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(TAG_CLASS) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.tagClass !== inputData.idBlock.tagClass) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(TAG_NUMBER) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.tagNumber !== inputData.idBlock.tagNumber) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(IS_CONSTRUCTED) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isConstructed !== inputData.idBlock.isConstructed) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (!(IS_HEX_ONLY in inputSchema.idBlock)) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isHexOnly !== inputData.idBlock.isHexOnly) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isHexOnly) {\r\n        if ((VALUE_HEX_VIEW in inputSchema.idBlock) === false) {\r\n            return {\r\n                verified: false,\r\n                result: { error: \"Wrong ASN.1 schema\" }\r\n            };\r\n        }\r\n        const schemaView = inputSchema.idBlock.valueHexView;\r\n        const asn1View = inputData.idBlock.valueHexView;\r\n        if (schemaView.length !== asn1View.length) {\r\n            return {\r\n                verified: false,\r\n                result: root\r\n            };\r\n        }\r\n        for (let i = 0; i < schemaView.length; i++) {\r\n            if (schemaView[i] !== asn1View[1]) {\r\n                return {\r\n                    verified: false,\r\n                    result: root\r\n                };\r\n            }\r\n        }\r\n    }\r\n    if (inputSchema.name) {\r\n        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n        if (inputSchema.name)\r\n            root[inputSchema.name] = inputData;\r\n    }\r\n    if (inputSchema instanceof typeStore.Constructed) {\r\n        let admission = 0;\r\n        let result = {\r\n            verified: false,\r\n            result: {\r\n                error: \"Unknown error\",\r\n            }\r\n        };\r\n        let maxLength = inputSchema.valueBlock.value.length;\r\n        if (maxLength > 0) {\r\n            if (inputSchema.valueBlock.value[0] instanceof Repeated) {\r\n                maxLength = inputData.valueBlock.value.length;\r\n            }\r\n        }\r\n        if (maxLength === 0) {\r\n            return {\r\n                verified: true,\r\n                result: root\r\n            };\r\n        }\r\n        if ((inputData.valueBlock.value.length === 0) &&\r\n            (inputSchema.valueBlock.value.length !== 0)) {\r\n            let _optional = true;\r\n            for (let i = 0; i < inputSchema.valueBlock.value.length; i++)\r\n                _optional = _optional && (inputSchema.valueBlock.value[i].optional || false);\r\n            if (_optional) {\r\n                return {\r\n                    verified: true,\r\n                    result: root\r\n                };\r\n            }\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name)\r\n                    delete root[inputSchema.name];\r\n            }\r\n            root.error = \"Inconsistent object length\";\r\n            return {\r\n                verified: false,\r\n                result: root\r\n            };\r\n        }\r\n        for (let i = 0; i < maxLength; i++) {\r\n            if ((i - admission) >= inputData.valueBlock.value.length) {\r\n                if (inputSchema.valueBlock.value[i].optional === false) {\r\n                    const _result = {\r\n                        verified: false,\r\n                        result: root\r\n                    };\r\n                    root.error = \"Inconsistent length between ASN.1 data and schema\";\r\n                    if (inputSchema.name) {\r\n                        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                        if (inputSchema.name) {\r\n                            delete root[inputSchema.name];\r\n                            _result.name = inputSchema.name;\r\n                        }\r\n                    }\r\n                    return _result;\r\n                }\r\n            }\r\n            else {\r\n                if (inputSchema.valueBlock.value[0] instanceof Repeated) {\r\n                    result = compareSchema(root, inputData.valueBlock.value[i], inputSchema.valueBlock.value[0].value);\r\n                    if (result.verified === false) {\r\n                        if (inputSchema.valueBlock.value[0].optional)\r\n                            admission++;\r\n                        else {\r\n                            if (inputSchema.name) {\r\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                                if (inputSchema.name)\r\n                                    delete root[inputSchema.name];\r\n                            }\r\n                            return result;\r\n                        }\r\n                    }\r\n                    if ((NAME in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].name.length > 0)) {\r\n                        let arrayRoot = {};\r\n                        if ((LOCAL in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].local))\r\n                            arrayRoot = inputData;\r\n                        else\r\n                            arrayRoot = root;\r\n                        if (typeof arrayRoot[inputSchema.valueBlock.value[0].name] === \"undefined\")\r\n                            arrayRoot[inputSchema.valueBlock.value[0].name] = [];\r\n                        arrayRoot[inputSchema.valueBlock.value[0].name].push(inputData.valueBlock.value[i]);\r\n                    }\r\n                }\r\n                else {\r\n                    result = compareSchema(root, inputData.valueBlock.value[i - admission], inputSchema.valueBlock.value[i]);\r\n                    if (result.verified === false) {\r\n                        if (inputSchema.valueBlock.value[i].optional)\r\n                            admission++;\r\n                        else {\r\n                            if (inputSchema.name) {\r\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                                if (inputSchema.name)\r\n                                    delete root[inputSchema.name];\r\n                            }\r\n                            return result;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (result.verified === false) {\r\n            const _result = {\r\n                verified: false,\r\n                result: root\r\n            };\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name) {\r\n                    delete root[inputSchema.name];\r\n                    _result.name = inputSchema.name;\r\n                }\r\n            }\r\n            return _result;\r\n        }\r\n        return {\r\n            verified: true,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.primitiveSchema &&\r\n        (VALUE_HEX_VIEW in inputData.valueBlock)) {\r\n        const asn1 = localFromBER(inputData.valueBlock.valueHexView);\r\n        if (asn1.offset === -1) {\r\n            const _result = {\r\n                verified: false,\r\n                result: asn1.result\r\n            };\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name) {\r\n                    delete root[inputSchema.name];\r\n                    _result.name = inputSchema.name;\r\n                }\r\n            }\r\n            return _result;\r\n        }\r\n        return compareSchema(root, asn1.result, inputSchema.primitiveSchema);\r\n    }\r\n    return {\r\n        verified: true,\r\n        result: root\r\n    };\r\n}\r\nfunction verifySchema(inputBuffer, inputSchema) {\r\n    if ((inputSchema instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema type\" }\r\n        };\r\n    }\r\n    const asn1 = localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\r\n    if (asn1.offset === -1) {\r\n        return {\r\n            verified: false,\r\n            result: asn1.result\r\n        };\r\n    }\r\n    return compareSchema(asn1.result, asn1.result, inputSchema);\r\n}\n\nexport { Any, BaseBlock, BaseStringBlock, BitString, BmpString, Boolean, CharacterString, Choice, Constructed, DATE, DateTime, Duration, EndOfContent, Enumerated, GeneralString, GeneralizedTime, GraphicString, HexBlock, IA5String, Integer, Null, NumericString, ObjectIdentifier, OctetString, Primitive, PrintableString, RawData, RelativeObjectIdentifier, Repeated, Sequence, Set, TIME, TeletexString, TimeOfDay, UTCTime, UniversalString, Utf8String, ValueBlock, VideotexString, ViewWriter, VisibleString, compareSchema, fromBER, verifySchema };\n", "/*!\n Copyright (c) Peculiar Ventures, LLC\n*/\n\nfunction getUTCDate(date) {\r\n    return new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\nfunction getParametersValue(parameters, name, defaultValue) {\r\n    var _a;\r\n    if ((parameters instanceof Object) === false) {\r\n        return defaultValue;\r\n    }\r\n    return (_a = parameters[name]) !== null && _a !== void 0 ? _a : defaultValue;\r\n}\r\nfunction bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = (inputBuffer.byteLength - inputOffset), insertSpace = false) {\r\n    let result = \"\";\r\n    for (const item of (new Uint8Array(inputBuffer, inputOffset, inputLength))) {\r\n        const str = item.toString(16).toUpperCase();\r\n        if (str.length === 1) {\r\n            result += \"0\";\r\n        }\r\n        result += str;\r\n        if (insertSpace) {\r\n            result += \" \";\r\n        }\r\n    }\r\n    return result.trim();\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof ArrayBuffer)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction utilFromBase(inputBuffer, inputBase) {\r\n    let result = 0;\r\n    if (inputBuffer.length === 1) {\r\n        return inputBuffer[0];\r\n    }\r\n    for (let i = (inputBuffer.length - 1); i >= 0; i--) {\r\n        result += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n    }\r\n    return result;\r\n}\r\nfunction utilToBase(value, base, reserved = (-1)) {\r\n    const internalReserved = reserved;\r\n    let internalValue = value;\r\n    let result = 0;\r\n    let biggest = Math.pow(2, base);\r\n    for (let i = 1; i < 8; i++) {\r\n        if (value < biggest) {\r\n            let retBuf;\r\n            if (internalReserved < 0) {\r\n                retBuf = new ArrayBuffer(i);\r\n                result = i;\r\n            }\r\n            else {\r\n                if (internalReserved < i) {\r\n                    return (new ArrayBuffer(0));\r\n                }\r\n                retBuf = new ArrayBuffer(internalReserved);\r\n                result = internalReserved;\r\n            }\r\n            const retView = new Uint8Array(retBuf);\r\n            for (let j = (i - 1); j >= 0; j--) {\r\n                const basis = Math.pow(2, j * base);\r\n                retView[result - j - 1] = Math.floor(internalValue / basis);\r\n                internalValue -= (retView[result - j - 1]) * basis;\r\n            }\r\n            return retBuf;\r\n        }\r\n        biggest *= Math.pow(2, base);\r\n    }\r\n    return new ArrayBuffer(0);\r\n}\r\nfunction utilConcatBuf(...buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const buffer of buffers) {\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const buffer of buffers) {\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retBuf;\r\n}\r\nfunction utilConcatView(...views) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const view of views) {\r\n        outputLength += view.length;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const view of views) {\r\n        retView.set(view, prevLength);\r\n        prevLength += view.length;\r\n    }\r\n    return retView;\r\n}\r\nfunction utilDecodeTC() {\r\n    const buf = new Uint8Array(this.valueHex);\r\n    if (this.valueHex.byteLength >= 2) {\r\n        const condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n        const condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n        if (condition1 || condition2) {\r\n            this.warnings.push(\"Needlessly long format\");\r\n        }\r\n    }\r\n    const bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const bigIntView = new Uint8Array(bigIntBuffer);\r\n    for (let i = 0; i < this.valueHex.byteLength; i++) {\r\n        bigIntView[i] = 0;\r\n    }\r\n    bigIntView[0] = (buf[0] & 0x80);\r\n    const bigInt = utilFromBase(bigIntView, 8);\r\n    const smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const smallIntView = new Uint8Array(smallIntBuffer);\r\n    for (let j = 0; j < this.valueHex.byteLength; j++) {\r\n        smallIntView[j] = buf[j];\r\n    }\r\n    smallIntView[0] &= 0x7F;\r\n    const smallInt = utilFromBase(smallIntView, 8);\r\n    return (smallInt - bigInt);\r\n}\r\nfunction utilEncodeTC(value) {\r\n    const modValue = (value < 0) ? (value * (-1)) : value;\r\n    let bigInt = 128;\r\n    for (let i = 1; i < 8; i++) {\r\n        if (modValue <= bigInt) {\r\n            if (value < 0) {\r\n                const smallInt = bigInt - modValue;\r\n                const retBuf = utilToBase(smallInt, 8, i);\r\n                const retView = new Uint8Array(retBuf);\r\n                retView[0] |= 0x80;\r\n                return retBuf;\r\n            }\r\n            let retBuf = utilToBase(modValue, 8, i);\r\n            let retView = new Uint8Array(retBuf);\r\n            if (retView[0] & 0x80) {\r\n                const tempBuf = retBuf.slice(0);\r\n                const tempView = new Uint8Array(tempBuf);\r\n                retBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n                retView = new Uint8Array(retBuf);\r\n                for (let k = 0; k < tempBuf.byteLength; k++) {\r\n                    retView[k + 1] = tempView[k];\r\n                }\r\n                retView[0] = 0x00;\r\n            }\r\n            return retBuf;\r\n        }\r\n        bigInt *= Math.pow(2, 8);\r\n    }\r\n    return (new ArrayBuffer(0));\r\n}\r\nfunction isEqualBuffer(inputBuffer1, inputBuffer2) {\r\n    if (inputBuffer1.byteLength !== inputBuffer2.byteLength) {\r\n        return false;\r\n    }\r\n    const view1 = new Uint8Array(inputBuffer1);\r\n    const view2 = new Uint8Array(inputBuffer2);\r\n    for (let i = 0; i < view1.length; i++) {\r\n        if (view1[i] !== view2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction padNumber(inputNumber, fullLength) {\r\n    const str = inputNumber.toString(10);\r\n    if (fullLength < str.length) {\r\n        return \"\";\r\n    }\r\n    const dif = fullLength - str.length;\r\n    const padding = new Array(dif);\r\n    for (let i = 0; i < dif; i++) {\r\n        padding[i] = \"0\";\r\n    }\r\n    const paddingString = padding.join(\"\");\r\n    return paddingString.concat(str);\r\n}\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\nfunction toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false) {\r\n    let i = 0;\r\n    let flag1 = 0;\r\n    let flag2 = 0;\r\n    let output = \"\";\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    if (skipLeadingZeros) {\r\n        let nonZeroPosition = 0;\r\n        for (let i = 0; i < input.length; i++) {\r\n            if (input.charCodeAt(i) !== 0) {\r\n                nonZeroPosition = i;\r\n                break;\r\n            }\r\n        }\r\n        input = input.slice(nonZeroPosition);\r\n    }\r\n    while (i < input.length) {\r\n        const chr1 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag1 = 1;\r\n        }\r\n        const chr2 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag2 = 1;\r\n        }\r\n        const chr3 = input.charCodeAt(i++);\r\n        const enc1 = chr1 >> 2;\r\n        const enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n        let enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n        let enc4 = chr3 & 0x3F;\r\n        if (flag1 === 1) {\r\n            enc3 = enc4 = 64;\r\n        }\r\n        else {\r\n            if (flag2 === 1) {\r\n                enc4 = 64;\r\n            }\r\n        }\r\n        if (skipPadding) {\r\n            if (enc3 === 64) {\r\n                output += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n            }\r\n            else {\r\n                if (enc4 === 64) {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n                }\r\n                else {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction fromBase64(input, useUrlTemplate = false, cutTailZeros = false) {\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    function indexOf(toSearch) {\r\n        for (let i = 0; i < 64; i++) {\r\n            if (template.charAt(i) === toSearch)\r\n                return i;\r\n        }\r\n        return 64;\r\n    }\r\n    function test(incoming) {\r\n        return ((incoming === 64) ? 0x00 : incoming);\r\n    }\r\n    let i = 0;\r\n    let output = \"\";\r\n    while (i < input.length) {\r\n        const enc1 = indexOf(input.charAt(i++));\r\n        const enc2 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc3 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc4 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n        const chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n        const chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n        output += String.fromCharCode(chr1);\r\n        if (enc3 !== 64) {\r\n            output += String.fromCharCode(chr2);\r\n        }\r\n        if (enc4 !== 64) {\r\n            output += String.fromCharCode(chr3);\r\n        }\r\n    }\r\n    if (cutTailZeros) {\r\n        const outputLength = output.length;\r\n        let nonZeroStart = (-1);\r\n        for (let i = (outputLength - 1); i >= 0; i--) {\r\n            if (output.charCodeAt(i) !== 0) {\r\n                nonZeroStart = i;\r\n                break;\r\n            }\r\n        }\r\n        if (nonZeroStart !== (-1)) {\r\n            output = output.slice(0, nonZeroStart + 1);\r\n        }\r\n        else {\r\n            output = \"\";\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction arrayBufferToString(buffer) {\r\n    let resultString = \"\";\r\n    const view = new Uint8Array(buffer);\r\n    for (const element of view) {\r\n        resultString += String.fromCharCode(element);\r\n    }\r\n    return resultString;\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    const stringLength = str.length;\r\n    const resultBuffer = new ArrayBuffer(stringLength);\r\n    const resultView = new Uint8Array(resultBuffer);\r\n    for (let i = 0; i < stringLength; i++) {\r\n        resultView[i] = str.charCodeAt(i);\r\n    }\r\n    return resultBuffer;\r\n}\r\nconst log2 = Math.log(2);\r\nfunction nearestPowerOf2(length) {\r\n    const base = (Math.log(length) / log2);\r\n    const floor = Math.floor(base);\r\n    const round = Math.round(base);\r\n    return ((floor === round) ? floor : round);\r\n}\r\nfunction clearProps(object, propsArray) {\r\n    for (const prop of propsArray) {\r\n        delete object[prop];\r\n    }\r\n}\n\nexport { arrayBufferToString, bufferToHexCodes, checkBufferParams, clearProps, fromBase64, getParametersValue, getUTCDate, isEqualBuffer, nearestPowerOf2, padNumber, stringToArrayBuffer, toBase64, utilConcatBuf, utilConcatView, utilDecodeTC, utilEncodeTC, utilFromBase, utilToBase };\n", "import { CodeError } from '@libp2p/interface'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport randomBytes from '../random-bytes.js'\nimport webcrypto from '../webcrypto.js'\nimport * as utils from './rsa-utils.js'\nimport type { JWKKeyPair } from './interface.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport { utils }\n\nexport async function generateKey (bits: number): Promise<JWKKeyPair> {\n  const pair = await webcrypto.get().subtle.generateKey(\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      modulusLength: bits,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n      hash: { name: 'SHA-256' }\n    },\n    true,\n    ['sign', 'verify']\n  )\n\n  const keys = await exportKey(pair)\n\n  return {\n    privateKey: keys[0],\n    publicKey: keys[1]\n  }\n}\n\n// Takes a jwk key\nexport async function unmarshalPrivateKey (key: JsonWebKey): Promise<JWKKeyPair> {\n  const privateKey = await webcrypto.get().subtle.importKey(\n    'jwk',\n    key,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    true,\n    ['sign']\n  )\n\n  const pair = [\n    privateKey,\n    await derivePublicFromPrivate(key)\n  ]\n\n  const keys = await exportKey({\n    privateKey: pair[0],\n    publicKey: pair[1]\n  })\n\n  return {\n    privateKey: keys[0],\n    publicKey: keys[1]\n  }\n}\n\nexport { randomBytes as getRandomValues }\n\nexport async function hashAndSign (key: JsonWebKey, msg: Uint8Array | Uint8ArrayList): Promise<Uint8Array> {\n  const privateKey = await webcrypto.get().subtle.importKey(\n    'jwk',\n    key,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    false,\n    ['sign']\n  )\n\n  const sig = await webcrypto.get().subtle.sign(\n    { name: 'RSASSA-PKCS1-v1_5' },\n    privateKey,\n    msg instanceof Uint8Array ? msg : msg.subarray()\n  )\n\n  return new Uint8Array(sig, 0, sig.byteLength)\n}\n\nexport async function hashAndVerify (key: JsonWebKey, sig: Uint8Array, msg: Uint8Array | Uint8ArrayList): Promise<boolean> {\n  const publicKey = await webcrypto.get().subtle.importKey(\n    'jwk',\n    key,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    false,\n    ['verify']\n  )\n\n  return webcrypto.get().subtle.verify(\n    { name: 'RSASSA-PKCS1-v1_5' },\n    publicKey,\n    sig,\n    msg instanceof Uint8Array ? msg : msg.subarray()\n  )\n}\n\nasync function exportKey (pair: CryptoKeyPair): Promise<[JsonWebKey, JsonWebKey]> {\n  if (pair.privateKey == null || pair.publicKey == null) {\n    throw new CodeError('Private and public key are required', 'ERR_INVALID_PARAMETERS')\n  }\n\n  return Promise.all([\n    webcrypto.get().subtle.exportKey('jwk', pair.privateKey),\n    webcrypto.get().subtle.exportKey('jwk', pair.publicKey)\n  ])\n}\n\nasync function derivePublicFromPrivate (jwKey: JsonWebKey): Promise<CryptoKey> {\n  return webcrypto.get().subtle.importKey(\n    'jwk',\n    {\n      kty: jwKey.kty,\n      n: jwKey.n,\n      e: jwKey.e\n    },\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    true,\n    ['verify']\n  )\n}\n\nexport function keySize (jwk: JsonWebKey): number {\n  if (jwk.kty !== 'RSA') {\n    throw new CodeError('invalid key type', 'ERR_INVALID_KEY_TYPE')\n  } else if (jwk.n == null) {\n    throw new CodeError('invalid key modulus', 'ERR_INVALID_KEY_MODULUS')\n  }\n  const bytes = uint8ArrayFromString(jwk.n, 'base64url')\n  return bytes.length * 8\n}\n", "import { CodeError } from '@libp2p/interface'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { isPromise } from '../util.js'\nimport { exporter } from './exporter.js'\nimport * as keysProtobuf from './keys.js'\nimport * as crypto from './secp256k1.js'\nimport type { Multibase } from 'multiformats'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport class Secp256k1PublicKey {\n  private readonly _key: Uint8Array\n\n  constructor (key: Uint8Array) {\n    crypto.validatePublicKey(key)\n    this._key = key\n  }\n\n  verify (data: Uint8Array | Uint8ArrayList, sig: Uint8Array): boolean {\n    return crypto.hashAndVerify(this._key, sig, data)\n  }\n\n  marshal (): Uint8Array {\n    return crypto.compressPublicKey(this._key)\n  }\n\n  get bytes (): Uint8Array {\n    return keysProtobuf.PublicKey.encode({\n      Type: keysProtobuf.KeyType.Secp256k1,\n      Data: this.marshal()\n    }).subarray()\n  }\n\n  equals (key: any): boolean {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  async hash (): Promise<Uint8Array> {\n    const p = sha256.digest(this.bytes)\n    let bytes: Uint8Array\n\n    if (isPromise(p)) {\n      ({ bytes } = await p)\n    } else {\n      bytes = p.bytes\n    }\n\n    return bytes\n  }\n}\n\nexport class Secp256k1PrivateKey {\n  private readonly _key: Uint8Array\n  private readonly _publicKey: Uint8Array\n\n  constructor (key: Uint8Array, publicKey?: Uint8Array) {\n    this._key = key\n    this._publicKey = publicKey ?? crypto.computePublicKey(key)\n    crypto.validatePrivateKey(this._key)\n    crypto.validatePublicKey(this._publicKey)\n  }\n\n  sign (message: Uint8Array | Uint8ArrayList): Uint8Array | Promise<Uint8Array> {\n    return crypto.hashAndSign(this._key, message)\n  }\n\n  get public (): Secp256k1PublicKey {\n    return new Secp256k1PublicKey(this._publicKey)\n  }\n\n  marshal (): Uint8Array {\n    return this._key\n  }\n\n  get bytes (): Uint8Array {\n    return keysProtobuf.PrivateKey.encode({\n      Type: keysProtobuf.KeyType.Secp256k1,\n      Data: this.marshal()\n    }).subarray()\n  }\n\n  equals (key: any): boolean {\n    return uint8ArrayEquals(this.bytes, key.bytes)\n  }\n\n  hash (): Uint8Array | Promise<Uint8Array> {\n    const p = sha256.digest(this.bytes)\n\n    if (isPromise(p)) {\n      return p.then(({ bytes }) => bytes)\n    }\n\n    return p.bytes\n  }\n\n  /**\n   * Gets the ID of the key.\n   *\n   * The key id is the base58 encoding of the SHA-256 multihash of its public key.\n   * The public key is a protobuf encoding containing a type and the DER encoding\n   * of the PKCS SubjectPublicKeyInfo.\n   */\n  async id (): Promise<string> {\n    const hash = await this.public.hash()\n    return uint8ArrayToString(hash, 'base58btc')\n  }\n\n  /**\n   * Exports the key into a password protected `format`\n   */\n  async export (password: string, format = 'libp2p-key'): Promise<Multibase<'m'>> {\n    if (format === 'libp2p-key') {\n      return exporter(this.bytes, password)\n    } else {\n      throw new CodeError(`export format '${format}' is not supported`, 'ERR_INVALID_EXPORT_FORMAT')\n    }\n  }\n}\n\nexport function unmarshalSecp256k1PrivateKey (bytes: Uint8Array): Secp256k1PrivateKey {\n  return new Secp256k1PrivateKey(bytes)\n}\n\nexport function unmarshalSecp256k1PublicKey (bytes: Uint8Array): Secp256k1PublicKey {\n  return new Secp256k1PublicKey(bytes)\n}\n\nexport async function generateKeyPair (): Promise<Secp256k1PrivateKey> {\n  const privateKeyBytes = crypto.generateKey()\n  return new Secp256k1PrivateKey(privateKeyBytes)\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y\u00B2 = x\u00B3 + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  CURVE: ReturnType<typeof validatePointOpts<T>>;\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!ut.isBytes(data)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>): CurvePointsRes<T> {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y\u00B2 = x\u00B3 + ax + b: Short weierstrass curve formula\n   * @returns y\u00B2\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (ut.isBytes(key)) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) \u220B (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(\n      readonly px: T,\n      readonly py: T,\n      readonly pz: T\n    ) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y\u00B2\n      const right = weierstrassEquation(x); // x\u00B3 + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) \u220B (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y\u00B2 = x\u00B3 + ax + b\n        let y = Fp.sqrt(y2); // y = y\u00B2 ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(\n      readonly r: bigint,\n      readonly s: bigint,\n      readonly recovery?: number\n    ) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = ut.isBytes(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b \u2208 [1,q\u22121] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G \u00D7 k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1\u22C5G - U2\u22C5P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || ut.isBytes(sg)) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1\u22C5G + u2\u22C5P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * \u221An = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'\u22C5G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x \u2265 p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x\u00B3 + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'\u2265n. Ret bytes(d'\u22C5G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'\u22C5G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r \u2265 p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s \u2265 n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s\u22C5G - e\u22C5P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) \u2260 r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n", "import { CodeError } from '@libp2p/interface'\nimport { secp256k1 as secp } from '@noble/curves/secp256k1'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { isPromise } from '../util.js'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nconst PRIVATE_KEY_BYTE_LENGTH = 32\n\nexport { PRIVATE_KEY_BYTE_LENGTH as privateKeyLength }\n\nexport function generateKey (): Uint8Array {\n  return secp.utils.randomPrivateKey()\n}\n\n/**\n * Hash and sign message with private key\n */\nexport function hashAndSign (key: Uint8Array, msg: Uint8Array | Uint8ArrayList): Uint8Array | Promise<Uint8Array> {\n  const p = sha256.digest(msg instanceof Uint8Array ? msg : msg.subarray())\n\n  if (isPromise(p)) {\n    return p.then(({ digest }) => secp.sign(digest, key).toDERRawBytes())\n      .catch(err => {\n        throw new CodeError(String(err), 'ERR_INVALID_INPUT')\n      })\n  }\n\n  try {\n    return secp.sign(p.digest, key).toDERRawBytes()\n  } catch (err) {\n    throw new CodeError(String(err), 'ERR_INVALID_INPUT')\n  }\n}\n\n/**\n * Hash message and verify signature with public key\n */\nexport function hashAndVerify (key: Uint8Array, sig: Uint8Array, msg: Uint8Array | Uint8ArrayList): boolean | Promise<boolean> {\n  const p = sha256.digest(msg instanceof Uint8Array ? msg : msg.subarray())\n\n  if (isPromise(p)) {\n    return p.then(({ digest }) => secp.verify(sig, digest, key))\n      .catch(err => {\n        throw new CodeError(String(err), 'ERR_INVALID_INPUT')\n      })\n  }\n\n  try {\n    return secp.verify(sig, p.digest, key)\n  } catch (err) {\n    throw new CodeError(String(err), 'ERR_INVALID_INPUT')\n  }\n}\n\nexport function compressPublicKey (key: Uint8Array): Uint8Array {\n  const point = secp.ProjectivePoint.fromHex(key).toRawBytes(true)\n  return point\n}\n\nexport function decompressPublicKey (key: Uint8Array): Uint8Array {\n  const point = secp.ProjectivePoint.fromHex(key).toRawBytes(false)\n  return point\n}\n\nexport function validatePrivateKey (key: Uint8Array): void {\n  try {\n    secp.getPublicKey(key, true)\n  } catch (err) {\n    throw new CodeError(String(err), 'ERR_INVALID_PRIVATE_KEY')\n  }\n}\n\nexport function validatePublicKey (key: Uint8Array): void {\n  try {\n    secp.ProjectivePoint.fromHex(key)\n  } catch (err) {\n    throw new CodeError(String(err), 'ERR_INVALID_PUBLIC_KEY')\n  }\n}\n\nexport function computePublicKey (privateKey: Uint8Array): Uint8Array {\n  try {\n    return secp.getPublicKey(privateKey, true)\n  } catch (err) {\n    throw new CodeError(String(err), 'ERR_INVALID_PRIVATE_KEY')\n  }\n}\n", "/**\n * @packageDocumentation\n *\n * **Supported Key Types**\n *\n * The {@link generateKeyPair}, {@link marshalPublicKey}, and {@link marshalPrivateKey} functions accept a string `type` argument.\n *\n * Currently the `'RSA'`, `'ed25519'`, and `secp256k1` types are supported, although ed25519 and secp256k1 keys support only signing and verification of messages.\n *\n * For encryption / decryption support, RSA keys should be used.\n */\n\nimport { CodeError } from '@libp2p/interface'\nimport * as Ed25519 from './ed25519-class.js'\nimport generateEphemeralKeyPair from './ephemeral-keys.js'\nimport { importer } from './importer.js'\nimport { keyStretcher } from './key-stretcher.js'\nimport * as keysPBM from './keys.js'\nimport * as RSA from './rsa-class.js'\nimport { importFromPem } from './rsa-utils.js'\nimport * as Secp256k1 from './secp256k1-class.js'\nimport type { PrivateKey, PublicKey } from '@libp2p/interface'\n\nexport { keyStretcher }\nexport { generateEphemeralKeyPair }\nexport { keysPBM }\n\nexport type KeyTypes = 'RSA' | 'Ed25519' | 'secp256k1'\n\nexport { RsaPrivateKey, RsaPublicKey, MAX_RSA_KEY_SIZE } from './rsa-class.js'\nexport { Ed25519PrivateKey, Ed25519PublicKey } from './ed25519-class.js'\nexport { Secp256k1PrivateKey, Secp256k1PublicKey } from './secp256k1-class.js'\nexport type { JWKKeyPair } from './interface.js'\n\nexport const supportedKeys = {\n  rsa: RSA,\n  ed25519: Ed25519,\n  secp256k1: Secp256k1\n}\n\nfunction unsupportedKey (type: string): CodeError<Record<string, never>> {\n  const supported = Object.keys(supportedKeys).join(' / ')\n  return new CodeError(`invalid or unsupported key type ${type}. Must be ${supported}`, 'ERR_UNSUPPORTED_KEY_TYPE')\n}\n\nfunction typeToKey (type: string): typeof RSA | typeof Ed25519 | typeof Secp256k1 {\n  type = type.toLowerCase()\n\n  if (type === 'rsa' || type === 'ed25519' || type === 'secp256k1') {\n    return supportedKeys[type]\n  }\n\n  throw unsupportedKey(type)\n}\n\n/**\n * Generates a keypair of the given type and bitsize\n *\n * @param type\n * @param bits -  Minimum of 1024\n */\nexport async function generateKeyPair (type: KeyTypes, bits?: number): Promise<PrivateKey> {\n  return typeToKey(type).generateKeyPair(bits ?? 2048)\n}\n\n/**\n * Generates a keypair of the given type and bitsize.\n *\n * Seed is a 32 byte uint8array\n */\nexport async function generateKeyPairFromSeed (type: KeyTypes, seed: Uint8Array, bits?: number): Promise<PrivateKey> {\n  if (type.toLowerCase() !== 'ed25519') {\n    throw new CodeError('Seed key derivation is unimplemented for RSA or secp256k1', 'ERR_UNSUPPORTED_KEY_DERIVATION_TYPE')\n  }\n\n  return Ed25519.generateKeyPairFromSeed(seed)\n}\n\n/**\n * Converts a protobuf serialized public key into its representative object\n */\nexport function unmarshalPublicKey (buf: Uint8Array): PublicKey {\n  const decoded = keysPBM.PublicKey.decode(buf)\n  const data = decoded.Data ?? new Uint8Array()\n\n  switch (decoded.Type) {\n    case keysPBM.KeyType.RSA:\n      return supportedKeys.rsa.unmarshalRsaPublicKey(data)\n    case keysPBM.KeyType.Ed25519:\n      return supportedKeys.ed25519.unmarshalEd25519PublicKey(data)\n    case keysPBM.KeyType.Secp256k1:\n      return supportedKeys.secp256k1.unmarshalSecp256k1PublicKey(data)\n    default:\n      throw unsupportedKey(decoded.Type ?? 'unknown')\n  }\n}\n\n/**\n * Converts a public key object into a protobuf serialized public key\n */\nexport function marshalPublicKey (key: { bytes: Uint8Array }, type?: string): Uint8Array {\n  type = (type ?? 'rsa').toLowerCase()\n  typeToKey(type) // check type\n  return key.bytes\n}\n\n/**\n * Converts a protobuf serialized private key into its representative object\n */\nexport async function unmarshalPrivateKey (buf: Uint8Array): Promise<PrivateKey> {\n  const decoded = keysPBM.PrivateKey.decode(buf)\n  const data = decoded.Data ?? new Uint8Array()\n\n  switch (decoded.Type) {\n    case keysPBM.KeyType.RSA:\n      return supportedKeys.rsa.unmarshalRsaPrivateKey(data)\n    case keysPBM.KeyType.Ed25519:\n      return supportedKeys.ed25519.unmarshalEd25519PrivateKey(data)\n    case keysPBM.KeyType.Secp256k1:\n      return supportedKeys.secp256k1.unmarshalSecp256k1PrivateKey(data)\n    default:\n      throw unsupportedKey(decoded.Type ?? 'RSA')\n  }\n}\n\n/**\n * Converts a private key object into a protobuf serialized private key\n */\nexport function marshalPrivateKey (key: { bytes: Uint8Array }, type?: string): Uint8Array {\n  type = (type ?? 'rsa').toLowerCase()\n  typeToKey(type) // check type\n  return key.bytes\n}\n\n/**\n * Converts an exported private key into its representative object.\n *\n * Supported formats are 'pem' (RSA only) and 'libp2p-key'.\n */\nexport async function importKey (encryptedKey: string, password: string): Promise<PrivateKey> {\n  try {\n    const key = await importer(encryptedKey, password)\n    return await unmarshalPrivateKey(key)\n  } catch (_) {\n    // Ignore and try the old pem decrypt\n  }\n\n  if (!encryptedKey.includes('BEGIN')) {\n    throw new CodeError('Encrypted key was not a libp2p-key or a PEM file', 'ERR_INVALID_IMPORT_FORMAT')\n  }\n\n  return importFromPem(encryptedKey, password)\n}\n", "import { randomBytes } from '@libp2p/crypto'\nimport { marshalPublicKey, unmarshalPublicKey } from '@libp2p/crypto/keys'\nimport { StrictSign, StrictNoSign, type Message, type PublicKey, type PeerId } from '@libp2p/interface'\nimport { peerIdFromBytes } from '@libp2p/peer-id'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { RPC } from '../message/rpc.js'\nimport { type PublishConfig, PublishConfigType, type TopicStr, ValidateError } from '../types.js'\n\nexport const SignPrefix = uint8ArrayFromString('libp2p-pubsub:')\n\nexport interface RawMessageAndMessage {\n  raw: RPC.IMessage\n  msg: Message\n}\n\nexport async function buildRawMessage (\n  publishConfig: PublishConfig,\n  topic: TopicStr,\n  originalData: Uint8Array,\n  transformedData: Uint8Array\n): Promise<RawMessageAndMessage> {\n  switch (publishConfig.type) {\n    case PublishConfigType.Signing: {\n      const rpcMsg: RPC.IMessage = {\n        from: publishConfig.author.toBytes(),\n        data: transformedData,\n        seqno: randomBytes(8),\n        topic,\n        signature: undefined, // Exclude signature field for signing\n        key: undefined // Exclude key field for signing\n      }\n\n      // Get the message in bytes, and prepend with the pubsub prefix\n      // the signature is over the bytes \"libp2p-pubsub:<protobuf-message>\"\n      const bytes = uint8ArrayConcat([SignPrefix, RPC.Message.encode(rpcMsg).finish()])\n\n      rpcMsg.signature = await publishConfig.privateKey.sign(bytes)\n      rpcMsg.key = publishConfig.key\n\n      const msg: Message = {\n        type: 'signed',\n        from: publishConfig.author,\n        data: originalData,\n        sequenceNumber: BigInt(`0x${uint8ArrayToString(rpcMsg.seqno as Uint8Array, 'base16')}`),\n        topic,\n        signature: rpcMsg.signature,\n        key: rpcMsg.key\n      }\n      return {\n        raw: rpcMsg,\n        msg\n      }\n    }\n\n    case PublishConfigType.Anonymous: {\n      return {\n        raw: {\n          from: undefined,\n          data: transformedData,\n          seqno: undefined,\n          topic,\n          signature: undefined,\n          key: undefined\n        },\n        msg: {\n          type: 'unsigned',\n          data: originalData,\n          topic\n        }\n      }\n    }\n\n    default:\n      throw new Error('Unreachable')\n  }\n}\n\nexport type ValidationResult = { valid: true, message: Message } | { valid: false, error: ValidateError }\n\nexport async function validateToRawMessage (\n  signaturePolicy: typeof StrictNoSign | typeof StrictSign,\n  msg: RPC.IMessage\n): Promise<ValidationResult> {\n  // If strict-sign, verify all\n  // If anonymous (no-sign), ensure no preven\n\n  switch (signaturePolicy) {\n    case StrictNoSign:\n      if (msg.signature != null) return { valid: false, error: ValidateError.SignaturePresent }\n      if (msg.seqno != null) return { valid: false, error: ValidateError.SeqnoPresent }\n      if (msg.key != null) return { valid: false, error: ValidateError.FromPresent }\n\n      return { valid: true, message: { type: 'unsigned', topic: msg.topic, data: msg.data ?? new Uint8Array(0) } }\n\n    case StrictSign: {\n      // Verify seqno\n      if (msg.seqno == null) return { valid: false, error: ValidateError.InvalidSeqno }\n      if (msg.seqno.length !== 8) {\n        return { valid: false, error: ValidateError.InvalidSeqno }\n      }\n\n      if (msg.signature == null) return { valid: false, error: ValidateError.InvalidSignature }\n      if (msg.from == null) return { valid: false, error: ValidateError.InvalidPeerId }\n\n      let fromPeerId: PeerId\n      try {\n        // TODO: Fix PeerId types\n        fromPeerId = peerIdFromBytes(msg.from)\n      } catch (e) {\n        return { valid: false, error: ValidateError.InvalidPeerId }\n      }\n\n      // - check from defined\n      // - transform source to PeerId\n      // - parse signature\n      // - get .key, else from source\n      // - check key == source if present\n      // - verify sig\n\n      let publicKey: PublicKey\n      if (msg.key != null) {\n        publicKey = unmarshalPublicKey(msg.key)\n        // TODO: Should `fromPeerId.pubKey` be optional?\n        if (fromPeerId.publicKey !== undefined && !uint8ArrayEquals(publicKey.bytes, fromPeerId.publicKey)) {\n          return { valid: false, error: ValidateError.InvalidPeerId }\n        }\n      } else {\n        if (fromPeerId.publicKey == null) {\n          return { valid: false, error: ValidateError.InvalidPeerId }\n        }\n        publicKey = unmarshalPublicKey(fromPeerId.publicKey)\n      }\n\n      const rpcMsgPreSign: RPC.IMessage = {\n        from: msg.from,\n        data: msg.data,\n        seqno: msg.seqno,\n        topic: msg.topic,\n        signature: undefined, // Exclude signature field for signing\n        key: undefined // Exclude key field for signing\n      }\n\n      // Get the message in bytes, and prepend with the pubsub prefix\n      // the signature is over the bytes \"libp2p-pubsub:<protobuf-message>\"\n      const bytes = uint8ArrayConcat([SignPrefix, RPC.Message.encode(rpcMsgPreSign).finish()])\n\n      if (!(await publicKey.verify(bytes, msg.signature))) {\n        return { valid: false, error: ValidateError.InvalidSignature }\n      }\n\n      return {\n        valid: true,\n        message: {\n          type: 'signed',\n          from: fromPeerId,\n          data: msg.data ?? new Uint8Array(0),\n          sequenceNumber: BigInt(`0x${uint8ArrayToString(msg.seqno, 'base16')}`),\n          topic: msg.topic,\n          signature: msg.signature,\n          key: msg.key ?? marshalPublicKey(publicKey)\n        }\n      }\n    }\n\n    default:\n      throw new Error('Unreachable')\n  }\n}\n", "/**\n * Pseudo-randomly shuffles an array\n *\n * Mutates the input array\n */\nexport function shuffle<T> (arr: T[]): T[] {\n  if (arr.length <= 1) {\n    return arr\n  }\n  const randInt = (): number => {\n    return Math.floor(Math.random() * Math.floor(arr.length))\n  }\n\n  for (let i = 0; i < arr.length; i++) {\n    const j = randInt()\n    const tmp = arr[i]\n    arr[i] = arr[j]\n    arr[j] = tmp\n  }\n  return arr\n}\n", "import { toString } from 'uint8arrays/to-string'\n\n/**\n * Browser friendly function to convert Uint8Array message id to base64 string.\n */\nexport function messageIdToString (msgId: Uint8Array): string {\n  return toString(msgId, 'base64')\n}\n", "import { unmarshalPrivateKey } from '@libp2p/crypto/keys'\nimport { StrictSign, StrictNoSign } from '@libp2p/interface'\nimport { type PublishConfig, PublishConfigType } from '../types.js'\nimport type { PeerId } from '@libp2p/interface'\n\n/**\n * Prepare a PublishConfig object from a PeerId.\n */\nexport async function getPublishConfigFromPeerId (\n  signaturePolicy: typeof StrictSign | typeof StrictNoSign,\n  peerId?: PeerId\n): Promise<PublishConfig> {\n  switch (signaturePolicy) {\n    case StrictSign: {\n      if (peerId == null) {\n        throw Error('Must provide PeerId')\n      }\n\n      if (peerId.privateKey == null) {\n        throw Error('Cannot sign message, no private key present')\n      }\n\n      if (peerId.publicKey == null) {\n        throw Error('Cannot sign message, no public key present')\n      }\n\n      // Transform privateKey once at initialization time instead of once per message\n      const privateKey = await unmarshalPrivateKey(peerId.privateKey)\n\n      return {\n        type: PublishConfigType.Signing,\n        author: peerId,\n        key: peerId.publicKey,\n        privateKey\n      }\n    }\n\n    case StrictNoSign:\n      return {\n        type: PublishConfigType.Anonymous\n      }\n\n    default:\n      throw new Error(`Unknown signature policy \"${signaturePolicy}\"`)\n  }\n}\n", "import { randomBytes } from '@libp2p/crypto'\nimport { CodeError } from '@libp2p/interface'\nimport { peerIdFromBytes, peerIdFromKeys } from '@libp2p/peer-id'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { codes } from './errors.js'\nimport type { Message, PubSubRPCMessage } from '@libp2p/interface'\n\n/**\n * Generate a random sequence number\n */\nexport function randomSeqno (): bigint {\n  return BigInt(`0x${uint8ArrayToString(randomBytes(8), 'base16')}`)\n}\n\n/**\n * Generate a message id, based on the `key` and `seqno`\n */\nexport const msgId = (key: Uint8Array, seqno: bigint): Uint8Array => {\n  const seqnoBytes = uint8ArrayFromString(seqno.toString(16).padStart(16, '0'), 'base16')\n\n  const msgId = new Uint8Array(key.length + seqnoBytes.length)\n  msgId.set(key, 0)\n  msgId.set(seqnoBytes, key.length)\n\n  return msgId\n}\n\n/**\n * Generate a message id, based on message `data`\n */\nexport const noSignMsgId = (data: Uint8Array): Uint8Array | Promise<Uint8Array> => {\n  return sha256.encode(data)\n}\n\n/**\n * Check if any member of the first set is also a member\n * of the second set\n */\nexport const anyMatch = (a: Set<number> | number[], b: Set<number> | number[]): boolean => {\n  let bHas\n  if (Array.isArray(b)) {\n    bHas = (val: number) => b.includes(val)\n  } else {\n    bHas = (val: number) => b.has(val)\n  }\n\n  for (const val of a) {\n    if (bHas(val)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Make everything an array\n */\nexport const ensureArray = function <T> (maybeArray: T | T[]): T[] {\n  if (!Array.isArray(maybeArray)) {\n    return [maybeArray]\n  }\n\n  return maybeArray\n}\n\nconst isSigned = async (message: PubSubRPCMessage): Promise<boolean> => {\n  if ((message.sequenceNumber == null) || (message.from == null) || (message.signature == null)) {\n    return false\n  }\n  // if a public key is present in the `from` field, the message should be signed\n  const fromID = peerIdFromBytes(message.from)\n  if (fromID.publicKey != null) {\n    return true\n  }\n\n  if (message.key != null) {\n    const signingID = await peerIdFromKeys(message.key)\n    return signingID.equals(fromID)\n  }\n\n  return false\n}\n\nexport const toMessage = async (message: PubSubRPCMessage): Promise<Message> => {\n  if (message.from == null) {\n    throw new CodeError('RPC message was missing from', codes.ERR_MISSING_FROM)\n  }\n\n  if (!await isSigned(message)) {\n    return {\n      type: 'unsigned',\n      topic: message.topic ?? '',\n      data: message.data ?? new Uint8Array(0)\n    }\n  }\n\n  const from = peerIdFromBytes(message.from)\n\n  const msg: Message = {\n    type: 'signed',\n    from: peerIdFromBytes(message.from),\n    topic: message.topic ?? '',\n    sequenceNumber: bigIntFromBytes(message.sequenceNumber ?? new Uint8Array(0)),\n    data: message.data ?? new Uint8Array(0),\n    signature: message.signature ?? new Uint8Array(0),\n    key: message.key ?? from.publicKey ?? new Uint8Array(0)\n  }\n\n  if (msg.key.length === 0) {\n    throw new CodeError('Signed RPC message was missing key', codes.ERR_MISSING_KEY)\n  }\n\n  return msg\n}\n\nexport const toRpcMessage = (message: Message): PubSubRPCMessage => {\n  if (message.type === 'signed') {\n    return {\n      from: message.from.multihash.bytes,\n      data: message.data,\n      sequenceNumber: bigIntToBytes(message.sequenceNumber),\n      topic: message.topic,\n      signature: message.signature,\n      key: message.key\n    }\n  }\n\n  return {\n    data: message.data,\n    topic: message.topic\n  }\n}\n\nexport const bigIntToBytes = (num: bigint): Uint8Array => {\n  let str = num.toString(16)\n\n  if (str.length % 2 !== 0) {\n    str = `0${str}`\n  }\n\n  return uint8ArrayFromString(str, 'base16')\n}\n\nexport const bigIntFromBytes = (num: Uint8Array): bigint => {\n  return BigInt(`0x${uint8ArrayToString(num, 'base16')}`)\n}\n", "import { msgId } from '@libp2p/pubsub/utils'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport type { Message } from '@libp2p/interface'\n\n/**\n * Generate a message id, based on the `key` and `seqno`\n */\nexport function msgIdFnStrictSign (msg: Message): Uint8Array {\n  if (msg.type !== 'signed') {\n    throw new Error('expected signed message type')\n  }\n  // Should never happen\n  if (msg.sequenceNumber == null) throw Error('missing seqno field')\n\n  // TODO: Should use .from here or key?\n  return msgId(msg.from.toBytes(), msg.sequenceNumber)\n}\n\n/**\n * Generate a message id, based on message `data`\n */\nexport async function msgIdFnStrictNoSign (msg: Message): Promise<Uint8Array> {\n  return sha256.encode(msg.data)\n}\n", null, null, "import { parseIP } from \"@chainsafe/is-ip/parse\";\nimport { allFF, deepEqual } from \"./util.js\";\n\nexport const IPv4Len = 4;\nexport const IPv6Len = 16;\n\nexport const maxIPv6Octet = parseInt(\"0xFFFF\", 16);\nexport const ipv4Prefix = new Uint8Array([\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255,\n]);\n\nexport interface IpNetRaw {\n  network: Uint8Array;\n  mask: Uint8Array;\n}\n\nexport function maskIp(ip: Uint8Array, mask: Uint8Array): Uint8Array {\n  if (mask.length === IPv6Len && ip.length === IPv4Len && allFF(mask, 0, 11)) {\n    mask = mask.slice(12);\n  }\n  if (\n    mask.length === IPv4Len &&\n    ip.length === IPv6Len &&\n    deepEqual(ip, ipv4Prefix, 0, 11)\n  ) {\n    ip = ip.slice(12);\n  }\n  const n = ip.length;\n  if (n != mask.length) {\n    throw new Error(\"Failed to mask ip\");\n  }\n  const out = new Uint8Array(n);\n  for (let i = 0; i < n; i++) {\n    out[i] = ip[i] & mask[i];\n  }\n  return out;\n}\n\nexport function containsIp(\n  net: IpNetRaw,\n  ip: Uint8Array | number[] | string\n): boolean {\n  if (typeof ip === \"string\") {\n    ip = parseIP(ip)!;\n  }\n  if (ip == null) throw new Error(\"Invalid ip\");\n  if (ip.length !== net.network.length) {\n    return false;\n  }\n  for (let i = 0; i < ip.length; i++) {\n    if ((net.network[i] & net.mask[i]) !== (ip[i] & net.mask[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function iPv4FromIPv6(ip: Uint8Array): Uint8Array {\n  if (!isIPv4mappedIPv6(ip)) {\n    throw new Error(\"Must have 0xffff prefix\");\n  }\n  return ip.slice(12);\n}\n\nexport function isIPv4mappedIPv6(ip: Uint8Array | number[]): boolean {\n  return deepEqual(ip, ipv4Prefix, 0, 11);\n}\n", null, "import { isIPv4, isIPv6 } from '@chainsafe/is-ip'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\nexport { isIP } from '@chainsafe/is-ip'\nexport const isV4 = isIPv4\nexport const isV6 = isIPv6\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nexport const toBytes = function (ip: string): Uint8Array {\n  let offset = 0\n  ip = ip.toString().trim()\n\n  if (isV4(ip)) {\n    const bytes = new Uint8Array(offset + 4)\n\n    ip.split(/\\./g).forEach((byte) => {\n      bytes[offset++] = parseInt(byte, 10) & 0xff\n    })\n\n    return bytes\n  }\n\n  if (isV6(ip)) {\n    const sections = ip.split(':', 8)\n\n    let i\n    for (i = 0; i < sections.length; i++) {\n      const isv4 = isV4(sections[i])\n      let v4Buffer: Uint8Array | undefined\n\n      if (isv4) {\n        v4Buffer = toBytes(sections[i])\n        sections[i] = uint8ArrayToString(v4Buffer.slice(0, 2), 'base16')\n      }\n\n      if (v4Buffer != null && ++i < 8) {\n        sections.splice(i, 0, uint8ArrayToString(v4Buffer.slice(2, 4), 'base16'))\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0')\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0')\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      const argv: [number, number, ...string[]] = [i, 1]\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0')\n      }\n      sections.splice.apply(sections, argv)\n    }\n\n    const bytes = new Uint8Array(offset + 16)\n\n    for (i = 0; i < sections.length; i++) {\n      const word = parseInt(sections[i], 16)\n      bytes[offset++] = (word >> 8) & 0xff\n      bytes[offset++] = word & 0xff\n    }\n\n    return bytes\n  }\n\n  throw new Error('invalid ip address')\n}\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nexport const toString = function (buf: Uint8Array, offset: number = 0, length?: number): string {\n  offset = ~~offset\n  length = length ?? (buf.length - offset)\n\n  const view = new DataView(buf.buffer)\n\n  if (length === 4) {\n    const result = []\n\n    // IPv4\n    for (let i = 0; i < length; i++) {\n      result.push(buf[offset + i])\n    }\n\n    return result.join('.')\n  }\n\n  if (length === 16) {\n    const result = []\n\n    // IPv6\n    for (let i = 0; i < length; i += 2) {\n      result.push(view.getUint16(offset + i).toString(16))\n    }\n\n    return result.join(':')\n      .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n      .replace(/:{3,4}/, '::')\n  }\n\n  return ''\n}\n", "import type { Protocol } from './index.js'\n\nconst V = -1\nexport const names: Record<string, Protocol> = {}\nexport const codes: Record<number, Protocol> = {}\n\nexport const table: Array<[number, number, string, boolean?, boolean?]> = [\n  [4, 32, 'ip4'],\n  [6, 16, 'tcp'],\n  [33, 16, 'dccp'],\n  [41, 128, 'ip6'],\n  [42, V, 'ip6zone'],\n  [43, 8, 'ipcidr'],\n  [53, V, 'dns', true],\n  [54, V, 'dns4', true],\n  [55, V, 'dns6', true],\n  [56, V, 'dnsaddr', true],\n  [132, 16, 'sctp'],\n  [273, 16, 'udp'],\n  [275, 0, 'p2p-webrtc-star'],\n  [276, 0, 'p2p-webrtc-direct'],\n  [277, 0, 'p2p-stardust'],\n  [280, 0, 'webrtc-direct'],\n  [281, 0, 'webrtc'],\n  [290, 0, 'p2p-circuit'],\n  [301, 0, 'udt'],\n  [302, 0, 'utp'],\n  [400, V, 'unix', false, true],\n  // `ipfs` is added before `p2p` for legacy support.\n  // All text representations will default to `p2p`, but `ipfs` will\n  // still be supported\n  [421, V, 'ipfs'],\n  // `p2p` is the preferred name for 421, and is now the default\n  [421, V, 'p2p'],\n  [443, 0, 'https'],\n  [444, 96, 'onion'],\n  [445, 296, 'onion3'],\n  [446, V, 'garlic64'],\n  [448, 0, 'tls'],\n  [449, V, 'sni'],\n  [460, 0, 'quic'],\n  [461, 0, 'quic-v1'],\n  [465, 0, 'webtransport'],\n  [466, V, 'certhash'],\n  [477, 0, 'ws'],\n  [478, 0, 'wss'],\n  [479, 0, 'p2p-websocket-star'],\n  [480, 0, 'http'],\n  [777, V, 'memory']\n]\n\n// populate tables\ntable.forEach(row => {\n  const proto = createProtocol(...row)\n  codes[proto.code] = proto\n  names[proto.name] = proto\n})\n\nexport function createProtocol (code: number, size: number, name: string, resolvable?: any, path?: any): Protocol {\n  return {\n    code,\n    size,\n    name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path)\n  }\n}\n\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol (proto: number | string): Protocol {\n  if (typeof proto === 'number') {\n    if (codes[proto] != null) {\n      return codes[proto]\n    }\n\n    throw new Error(`no protocol with code: ${proto}`)\n  } else if (typeof proto === 'string') {\n    if (names[proto] != null) {\n      return names[proto]\n    }\n\n    throw new Error(`no protocol with name: ${proto}`)\n  }\n\n  throw new Error(`invalid protocol id type: ${typeof proto}`)\n}\n", "/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\n\nimport { IpNet } from '@chainsafe/netmask'\nimport { base32 } from 'multiformats/bases/base32'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { bases } from 'multiformats/basics'\nimport { CID } from 'multiformats/cid'\nimport * as Digest from 'multiformats/hashes/digest'\nimport * as varint from 'uint8-varint'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport * as ip from './ip.js'\nimport { getProtocol } from './protocols-table.js'\nimport type { Multiaddr } from './index.js'\n\nconst ip4Protocol = getProtocol('ip4')\nconst ip6Protocol = getProtocol('ip6')\nconst ipcidrProtocol = getProtocol('ipcidr')\n\n/**\n * converts (serializes) addresses\n */\nexport function convert (proto: string, a: string): Uint8Array\nexport function convert (proto: string, a: Uint8Array): string\nexport function convert (proto: string, a: string | Uint8Array): Uint8Array | string {\n  if (a instanceof Uint8Array) {\n    return convertToString(proto, a)\n  } else {\n    return convertToBytes(proto, a)\n  }\n}\n\n/**\n * Convert [code,Uint8Array] to string\n */\nexport function convertToString (proto: number | string, buf: Uint8Array): string {\n  const protocol = getProtocol(proto)\n  switch (protocol.code) {\n    case 4: // ipv4\n    case 41: // ipv6\n      return bytes2ip(buf)\n    case 42: // ipv6zone\n      return bytes2str(buf)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return bytes2port(buf).toString()\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 449: // sni\n    case 777: // memory\n      return bytes2str(buf)\n\n    case 421: // ipfs\n      return bytes2mh(buf)\n    case 444: // onion\n      return bytes2onion(buf)\n    case 445: // onion3\n      return bytes2onion(buf)\n    case 466: // certhash\n      return bytes2mb(buf)\n    default:\n      return uint8ArrayToString(buf, 'base16') // no clue. convert to hex\n  }\n}\n\nexport function convertToBytes (proto: string | number, str: string): Uint8Array {\n  const protocol = getProtocol(proto)\n  switch (protocol.code) {\n    case 4: // ipv4\n      return ip2bytes(str)\n    case 41: // ipv6\n      return ip2bytes(str)\n    case 42: // ipv6zone\n      return str2bytes(str)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return port2bytes(parseInt(str, 10))\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 449: // sni\n    case 777: // memory\n      return str2bytes(str)\n\n    case 421: // ipfs\n      return mh2bytes(str)\n    case 444: // onion\n      return onion2bytes(str)\n    case 445: // onion3\n      return onion32bytes(str)\n    case 466: // certhash\n      return mb2bytes(str)\n    default:\n      return uint8ArrayFromString(str, 'base16') // no clue. convert from hex\n  }\n}\n\nexport function convertToIpNet (multiaddr: Multiaddr): IpNet {\n  let mask: string | undefined\n  let addr: string | undefined\n  multiaddr.stringTuples().forEach(([code, value]) => {\n    if (code === ip4Protocol.code || code === ip6Protocol.code) {\n      addr = value\n    }\n    if (code === ipcidrProtocol.code) {\n      mask = value\n    }\n  })\n  if (mask == null || addr == null) {\n    throw new Error('Invalid multiaddr')\n  }\n  return new IpNet(addr, mask)\n}\n\nconst decoders = Object.values(bases).map((c) => c.decoder)\nconst anybaseDecoder = (function () {\n  let acc = decoders[0].or(decoders[1])\n  decoders.slice(2).forEach((d) => (acc = acc.or(d)))\n  return acc\n})()\n\nfunction ip2bytes (ipString: string): Uint8Array {\n  if (!ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ip.toBytes(ipString)\n}\n\nfunction bytes2ip (ipBuff: Uint8Array): string {\n  const ipString = ip.toString(ipBuff, 0, ipBuff.length)\n  if (ipString == null) {\n    throw new Error('ipBuff is required')\n  }\n  if (!ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ipString\n}\n\nfunction port2bytes (port: number): Uint8Array {\n  const buf = new ArrayBuffer(2)\n  const view = new DataView(buf)\n  view.setUint16(0, port)\n\n  return new Uint8Array(buf)\n}\n\nfunction bytes2port (buf: Uint8Array): number {\n  const view = new DataView(buf.buffer)\n  return view.getUint16(buf.byteOffset)\n}\n\nfunction str2bytes (str: string): Uint8Array {\n  const buf = uint8ArrayFromString(str)\n  const size = Uint8Array.from(varint.encode(buf.length))\n  return uint8ArrayConcat([size, buf], size.length + buf.length)\n}\n\nfunction bytes2str (buf: Uint8Array): string {\n  const size = varint.decode(buf)\n  buf = buf.slice(varint.encodingLength(size))\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(buf)\n}\n\nfunction mh2bytes (hash: string): Uint8Array {\n  let mh\n\n  if (hash[0] === 'Q' || hash[0] === '1') {\n    mh = Digest.decode(base58btc.decode(`z${hash}`)).bytes\n  } else {\n    mh = CID.parse(hash).multihash.bytes\n  }\n\n  // the address is a varint prefixed multihash string representation\n  const size = Uint8Array.from(varint.encode(mh.length))\n  return uint8ArrayConcat([size, mh], size.length + mh.length)\n}\n\nfunction mb2bytes (mbstr: string): Uint8Array {\n  const mb = anybaseDecoder.decode(mbstr)\n  const size = Uint8Array.from(varint.encode(mb.length))\n  return uint8ArrayConcat([size, mb], size.length + mb.length)\n}\nfunction bytes2mb (buf: Uint8Array): string {\n  const size = varint.decode(buf)\n  const hash = buf.slice(varint.encodingLength(size))\n\n  if (hash.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return 'u' + uint8ArrayToString(hash, 'base64url')\n}\n\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh (buf: Uint8Array): string {\n  const size = varint.decode(buf)\n  const address = buf.slice(varint.encodingLength(size))\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return uint8ArrayToString(address, 'base58btc')\n}\n\nfunction onion2bytes (str: string): Uint8Array {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`)\n  }\n  if (addr[0].length !== 16) {\n    throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`)\n  }\n\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = base32.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nfunction onion32bytes (str: string): Uint8Array {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`)\n  }\n  if (addr[0].length !== 56) {\n    throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`)\n  }\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = base32.decode(`b${addr[0]}`)\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2bytes(port)\n  return uint8ArrayConcat([buf, portBuf], buf.length + portBuf.length)\n}\n\nfunction bytes2onion (buf: Uint8Array): string {\n  const addrBytes = buf.slice(0, buf.length - 2)\n  const portBytes = buf.slice(buf.length - 2)\n  const addr = uint8ArrayToString(addrBytes, 'base32')\n  const port = bytes2port(portBytes)\n  return `${addr}:${port}`\n}\n", "import { convertToString } from '@multiformats/multiaddr/convert'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\n// Protocols https://github.com/multiformats/multiaddr/blob/master/protocols.csv\n// code  size  name\n// 4     32    ip4\n// 41    128   ip6\nenum Protocol {\n  ip4 = 4,\n  ip6 = 41\n}\n\nexport function multiaddrToIPStr (multiaddr: Multiaddr): string | null {\n  for (const tuple of multiaddr.tuples()) {\n    switch (tuple[0]) {\n      case Protocol.ip4:\n      case Protocol.ip6:\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return convertToString(tuple[0], tuple[1]!)\n      default:\n        break\n    }\n  }\n\n  return null\n}\n", "interface SimpleTimeCacheOpts {\n  validityMs: number\n}\n\ninterface CacheValue<T> {\n  value: T\n  validUntilMs: number\n}\n\n/**\n * This is similar to https://github.com/daviddias/time-cache/blob/master/src/index.js\n * for our own need, we don't use lodash throttle to improve performance.\n * This gives 4x - 5x performance gain compared to npm TimeCache\n */\nexport class SimpleTimeCache<T> {\n  private readonly entries = new Map<string | number, CacheValue<T>>()\n  private readonly validityMs: number\n\n  constructor (opts: SimpleTimeCacheOpts) {\n    this.validityMs = opts.validityMs\n\n    // allow negative validityMs so that this does not cache anything, spec test compliance.spec.js\n    // sends duplicate messages and expect peer to receive all. Application likely uses positive validityMs\n  }\n\n  get size (): number {\n    return this.entries.size\n  }\n\n  /** Returns true if there was a key collision and the entry is dropped */\n  put (key: string | number, value: T): boolean {\n    if (this.entries.has(key)) {\n      // Key collisions break insertion order in the entries cache, which break prune logic.\n      // prune relies on each iterated entry to have strictly ascending validUntilMs, else it\n      // won't prune expired entries and SimpleTimeCache will grow unexpectedly.\n      // As of Oct 2022 NodeJS v16, inserting the same key twice with different value does not\n      // change the key position in the iterator stream. A unit test asserts this behaviour.\n      return true\n    }\n\n    this.entries.set(key, { value, validUntilMs: Date.now() + this.validityMs })\n    return false\n  }\n\n  prune (): void {\n    const now = Date.now()\n\n    for (const [k, v] of this.entries.entries()) {\n      if (v.validUntilMs < now) {\n        this.entries.delete(k)\n      } else {\n        // Entries are inserted with strictly ascending validUntilMs.\n        // Stop early to save iterations\n        break\n      }\n    }\n  }\n\n  has (key: string): boolean {\n    return this.entries.has(key)\n  }\n\n  get (key: string | number): T | undefined {\n    const value = this.entries.get(key)\n    return (value != null) && value.validUntilMs >= Date.now() ? value.value : undefined\n  }\n\n  clear (): void {\n    this.entries.clear()\n  }\n}\n"],
+  "mappings": "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",
+  "names": ["require_err_code", "__commonJSMin", "exports", "module", "assign", "obj", "props", "key", "createError", "err", "code", "ErrClass", "require_aspromise", "__commonJSMin", "exports", "module", "asPromise", "fn", "ctx", "params", "offset", "index", "pending", "resolve", "reject", "err", "require_base64", "__commonJSMin", "exports", "base64", "string", "p", "n", "b64", "s64", "i", "buffer", "start", "end", "parts", "chunk", "j", "t", "b", "invalidEncoding", "offset", "c", "require_eventemitter", "__commonJSMin", "exports", "module", "EventEmitter", "evt", "fn", "ctx", "listeners", "i", "args", "require_float", "__commonJSMin", "exports", "module", "factory", "f32", "f8b", "le", "writeFloat_f32_cpy", "val", "buf", "pos", "writeFloat_f32_rev", "readFloat_f32_cpy", "readFloat_f32_rev", "writeFloat_ieee754", "writeUint", "sign", "exponent", "mantissa", "writeUintLE", "writeUintBE", "readFloat_ieee754", "readUint", "uint", "readUintLE", "readUintBE", "f64", "writeDouble_f64_cpy", "writeDouble_f64_rev", "readDouble_f64_cpy", "readDouble_f64_rev", "writeDouble_ieee754", "off0", "off1", "readDouble_ieee754", "lo", "hi", "require_inquire", "__commonJSMin", "e", "require_utf8", "__commonJSMin", "exports", "utf8", "string", "len", "c", "i", "buffer", "start", "end", "parts", "chunk", "t", "offset", "c1", "c2", "require_pool", "__commonJSMin", "exports", "module", "pool", "alloc", "slice", "size", "SIZE", "MAX", "slab", "offset", "buf", "require_longbits", "__commonJSMin", "exports", "module", "LongBits", "util", "lo", "hi", "zero", "zeroHash", "value", "sign", "unsigned", "charCodeAt", "hash", "mask", "part0", "part1", "part2", "require_minimal", "__commonJSMin", "exports", "util", "value", "obj", "prop", "Buffer", "sizeOrArray", "hash", "unsigned", "bits", "merge", "dst", "src", "ifNotSet", "keys", "i", "str", "newError", "name", "CustomError", "message", "properties", "fieldNames", "fieldMap", "encoding", "size", "require_writer", "__commonJSMin", "exports", "module", "Writer", "util", "BufferWriter", "LongBits", "base64", "utf8", "Op", "fn", "len", "val", "noop", "State", "writer", "create", "size", "writeByte", "buf", "pos", "writeVarint32", "VarintOp", "value", "writeVarint64", "bits", "writeFixed32", "writeBytes", "i", "head", "tail", "BufferWriter_", "require_writer_buffer", "__commonJSMin", "exports", "module", "BufferWriter", "Writer", "util", "val", "buf", "pos", "i", "value", "len", "writeStringBuffer", "require_reader", "__commonJSMin", "exports", "module", "Reader", "util", "BufferReader", "LongBits", "utf8", "indexOutOfRange", "reader", "writeLength", "buffer", "create_array", "create", "value", "readLongVarint", "bits", "i", "readFixed32_end", "buf", "end", "readFixed64", "length", "start", "nativeBuffer", "bytes", "wireType", "BufferReader_", "fn", "require_reader_buffer", "__commonJSMin", "exports", "module", "BufferReader", "Reader", "util", "buffer", "len", "require_service", "__commonJSMin", "exports", "module", "Service", "util", "rpcImpl", "requestDelimited", "responseDelimited", "rpcCall", "method", "requestCtor", "responseCtor", "request", "callback", "self", "err", "response", "endedByRPC", "require_rpc", "__commonJSMin", "exports", "rpc", "require_roots", "__commonJSMin", "exports", "module", "require_index_minimal", "__commonJSMin", "exports", "protobuf", "configure", "require_minimal", "__commonJSMin", "exports", "module", "require_rpc", "__commonJSMin", "exports", "module", "global", "factory", "__require", "$protobuf", "$Reader", "$Writer", "$util", "$root", "RPC", "p", "ks", "i", "$oneOfFields", "m", "w", "r", "l", "c", "t", "d", "o", "j", "SubOpts", "Message", "ControlMessage", "ControlIHave", "ControlIWant", "ControlGraft", "ControlPrune", "PeerInfo", "require_denque", "__commonJSMin", "exports", "module", "Denque", "array", "options", "index", "i", "len", "item", "head", "tail", "size", "k", "count", "removed", "del_count", "temp", "arg_len", "arguments_index", "leng", "length", "capacity", "fullCopy", "src", "dest", "newList", "num", "log2", "nextPow2", "require_build", "__commonJSMin", "exports", "ARRAY_BUFFER_NAME", "BufferSourceConverter", "_BufferSourceConverter", "data", "type", "a", "b", "aView", "bView", "args", "buffers", "size", "buffer", "res", "offset", "view", "STRING_TYPE", "HEX_REGEX", "BASE64_REGEX", "BASE64URL_REGEX", "Utf8Converter", "text", "s", "uintArray", "i", "buf", "encodedString", "Utf16Converter", "littleEndian", "arrayBuffer", "dataView", "code", "Convert", "_Convert", "enc", "str", "binary", "base64", "formatted", "base64url", "encoding", "stringLength", "resultView", "result", "len", "byte", "hexString", "c", "padCount", "assign", "target", "sources", "obj", "prop", "combine", "totalByteLength", "item", "prev", "cur", "currentPos", "arr", "item2", "isEqual", "bytes1", "bytes2", "b1", "b2", "src_exports", "__export", "GossipSub", "gossipsub", "multicodec", "peerIdSymbol", "StrictSign", "StrictNoSign", "TopicValidatorResult", "CodeError", "message", "code", "props", "TypedEventEmitter", "#listeners", "type", "listeners", "listener", "options", "list", "callback", "event", "result", "once", "detail", "CustomEvent", "CustomEventPolyfill", "message", "data", "base58_exports", "__export", "base58btc", "base58flickr", "empty", "equals", "aa", "bb", "ii", "coerce", "o", "fromString", "str", "toString", "b", "base", "ALPHABET", "name", "BASE_MAP", "j", "i", "x", "xc", "BASE", "LEADER", "FACTOR", "iFACTOR", "encode", "source", "zeroes", "length", "pbegin", "pend", "size", "b58", "carry", "it1", "it2", "str", "decodeUnsafe", "psz", "b256", "it3", "it4", "vch", "decode", "string", "buffer", "src", "_brrp__multiformats_scope_baseX", "base_x_default", "Encoder", "name", "prefix", "baseEncode", "bytes", "Decoder", "baseDecode", "text", "decoder", "or", "ComposedDecoder", "decoders", "input", "left", "right", "Codec", "from", "encode", "decode", "baseX", "alphabet", "base_x_default", "coerce", "string", "bitsPerChar", "codes", "i", "end", "out", "bits", "buffer", "written", "value", "data", "pad", "mask", "rfc4648", "base58btc", "baseX", "base58flickr", "base10_exports", "__export", "base10", "base10", "baseX", "base16_exports", "__export", "base16", "base16upper", "base16", "rfc4648", "base16upper", "base2_exports", "__export", "base2", "base2", "rfc4648", "base256emoji_exports", "__export", "base256emoji", "alphabet", "alphabetBytesToChars", "p", "c", "i", "alphabetCharsToBytes", "encode", "data", "decode", "str", "byts", "char", "byt", "base256emoji", "from", "base32_exports", "__export", "base32", "base32hex", "base32hexpad", "base32hexpadupper", "base32hexupper", "base32pad", "base32padupper", "base32upper", "base32z", "base32", "rfc4648", "base32upper", "base32pad", "base32padupper", "base32hex", "base32hexupper", "base32hexpad", "base32hexpadupper", "base32z", "base36_exports", "__export", "base36", "base36upper", "base36", "baseX", "base36upper", "base64_exports", "__export", "base64", "base64pad", "base64url", "base64urlpad", "base64", "rfc4648", "base64pad", "base64url", "base64urlpad", "base8_exports", "__export", "base8", "base8", "rfc4648", "identity_exports", "__export", "identity", "identity", "from", "buf", "toString", "str", "fromString", "textEncoder", "textDecoder", "identity_exports", "__export", "identity", "encode_1", "encode", "MSB", "REST", "MSBALL", "INT", "num", "out", "offset", "oldOffset", "decode", "read", "MSB$1", "REST$1", "buf", "res", "shift", "counter", "b", "l", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "length", "value", "varint", "_brrp_varint", "varint_default", "decode", "data", "offset", "varint_default", "encodeTo", "int", "target", "encodingLength", "create", "code", "digest", "size", "sizeOffset", "encodingLength", "digestOffset", "bytes", "encodeTo", "Digest", "decode", "multihash", "coerce", "equals", "a", "b", "data", "code", "name", "encode", "coerce", "digest", "input", "create", "identity", "sha2_browser_exports", "__export", "sha256", "sha512", "from", "name", "code", "encode", "Hasher", "input", "result", "create", "digest", "sha", "name", "data", "sha256", "from", "sha512", "format", "link", "base", "bytes", "version", "toStringV0", "baseCache", "base58btc", "toStringV1", "base32", "cache", "baseCache", "cid", "CID", "_CID", "version", "code", "multihash", "bytes", "DAG_PB_CODE", "SHA_256_CODE", "digest", "create", "other", "self", "unknown", "equals", "base", "format", "input", "value", "encodeCID", "cidSymbol", "decode", "remainder", "specs", "prefixSize", "multihashBytes", "coerce", "digestBytes", "Digest", "initialBytes", "offset", "next", "i", "length", "codec", "multihashCode", "digestSize", "size", "multihashSize", "source", "prefix", "parseCIDtoBytes", "decoder", "base58btc", "base32", "toStringV0", "toStringV1", "codeOffset", "encodingLength", "hashOffset", "encodeTo", "bases", "identity_exports", "base2_exports", "base8_exports", "base10_exports", "base16_exports", "base32_exports", "base36_exports", "base58_exports", "base64_exports", "base256emoji_exports", "hashes", "sha2_browser_exports", "equals", "a", "b", "i", "inspect", "baseDecoder", "bases", "codec", "acc", "curr", "LIBP2P_KEY_CODE", "MARSHALLED_ED225519_PUBLIC_KEY_LENGTH", "MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH", "PeerIdImpl", "init", "peerIdSymbol", "base58btc", "CID", "id", "equals", "peerIdFromString", "RSAPeerIdImpl", "Ed25519PeerIdImpl", "Secp256k1PeerIdImpl", "peerIdFromString", "str", "decoder", "baseDecoder", "multihash", "decode", "base58btc", "Ed25519PeerIdImpl", "Secp256k1PeerIdImpl", "RSAPeerIdImpl", "peerIdFromBytes", "buf", "identity", "MARSHALLED_ED225519_PUBLIC_KEY_LENGTH", "MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH", "sha256", "peerIdFromCID", "CID", "cid", "LIBP2P_KEY_CODE", "asUint8Array", "buf", "alloc", "size", "asUint8Array", "allocUnsafe", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "MSB", "REST", "encodingLength", "value", "encodeUint8Array", "buf", "offset", "encodeUint8ArrayList", "decodeUint8Array", "b", "res", "decodeUint8ArrayList", "encode", "allocUnsafe", "decode", "concat", "arrays", "length", "asUint8Array", "acc", "curr", "output", "allocUnsafe", "offset", "arr", "symbol", "findBufAndOffset", "bufs", "index", "offset", "buf", "bufEnd", "isUint8ArrayList", "value", "Uint8ArrayList", "_Uint8ArrayList", "data", "length", "res", "i", "bytes", "beginInclusive", "endExclusive", "concat", "list", "bufStart", "sliceStartInBuf", "sliceEndsInBuf", "start", "search", "needle", "M", "radix", "rightmostPositions", "c", "j", "right", "lastIndex", "lastPatIndex", "skip", "char", "byteOffset", "allocUnsafe", "littleEndian", "alloc", "other", "equals", "acc", "curr", "isAsyncIterable", "thing", "defaultEncoder", "length", "lengthLength", "encodingLength", "lengthBuf", "allocUnsafe", "encode", "source", "options", "encodeLength", "maybeYield", "chunk", "isAsyncIterable", "Uint8ArrayList", "import_err_code", "MAX_LENGTH_LENGTH", "MAX_DATA_LENGTH", "ReadMode", "defaultDecoder", "buf", "length", "decode", "encodingLength", "source", "options", "buffer", "Uint8ArrayList", "mode", "dataLength", "lengthDecoder", "maxLengthLength", "maxDataLength", "maybeYield", "errCode", "dataLengthLength", "err", "data", "isAsyncIterable", "reader", "byteLength", "varByteSource", "done", "value", "l", "pDefer", "deferred", "resolve", "reject", "FixedFIFO", "hwm", "data", "last", "FIFO", "options", "obj", "val", "prev", "next", "AbortError", "message", "code", "pushable", "options", "_pushable", "buffer", "next", "_pushable", "getNext", "options", "onEnd", "buffer", "FIFO", "pushable", "onNext", "ended", "drain", "pDefer", "waitNext", "resolve", "reject", "next", "err", "bufferNext", "bufferError", "push", "value", "end", "_return", "_throw", "signal", "cancel", "listener", "AbortError", "opts", "isAsyncIterable", "thing", "merge", "sources", "syncSources", "source", "output", "pushable", "item", "err", "src_default", "pipe", "first", "rest", "isDuplex", "duplex", "isIterable", "isAsyncIterable", "source", "fns", "i", "duplexPipelineFn", "rawPipe", "res", "obj", "p", "stream", "pushable", "err", "sourceWrap", "src_default", "FloodsubID", "GossipsubIDv10", "GossipsubIDv11", "ERR_TOPIC_VALIDATOR_REJECT", "ERR_TOPIC_VALIDATOR_IGNORE", "import_minimal", "defaultDecodeRpcLimits", "decodeRpc", "bytes", "opts", "r", "protobuf", "l", "c", "m", "t", "decodeSubOpts", "decodeMessage", "decodeControlMessage", "decodeControlIHave", "decodeControlIWant", "decodeControlGraft", "decodeControlPrune", "decodePeerInfo", "import_rpc", "RPC", "cjs", "MessageCache", "gossip", "historyCapacity", "msgIdToStrFn", "i", "messageId", "msg", "validated", "msgIdStr", "msgId", "fromPeerIdStr", "entry", "p", "count", "topics", "msgIdsByTopic", "msgIds", "message", "originatingPeers", "cacheEntry", "SignaturePolicy", "PublishConfigType", "RejectReason", "ValidateError", "MessageStatus", "rejectReasonFromAcceptance", "acceptance", "TopicValidatorResult", "MessageSource", "InclusionReason", "ChurnReason", "ScorePenalty", "IHaveIgnoreReason", "ScoreThreshold", "getMetrics", "register", "topicStrToLabel", "opts", "topicStr", "reason", "count", "topic", "messageRecord", "acceptance", "firstSeenTimestampMs", "TopicValidatorResult", "penalty", "ihave", "idonthave", "iwantByTopic", "iwantDonthave", "iwant", "tosendCount", "tosendGroupCount", "dataLen", "ms", "status", "MessageStatus", "error", "RejectReason", "deliveryDelayMs", "isLateDelivery", "rpc", "rpcBytes", "graft", "prune", "scores", "scoreThresholds", "graylist", "publish", "gossip", "mesh", "score", "sw", "wsTopic", "scoreByPeer", "peersPerTopicLabel", "peers", "topicLabel", "peersInMesh", "p", "meshScores", "peer", "ERR_INVALID_PEER_SCORE_PARAMS", "defaultPeerScoreParams", "defaultTopicScoreParams", "createPeerScoreParams", "p", "topics", "topic", "topicScoreParams", "createTopicScoreParams", "validatePeerScoreParams", "params", "validateTopicScoreParams", "e", "CodeError", "ERR_INVALID_PEER_SCORE_PARAMS", "defaultPeerScoreThresholds", "createPeerScoreThresholds", "p", "removeItemsFromSet", "superSet", "ineed", "cond", "subset", "id", "removeFirstNItemsFromSet", "MapDef", "getDefault", "key", "value", "computeScore", "peer", "pstats", "params", "peerIPs", "score", "topic", "tstats", "topicParams", "topicScore", "p1", "p2", "deficit", "p3", "p3b", "p4", "p5", "ip", "peersInIP", "numPeersInIP", "surplus", "p6", "excess", "p7", "import_denque", "DeliveryRecordStatus", "MessageDeliveries", "Denque", "msgIdStr", "drec", "entry", "now", "head", "PeerScore", "MapDef", "MessageDeliveries", "params", "metrics", "componentLogger", "opts", "validatePeerScoreParams", "computeScore", "peer", "stats", "msgIdStr", "drec", "now", "decayToZero", "pstats", "id", "topic", "tstats", "tparams", "cacheEntry", "score", "cacheUntil", "penalty", "penaltyLabel", "ip", "peersWithIP", "threshold", "deficit", "from", "DeliveryRecordStatus", "p", "reason", "RejectReason", "cap", "validatedTime", "deliveryDelayMs", "isLateDelivery", "ipsToRemove", "ipToRemove", "peerSet", "topicStats", "computeScoreWeights", "peer", "pstats", "params", "peerIPs", "topicStrToLabel", "score", "byTopic", "topic", "tstats", "topicLabel", "topicParams", "topicScores", "p1w", "p2w", "p3w", "p3bw", "p4w", "p1", "p2", "deficit", "p3", "p3b", "p4", "capF", "ws", "p5w", "p6w", "p7w", "p5", "ip", "peersInIP", "numPeersInIP", "surplus", "p6", "p7", "computeAllPeersScoreWeights", "peerIdStrs", "peerStats", "sw", "peerIdStr", "swPeer", "swPeerTopic", "swTopic", "AbortError", "message", "code", "getIterator", "obj", "abortableSource", "source", "signal", "options", "opts", "iterator", "getIterator", "abortable", "nextAbortHandler", "abortHandler", "result", "abortMessage", "abortCode", "AbortError", "abort", "resolve", "reject", "err", "isKnownAborter", "p", "OutboundStream", "rawStream", "errCallback", "opts", "pushable", "pipe", "abortableSource", "src_default", "source", "encode", "data", "InboundStream", "decode", "IWantTracer", "gossipsubIWantFollowupMs", "msgIdToStrFn", "metrics", "from", "msgIds", "ix", "msgId", "msgIdStr", "expireByPeer", "now", "result", "brokenPromises", "expire", "p", "isDuplicate", "reason", "RejectReason", "maxMs", "count", "k", "v", "requestMs", "webcrypto_browser_default", "win", "nativeCrypto", "ed25519_class_exports", "__export", "Ed25519PrivateKey", "Ed25519PublicKey", "generateKeyPair", "generateKeyPairFromSeed", "unmarshalEd25519PrivateKey", "unmarshalEd25519PublicKey", "createCodec", "name", "prefix", "encode", "decode", "string", "buf", "str", "ascii", "i", "allocUnsafe", "BASES", "bases", "bases_default", "fromString", "string", "encoding", "base", "bases_default", "asUint8Array", "isPromise", "thing", "number", "n", "isBytes", "a", "bytes", "b", "lengths", "hash", "number", "exists", "instance", "checkFinished", "output", "out", "min", "crypto", "isBytes", "a", "createView", "arr", "rotr", "word", "shift", "isLE", "nextTick", "asyncLoop", "iters", "tick", "cb", "ts", "i", "diff", "utf8ToBytes", "str", "toBytes", "data", "isBytes", "concatBytes", "arrays", "sum", "a", "res", "pad", "Hash", "toStr", "checkOpts", "defaults", "opts", "wrapConstructor", "hashCons", "hashC", "msg", "tmp", "randomBytes", "bytesLength", "crypto", "setBigUint64", "view", "byteOffset", "value", "isLE", "_32n", "_u32_max", "wh", "wl", "h", "l", "SHA2", "Hash", "blockLen", "outputLen", "padOffset", "createView", "data", "exists", "buffer", "toBytes", "len", "pos", "take", "dataView", "out", "output", "i", "oview", "outLen", "state", "res", "to", "length", "finished", "destroyed", "U32_MASK64", "_32n", "fromBig", "n", "le", "split", "lst", "Ah", "Al", "i", "h", "l", "toBig", "shrSH", "_l", "s", "shrSL", "rotrSH", "rotrSL", "rotrBH", "rotrBL", "rotr32H", "_h", "rotr32L", "rotlSH", "rotlSL", "rotlBH", "rotlBL", "add", "Bh", "Bl", "add3L", "Cl", "add3H", "low", "Ch", "add4L", "Dl", "add4H", "Dh", "add5L", "El", "add5H", "Eh", "u64", "fromBig", "split", "toBig", "shrSH", "shrSL", "rotrSH", "rotrSL", "rotrBH", "rotrBL", "rotr32H", "rotr32L", "rotlSH", "rotlSL", "rotlBH", "rotlBL", "add", "add3L", "add3H", "add4L", "add4H", "add5H", "add5L", "u64_default", "SHA512_Kh", "SHA512_Kl", "u64_default", "n", "SHA512_W_H", "SHA512_W_L", "SHA512", "SHA2", "Ah", "Al", "Bh", "Bl", "Ch", "Cl", "Dh", "Dl", "Eh", "El", "Fh", "Fl", "Gh", "Gl", "Hh", "Hl", "view", "offset", "i", "W15h", "W15l", "s0h", "s0l", "W2h", "W2l", "s1h", "s1l", "SUMl", "SUMh", "sigma1h", "sigma1l", "CHIh", "CHIl", "T1ll", "T1h", "T1l", "sigma0h", "sigma0l", "MAJh", "MAJl", "All", "sha512", "wrapConstructor", "SHA512", "utils_exports", "__export", "bitGet", "bitLen", "bitMask", "bitSet", "bytesToHex", "bytesToNumberBE", "bytesToNumberLE", "concatBytes", "createHmacDrbg", "ensureBytes", "equalBytes", "hexToBytes", "hexToNumber", "isBytes", "numberToBytesBE", "numberToBytesLE", "numberToHexUnpadded", "numberToVarBytesBE", "utf8ToBytes", "validateObject", "_0n", "_1n", "_2n", "a", "hexes", "_", "i", "bytes", "hex", "num", "asciis", "asciiToBase16", "char", "hl", "al", "array", "ai", "hi", "n1", "n2", "n", "len", "title", "expectedLength", "res", "e", "arrays", "sum", "pad", "b", "diff", "str", "pos", "value", "u8n", "data", "u8fr", "arr", "hashLen", "qByteLen", "hmacFn", "v", "k", "reset", "h", "reseed", "seed", "gen", "out", "sl", "pred", "validatorFns", "val", "object", "validators", "optValidators", "checkField", "fieldName", "type", "isOptional", "checkVal", "_0n", "_1n", "_2n", "_3n", "_4n", "_5n", "_8n", "_9n", "_16n", "mod", "a", "b", "result", "pow", "num", "power", "modulo", "res", "pow2", "x", "invert", "number", "y", "u", "v", "q", "r", "m", "n", "tonelliShanks", "P", "legendreC", "Q", "S", "Z", "p1div4", "Fp", "root", "Q1div2", "g", "t2", "ge", "FpSqrt", "c1", "n2", "nv", "i", "isNegativeLE", "FIELD_FIELDS", "validateField", "field", "initial", "opts", "map", "val", "validateObject", "FpPow", "f", "p", "d", "FpInvertBatch", "nums", "tmp", "lastMultiplied", "acc", "inverted", "nLength", "n", "nBitLength", "_nBitLength", "nByteLength", "Field", "ORDER", "bitLen", "isLE", "redef", "_0n", "BITS", "BYTES", "sqrtP", "FpSqrt", "f", "bitMask", "_1n", "num", "mod", "lhs", "rhs", "power", "FpPow", "invert", "lst", "FpInvertBatch", "a", "b", "c", "numberToBytesLE", "numberToBytesBE", "bytes", "bytesToNumberLE", "bytesToNumberBE", "FpSqrtEven", "Fp", "elm", "root", "getFieldBytesLength", "fieldOrder", "bitLength", "getMinHashLength", "length", "mapHashToField", "key", "isLE", "len", "fieldLen", "minLen", "num", "bytesToNumberBE", "bytesToNumberLE", "reduced", "mod", "_1n", "numberToBytesLE", "numberToBytesBE", "_0n", "_1n", "wNAF", "c", "bits", "constTimeNegate", "condition", "item", "neg", "opts", "W", "windows", "windowSize", "elm", "n", "p", "d", "points", "base", "window", "i", "precomputes", "f", "mask", "maxNumber", "shiftBy", "offset", "wbits", "offset1", "offset2", "cond1", "cond2", "P", "precomputesMap", "transform", "comp", "validateBasic", "curve", "validateField", "validateObject", "nLength", "_0n", "_1n", "_2n", "_8n", "VERIFY_DEFAULT", "validateOpts", "curve", "opts", "validateBasic", "validateObject", "twistedEdwards", "curveDef", "CURVE", "Fp", "CURVE_ORDER", "prehash", "cHash", "randomBytes", "nByteLength", "cofactor", "MASK", "modP", "uvRatio", "u", "adjustScalarBytes", "bytes", "domain", "data", "ctx", "phflag", "inBig", "n", "inRange", "max", "in0MaskRange", "assertInRange", "assertGE0", "pointPrecomputes", "isPoint", "other", "Point", "ex", "ey", "ez", "et", "p", "x", "y", "points", "toInv", "i", "windowSize", "a", "d", "X", "Y", "Z", "T", "X2", "Y2", "Z2", "Z4", "aX2", "left", "right", "XY", "ZT", "X1", "Y1", "Z1", "X1Z2", "X2Z1", "Y1Z2", "Y2Z1", "A", "B", "C", "D", "x1y1", "E", "G", "F", "H", "X3", "Y3", "T3", "Z3", "T1", "T2", "wnaf", "scalar", "f", "I", "iz", "z", "is0", "ax", "ay", "zz", "hex", "zip215", "len", "ensureBytes", "normed", "lastByte", "bytesToNumberLE", "y2", "v", "isValid", "isXOdd", "isLastByteOdd", "privKey", "getExtendedPublicKey", "numberToBytesLE", "bytesToHex", "wNAF", "modN", "mod", "modN_LE", "hash", "key", "hashed", "head", "prefix", "point", "pointBytes", "getPublicKey", "hashDomainToScalar", "context", "msgs", "msg", "concatBytes", "sign", "options", "r", "R", "k", "s", "res", "verifyOpts", "verify", "sig", "publicKey", "SB", "ED25519_P", "ED25519_SQRT_M1", "_0n", "_1n", "_2n", "_5n", "_10n", "_20n", "_40n", "_80n", "ed25519_pow_2_252_3", "x", "P", "b2", "b4", "pow2", "b5", "b10", "b20", "b40", "b80", "b160", "b240", "b250", "adjustScalarBytes", "bytes", "uvRatio", "u", "v", "v3", "mod", "v7", "pow", "vx2", "root1", "root2", "useRoot1", "useRoot2", "noRoot", "isNegativeLE", "Fp", "Field", "ED25519_P", "ed25519Defaults", "sha512", "randomBytes", "adjustScalarBytes", "uvRatio", "ed25519", "twistedEdwards", "ed25519_domain", "data", "ctx", "phflag", "concatBytes", "utf8ToBytes", "ed25519ctx", "ed25519ph", "ELL2_C1", "Fp", "ELL2_C2", "_2n", "ELL2_C3", "ELL2_C4", "ELL2_J", "ELL2_C1_EDWARDS", "FpSqrtEven", "Fp", "SQRT_AD_MINUS_ONE", "INVSQRT_A_MINUS_D", "ONE_MINUS_D_SQ", "D_MINUS_ONE_SQ", "MAX_255B", "PUBLIC_KEY_BYTE_LENGTH", "PRIVATE_KEY_BYTE_LENGTH", "KEYS_BYTE_LENGTH", "generateKey", "privateKeyRaw", "ed25519", "publicKey", "concatKeys", "generateKeyFromSeed", "seed", "KEYS_BYTE_LENGTH", "hashAndSign", "privateKey", "msg", "hashAndVerify", "sig", "PRIVATE_KEY_BYTE_LENGTH", "i", "derivedEmptyPasswordKey", "create", "opts", "algorithm", "keyLength", "nonceLength", "digest", "saltLength", "iterations", "crypto", "webcrypto_browser_default", "encrypt", "data", "password", "salt", "nonce", "aesGcm", "fromString", "cryptoKey", "deriveParams", "runtimeDerivedEmptyPassword", "rawKey", "ciphertext", "concat", "decrypt", "plaintext", "exporter", "privateKey", "password", "encryptedKey", "create", "base64", "f32", "f8b", "writeFloatLE", "val", "buf", "pos", "readFloatLE", "buf", "pos", "f8b", "f32", "f64", "d8b", "writeDoubleLE", "val", "buf", "pos", "readDoubleLE", "buf", "pos", "d8b", "f64", "MAX_SAFE_NUMBER_INTEGER", "MIN_SAFE_NUMBER_INTEGER", "LongBits", "_LongBits", "lo", "hi", "unsigned", "mask", "part0", "part1", "part2", "value", "zero", "negative", "TWO_32", "sign", "length", "string", "len", "c", "i", "read", "buffer", "start", "end", "parts", "chunk", "t", "write", "offset", "c1", "c2", "indexOutOfRange", "reader", "writeLength", "readFixed32End", "buf", "end", "Uint8ArrayReader", "buffer", "value", "readFloatLE", "readDoubleLE", "length", "start", "bytes", "read", "wireType", "bits", "LongBits", "i", "lo", "hi", "createReader", "decodeMessage", "buf", "codec", "reader", "createReader", "pool", "size", "SIZE", "MAX", "slab", "offset", "allocUnsafe", "buf", "Op", "fn", "len", "val", "noop", "State", "writer", "bufferPool", "pool", "alloc", "size", "allocUnsafe", "Uint8ArrayWriter", "value", "VarintOp", "writeVarint64", "LongBits", "bits", "writeByte", "writeFixed32", "writeFloatLE", "writeDoubleLE", "writeBytes", "length", "write", "head", "tail", "buf", "pos", "writeVarint32", "writeBytesBuffer", "writeStringBuffer", "fromString", "createWriter", "encodeMessage", "message", "codec", "w", "createWriter", "CODEC_TYPES", "createCodec", "name", "type", "encode", "decode", "enumeration", "v", "findValue", "val", "encode", "writer", "enumValue", "decode", "reader", "createCodec", "CODEC_TYPES", "message", "encode", "decode", "createCodec", "CODEC_TYPES", "KeyType", "__KeyTypeValues", "enumeration", "PublicKey", "_codec", "message", "obj", "w", "opts", "reader", "length", "end", "tag", "encodeMessage", "buf", "decodeMessage", "PrivateKey", "Ed25519PublicKey", "key", "ensureKey", "PUBLIC_KEY_BYTE_LENGTH", "data", "sig", "hashAndVerify", "PublicKey", "KeyType", "equals", "p", "sha256", "isPromise", "bytes", "Ed25519PrivateKey", "publicKey", "PRIVATE_KEY_BYTE_LENGTH", "message", "hashAndSign", "PrivateKey", "encoding", "identity", "base58btc", "password", "format", "exporter", "CodeError", "unmarshalEd25519PrivateKey", "privateKeyBytes", "publicKeyBytes", "unmarshalEd25519PublicKey", "generateKeyPair", "privateKey", "generateKey", "generateKeyPairFromSeed", "seed", "generateKeyFromSeed", "length", "toString", "array", "encoding", "base", "bases_default", "rsa_class_exports", "__export", "MAX_RSA_KEY_SIZE", "RsaPrivateKey", "RsaPublicKey", "fromJwk", "generateKeyPair", "unmarshalRsaPrivateKey", "unmarshalRsaPublicKey", "randomBytes", "length", "CodeError", "rsa_utils_exports", "__export", "exportToPem", "importFromPem", "jwkToPkcs1", "jwkToPkix", "pkcs1ToJwk", "pkixToJwk", "HMAC", "Hash", "hash", "_key", "key", "toBytes", "blockLen", "pad", "i", "buf", "exists", "out", "bytes", "to", "oHash", "iHash", "finished", "destroyed", "outputLen", "hmac", "message", "pbkdf2Init", "hash", "_password", "_salt", "_opts", "opts", "checkOpts", "c", "dkLen", "asyncTick", "number", "password", "toBytes", "salt", "DK", "PRF", "hmac", "PRFSalt", "pbkdf2Output", "prfW", "u", "pbkdf2Async", "hash", "password", "salt", "opts", "c", "dkLen", "asyncTick", "DK", "PRF", "PRFSalt", "pbkdf2Init", "prfW", "arr", "view", "createView", "u", "ti", "pos", "Ti", "asyncLoop", "i", "pbkdf2Output", "pvtsutils", "utilFromBase", "inputBuffer", "inputBase", "result", "i", "utilToBase", "value", "base", "reserved", "internalReserved", "internalValue", "biggest", "retBuf", "retView", "j", "basis", "utilConcatView", "views", "outputLength", "prevLength", "view", "retBuf", "retView", "utilDecodeTC", "buf", "condition1", "condition2", "bigIntBuffer", "bigIntView", "i", "bigInt", "utilFromBase", "smallIntBuffer", "smallIntView", "j", "utilEncodeTC", "value", "modValue", "smallInt", "utilToBase", "tempBuf", "tempView", "k", "isEqualBuffer", "inputBuffer1", "inputBuffer2", "view1", "view2", "padNumber", "inputNumber", "fullLength", "str", "dif", "padding", "log2", "assertBigInt", "concat", "buffers", "outputLength", "prevLength", "i", "buffer", "retView", "checkBufferParams", "baseBlock", "inputBuffer", "inputOffset", "inputLength", "ViewWriter", "buf", "powers2", "digitsString", "EMPTY_STRING", "EMPTY_BUFFER", "EMPTY_VIEW", "END_OF_CONTENT_NAME", "OCTET_STRING_NAME", "BIT_STRING_NAME", "HexBlock", "BaseClass", "_a", "args", "params", "value", "inputBuffer", "inputOffset", "inputLength", "view", "checkBufferParams", "endLength", "sizeOnly", "LocalBaseBlock", "blockLength", "error", "warnings", "valueBeforeDecode", "ValueBlock", "writer", "LocalIdentificationBlock", "idBlock", "_b", "_c", "_d", "firstOctet", "retView", "number", "encodedBuf", "utilToBase", "encodedView", "size", "i", "curView", "inputView", "intBuffer", "tagNumberMask", "count", "intTagNumberBuffer", "tagNumberBufferMaxLength", "tempBufferView", "utilFromBase", "LocalLengthBlock", "lenBlock", "lenOffset", "lengthBufferView", "retBuf", "typeStore", "BaseBlock", "name", "optional", "primitiveSchema", "parameters", "valueBlockType", "resultOffset", "_writer", "ViewWriter", "prepareIndefiniteForm", "idBlockBuf", "valueBlockBuf", "lenBlockBuf", "object", "encoding", "other", "thisRaw", "otherRaw", "isEqualBuffer", "baseBlock", "BaseStringBlock", "stringValueBlockType", "LocalPrimitiveValueBlock", "isHexOnly", "_a$w", "Primitive", "localChangeType", "inputObject", "newType", "newObject", "localFromBER", "incomingOffset", "returnObject", "newASN1Type", "fromBER", "result", "checkLen", "indefiniteLength", "length", "LocalConstructedValueBlock", "isIndefiniteForm", "currentOffset", "_a$v", "Constructed", "values", "o", "blockName", "LocalEndOfContentValueBlock", "_a$u", "EndOfContent", "_a$t", "Null", "LocalBooleanValueBlock", "octet", "utilDecodeTC", "_a$s", "Boolean", "LocalOctetStringValueBlock", "isConstructed", "currentBlockName", "_a$r", "OctetString", "_OctetString", "buf", "asn", "array", "content", "LocalBitStringValueBlock", "unusedBits", "valueBlock", "_a$q", "BitString", "bits", "valueHex", "byte", "bitsStr", "_a$p", "viewAdd", "first", "second", "c", "firstView", "secondView", "firstViewCopy", "firstViewCopyLength", "secondViewCopy", "secondViewCopyLength", "max", "counter", "utilConcatView", "power2", "n", "powers2", "p", "digits", "newValue", "viewSub", "b", "LocalIntegerValueBlock", "v", "utilEncodeTC", "expectedLength", "offset", "updatedView", "firstBit", "bitNumber", "currentByte", "asn1View", "flag", "byteNumber", "digitsString", "_a$o", "Integer", "_Integer", "assertBigInt", "bigIntValue", "hex", "secondInt", "integer", "_a$n", "Enumerated", "LocalSidValueBlock", "valueDec", "isFirstSid", "tempView", "bytes", "len", "sidValue", "LocalObjectIdentifierValueBlock", "sidBlock", "retBuffers", "valueBuf", "concat", "string", "pos1", "pos2", "sid", "plus", "parsedSID", "sidStr", "_a$m", "ObjectIdentifier", "LocalRelativeSidValueBlock", "LocalRelativeObjectIdentifierValueBlock", "_a$l", "RelativeObjectIdentifier", "_a$k", "Sequence", "_a$j", "Set", "LocalStringValueBlock", "LocalSimpleStringValueBlock", "LocalSimpleStringBlock", "inputString", "strLen", "LocalUtf8StringValueBlock", "ex", "_a$i", "Utf8String", "LocalBmpStringValueBlock", "_a$h", "BmpString", "LocalUniversalStringValueBlock", "copyBuffer", "valueView", "strLength", "valueHexView", "codeBuf", "codeView", "dif", "j", "_a$g", "UniversalString", "_a$f", "NumericString", "_a$e", "PrintableString", "_a$d", "TeletexString", "_a$c", "VideotexString", "_a$b", "IA5String", "_a$a", "GraphicString", "_a$9", "VisibleString", "_a$8", "GeneralString", "_a$7", "CharacterString", "_a$6", "UTCTime", "valueDate", "str", "buffer", "inputDate", "parserArray", "year", "outputArray", "padNumber", "_a$5", "GeneralizedTime", "isUTC", "timeString", "dateTimeString", "fractionPart", "parser", "hourDifference", "minuteDifference", "multiplier", "differencePosition", "differenceString", "fractionPointPosition", "fractionPartCheck", "fractionResult", "tempDate", "_a$4", "DATE", "_a$3", "TimeOfDay", "_a$2", "DateTime", "_a$1", "Duration", "TIME", "pkcs1ToJwk", "bytes", "result", "fromBER", "values", "toString", "bnToBuf", "jwkToPkcs1", "jwk", "CodeError", "der", "Sequence", "Integer", "bufToBn", "fromString", "pkixToJwk", "jwkToPkix", "ObjectIdentifier", "Null", "BitString", "bn", "hex", "len", "u8", "i", "j", "h", "SALT_LENGTH", "KEY_SIZE", "ITERATIONS", "exportToPem", "privateKey", "password", "crypto", "webcrypto_browser_default", "keyBuf", "OctetString", "keyArr", "salt", "randomBytes", "encryptionKey", "pbkdf2Async", "sha512", "iv", "cryptoKey", "encrypted", "pbkdf2Params", "encryptionAlgorithm", "finalWrapperBuf", "finalWrapperArr", "importFromPem", "pem", "plaintext", "key", "iterations", "keySize", "cipherText", "findEncryptedPEMData", "decrypted", "toUint8Array", "decryptedResult", "findPEMData", "unmarshalRsaPrivateKey", "root", "keyDerivationFunc", "encryptionScheme", "encryptionSchemeName", "seq", "buf", "generateKey", "bits", "pair", "webcrypto_browser_default", "keys", "exportKey", "unmarshalPrivateKey", "key", "derivePublicFromPrivate", "hashAndSign", "key", "msg", "privateKey", "webcrypto_browser_default", "sig", "hashAndVerify", "publicKey", "exportKey", "pair", "CodeError", "derivePublicFromPrivate", "jwKey", "keySize", "jwk", "fromString", "MAX_RSA_KEY_SIZE", "RsaPublicKey", "key", "data", "sig", "hashAndVerify", "rsa_utils_exports", "PublicKey", "KeyType", "equals", "p", "sha256", "isPromise", "bytes", "RsaPrivateKey", "publicKey", "randomBytes", "message", "hashAndSign", "CodeError", "PrivateKey", "hash", "toString", "password", "format", "exporter", "unmarshalRsaPrivateKey", "jwk", "keySize", "keys", "unmarshalPrivateKey", "unmarshalRsaPublicKey", "fromJwk", "generateKeyPair", "bits", "generateKey", "secp256k1_class_exports", "__export", "Secp256k1PrivateKey", "Secp256k1PublicKey", "generateKeyPair", "unmarshalSecp256k1PrivateKey", "unmarshalSecp256k1PublicKey", "Chi", "a", "b", "c", "Maj", "SHA256_K", "IV", "SHA256_W", "SHA256", "SHA2", "A", "B", "C", "D", "E", "F", "G", "H", "view", "offset", "i", "W15", "W2", "s0", "rotr", "s1", "sigma1", "T1", "T2", "sha256", "wrapConstructor", "SHA256", "validatePointOpts", "curve", "opts", "validateBasic", "validateObject", "endo", "Fp", "a", "b2n", "h2b", "utils_exports", "DER", "m", "data", "E", "len", "res", "hex", "isBytes", "l", "r", "sBytes", "s", "rBytesLeft", "sig", "slice", "h", "num", "shl", "rhl", "sl", "rl", "_0n", "_1n", "_2n", "_3n", "_4n", "weierstrassPoints", "CURVE", "toBytes", "_c", "point", "_isCompressed", "concatBytes", "fromBytes", "bytes", "tail", "x", "weierstrassEquation", "b", "x2", "x3", "isWithinCurveOrder", "assertGE", "normPrivateKeyToScalar", "key", "lengths", "nByteLength", "wrapPrivateKey", "n", "bytesToHex", "bytesToNumberBE", "ensureBytes", "mod", "pointPrecomputes", "assertPrjPoint", "other", "Point", "px", "py", "pz", "p", "is0", "i", "points", "toInv", "P", "privateKey", "windowSize", "y", "left", "right", "X1", "Y1", "Z1", "X2", "Y2", "Z2", "U1", "U2", "b3", "X3", "Y3", "Z3", "t0", "t1", "t2", "t3", "t4", "t5", "wnaf", "comp", "I", "k1neg", "k1", "k2neg", "k2", "k1p", "k2p", "d", "scalar", "fake", "f1p", "f2p", "f", "Q", "G", "mul", "sum", "iz", "z", "ax", "ay", "zz", "cofactor", "isTorsionFree", "clearCofactor", "isCompressed", "_bits", "wNAF", "validateOpts", "weierstrass", "curveDef", "CURVE_ORDER", "compressedLen", "uncompressedLen", "isValidFieldElement", "modN", "invN", "invert", "cat", "head", "y2", "isYOdd", "numToNByteStr", "numberToBytesBE", "isBiggerThanHalfOrder", "number", "HALF", "normalizeS", "slcNum", "from", "to", "Signature", "recovery", "msgHash", "rec", "bits2int_modN", "radj", "prefix", "R", "ir", "u1", "u2", "hexToBytes", "utils", "length", "getMinHashLength", "mapHashToField", "getPublicKey", "isProbPub", "item", "arr", "str", "getSharedSecret", "privateA", "publicB", "bits2int", "delta", "ORDER_MASK", "bitMask", "int2octets", "prepSig", "defaultSigOpts", "k", "hash", "randomBytes", "lowS", "prehash", "ent", "h1int", "seedArgs", "e", "seed", "k2sig", "kBytes", "ik", "q", "normS", "defaultVerOpts", "sign", "privKey", "C", "createHmacDrbg", "verify", "signature", "publicKey", "sg", "_sig", "derError", "error", "is", "getHash", "hash", "key", "msgs", "hmac", "concatBytes", "randomBytes", "createCurve", "curveDef", "defHash", "create", "weierstrass", "secp256k1P", "secp256k1N", "_1n", "_2n", "divNearest", "a", "b", "sqrtMod", "y", "P", "_3n", "_6n", "_11n", "_22n", "_23n", "_44n", "_88n", "b2", "b3", "b6", "pow2", "b9", "b11", "b22", "b44", "b88", "b176", "b220", "b223", "t1", "t2", "root", "Fp", "Field", "secp256k1", "createCurve", "k", "n", "a1", "b1", "a2", "POW_2_128", "c1", "c2", "k1", "mod", "k2", "k1neg", "k2neg", "sha256", "_0n", "Point", "secp256k1", "generateKey", "secp256k1", "hashAndSign", "key", "msg", "p", "sha256", "isPromise", "digest", "err", "CodeError", "hashAndVerify", "sig", "compressPublicKey", "validatePrivateKey", "key", "secp256k1", "err", "CodeError", "validatePublicKey", "computePublicKey", "privateKey", "Secp256k1PublicKey", "key", "validatePublicKey", "data", "sig", "hashAndVerify", "compressPublicKey", "PublicKey", "KeyType", "equals", "p", "sha256", "bytes", "isPromise", "Secp256k1PrivateKey", "publicKey", "computePublicKey", "validatePrivateKey", "message", "hashAndSign", "PrivateKey", "hash", "toString", "password", "format", "exporter", "CodeError", "unmarshalSecp256k1PrivateKey", "unmarshalSecp256k1PublicKey", "generateKeyPair", "privateKeyBytes", "generateKey", "supportedKeys", "rsa_class_exports", "ed25519_class_exports", "secp256k1_class_exports", "unsupportedKey", "type", "supported", "CodeError", "typeToKey", "unmarshalPublicKey", "buf", "decoded", "PublicKey", "data", "KeyType", "supportedKeys", "unsupportedKey", "marshalPublicKey", "key", "type", "typeToKey", "unmarshalPrivateKey", "PrivateKey", "SignPrefix", "fromString", "buildRawMessage", "publishConfig", "topic", "originalData", "transformedData", "PublishConfigType", "rpcMsg", "randomBytes", "bytes", "concat", "RPC", "msg", "toString", "validateToRawMessage", "signaturePolicy", "StrictNoSign", "ValidateError", "StrictSign", "fromPeerId", "peerIdFromBytes", "publicKey", "unmarshalPublicKey", "equals", "rpcMsgPreSign", "marshalPublicKey", "shuffle", "arr", "randInt", "i", "j", "tmp", "messageIdToString", "msgId", "toString", "getPublishConfigFromPeerId", "signaturePolicy", "peerId", "StrictSign", "privateKey", "unmarshalPrivateKey", "PublishConfigType", "StrictNoSign", "msgId", "key", "seqno", "seqnoBytes", "fromString", "msgIdFnStrictSign", "msg", "msgId", "msgIdFnStrictNoSign", "sha256", "Parser", "input", "fn", "index", "result", "target", "char", "sep", "inner", "radix", "maxDigits", "allowZeroPrefix", "maxBytes", "digitCount", "leadingChar", "hasLeadingZero", "maxValue", "digit", "num", "out", "i", "ix", "readGroups", "groups", "ipv4", "group", "head", "headSize", "headIp4", "tail", "limit", "tailSize", "MAX_IPV6_LENGTH", "parser", "Parser", "parseIP", "input", "MAX_IPV6_LENGTH", "parser", "maxIPv6Octet", "ipv4Prefix", "isIP", "input", "parseIP", "toString", "buf", "offset", "length", "view", "result", "names", "codes", "table", "row", "proto", "createProtocol", "code", "size", "name", "resolvable", "path", "getProtocol", "ip4Protocol", "getProtocol", "ip6Protocol", "ipcidrProtocol", "convertToString", "proto", "buf", "getProtocol", "bytes2ip", "bytes2str", "bytes2port", "bytes2mh", "bytes2onion", "bytes2mb", "toString", "decoders", "bases", "c", "anybaseDecoder", "acc", "d", "bytes2ip", "ipBuff", "ipString", "toString", "isIP", "bytes2port", "buf", "bytes2str", "buf", "size", "decode", "encodingLength", "toString", "bytes2mb", "buf", "size", "decode", "hash", "encodingLength", "toString", "bytes2mh", "address", "bytes2onion", "buf", "addrBytes", "portBytes", "addr", "toString", "port", "bytes2port", "Protocol", "multiaddrToIPStr", "multiaddr", "tuple", "convertToString", "SimpleTimeCache", "opts", "key", "value", "now", "k", "v", "multicodec", "GossipsubIDv11", "GossipStatusCode", "GossipSub", "TypedEventEmitter", "GossipsubIDv10", "pushable", "components", "options", "opts", "createPeerScoreParams", "createPeerScoreThresholds", "defaultDecodeRpcLimits", "StrictSign", "FloodsubID", "p", "SimpleTimeCache", "msgIdFnStrictSign", "StrictNoSign", "msgIdFnStrictNoSign", "messageIdToString", "MessageCache", "maxMeshMessageDeliveriesWindowMs", "topicParam", "metrics", "getMetrics", "protocol", "IWantTracer", "PeerScore", "str", "peerIdFromString", "getPublishConfigFromPeerId", "pipe", "source", "peerId", "connection", "e", "registrar", "topology", "registrarTopologyIds", "heartbeatTimeout", "id", "err", "closePromises", "outboundStream", "inboundStream", "stream", "OutboundStream", "priorInboundStream", "InboundStream", "direction", "addr", "currentIP", "multiaddrToIPStr", "peers", "topicStr", "ChurnReason", "topic", "peersInTopic", "data", "rpcBytes", "rpc", "decodeRpc", "from", "subscriptions", "messages", "ihave", "iwant", "graft", "prune", "subOpt", "subscribe", "message", "handleReceivedMessagePromise", "topicSet", "rpcMsg", "validationResult", "validationCode", "MessageStatus", "msgIdStr", "CustomEvent", "propagationSource", "fastMsgIdStr", "msgIdCached", "validateToRawMessage", "RejectReason", "msg", "ValidateError", "msgId", "messageId", "topicValidator", "acceptance", "errCode", "ERR_TOPIC_VALIDATOR_IGNORE", "TopicValidatorResult", "ERR_TOPIC_VALIDATOR_REJECT", "rejectReasonFromAcceptance", "toPeer", "topics", "controlMsg", "sent", "iwantMessageIds", "now", "entry", "score", "IHaveIgnoreReason", "peerhave", "iasked", "topicID", "messageIDs", "idonthave", "iask", "iwantList", "shuffle", "iwantByTopic", "iwantDonthave", "doPX", "peersInMesh", "expire", "ScorePenalty", "floodCutoff", "InclusionReason", "onUnsubscribe", "backoff", "intervalMs", "count", "toconnect", "pi", "peer", "peerIdFromBytes", "wasSubscribed", "toAdd", "fanoutPeers", "fanoutCount", "meshPeers", "excludePeers", "tosend", "tosendCount", "newFanoutPeers", "rawMsg", "startMs", "transformedData", "buildRawMessage", "ignoreDuplicatePublishError", "willSendToSelf", "allowPublishToZeroPeers", "batchPublish", "durationMs", "RPC", "prefixedData", "encode", "cacheEntry", "originatingPeers", "rejectReason", "firstSeenTimestampMs", "ctrl", "outRpc", "tograft", "toprune", "noPX", "pruning", "peersToGossipByTopic", "gossipIDsByTopic", "peersToGossip", "candidateToGossip", "target", "factor", "peerMessageIDs", "control", "controlIHaveMsgs", "gossip", "backoffMs", "xid", "px", "peerInfo", "timer", "msToNextHeartbeat", "D", "Dlo", "Dhi", "Dscore", "Dout", "fanoutTTL", "scores", "getScore", "s", "candidateMeshPeers", "shuffledPeers", "peerStreams", "prunePeer", "reason", "graftPeer", "ineed", "removeFirstNItemsFromSet", "peersArray", "a", "b", "outbound", "rotate", "i", "j", "removeItemsFromSet", "peersList", "medianIndex", "medianScore", "newMeshPeers", "lastpb", "topicPeers", "candidateFanoutPeers", "filter", "backoffSize", "expiredMs", "scoreByPeer", "peerIdStr", "sw", "computeAllPeersScoreWeights", "gossipsub", "init"]
+}
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.d.ts
index 9f8230c..9601863 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.d.ts
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.d.ts
@@ -8,7 +8,7 @@ import { InboundStream, OutboundStream } from './stream.js';
 import { IWantTracer } from './tracer.js';
 import { type MsgIdFn, type TopicStr, type MsgIdStr, type PeerIdStr, type FastMsgIdFn, type AddrInfo, type DataTransform, type MsgIdToStrFn, type PublishOpts } from './types.js';
 import type { GossipsubOptsSpec } from './config.js';
-import type { Direction, PeerId, PeerStore, Message, PublishResult, PubSub, PubSubEvents, PubSubInit, TopicValidatorFn, Logger, ComponentLogger } from '@libp2p/interface';
+import type { Direction, PeerId, PeerStore, Message, PublishResult, PubSub, PubSubEvents, PubSubInit, TopicValidatorFn, Logger, ComponentLogger, PrivateKey } from '@libp2p/interface';
 import type { ConnectionManager, Registrar } from '@libp2p/interface-internal';
 export declare const multicodec: string;
 export interface GossipsubOpts extends GossipsubOptsSpec, PubSubInit {
@@ -81,13 +81,13 @@ export interface GossipsubOpts extends GossipsubOptsSpec, PubSubInit {
      */
     maxOutboundStreams?: number;
     /**
-     * Pass true to run on transient connections - data or time-limited
+     * Pass true to run on limited connections - data or time-limited
      * connections that may be closed at any time such as circuit relay
      * connections.
      *
      * @default false
      */
-    runOnTransientConnection?: boolean;
+    runOnLimitedConnection?: boolean;
     /**
      * Specify max buffer size in bytes for OutboundStream.
      * If full it will throw and reject sending any more data.
@@ -140,6 +140,7 @@ interface GossipOptions extends GossipsubOpts {
     scoreThresholds: PeerScoreThresholds;
 }
 export interface GossipSubComponents {
+    privateKey: PrivateKey;
     peerId: PeerId;
     peerStore: PeerStore;
     registrar: Registrar;
@@ -263,7 +264,7 @@ export declare class GossipSub extends TypedEventEmitter<GossipsubEvents> implem
     private status;
     private readonly maxInboundStreams?;
     private readonly maxOutboundStreams?;
-    private readonly runOnTransientConnection?;
+    private readonly runOnLimitedConnection?;
     private readonly allowedTopics;
     private heartbeatTimer;
     constructor(components: GossipSubComponents, options?: Partial<GossipsubOpts>);
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.d.ts.map
index a280ef0..f32bc4a 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.d.ts.map
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.js
index 31aeddd..432027a 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.js
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.js
@@ -1,8 +1,9 @@
 import { TypedEventEmitter, StrictSign, StrictNoSign, TopicValidatorResult, serviceCapabilities, serviceDependencies } from '@libp2p/interface';
-import { peerIdFromBytes, peerIdFromString } from '@libp2p/peer-id';
+import { peerIdFromMultihash, peerIdFromString } from '@libp2p/peer-id';
 import { encode } from 'it-length-prefixed';
 import { pipe } from 'it-pipe';
 import { pushable } from 'it-pushable';
+import * as Digest from 'multiformats/hashes/digest';
 import * as constants from './constants.js';
 import { ACCEPT_FROM_WHITELIST_DURATION_MS, ACCEPT_FROM_WHITELIST_MAX_MESSAGES, ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE, BACKOFF_SLACK } from './constants.js';
 import { defaultDecodeRpcLimits } from './message/decodeRpc.js';
@@ -147,7 +148,7 @@ export class GossipSub extends TypedEventEmitter {
     status = { code: GossipStatusCode.stopped };
     maxInboundStreams;
     maxOutboundStreams;
-    runOnTransientConnection;
+    runOnLimitedConnection;
     allowedTopics;
     heartbeatTimer = null;
     constructor(components, options = {}) {
@@ -254,7 +255,7 @@ export class GossipSub extends TypedEventEmitter {
         });
         this.maxInboundStreams = options.maxInboundStreams;
         this.maxOutboundStreams = options.maxOutboundStreams;
-        this.runOnTransientConnection = options.runOnTransientConnection;
+        this.runOnLimitedConnection = options.runOnLimitedConnection;
         this.allowedTopics = (opts.allowedTopics != null) ? new Set(opts.allowedTopics) : null;
     }
     [Symbol.toStringTag] = '@chainsafe/libp2p-gossipsub';
@@ -281,7 +282,7 @@ export class GossipSub extends TypedEventEmitter {
             return;
         }
         this.log('starting');
-        this.publishConfig = await getPublishConfigFromPeerId(this.globalSignaturePolicy, this.components.peerId);
+        this.publishConfig = getPublishConfigFromPeerId(this.globalSignaturePolicy, this.components.peerId, this.components.privateKey);
         // Create the outbound inflight queue
         // This ensures that outbound stream creation happens sequentially
         this.outboundInflightQueue = pushable({ objectMode: true });
@@ -302,7 +303,7 @@ export class GossipSub extends TypedEventEmitter {
         await Promise.all(this.multicodecs.map(async (multicodec) => registrar.handle(multicodec, this.onIncomingStream.bind(this), {
             maxInboundStreams: this.maxInboundStreams,
             maxOutboundStreams: this.maxOutboundStreams,
-            runOnTransientConnection: this.runOnTransientConnection
+            runOnLimitedConnection: this.runOnLimitedConnection
         })));
         // # How does Gossipsub interact with libp2p? Rough guide from Mar 2022
         //
@@ -325,7 +326,7 @@ export class GossipSub extends TypedEventEmitter {
         const topology = {
             onConnect: this.onPeerConnected.bind(this),
             onDisconnect: this.onPeerDisconnected.bind(this),
-            notifyOnTransient: this.runOnTransientConnection
+            notifyOnLimitedConnection: this.runOnLimitedConnection
         };
         const registrarTopologyIds = await Promise.all(this.multicodecs.map(async (multicodec) => registrar.register(multicodec, topology)));
         // Schedule to start heartbeat after `GossipsubHeartbeatInitialDelay`
@@ -464,7 +465,7 @@ export class GossipSub extends TypedEventEmitter {
         }
         try {
             const stream = new OutboundStream(await connection.newStream(this.multicodecs, {
-                runOnTransientConnection: this.runOnTransientConnection
+                runOnLimitedConnection: this.runOnLimitedConnection
             }), (e) => { this.log.error('outbound pipe error', e); }, { maxBufferSize: this.opts.maxOutboundBufferSize });
             this.log('create outbound stream %p', peerId);
             this.streamsOutbound.set(id, stream);
@@ -1280,7 +1281,7 @@ export class GossipSub extends TypedEventEmitter {
             if (pi.peerID == null) {
                 return;
             }
-            const peer = peerIdFromBytes(pi.peerID);
+            const peer = peerIdFromMultihash(Digest.decode(pi.peerID));
             const p = peer.toString();
             if (this.peers.has(p)) {
                 return;
@@ -1974,7 +1975,7 @@ export class GossipSub extends TypedEventEmitter {
                 }
             }
             return {
-                peerID: id.toBytes(),
+                peerID: id.toMultihash().bytes,
                 signedPeerRecord: peerInfo?.peerRecordEnvelope
             };
         }));
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.js.map
index 9aa9e8a..89e3c7e 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.js.map
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/decodeRpc.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/decodeRpc.ts
new file mode 100644
index 0000000..1c396a1
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/decodeRpc.ts
@@ -0,0 +1,255 @@
+import protobuf from 'protobufjs/minimal.js'
+import type { IRPC, RPC } from './rpc.js'
+
+export interface DecodeRPCLimits {
+  maxSubscriptions: number
+  maxMessages: number
+  maxIhaveMessageIDs: number
+  maxIwantMessageIDs: number
+  maxControlMessages: number
+  maxPeerInfos: number
+}
+
+export const defaultDecodeRpcLimits: DecodeRPCLimits = {
+  maxSubscriptions: Infinity,
+  maxMessages: Infinity,
+  maxIhaveMessageIDs: Infinity,
+  maxIwantMessageIDs: Infinity,
+  maxControlMessages: Infinity,
+  maxPeerInfos: Infinity
+}
+
+/**
+ * Copied code from src/message/rpc.cjs but with decode limits to prevent OOM attacks
+ */
+export function decodeRpc (bytes: Uint8Array, opts: DecodeRPCLimits): IRPC {
+  // Mutate to use the option as stateful counter. Must limit the total count of messageIDs across all IWANT, IHAVE
+  // else one count put 100 messageIDs into each 100 IWANT and "get around" the limit
+  opts = { ...opts }
+
+  const r = protobuf.Reader.create(bytes)
+  const l = bytes.length
+
+  const c = l === undefined ? r.len : r.pos + l
+  const m: IRPC = {}
+  while (r.pos < c) {
+    const t = r.uint32()
+    switch (t >>> 3) {
+      case 1:
+        if (!((m.subscriptions != null) && (m.subscriptions.length > 0))) m.subscriptions = []
+        if (m.subscriptions.length < opts.maxSubscriptions) m.subscriptions.push(decodeSubOpts(r, r.uint32()))
+        else r.skipType(t & 7)
+        break
+      case 2:
+        if (!((m.messages != null) && (m.messages.length > 0))) m.messages = []
+        if (m.messages.length < opts.maxMessages) m.messages.push(decodeMessage(r, r.uint32()))
+        else r.skipType(t & 7)
+        break
+      case 3:
+        m.control = decodeControlMessage(r, r.uint32(), opts)
+        break
+      default:
+        r.skipType(t & 7)
+        break
+    }
+  }
+  return m
+}
+
+function decodeSubOpts (r: protobuf.Reader, l: number): RPC.ISubOpts {
+  const c = l === undefined ? r.len : r.pos + l
+  const m: RPC.ISubOpts = {}
+  while (r.pos < c) {
+    const t = r.uint32()
+    switch (t >>> 3) {
+      case 1:
+        m.subscribe = r.bool()
+        break
+      case 2:
+        m.topic = r.string()
+        break
+      default:
+        r.skipType(t & 7)
+        break
+    }
+  }
+  return m
+}
+
+function decodeMessage (r: protobuf.Reader, l: number): RPC.IMessage {
+  const c = l === undefined ? r.len : r.pos + l
+  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
+  const m = {} as RPC.IMessage
+  while (r.pos < c) {
+    const t = r.uint32()
+    switch (t >>> 3) {
+      case 1:
+        m.from = r.bytes()
+        break
+      case 2:
+        m.data = r.bytes()
+        break
+      case 3:
+        m.seqno = r.bytes()
+        break
+      case 4:
+        m.topic = r.string()
+        break
+      case 5:
+        m.signature = r.bytes()
+        break
+      case 6:
+        m.key = r.bytes()
+        break
+      default:
+        r.skipType(t & 7)
+        break
+    }
+  }
+  // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions
+  if (!m.topic) throw Error("missing required 'topic'")
+  return m
+}
+
+function decodeControlMessage (r: protobuf.Reader, l: number, opts: DecodeRPCLimits): RPC.IControlMessage {
+  const c = l === undefined ? r.len : r.pos + l
+  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
+  const m = {} as RPC.IControlMessage
+  while (r.pos < c) {
+    const t = r.uint32()
+    switch (t >>> 3) {
+      case 1:
+        if (!((m.ihave != null) && (m.ihave.length > 0))) m.ihave = []
+        if (m.ihave.length < opts.maxControlMessages) m.ihave.push(decodeControlIHave(r, r.uint32(), opts))
+        else r.skipType(t & 7)
+        break
+      case 2:
+        if (!((m.iwant != null) && (m.iwant.length > 0))) m.iwant = []
+        if (m.iwant.length < opts.maxControlMessages) m.iwant.push(decodeControlIWant(r, r.uint32(), opts))
+        else r.skipType(t & 7)
+        break
+      case 3:
+        if (!((m.graft != null) && (m.graft.length > 0))) m.graft = []
+        if (m.graft.length < opts.maxControlMessages) m.graft.push(decodeControlGraft(r, r.uint32()))
+        else r.skipType(t & 7)
+        break
+      case 4:
+        if (!((m.prune != null) && (m.prune.length > 0))) m.prune = []
+        if (m.prune.length < opts.maxControlMessages) m.prune.push(decodeControlPrune(r, r.uint32(), opts))
+        else r.skipType(t & 7)
+        break
+      default:
+        r.skipType(t & 7)
+        break
+    }
+  }
+  return m
+}
+
+function decodeControlIHave (r: protobuf.Reader, l: number, opts: DecodeRPCLimits): RPC.IControlIHave {
+  const c = l === undefined ? r.len : r.pos + l
+  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
+  const m = {} as RPC.IControlIHave
+  while (r.pos < c) {
+    const t = r.uint32()
+    switch (t >>> 3) {
+      case 1:
+        m.topicID = r.string()
+        break
+      case 2:
+        if (!((m.messageIDs != null) && (m.messageIDs.length > 0))) m.messageIDs = []
+        if (opts.maxIhaveMessageIDs-- > 0) m.messageIDs.push(r.bytes())
+        else r.skipType(t & 7)
+        break
+      default:
+        r.skipType(t & 7)
+        break
+    }
+  }
+  return m
+}
+
+function decodeControlIWant (r: protobuf.Reader, l: number, opts: DecodeRPCLimits): RPC.IControlIWant {
+  const c = l === undefined ? r.len : r.pos + l
+  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
+  const m = {} as RPC.IControlIWant
+  while (r.pos < c) {
+    const t = r.uint32()
+    switch (t >>> 3) {
+      case 1:
+        if (!((m.messageIDs != null) && (m.messageIDs.length > 0))) m.messageIDs = []
+        if (opts.maxIwantMessageIDs-- > 0) m.messageIDs.push(r.bytes())
+        else r.skipType(t & 7)
+        break
+      default:
+        r.skipType(t & 7)
+        break
+    }
+  }
+  return m
+}
+
+function decodeControlGraft (r: protobuf.Reader, l: number): RPC.IControlGraft {
+  const c = l === undefined ? r.len : r.pos + l
+  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
+  const m = {} as RPC.IControlGraft
+  while (r.pos < c) {
+    const t = r.uint32()
+    switch (t >>> 3) {
+      case 1:
+        m.topicID = r.string()
+        break
+      default:
+        r.skipType(t & 7)
+        break
+    }
+  }
+  return m
+}
+
+function decodeControlPrune (r: protobuf.Reader, l: number, opts: DecodeRPCLimits): RPC.IControlPrune {
+  const c = l === undefined ? r.len : r.pos + l
+  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
+  const m = {} as RPC.IControlPrune
+  while (r.pos < c) {
+    const t = r.uint32()
+    switch (t >>> 3) {
+      case 1:
+        m.topicID = r.string()
+        break
+      case 2:
+        if (!((m.peers != null) && (m.peers.length > 0))) m.peers = []
+        if (opts.maxPeerInfos-- > 0) m.peers.push(decodePeerInfo(r, r.uint32()))
+        else r.skipType(t & 7)
+        break
+      case 3:
+        m.backoff = r.uint64() as unknown as number
+        break
+      default:
+        r.skipType(t & 7)
+        break
+    }
+  }
+  return m
+}
+
+function decodePeerInfo (r: protobuf.Reader, l: number): RPC.IPeerInfo {
+  const c = l === undefined ? r.len : r.pos + l
+  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
+  const m = {} as RPC.IPeerInfo
+  while (r.pos < c) {
+    const t = r.uint32()
+    switch (t >>> 3) {
+      case 1:
+        m.peerID = r.bytes()
+        break
+      case 2:
+        m.signedPeerRecord = r.bytes()
+        break
+      default:
+        r.skipType(t & 7)
+        break
+    }
+  }
+  return m
+}
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/index.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/index.ts
new file mode 100644
index 0000000..d1e0e36
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/index.ts
@@ -0,0 +1 @@
+export * from './rpc.js'
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/rpc.cjs b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/rpc.cjs
new file mode 100644
index 0000000..4f5f4ce
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/rpc.cjs
@@ -0,0 +1,1878 @@
+// @ts-nocheck
+/*eslint-disable*/
+(function(global, factory) { /* global define, require, module */
+
+    /* AMD */ if (typeof define === 'function' && define.amd)
+        define(["protobufjs/minimal"], factory);
+
+    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
+        module.exports = factory(require("protobufjs/minimal"));
+
+})(this, function($protobuf) {
+    "use strict";
+
+    // Common aliases
+    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
+
+    // Exported root namespace
+    var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});
+
+    $root.RPC = (function() {
+
+        /**
+         * Properties of a RPC.
+         * @exports IRPC
+         * @interface IRPC
+         * @property {Array.<RPC.ISubOpts>|null} [subscriptions] RPC subscriptions
+         * @property {Array.<RPC.IMessage>|null} [messages] RPC messages
+         * @property {RPC.IControlMessage|null} [control] RPC control
+         */
+
+        /**
+         * Constructs a new RPC.
+         * @exports RPC
+         * @classdesc Represents a RPC.
+         * @implements IRPC
+         * @constructor
+         * @param {IRPC=} [p] Properties to set
+         */
+        function RPC(p) {
+            this.subscriptions = [];
+            this.messages = [];
+            if (p)
+                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
+                    if (p[ks[i]] != null)
+                        this[ks[i]] = p[ks[i]];
+        }
+
+        /**
+         * RPC subscriptions.
+         * @member {Array.<RPC.ISubOpts>} subscriptions
+         * @memberof RPC
+         * @instance
+         */
+        RPC.prototype.subscriptions = $util.emptyArray;
+
+        /**
+         * RPC messages.
+         * @member {Array.<RPC.IMessage>} messages
+         * @memberof RPC
+         * @instance
+         */
+        RPC.prototype.messages = $util.emptyArray;
+
+        /**
+         * RPC control.
+         * @member {RPC.IControlMessage|null|undefined} control
+         * @memberof RPC
+         * @instance
+         */
+        RPC.prototype.control = null;
+
+        // OneOf field names bound to virtual getters and setters
+        var $oneOfFields;
+
+        /**
+         * RPC _control.
+         * @member {"control"|undefined} _control
+         * @memberof RPC
+         * @instance
+         */
+        Object.defineProperty(RPC.prototype, "_control", {
+            get: $util.oneOfGetter($oneOfFields = ["control"]),
+            set: $util.oneOfSetter($oneOfFields)
+        });
+
+        /**
+         * Encodes the specified RPC message. Does not implicitly {@link RPC.verify|verify} messages.
+         * @function encode
+         * @memberof RPC
+         * @static
+         * @param {IRPC} m RPC message or plain object to encode
+         * @param {$protobuf.Writer} [w] Writer to encode to
+         * @returns {$protobuf.Writer} Writer
+         */
+        RPC.encode = function encode(m, w) {
+            if (!w)
+                w = $Writer.create();
+            if (m.subscriptions != null && m.subscriptions.length) {
+                for (var i = 0; i < m.subscriptions.length; ++i)
+                    $root.RPC.SubOpts.encode(m.subscriptions[i], w.uint32(10).fork()).ldelim();
+            }
+            if (m.messages != null && m.messages.length) {
+                for (var i = 0; i < m.messages.length; ++i)
+                    $root.RPC.Message.encode(m.messages[i], w.uint32(18).fork()).ldelim();
+            }
+            if (m.control != null && Object.hasOwnProperty.call(m, "control"))
+                $root.RPC.ControlMessage.encode(m.control, w.uint32(26).fork()).ldelim();
+            return w;
+        };
+
+        /**
+         * Decodes a RPC message from the specified reader or buffer.
+         * @function decode
+         * @memberof RPC
+         * @static
+         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
+         * @param {number} [l] Message length if known beforehand
+         * @returns {RPC} RPC
+         * @throws {Error} If the payload is not a reader or valid buffer
+         * @throws {$protobuf.util.ProtocolError} If required fields are missing
+         */
+        RPC.decode = function decode(r, l) {
+            if (!(r instanceof $Reader))
+                r = $Reader.create(r);
+            var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC();
+            while (r.pos < c) {
+                var t = r.uint32();
+                switch (t >>> 3) {
+                case 1:
+                    if (!(m.subscriptions && m.subscriptions.length))
+                        m.subscriptions = [];
+                    m.subscriptions.push($root.RPC.SubOpts.decode(r, r.uint32()));
+                    break;
+                case 2:
+                    if (!(m.messages && m.messages.length))
+                        m.messages = [];
+                    m.messages.push($root.RPC.Message.decode(r, r.uint32()));
+                    break;
+                case 3:
+                    m.control = $root.RPC.ControlMessage.decode(r, r.uint32());
+                    break;
+                default:
+                    r.skipType(t & 7);
+                    break;
+                }
+            }
+            return m;
+        };
+
+        /**
+         * Creates a RPC message from a plain object. Also converts values to their respective internal types.
+         * @function fromObject
+         * @memberof RPC
+         * @static
+         * @param {Object.<string,*>} d Plain object
+         * @returns {RPC} RPC
+         */
+        RPC.fromObject = function fromObject(d) {
+            if (d instanceof $root.RPC)
+                return d;
+            var m = new $root.RPC();
+            if (d.subscriptions) {
+                if (!Array.isArray(d.subscriptions))
+                    throw TypeError(".RPC.subscriptions: array expected");
+                m.subscriptions = [];
+                for (var i = 0; i < d.subscriptions.length; ++i) {
+                    if (typeof d.subscriptions[i] !== "object")
+                        throw TypeError(".RPC.subscriptions: object expected");
+                    m.subscriptions[i] = $root.RPC.SubOpts.fromObject(d.subscriptions[i]);
+                }
+            }
+            if (d.messages) {
+                if (!Array.isArray(d.messages))
+                    throw TypeError(".RPC.messages: array expected");
+                m.messages = [];
+                for (var i = 0; i < d.messages.length; ++i) {
+                    if (typeof d.messages[i] !== "object")
+                        throw TypeError(".RPC.messages: object expected");
+                    m.messages[i] = $root.RPC.Message.fromObject(d.messages[i]);
+                }
+            }
+            if (d.control != null) {
+                if (typeof d.control !== "object")
+                    throw TypeError(".RPC.control: object expected");
+                m.control = $root.RPC.ControlMessage.fromObject(d.control);
+            }
+            return m;
+        };
+
+        /**
+         * Creates a plain object from a RPC message. Also converts values to other types if specified.
+         * @function toObject
+         * @memberof RPC
+         * @static
+         * @param {RPC} m RPC
+         * @param {$protobuf.IConversionOptions} [o] Conversion options
+         * @returns {Object.<string,*>} Plain object
+         */
+        RPC.toObject = function toObject(m, o) {
+            if (!o)
+                o = {};
+            var d = {};
+            if (o.arrays || o.defaults) {
+                d.subscriptions = [];
+                d.messages = [];
+            }
+            if (m.subscriptions && m.subscriptions.length) {
+                d.subscriptions = [];
+                for (var j = 0; j < m.subscriptions.length; ++j) {
+                    d.subscriptions[j] = $root.RPC.SubOpts.toObject(m.subscriptions[j], o);
+                }
+            }
+            if (m.messages && m.messages.length) {
+                d.messages = [];
+                for (var j = 0; j < m.messages.length; ++j) {
+                    d.messages[j] = $root.RPC.Message.toObject(m.messages[j], o);
+                }
+            }
+            if (m.control != null && m.hasOwnProperty("control")) {
+                d.control = $root.RPC.ControlMessage.toObject(m.control, o);
+                if (o.oneofs)
+                    d._control = "control";
+            }
+            return d;
+        };
+
+        /**
+         * Converts this RPC to JSON.
+         * @function toJSON
+         * @memberof RPC
+         * @instance
+         * @returns {Object.<string,*>} JSON object
+         */
+        RPC.prototype.toJSON = function toJSON() {
+            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
+        };
+
+        RPC.SubOpts = (function() {
+
+            /**
+             * Properties of a SubOpts.
+             * @memberof RPC
+             * @interface ISubOpts
+             * @property {boolean|null} [subscribe] SubOpts subscribe
+             * @property {string|null} [topic] SubOpts topic
+             */
+
+            /**
+             * Constructs a new SubOpts.
+             * @memberof RPC
+             * @classdesc Represents a SubOpts.
+             * @implements ISubOpts
+             * @constructor
+             * @param {RPC.ISubOpts=} [p] Properties to set
+             */
+            function SubOpts(p) {
+                if (p)
+                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
+                        if (p[ks[i]] != null)
+                            this[ks[i]] = p[ks[i]];
+            }
+
+            /**
+             * SubOpts subscribe.
+             * @member {boolean|null|undefined} subscribe
+             * @memberof RPC.SubOpts
+             * @instance
+             */
+            SubOpts.prototype.subscribe = null;
+
+            /**
+             * SubOpts topic.
+             * @member {string|null|undefined} topic
+             * @memberof RPC.SubOpts
+             * @instance
+             */
+            SubOpts.prototype.topic = null;
+
+            // OneOf field names bound to virtual getters and setters
+            var $oneOfFields;
+
+            /**
+             * SubOpts _subscribe.
+             * @member {"subscribe"|undefined} _subscribe
+             * @memberof RPC.SubOpts
+             * @instance
+             */
+            Object.defineProperty(SubOpts.prototype, "_subscribe", {
+                get: $util.oneOfGetter($oneOfFields = ["subscribe"]),
+                set: $util.oneOfSetter($oneOfFields)
+            });
+
+            /**
+             * SubOpts _topic.
+             * @member {"topic"|undefined} _topic
+             * @memberof RPC.SubOpts
+             * @instance
+             */
+            Object.defineProperty(SubOpts.prototype, "_topic", {
+                get: $util.oneOfGetter($oneOfFields = ["topic"]),
+                set: $util.oneOfSetter($oneOfFields)
+            });
+
+            /**
+             * Encodes the specified SubOpts message. Does not implicitly {@link RPC.SubOpts.verify|verify} messages.
+             * @function encode
+             * @memberof RPC.SubOpts
+             * @static
+             * @param {RPC.ISubOpts} m SubOpts message or plain object to encode
+             * @param {$protobuf.Writer} [w] Writer to encode to
+             * @returns {$protobuf.Writer} Writer
+             */
+            SubOpts.encode = function encode(m, w) {
+                if (!w)
+                    w = $Writer.create();
+                if (m.subscribe != null && Object.hasOwnProperty.call(m, "subscribe"))
+                    w.uint32(8).bool(m.subscribe);
+                if (m.topic != null && Object.hasOwnProperty.call(m, "topic"))
+                    w.uint32(18).string(m.topic);
+                return w;
+            };
+
+            /**
+             * Decodes a SubOpts message from the specified reader or buffer.
+             * @function decode
+             * @memberof RPC.SubOpts
+             * @static
+             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
+             * @param {number} [l] Message length if known beforehand
+             * @returns {RPC.SubOpts} SubOpts
+             * @throws {Error} If the payload is not a reader or valid buffer
+             * @throws {$protobuf.util.ProtocolError} If required fields are missing
+             */
+            SubOpts.decode = function decode(r, l) {
+                if (!(r instanceof $Reader))
+                    r = $Reader.create(r);
+                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.SubOpts();
+                while (r.pos < c) {
+                    var t = r.uint32();
+                    switch (t >>> 3) {
+                    case 1:
+                        m.subscribe = r.bool();
+                        break;
+                    case 2:
+                        m.topic = r.string();
+                        break;
+                    default:
+                        r.skipType(t & 7);
+                        break;
+                    }
+                }
+                return m;
+            };
+
+            /**
+             * Creates a SubOpts message from a plain object. Also converts values to their respective internal types.
+             * @function fromObject
+             * @memberof RPC.SubOpts
+             * @static
+             * @param {Object.<string,*>} d Plain object
+             * @returns {RPC.SubOpts} SubOpts
+             */
+            SubOpts.fromObject = function fromObject(d) {
+                if (d instanceof $root.RPC.SubOpts)
+                    return d;
+                var m = new $root.RPC.SubOpts();
+                if (d.subscribe != null) {
+                    m.subscribe = Boolean(d.subscribe);
+                }
+                if (d.topic != null) {
+                    m.topic = String(d.topic);
+                }
+                return m;
+            };
+
+            /**
+             * Creates a plain object from a SubOpts message. Also converts values to other types if specified.
+             * @function toObject
+             * @memberof RPC.SubOpts
+             * @static
+             * @param {RPC.SubOpts} m SubOpts
+             * @param {$protobuf.IConversionOptions} [o] Conversion options
+             * @returns {Object.<string,*>} Plain object
+             */
+            SubOpts.toObject = function toObject(m, o) {
+                if (!o)
+                    o = {};
+                var d = {};
+                if (m.subscribe != null && m.hasOwnProperty("subscribe")) {
+                    d.subscribe = m.subscribe;
+                    if (o.oneofs)
+                        d._subscribe = "subscribe";
+                }
+                if (m.topic != null && m.hasOwnProperty("topic")) {
+                    d.topic = m.topic;
+                    if (o.oneofs)
+                        d._topic = "topic";
+                }
+                return d;
+            };
+
+            /**
+             * Converts this SubOpts to JSON.
+             * @function toJSON
+             * @memberof RPC.SubOpts
+             * @instance
+             * @returns {Object.<string,*>} JSON object
+             */
+            SubOpts.prototype.toJSON = function toJSON() {
+                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
+            };
+
+            return SubOpts;
+        })();
+
+        RPC.Message = (function() {
+
+            /**
+             * Properties of a Message.
+             * @memberof RPC
+             * @interface IMessage
+             * @property {Uint8Array|null} [from] Message from
+             * @property {Uint8Array|null} [data] Message data
+             * @property {Uint8Array|null} [seqno] Message seqno
+             * @property {string} topic Message topic
+             * @property {Uint8Array|null} [signature] Message signature
+             * @property {Uint8Array|null} [key] Message key
+             */
+
+            /**
+             * Constructs a new Message.
+             * @memberof RPC
+             * @classdesc Represents a Message.
+             * @implements IMessage
+             * @constructor
+             * @param {RPC.IMessage=} [p] Properties to set
+             */
+            function Message(p) {
+                if (p)
+                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
+                        if (p[ks[i]] != null)
+                            this[ks[i]] = p[ks[i]];
+            }
+
+            /**
+             * Message from.
+             * @member {Uint8Array|null|undefined} from
+             * @memberof RPC.Message
+             * @instance
+             */
+            Message.prototype.from = null;
+
+            /**
+             * Message data.
+             * @member {Uint8Array|null|undefined} data
+             * @memberof RPC.Message
+             * @instance
+             */
+            Message.prototype.data = null;
+
+            /**
+             * Message seqno.
+             * @member {Uint8Array|null|undefined} seqno
+             * @memberof RPC.Message
+             * @instance
+             */
+            Message.prototype.seqno = null;
+
+            /**
+             * Message topic.
+             * @member {string} topic
+             * @memberof RPC.Message
+             * @instance
+             */
+            Message.prototype.topic = "";
+
+            /**
+             * Message signature.
+             * @member {Uint8Array|null|undefined} signature
+             * @memberof RPC.Message
+             * @instance
+             */
+            Message.prototype.signature = null;
+
+            /**
+             * Message key.
+             * @member {Uint8Array|null|undefined} key
+             * @memberof RPC.Message
+             * @instance
+             */
+            Message.prototype.key = null;
+
+            // OneOf field names bound to virtual getters and setters
+            var $oneOfFields;
+
+            /**
+             * Message _from.
+             * @member {"from"|undefined} _from
+             * @memberof RPC.Message
+             * @instance
+             */
+            Object.defineProperty(Message.prototype, "_from", {
+                get: $util.oneOfGetter($oneOfFields = ["from"]),
+                set: $util.oneOfSetter($oneOfFields)
+            });
+
+            /**
+             * Message _data.
+             * @member {"data"|undefined} _data
+             * @memberof RPC.Message
+             * @instance
+             */
+            Object.defineProperty(Message.prototype, "_data", {
+                get: $util.oneOfGetter($oneOfFields = ["data"]),
+                set: $util.oneOfSetter($oneOfFields)
+            });
+
+            /**
+             * Message _seqno.
+             * @member {"seqno"|undefined} _seqno
+             * @memberof RPC.Message
+             * @instance
+             */
+            Object.defineProperty(Message.prototype, "_seqno", {
+                get: $util.oneOfGetter($oneOfFields = ["seqno"]),
+                set: $util.oneOfSetter($oneOfFields)
+            });
+
+            /**
+             * Message _signature.
+             * @member {"signature"|undefined} _signature
+             * @memberof RPC.Message
+             * @instance
+             */
+            Object.defineProperty(Message.prototype, "_signature", {
+                get: $util.oneOfGetter($oneOfFields = ["signature"]),
+                set: $util.oneOfSetter($oneOfFields)
+            });
+
+            /**
+             * Message _key.
+             * @member {"key"|undefined} _key
+             * @memberof RPC.Message
+             * @instance
+             */
+            Object.defineProperty(Message.prototype, "_key", {
+                get: $util.oneOfGetter($oneOfFields = ["key"]),
+                set: $util.oneOfSetter($oneOfFields)
+            });
+
+            /**
+             * Encodes the specified Message message. Does not implicitly {@link RPC.Message.verify|verify} messages.
+             * @function encode
+             * @memberof RPC.Message
+             * @static
+             * @param {RPC.IMessage} m Message message or plain object to encode
+             * @param {$protobuf.Writer} [w] Writer to encode to
+             * @returns {$protobuf.Writer} Writer
+             */
+            Message.encode = function encode(m, w) {
+                if (!w)
+                    w = $Writer.create();
+                if (m.from != null && Object.hasOwnProperty.call(m, "from"))
+                    w.uint32(10).bytes(m.from);
+                if (m.data != null && Object.hasOwnProperty.call(m, "data"))
+                    w.uint32(18).bytes(m.data);
+                if (m.seqno != null && Object.hasOwnProperty.call(m, "seqno"))
+                    w.uint32(26).bytes(m.seqno);
+                w.uint32(34).string(m.topic);
+                if (m.signature != null && Object.hasOwnProperty.call(m, "signature"))
+                    w.uint32(42).bytes(m.signature);
+                if (m.key != null && Object.hasOwnProperty.call(m, "key"))
+                    w.uint32(50).bytes(m.key);
+                return w;
+            };
+
+            /**
+             * Decodes a Message message from the specified reader or buffer.
+             * @function decode
+             * @memberof RPC.Message
+             * @static
+             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
+             * @param {number} [l] Message length if known beforehand
+             * @returns {RPC.Message} Message
+             * @throws {Error} If the payload is not a reader or valid buffer
+             * @throws {$protobuf.util.ProtocolError} If required fields are missing
+             */
+            Message.decode = function decode(r, l) {
+                if (!(r instanceof $Reader))
+                    r = $Reader.create(r);
+                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.Message();
+                while (r.pos < c) {
+                    var t = r.uint32();
+                    switch (t >>> 3) {
+                    case 1:
+                        m.from = r.bytes();
+                        break;
+                    case 2:
+                        m.data = r.bytes();
+                        break;
+                    case 3:
+                        m.seqno = r.bytes();
+                        break;
+                    case 4:
+                        m.topic = r.string();
+                        break;
+                    case 5:
+                        m.signature = r.bytes();
+                        break;
+                    case 6:
+                        m.key = r.bytes();
+                        break;
+                    default:
+                        r.skipType(t & 7);
+                        break;
+                    }
+                }
+                if (!m.hasOwnProperty("topic"))
+                    throw $util.ProtocolError("missing required 'topic'", { instance: m });
+                return m;
+            };
+
+            /**
+             * Creates a Message message from a plain object. Also converts values to their respective internal types.
+             * @function fromObject
+             * @memberof RPC.Message
+             * @static
+             * @param {Object.<string,*>} d Plain object
+             * @returns {RPC.Message} Message
+             */
+            Message.fromObject = function fromObject(d) {
+                if (d instanceof $root.RPC.Message)
+                    return d;
+                var m = new $root.RPC.Message();
+                if (d.from != null) {
+                    if (typeof d.from === "string")
+                        $util.base64.decode(d.from, m.from = $util.newBuffer($util.base64.length(d.from)), 0);
+                    else if (d.from.length)
+                        m.from = d.from;
+                }
+                if (d.data != null) {
+                    if (typeof d.data === "string")
+                        $util.base64.decode(d.data, m.data = $util.newBuffer($util.base64.length(d.data)), 0);
+                    else if (d.data.length)
+                        m.data = d.data;
+                }
+                if (d.seqno != null) {
+                    if (typeof d.seqno === "string")
+                        $util.base64.decode(d.seqno, m.seqno = $util.newBuffer($util.base64.length(d.seqno)), 0);
+                    else if (d.seqno.length)
+                        m.seqno = d.seqno;
+                }
+                if (d.topic != null) {
+                    m.topic = String(d.topic);
+                }
+                if (d.signature != null) {
+                    if (typeof d.signature === "string")
+                        $util.base64.decode(d.signature, m.signature = $util.newBuffer($util.base64.length(d.signature)), 0);
+                    else if (d.signature.length)
+                        m.signature = d.signature;
+                }
+                if (d.key != null) {
+                    if (typeof d.key === "string")
+                        $util.base64.decode(d.key, m.key = $util.newBuffer($util.base64.length(d.key)), 0);
+                    else if (d.key.length)
+                        m.key = d.key;
+                }
+                return m;
+            };
+
+            /**
+             * Creates a plain object from a Message message. Also converts values to other types if specified.
+             * @function toObject
+             * @memberof RPC.Message
+             * @static
+             * @param {RPC.Message} m Message
+             * @param {$protobuf.IConversionOptions} [o] Conversion options
+             * @returns {Object.<string,*>} Plain object
+             */
+            Message.toObject = function toObject(m, o) {
+                if (!o)
+                    o = {};
+                var d = {};
+                if (o.defaults) {
+                    d.topic = "";
+                }
+                if (m.from != null && m.hasOwnProperty("from")) {
+                    d.from = o.bytes === String ? $util.base64.encode(m.from, 0, m.from.length) : o.bytes === Array ? Array.prototype.slice.call(m.from) : m.from;
+                    if (o.oneofs)
+                        d._from = "from";
+                }
+                if (m.data != null && m.hasOwnProperty("data")) {
+                    d.data = o.bytes === String ? $util.base64.encode(m.data, 0, m.data.length) : o.bytes === Array ? Array.prototype.slice.call(m.data) : m.data;
+                    if (o.oneofs)
+                        d._data = "data";
+                }
+                if (m.seqno != null && m.hasOwnProperty("seqno")) {
+                    d.seqno = o.bytes === String ? $util.base64.encode(m.seqno, 0, m.seqno.length) : o.bytes === Array ? Array.prototype.slice.call(m.seqno) : m.seqno;
+                    if (o.oneofs)
+                        d._seqno = "seqno";
+                }
+                if (m.topic != null && m.hasOwnProperty("topic")) {
+                    d.topic = m.topic;
+                }
+                if (m.signature != null && m.hasOwnProperty("signature")) {
+                    d.signature = o.bytes === String ? $util.base64.encode(m.signature, 0, m.signature.length) : o.bytes === Array ? Array.prototype.slice.call(m.signature) : m.signature;
+                    if (o.oneofs)
+                        d._signature = "signature";
+                }
+                if (m.key != null && m.hasOwnProperty("key")) {
+                    d.key = o.bytes === String ? $util.base64.encode(m.key, 0, m.key.length) : o.bytes === Array ? Array.prototype.slice.call(m.key) : m.key;
+                    if (o.oneofs)
+                        d._key = "key";
+                }
+                return d;
+            };
+
+            /**
+             * Converts this Message to JSON.
+             * @function toJSON
+             * @memberof RPC.Message
+             * @instance
+             * @returns {Object.<string,*>} JSON object
+             */
+            Message.prototype.toJSON = function toJSON() {
+                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
+            };
+
+            return Message;
+        })();
+
+        RPC.ControlMessage = (function() {
+
+            /**
+             * Properties of a ControlMessage.
+             * @memberof RPC
+             * @interface IControlMessage
+             * @property {Array.<RPC.IControlIHave>|null} [ihave] ControlMessage ihave
+             * @property {Array.<RPC.IControlIWant>|null} [iwant] ControlMessage iwant
+             * @property {Array.<RPC.IControlGraft>|null} [graft] ControlMessage graft
+             * @property {Array.<RPC.IControlPrune>|null} [prune] ControlMessage prune
+             */
+
+            /**
+             * Constructs a new ControlMessage.
+             * @memberof RPC
+             * @classdesc Represents a ControlMessage.
+             * @implements IControlMessage
+             * @constructor
+             * @param {RPC.IControlMessage=} [p] Properties to set
+             */
+            function ControlMessage(p) {
+                this.ihave = [];
+                this.iwant = [];
+                this.graft = [];
+                this.prune = [];
+                if (p)
+                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
+                        if (p[ks[i]] != null)
+                            this[ks[i]] = p[ks[i]];
+            }
+
+            /**
+             * ControlMessage ihave.
+             * @member {Array.<RPC.IControlIHave>} ihave
+             * @memberof RPC.ControlMessage
+             * @instance
+             */
+            ControlMessage.prototype.ihave = $util.emptyArray;
+
+            /**
+             * ControlMessage iwant.
+             * @member {Array.<RPC.IControlIWant>} iwant
+             * @memberof RPC.ControlMessage
+             * @instance
+             */
+            ControlMessage.prototype.iwant = $util.emptyArray;
+
+            /**
+             * ControlMessage graft.
+             * @member {Array.<RPC.IControlGraft>} graft
+             * @memberof RPC.ControlMessage
+             * @instance
+             */
+            ControlMessage.prototype.graft = $util.emptyArray;
+
+            /**
+             * ControlMessage prune.
+             * @member {Array.<RPC.IControlPrune>} prune
+             * @memberof RPC.ControlMessage
+             * @instance
+             */
+            ControlMessage.prototype.prune = $util.emptyArray;
+
+            /**
+             * Encodes the specified ControlMessage message. Does not implicitly {@link RPC.ControlMessage.verify|verify} messages.
+             * @function encode
+             * @memberof RPC.ControlMessage
+             * @static
+             * @param {RPC.IControlMessage} m ControlMessage message or plain object to encode
+             * @param {$protobuf.Writer} [w] Writer to encode to
+             * @returns {$protobuf.Writer} Writer
+             */
+            ControlMessage.encode = function encode(m, w) {
+                if (!w)
+                    w = $Writer.create();
+                if (m.ihave != null && m.ihave.length) {
+                    for (var i = 0; i < m.ihave.length; ++i)
+                        $root.RPC.ControlIHave.encode(m.ihave[i], w.uint32(10).fork()).ldelim();
+                }
+                if (m.iwant != null && m.iwant.length) {
+                    for (var i = 0; i < m.iwant.length; ++i)
+                        $root.RPC.ControlIWant.encode(m.iwant[i], w.uint32(18).fork()).ldelim();
+                }
+                if (m.graft != null && m.graft.length) {
+                    for (var i = 0; i < m.graft.length; ++i)
+                        $root.RPC.ControlGraft.encode(m.graft[i], w.uint32(26).fork()).ldelim();
+                }
+                if (m.prune != null && m.prune.length) {
+                    for (var i = 0; i < m.prune.length; ++i)
+                        $root.RPC.ControlPrune.encode(m.prune[i], w.uint32(34).fork()).ldelim();
+                }
+                return w;
+            };
+
+            /**
+             * Decodes a ControlMessage message from the specified reader or buffer.
+             * @function decode
+             * @memberof RPC.ControlMessage
+             * @static
+             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
+             * @param {number} [l] Message length if known beforehand
+             * @returns {RPC.ControlMessage} ControlMessage
+             * @throws {Error} If the payload is not a reader or valid buffer
+             * @throws {$protobuf.util.ProtocolError} If required fields are missing
+             */
+            ControlMessage.decode = function decode(r, l) {
+                if (!(r instanceof $Reader))
+                    r = $Reader.create(r);
+                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlMessage();
+                while (r.pos < c) {
+                    var t = r.uint32();
+                    switch (t >>> 3) {
+                    case 1:
+                        if (!(m.ihave && m.ihave.length))
+                            m.ihave = [];
+                        m.ihave.push($root.RPC.ControlIHave.decode(r, r.uint32()));
+                        break;
+                    case 2:
+                        if (!(m.iwant && m.iwant.length))
+                            m.iwant = [];
+                        m.iwant.push($root.RPC.ControlIWant.decode(r, r.uint32()));
+                        break;
+                    case 3:
+                        if (!(m.graft && m.graft.length))
+                            m.graft = [];
+                        m.graft.push($root.RPC.ControlGraft.decode(r, r.uint32()));
+                        break;
+                    case 4:
+                        if (!(m.prune && m.prune.length))
+                            m.prune = [];
+                        m.prune.push($root.RPC.ControlPrune.decode(r, r.uint32()));
+                        break;
+                    default:
+                        r.skipType(t & 7);
+                        break;
+                    }
+                }
+                return m;
+            };
+
+            /**
+             * Creates a ControlMessage message from a plain object. Also converts values to their respective internal types.
+             * @function fromObject
+             * @memberof RPC.ControlMessage
+             * @static
+             * @param {Object.<string,*>} d Plain object
+             * @returns {RPC.ControlMessage} ControlMessage
+             */
+            ControlMessage.fromObject = function fromObject(d) {
+                if (d instanceof $root.RPC.ControlMessage)
+                    return d;
+                var m = new $root.RPC.ControlMessage();
+                if (d.ihave) {
+                    if (!Array.isArray(d.ihave))
+                        throw TypeError(".RPC.ControlMessage.ihave: array expected");
+                    m.ihave = [];
+                    for (var i = 0; i < d.ihave.length; ++i) {
+                        if (typeof d.ihave[i] !== "object")
+                            throw TypeError(".RPC.ControlMessage.ihave: object expected");
+                        m.ihave[i] = $root.RPC.ControlIHave.fromObject(d.ihave[i]);
+                    }
+                }
+                if (d.iwant) {
+                    if (!Array.isArray(d.iwant))
+                        throw TypeError(".RPC.ControlMessage.iwant: array expected");
+                    m.iwant = [];
+                    for (var i = 0; i < d.iwant.length; ++i) {
+                        if (typeof d.iwant[i] !== "object")
+                            throw TypeError(".RPC.ControlMessage.iwant: object expected");
+                        m.iwant[i] = $root.RPC.ControlIWant.fromObject(d.iwant[i]);
+                    }
+                }
+                if (d.graft) {
+                    if (!Array.isArray(d.graft))
+                        throw TypeError(".RPC.ControlMessage.graft: array expected");
+                    m.graft = [];
+                    for (var i = 0; i < d.graft.length; ++i) {
+                        if (typeof d.graft[i] !== "object")
+                            throw TypeError(".RPC.ControlMessage.graft: object expected");
+                        m.graft[i] = $root.RPC.ControlGraft.fromObject(d.graft[i]);
+                    }
+                }
+                if (d.prune) {
+                    if (!Array.isArray(d.prune))
+                        throw TypeError(".RPC.ControlMessage.prune: array expected");
+                    m.prune = [];
+                    for (var i = 0; i < d.prune.length; ++i) {
+                        if (typeof d.prune[i] !== "object")
+                            throw TypeError(".RPC.ControlMessage.prune: object expected");
+                        m.prune[i] = $root.RPC.ControlPrune.fromObject(d.prune[i]);
+                    }
+                }
+                return m;
+            };
+
+            /**
+             * Creates a plain object from a ControlMessage message. Also converts values to other types if specified.
+             * @function toObject
+             * @memberof RPC.ControlMessage
+             * @static
+             * @param {RPC.ControlMessage} m ControlMessage
+             * @param {$protobuf.IConversionOptions} [o] Conversion options
+             * @returns {Object.<string,*>} Plain object
+             */
+            ControlMessage.toObject = function toObject(m, o) {
+                if (!o)
+                    o = {};
+                var d = {};
+                if (o.arrays || o.defaults) {
+                    d.ihave = [];
+                    d.iwant = [];
+                    d.graft = [];
+                    d.prune = [];
+                }
+                if (m.ihave && m.ihave.length) {
+                    d.ihave = [];
+                    for (var j = 0; j < m.ihave.length; ++j) {
+                        d.ihave[j] = $root.RPC.ControlIHave.toObject(m.ihave[j], o);
+                    }
+                }
+                if (m.iwant && m.iwant.length) {
+                    d.iwant = [];
+                    for (var j = 0; j < m.iwant.length; ++j) {
+                        d.iwant[j] = $root.RPC.ControlIWant.toObject(m.iwant[j], o);
+                    }
+                }
+                if (m.graft && m.graft.length) {
+                    d.graft = [];
+                    for (var j = 0; j < m.graft.length; ++j) {
+                        d.graft[j] = $root.RPC.ControlGraft.toObject(m.graft[j], o);
+                    }
+                }
+                if (m.prune && m.prune.length) {
+                    d.prune = [];
+                    for (var j = 0; j < m.prune.length; ++j) {
+                        d.prune[j] = $root.RPC.ControlPrune.toObject(m.prune[j], o);
+                    }
+                }
+                return d;
+            };
+
+            /**
+             * Converts this ControlMessage to JSON.
+             * @function toJSON
+             * @memberof RPC.ControlMessage
+             * @instance
+             * @returns {Object.<string,*>} JSON object
+             */
+            ControlMessage.prototype.toJSON = function toJSON() {
+                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
+            };
+
+            return ControlMessage;
+        })();
+
+        RPC.ControlIHave = (function() {
+
+            /**
+             * Properties of a ControlIHave.
+             * @memberof RPC
+             * @interface IControlIHave
+             * @property {string|null} [topicID] ControlIHave topicID
+             * @property {Array.<Uint8Array>|null} [messageIDs] ControlIHave messageIDs
+             */
+
+            /**
+             * Constructs a new ControlIHave.
+             * @memberof RPC
+             * @classdesc Represents a ControlIHave.
+             * @implements IControlIHave
+             * @constructor
+             * @param {RPC.IControlIHave=} [p] Properties to set
+             */
+            function ControlIHave(p) {
+                this.messageIDs = [];
+                if (p)
+                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
+                        if (p[ks[i]] != null)
+                            this[ks[i]] = p[ks[i]];
+            }
+
+            /**
+             * ControlIHave topicID.
+             * @member {string|null|undefined} topicID
+             * @memberof RPC.ControlIHave
+             * @instance
+             */
+            ControlIHave.prototype.topicID = null;
+
+            /**
+             * ControlIHave messageIDs.
+             * @member {Array.<Uint8Array>} messageIDs
+             * @memberof RPC.ControlIHave
+             * @instance
+             */
+            ControlIHave.prototype.messageIDs = $util.emptyArray;
+
+            // OneOf field names bound to virtual getters and setters
+            var $oneOfFields;
+
+            /**
+             * ControlIHave _topicID.
+             * @member {"topicID"|undefined} _topicID
+             * @memberof RPC.ControlIHave
+             * @instance
+             */
+            Object.defineProperty(ControlIHave.prototype, "_topicID", {
+                get: $util.oneOfGetter($oneOfFields = ["topicID"]),
+                set: $util.oneOfSetter($oneOfFields)
+            });
+
+            /**
+             * Encodes the specified ControlIHave message. Does not implicitly {@link RPC.ControlIHave.verify|verify} messages.
+             * @function encode
+             * @memberof RPC.ControlIHave
+             * @static
+             * @param {RPC.IControlIHave} m ControlIHave message or plain object to encode
+             * @param {$protobuf.Writer} [w] Writer to encode to
+             * @returns {$protobuf.Writer} Writer
+             */
+            ControlIHave.encode = function encode(m, w) {
+                if (!w)
+                    w = $Writer.create();
+                if (m.topicID != null && Object.hasOwnProperty.call(m, "topicID"))
+                    w.uint32(10).string(m.topicID);
+                if (m.messageIDs != null && m.messageIDs.length) {
+                    for (var i = 0; i < m.messageIDs.length; ++i)
+                        w.uint32(18).bytes(m.messageIDs[i]);
+                }
+                return w;
+            };
+
+            /**
+             * Decodes a ControlIHave message from the specified reader or buffer.
+             * @function decode
+             * @memberof RPC.ControlIHave
+             * @static
+             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
+             * @param {number} [l] Message length if known beforehand
+             * @returns {RPC.ControlIHave} ControlIHave
+             * @throws {Error} If the payload is not a reader or valid buffer
+             * @throws {$protobuf.util.ProtocolError} If required fields are missing
+             */
+            ControlIHave.decode = function decode(r, l) {
+                if (!(r instanceof $Reader))
+                    r = $Reader.create(r);
+                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlIHave();
+                while (r.pos < c) {
+                    var t = r.uint32();
+                    switch (t >>> 3) {
+                    case 1:
+                        m.topicID = r.string();
+                        break;
+                    case 2:
+                        if (!(m.messageIDs && m.messageIDs.length))
+                            m.messageIDs = [];
+                        m.messageIDs.push(r.bytes());
+                        break;
+                    default:
+                        r.skipType(t & 7);
+                        break;
+                    }
+                }
+                return m;
+            };
+
+            /**
+             * Creates a ControlIHave message from a plain object. Also converts values to their respective internal types.
+             * @function fromObject
+             * @memberof RPC.ControlIHave
+             * @static
+             * @param {Object.<string,*>} d Plain object
+             * @returns {RPC.ControlIHave} ControlIHave
+             */
+            ControlIHave.fromObject = function fromObject(d) {
+                if (d instanceof $root.RPC.ControlIHave)
+                    return d;
+                var m = new $root.RPC.ControlIHave();
+                if (d.topicID != null) {
+                    m.topicID = String(d.topicID);
+                }
+                if (d.messageIDs) {
+                    if (!Array.isArray(d.messageIDs))
+                        throw TypeError(".RPC.ControlIHave.messageIDs: array expected");
+                    m.messageIDs = [];
+                    for (var i = 0; i < d.messageIDs.length; ++i) {
+                        if (typeof d.messageIDs[i] === "string")
+                            $util.base64.decode(d.messageIDs[i], m.messageIDs[i] = $util.newBuffer($util.base64.length(d.messageIDs[i])), 0);
+                        else if (d.messageIDs[i].length)
+                            m.messageIDs[i] = d.messageIDs[i];
+                    }
+                }
+                return m;
+            };
+
+            /**
+             * Creates a plain object from a ControlIHave message. Also converts values to other types if specified.
+             * @function toObject
+             * @memberof RPC.ControlIHave
+             * @static
+             * @param {RPC.ControlIHave} m ControlIHave
+             * @param {$protobuf.IConversionOptions} [o] Conversion options
+             * @returns {Object.<string,*>} Plain object
+             */
+            ControlIHave.toObject = function toObject(m, o) {
+                if (!o)
+                    o = {};
+                var d = {};
+                if (o.arrays || o.defaults) {
+                    d.messageIDs = [];
+                }
+                if (m.topicID != null && m.hasOwnProperty("topicID")) {
+                    d.topicID = m.topicID;
+                    if (o.oneofs)
+                        d._topicID = "topicID";
+                }
+                if (m.messageIDs && m.messageIDs.length) {
+                    d.messageIDs = [];
+                    for (var j = 0; j < m.messageIDs.length; ++j) {
+                        d.messageIDs[j] = o.bytes === String ? $util.base64.encode(m.messageIDs[j], 0, m.messageIDs[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.messageIDs[j]) : m.messageIDs[j];
+                    }
+                }
+                return d;
+            };
+
+            /**
+             * Converts this ControlIHave to JSON.
+             * @function toJSON
+             * @memberof RPC.ControlIHave
+             * @instance
+             * @returns {Object.<string,*>} JSON object
+             */
+            ControlIHave.prototype.toJSON = function toJSON() {
+                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
+            };
+
+            return ControlIHave;
+        })();
+
+        RPC.ControlIWant = (function() {
+
+            /**
+             * Properties of a ControlIWant.
+             * @memberof RPC
+             * @interface IControlIWant
+             * @property {Array.<Uint8Array>|null} [messageIDs] ControlIWant messageIDs
+             */
+
+            /**
+             * Constructs a new ControlIWant.
+             * @memberof RPC
+             * @classdesc Represents a ControlIWant.
+             * @implements IControlIWant
+             * @constructor
+             * @param {RPC.IControlIWant=} [p] Properties to set
+             */
+            function ControlIWant(p) {
+                this.messageIDs = [];
+                if (p)
+                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
+                        if (p[ks[i]] != null)
+                            this[ks[i]] = p[ks[i]];
+            }
+
+            /**
+             * ControlIWant messageIDs.
+             * @member {Array.<Uint8Array>} messageIDs
+             * @memberof RPC.ControlIWant
+             * @instance
+             */
+            ControlIWant.prototype.messageIDs = $util.emptyArray;
+
+            /**
+             * Encodes the specified ControlIWant message. Does not implicitly {@link RPC.ControlIWant.verify|verify} messages.
+             * @function encode
+             * @memberof RPC.ControlIWant
+             * @static
+             * @param {RPC.IControlIWant} m ControlIWant message or plain object to encode
+             * @param {$protobuf.Writer} [w] Writer to encode to
+             * @returns {$protobuf.Writer} Writer
+             */
+            ControlIWant.encode = function encode(m, w) {
+                if (!w)
+                    w = $Writer.create();
+                if (m.messageIDs != null && m.messageIDs.length) {
+                    for (var i = 0; i < m.messageIDs.length; ++i)
+                        w.uint32(10).bytes(m.messageIDs[i]);
+                }
+                return w;
+            };
+
+            /**
+             * Decodes a ControlIWant message from the specified reader or buffer.
+             * @function decode
+             * @memberof RPC.ControlIWant
+             * @static
+             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
+             * @param {number} [l] Message length if known beforehand
+             * @returns {RPC.ControlIWant} ControlIWant
+             * @throws {Error} If the payload is not a reader or valid buffer
+             * @throws {$protobuf.util.ProtocolError} If required fields are missing
+             */
+            ControlIWant.decode = function decode(r, l) {
+                if (!(r instanceof $Reader))
+                    r = $Reader.create(r);
+                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlIWant();
+                while (r.pos < c) {
+                    var t = r.uint32();
+                    switch (t >>> 3) {
+                    case 1:
+                        if (!(m.messageIDs && m.messageIDs.length))
+                            m.messageIDs = [];
+                        m.messageIDs.push(r.bytes());
+                        break;
+                    default:
+                        r.skipType(t & 7);
+                        break;
+                    }
+                }
+                return m;
+            };
+
+            /**
+             * Creates a ControlIWant message from a plain object. Also converts values to their respective internal types.
+             * @function fromObject
+             * @memberof RPC.ControlIWant
+             * @static
+             * @param {Object.<string,*>} d Plain object
+             * @returns {RPC.ControlIWant} ControlIWant
+             */
+            ControlIWant.fromObject = function fromObject(d) {
+                if (d instanceof $root.RPC.ControlIWant)
+                    return d;
+                var m = new $root.RPC.ControlIWant();
+                if (d.messageIDs) {
+                    if (!Array.isArray(d.messageIDs))
+                        throw TypeError(".RPC.ControlIWant.messageIDs: array expected");
+                    m.messageIDs = [];
+                    for (var i = 0; i < d.messageIDs.length; ++i) {
+                        if (typeof d.messageIDs[i] === "string")
+                            $util.base64.decode(d.messageIDs[i], m.messageIDs[i] = $util.newBuffer($util.base64.length(d.messageIDs[i])), 0);
+                        else if (d.messageIDs[i].length)
+                            m.messageIDs[i] = d.messageIDs[i];
+                    }
+                }
+                return m;
+            };
+
+            /**
+             * Creates a plain object from a ControlIWant message. Also converts values to other types if specified.
+             * @function toObject
+             * @memberof RPC.ControlIWant
+             * @static
+             * @param {RPC.ControlIWant} m ControlIWant
+             * @param {$protobuf.IConversionOptions} [o] Conversion options
+             * @returns {Object.<string,*>} Plain object
+             */
+            ControlIWant.toObject = function toObject(m, o) {
+                if (!o)
+                    o = {};
+                var d = {};
+                if (o.arrays || o.defaults) {
+                    d.messageIDs = [];
+                }
+                if (m.messageIDs && m.messageIDs.length) {
+                    d.messageIDs = [];
+                    for (var j = 0; j < m.messageIDs.length; ++j) {
+                        d.messageIDs[j] = o.bytes === String ? $util.base64.encode(m.messageIDs[j], 0, m.messageIDs[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.messageIDs[j]) : m.messageIDs[j];
+                    }
+                }
+                return d;
+            };
+
+            /**
+             * Converts this ControlIWant to JSON.
+             * @function toJSON
+             * @memberof RPC.ControlIWant
+             * @instance
+             * @returns {Object.<string,*>} JSON object
+             */
+            ControlIWant.prototype.toJSON = function toJSON() {
+                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
+            };
+
+            return ControlIWant;
+        })();
+
+        RPC.ControlGraft = (function() {
+
+            /**
+             * Properties of a ControlGraft.
+             * @memberof RPC
+             * @interface IControlGraft
+             * @property {string|null} [topicID] ControlGraft topicID
+             */
+
+            /**
+             * Constructs a new ControlGraft.
+             * @memberof RPC
+             * @classdesc Represents a ControlGraft.
+             * @implements IControlGraft
+             * @constructor
+             * @param {RPC.IControlGraft=} [p] Properties to set
+             */
+            function ControlGraft(p) {
+                if (p)
+                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
+                        if (p[ks[i]] != null)
+                            this[ks[i]] = p[ks[i]];
+            }
+
+            /**
+             * ControlGraft topicID.
+             * @member {string|null|undefined} topicID
+             * @memberof RPC.ControlGraft
+             * @instance
+             */
+            ControlGraft.prototype.topicID = null;
+
+            // OneOf field names bound to virtual getters and setters
+            var $oneOfFields;
+
+            /**
+             * ControlGraft _topicID.
+             * @member {"topicID"|undefined} _topicID
+             * @memberof RPC.ControlGraft
+             * @instance
+             */
+            Object.defineProperty(ControlGraft.prototype, "_topicID", {
+                get: $util.oneOfGetter($oneOfFields = ["topicID"]),
+                set: $util.oneOfSetter($oneOfFields)
+            });
+
+            /**
+             * Encodes the specified ControlGraft message. Does not implicitly {@link RPC.ControlGraft.verify|verify} messages.
+             * @function encode
+             * @memberof RPC.ControlGraft
+             * @static
+             * @param {RPC.IControlGraft} m ControlGraft message or plain object to encode
+             * @param {$protobuf.Writer} [w] Writer to encode to
+             * @returns {$protobuf.Writer} Writer
+             */
+            ControlGraft.encode = function encode(m, w) {
+                if (!w)
+                    w = $Writer.create();
+                if (m.topicID != null && Object.hasOwnProperty.call(m, "topicID"))
+                    w.uint32(10).string(m.topicID);
+                return w;
+            };
+
+            /**
+             * Decodes a ControlGraft message from the specified reader or buffer.
+             * @function decode
+             * @memberof RPC.ControlGraft
+             * @static
+             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
+             * @param {number} [l] Message length if known beforehand
+             * @returns {RPC.ControlGraft} ControlGraft
+             * @throws {Error} If the payload is not a reader or valid buffer
+             * @throws {$protobuf.util.ProtocolError} If required fields are missing
+             */
+            ControlGraft.decode = function decode(r, l) {
+                if (!(r instanceof $Reader))
+                    r = $Reader.create(r);
+                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlGraft();
+                while (r.pos < c) {
+                    var t = r.uint32();
+                    switch (t >>> 3) {
+                    case 1:
+                        m.topicID = r.string();
+                        break;
+                    default:
+                        r.skipType(t & 7);
+                        break;
+                    }
+                }
+                return m;
+            };
+
+            /**
+             * Creates a ControlGraft message from a plain object. Also converts values to their respective internal types.
+             * @function fromObject
+             * @memberof RPC.ControlGraft
+             * @static
+             * @param {Object.<string,*>} d Plain object
+             * @returns {RPC.ControlGraft} ControlGraft
+             */
+            ControlGraft.fromObject = function fromObject(d) {
+                if (d instanceof $root.RPC.ControlGraft)
+                    return d;
+                var m = new $root.RPC.ControlGraft();
+                if (d.topicID != null) {
+                    m.topicID = String(d.topicID);
+                }
+                return m;
+            };
+
+            /**
+             * Creates a plain object from a ControlGraft message. Also converts values to other types if specified.
+             * @function toObject
+             * @memberof RPC.ControlGraft
+             * @static
+             * @param {RPC.ControlGraft} m ControlGraft
+             * @param {$protobuf.IConversionOptions} [o] Conversion options
+             * @returns {Object.<string,*>} Plain object
+             */
+            ControlGraft.toObject = function toObject(m, o) {
+                if (!o)
+                    o = {};
+                var d = {};
+                if (m.topicID != null && m.hasOwnProperty("topicID")) {
+                    d.topicID = m.topicID;
+                    if (o.oneofs)
+                        d._topicID = "topicID";
+                }
+                return d;
+            };
+
+            /**
+             * Converts this ControlGraft to JSON.
+             * @function toJSON
+             * @memberof RPC.ControlGraft
+             * @instance
+             * @returns {Object.<string,*>} JSON object
+             */
+            ControlGraft.prototype.toJSON = function toJSON() {
+                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
+            };
+
+            return ControlGraft;
+        })();
+
+        RPC.ControlPrune = (function() {
+
+            /**
+             * Properties of a ControlPrune.
+             * @memberof RPC
+             * @interface IControlPrune
+             * @property {string|null} [topicID] ControlPrune topicID
+             * @property {Array.<RPC.IPeerInfo>|null} [peers] ControlPrune peers
+             * @property {number|null} [backoff] ControlPrune backoff
+             */
+
+            /**
+             * Constructs a new ControlPrune.
+             * @memberof RPC
+             * @classdesc Represents a ControlPrune.
+             * @implements IControlPrune
+             * @constructor
+             * @param {RPC.IControlPrune=} [p] Properties to set
+             */
+            function ControlPrune(p) {
+                this.peers = [];
+                if (p)
+                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
+                        if (p[ks[i]] != null)
+                            this[ks[i]] = p[ks[i]];
+            }
+
+            /**
+             * ControlPrune topicID.
+             * @member {string|null|undefined} topicID
+             * @memberof RPC.ControlPrune
+             * @instance
+             */
+            ControlPrune.prototype.topicID = null;
+
+            /**
+             * ControlPrune peers.
+             * @member {Array.<RPC.IPeerInfo>} peers
+             * @memberof RPC.ControlPrune
+             * @instance
+             */
+            ControlPrune.prototype.peers = $util.emptyArray;
+
+            /**
+             * ControlPrune backoff.
+             * @member {number|null|undefined} backoff
+             * @memberof RPC.ControlPrune
+             * @instance
+             */
+            ControlPrune.prototype.backoff = null;
+
+            // OneOf field names bound to virtual getters and setters
+            var $oneOfFields;
+
+            /**
+             * ControlPrune _topicID.
+             * @member {"topicID"|undefined} _topicID
+             * @memberof RPC.ControlPrune
+             * @instance
+             */
+            Object.defineProperty(ControlPrune.prototype, "_topicID", {
+                get: $util.oneOfGetter($oneOfFields = ["topicID"]),
+                set: $util.oneOfSetter($oneOfFields)
+            });
+
+            /**
+             * ControlPrune _backoff.
+             * @member {"backoff"|undefined} _backoff
+             * @memberof RPC.ControlPrune
+             * @instance
+             */
+            Object.defineProperty(ControlPrune.prototype, "_backoff", {
+                get: $util.oneOfGetter($oneOfFields = ["backoff"]),
+                set: $util.oneOfSetter($oneOfFields)
+            });
+
+            /**
+             * Encodes the specified ControlPrune message. Does not implicitly {@link RPC.ControlPrune.verify|verify} messages.
+             * @function encode
+             * @memberof RPC.ControlPrune
+             * @static
+             * @param {RPC.IControlPrune} m ControlPrune message or plain object to encode
+             * @param {$protobuf.Writer} [w] Writer to encode to
+             * @returns {$protobuf.Writer} Writer
+             */
+            ControlPrune.encode = function encode(m, w) {
+                if (!w)
+                    w = $Writer.create();
+                if (m.topicID != null && Object.hasOwnProperty.call(m, "topicID"))
+                    w.uint32(10).string(m.topicID);
+                if (m.peers != null && m.peers.length) {
+                    for (var i = 0; i < m.peers.length; ++i)
+                        $root.RPC.PeerInfo.encode(m.peers[i], w.uint32(18).fork()).ldelim();
+                }
+                if (m.backoff != null && Object.hasOwnProperty.call(m, "backoff"))
+                    w.uint32(24).uint64(m.backoff);
+                return w;
+            };
+
+            /**
+             * Decodes a ControlPrune message from the specified reader or buffer.
+             * @function decode
+             * @memberof RPC.ControlPrune
+             * @static
+             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
+             * @param {number} [l] Message length if known beforehand
+             * @returns {RPC.ControlPrune} ControlPrune
+             * @throws {Error} If the payload is not a reader or valid buffer
+             * @throws {$protobuf.util.ProtocolError} If required fields are missing
+             */
+            ControlPrune.decode = function decode(r, l) {
+                if (!(r instanceof $Reader))
+                    r = $Reader.create(r);
+                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlPrune();
+                while (r.pos < c) {
+                    var t = r.uint32();
+                    switch (t >>> 3) {
+                    case 1:
+                        m.topicID = r.string();
+                        break;
+                    case 2:
+                        if (!(m.peers && m.peers.length))
+                            m.peers = [];
+                        m.peers.push($root.RPC.PeerInfo.decode(r, r.uint32()));
+                        break;
+                    case 3:
+                        m.backoff = r.uint64();
+                        break;
+                    default:
+                        r.skipType(t & 7);
+                        break;
+                    }
+                }
+                return m;
+            };
+
+            /**
+             * Creates a ControlPrune message from a plain object. Also converts values to their respective internal types.
+             * @function fromObject
+             * @memberof RPC.ControlPrune
+             * @static
+             * @param {Object.<string,*>} d Plain object
+             * @returns {RPC.ControlPrune} ControlPrune
+             */
+            ControlPrune.fromObject = function fromObject(d) {
+                if (d instanceof $root.RPC.ControlPrune)
+                    return d;
+                var m = new $root.RPC.ControlPrune();
+                if (d.topicID != null) {
+                    m.topicID = String(d.topicID);
+                }
+                if (d.peers) {
+                    if (!Array.isArray(d.peers))
+                        throw TypeError(".RPC.ControlPrune.peers: array expected");
+                    m.peers = [];
+                    for (var i = 0; i < d.peers.length; ++i) {
+                        if (typeof d.peers[i] !== "object")
+                            throw TypeError(".RPC.ControlPrune.peers: object expected");
+                        m.peers[i] = $root.RPC.PeerInfo.fromObject(d.peers[i]);
+                    }
+                }
+                if (d.backoff != null) {
+                    if ($util.Long)
+                        (m.backoff = $util.Long.fromValue(d.backoff)).unsigned = true;
+                    else if (typeof d.backoff === "string")
+                        m.backoff = parseInt(d.backoff, 10);
+                    else if (typeof d.backoff === "number")
+                        m.backoff = d.backoff;
+                    else if (typeof d.backoff === "object")
+                        m.backoff = new $util.LongBits(d.backoff.low >>> 0, d.backoff.high >>> 0).toNumber(true);
+                }
+                return m;
+            };
+
+            /**
+             * Creates a plain object from a ControlPrune message. Also converts values to other types if specified.
+             * @function toObject
+             * @memberof RPC.ControlPrune
+             * @static
+             * @param {RPC.ControlPrune} m ControlPrune
+             * @param {$protobuf.IConversionOptions} [o] Conversion options
+             * @returns {Object.<string,*>} Plain object
+             */
+            ControlPrune.toObject = function toObject(m, o) {
+                if (!o)
+                    o = {};
+                var d = {};
+                if (o.arrays || o.defaults) {
+                    d.peers = [];
+                }
+                if (m.topicID != null && m.hasOwnProperty("topicID")) {
+                    d.topicID = m.topicID;
+                    if (o.oneofs)
+                        d._topicID = "topicID";
+                }
+                if (m.peers && m.peers.length) {
+                    d.peers = [];
+                    for (var j = 0; j < m.peers.length; ++j) {
+                        d.peers[j] = $root.RPC.PeerInfo.toObject(m.peers[j], o);
+                    }
+                }
+                if (m.backoff != null && m.hasOwnProperty("backoff")) {
+                    if (typeof m.backoff === "number")
+                        d.backoff = o.longs === String ? String(m.backoff) : m.backoff;
+                    else
+                        d.backoff = o.longs === String ? $util.Long.prototype.toString.call(m.backoff) : o.longs === Number ? new $util.LongBits(m.backoff.low >>> 0, m.backoff.high >>> 0).toNumber(true) : m.backoff;
+                    if (o.oneofs)
+                        d._backoff = "backoff";
+                }
+                return d;
+            };
+
+            /**
+             * Converts this ControlPrune to JSON.
+             * @function toJSON
+             * @memberof RPC.ControlPrune
+             * @instance
+             * @returns {Object.<string,*>} JSON object
+             */
+            ControlPrune.prototype.toJSON = function toJSON() {
+                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
+            };
+
+            return ControlPrune;
+        })();
+
+        RPC.PeerInfo = (function() {
+
+            /**
+             * Properties of a PeerInfo.
+             * @memberof RPC
+             * @interface IPeerInfo
+             * @property {Uint8Array|null} [peerID] PeerInfo peerID
+             * @property {Uint8Array|null} [signedPeerRecord] PeerInfo signedPeerRecord
+             */
+
+            /**
+             * Constructs a new PeerInfo.
+             * @memberof RPC
+             * @classdesc Represents a PeerInfo.
+             * @implements IPeerInfo
+             * @constructor
+             * @param {RPC.IPeerInfo=} [p] Properties to set
+             */
+            function PeerInfo(p) {
+                if (p)
+                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)
+                        if (p[ks[i]] != null)
+                            this[ks[i]] = p[ks[i]];
+            }
+
+            /**
+             * PeerInfo peerID.
+             * @member {Uint8Array|null|undefined} peerID
+             * @memberof RPC.PeerInfo
+             * @instance
+             */
+            PeerInfo.prototype.peerID = null;
+
+            /**
+             * PeerInfo signedPeerRecord.
+             * @member {Uint8Array|null|undefined} signedPeerRecord
+             * @memberof RPC.PeerInfo
+             * @instance
+             */
+            PeerInfo.prototype.signedPeerRecord = null;
+
+            // OneOf field names bound to virtual getters and setters
+            var $oneOfFields;
+
+            /**
+             * PeerInfo _peerID.
+             * @member {"peerID"|undefined} _peerID
+             * @memberof RPC.PeerInfo
+             * @instance
+             */
+            Object.defineProperty(PeerInfo.prototype, "_peerID", {
+                get: $util.oneOfGetter($oneOfFields = ["peerID"]),
+                set: $util.oneOfSetter($oneOfFields)
+            });
+
+            /**
+             * PeerInfo _signedPeerRecord.
+             * @member {"signedPeerRecord"|undefined} _signedPeerRecord
+             * @memberof RPC.PeerInfo
+             * @instance
+             */
+            Object.defineProperty(PeerInfo.prototype, "_signedPeerRecord", {
+                get: $util.oneOfGetter($oneOfFields = ["signedPeerRecord"]),
+                set: $util.oneOfSetter($oneOfFields)
+            });
+
+            /**
+             * Encodes the specified PeerInfo message. Does not implicitly {@link RPC.PeerInfo.verify|verify} messages.
+             * @function encode
+             * @memberof RPC.PeerInfo
+             * @static
+             * @param {RPC.IPeerInfo} m PeerInfo message or plain object to encode
+             * @param {$protobuf.Writer} [w] Writer to encode to
+             * @returns {$protobuf.Writer} Writer
+             */
+            PeerInfo.encode = function encode(m, w) {
+                if (!w)
+                    w = $Writer.create();
+                if (m.peerID != null && Object.hasOwnProperty.call(m, "peerID"))
+                    w.uint32(10).bytes(m.peerID);
+                if (m.signedPeerRecord != null && Object.hasOwnProperty.call(m, "signedPeerRecord"))
+                    w.uint32(18).bytes(m.signedPeerRecord);
+                return w;
+            };
+
+            /**
+             * Decodes a PeerInfo message from the specified reader or buffer.
+             * @function decode
+             * @memberof RPC.PeerInfo
+             * @static
+             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from
+             * @param {number} [l] Message length if known beforehand
+             * @returns {RPC.PeerInfo} PeerInfo
+             * @throws {Error} If the payload is not a reader or valid buffer
+             * @throws {$protobuf.util.ProtocolError} If required fields are missing
+             */
+            PeerInfo.decode = function decode(r, l) {
+                if (!(r instanceof $Reader))
+                    r = $Reader.create(r);
+                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.PeerInfo();
+                while (r.pos < c) {
+                    var t = r.uint32();
+                    switch (t >>> 3) {
+                    case 1:
+                        m.peerID = r.bytes();
+                        break;
+                    case 2:
+                        m.signedPeerRecord = r.bytes();
+                        break;
+                    default:
+                        r.skipType(t & 7);
+                        break;
+                    }
+                }
+                return m;
+            };
+
+            /**
+             * Creates a PeerInfo message from a plain object. Also converts values to their respective internal types.
+             * @function fromObject
+             * @memberof RPC.PeerInfo
+             * @static
+             * @param {Object.<string,*>} d Plain object
+             * @returns {RPC.PeerInfo} PeerInfo
+             */
+            PeerInfo.fromObject = function fromObject(d) {
+                if (d instanceof $root.RPC.PeerInfo)
+                    return d;
+                var m = new $root.RPC.PeerInfo();
+                if (d.peerID != null) {
+                    if (typeof d.peerID === "string")
+                        $util.base64.decode(d.peerID, m.peerID = $util.newBuffer($util.base64.length(d.peerID)), 0);
+                    else if (d.peerID.length)
+                        m.peerID = d.peerID;
+                }
+                if (d.signedPeerRecord != null) {
+                    if (typeof d.signedPeerRecord === "string")
+                        $util.base64.decode(d.signedPeerRecord, m.signedPeerRecord = $util.newBuffer($util.base64.length(d.signedPeerRecord)), 0);
+                    else if (d.signedPeerRecord.length)
+                        m.signedPeerRecord = d.signedPeerRecord;
+                }
+                return m;
+            };
+
+            /**
+             * Creates a plain object from a PeerInfo message. Also converts values to other types if specified.
+             * @function toObject
+             * @memberof RPC.PeerInfo
+             * @static
+             * @param {RPC.PeerInfo} m PeerInfo
+             * @param {$protobuf.IConversionOptions} [o] Conversion options
+             * @returns {Object.<string,*>} Plain object
+             */
+            PeerInfo.toObject = function toObject(m, o) {
+                if (!o)
+                    o = {};
+                var d = {};
+                if (m.peerID != null && m.hasOwnProperty("peerID")) {
+                    d.peerID = o.bytes === String ? $util.base64.encode(m.peerID, 0, m.peerID.length) : o.bytes === Array ? Array.prototype.slice.call(m.peerID) : m.peerID;
+                    if (o.oneofs)
+                        d._peerID = "peerID";
+                }
+                if (m.signedPeerRecord != null && m.hasOwnProperty("signedPeerRecord")) {
+                    d.signedPeerRecord = o.bytes === String ? $util.base64.encode(m.signedPeerRecord, 0, m.signedPeerRecord.length) : o.bytes === Array ? Array.prototype.slice.call(m.signedPeerRecord) : m.signedPeerRecord;
+                    if (o.oneofs)
+                        d._signedPeerRecord = "signedPeerRecord";
+                }
+                return d;
+            };
+
+            /**
+             * Converts this PeerInfo to JSON.
+             * @function toJSON
+             * @memberof RPC.PeerInfo
+             * @instance
+             * @returns {Object.<string,*>} JSON object
+             */
+            PeerInfo.prototype.toJSON = function toJSON() {
+                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
+            };
+
+            return PeerInfo;
+        })();
+
+        return RPC;
+    })();
+
+    return $root;
+});
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/rpc.proto b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/rpc.proto
new file mode 100644
index 0000000..4e09b4e
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/rpc.proto
@@ -0,0 +1,52 @@
+syntax = "proto3";
+
+message RPC {
+  repeated SubOpts subscriptions = 1;
+  repeated Message messages = 2;
+  optional ControlMessage control = 3;
+
+  message SubOpts {
+    optional bool subscribe = 1; // subscribe or unsubcribe
+    optional string topic = 2;
+  }
+
+  message Message {
+    optional bytes from = 1;
+    optional bytes data = 2;
+    optional bytes seqno = 3;
+    required string topic = 4;
+    optional bytes signature = 5;
+    optional bytes key = 6;
+  }
+
+  message ControlMessage {
+    repeated ControlIHave ihave = 1;
+    repeated ControlIWant iwant = 2;
+    repeated ControlGraft graft = 3;
+    repeated ControlPrune prune = 4;
+  }
+
+  message ControlIHave {
+    optional string topicID = 1;
+    repeated bytes messageIDs = 2;
+  }
+
+  message ControlIWant {
+    repeated bytes messageIDs = 1;
+  }
+
+  message ControlGraft {
+    optional string topicID = 1;
+  }
+
+  message ControlPrune {
+    optional string topicID = 1;
+    repeated PeerInfo peers = 2;
+    optional uint64 backoff = 3;
+  }
+
+  message PeerInfo {
+    optional bytes peerID = 1;
+    optional bytes signedPeerRecord = 2;
+  }
+}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/buildRawMessage.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/buildRawMessage.js
index 75b1723..602896c 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/buildRawMessage.js
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/buildRawMessage.js
@@ -1,9 +1,9 @@
 import { randomBytes } from '@libp2p/crypto';
-import { marshalPublicKey, unmarshalPublicKey } from '@libp2p/crypto/keys';
+import { publicKeyFromProtobuf } from '@libp2p/crypto/keys';
 import { StrictSign, StrictNoSign } from '@libp2p/interface';
-import { peerIdFromBytes } from '@libp2p/peer-id';
+import { peerIdFromMultihash } from '@libp2p/peer-id';
+import * as Digest from 'multiformats/hashes/digest';
 import { concat as uint8ArrayConcat } from 'uint8arrays/concat';
-import { equals as uint8ArrayEquals } from 'uint8arrays/equals';
 import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
 import { toString as uint8ArrayToString } from 'uint8arrays/to-string';
 import { RPC } from '../message/rpc.js';
@@ -13,7 +13,7 @@ export async function buildRawMessage(publishConfig, topic, originalData, transf
     switch (publishConfig.type) {
         case PublishConfigType.Signing: {
             const rpcMsg = {
-                from: publishConfig.author.toBytes(),
+                from: publishConfig.author.toMultihash().bytes,
                 data: transformedData,
                 seqno: randomBytes(8),
                 topic,
@@ -32,7 +32,7 @@ export async function buildRawMessage(publishConfig, topic, originalData, transf
                 sequenceNumber: BigInt(`0x${uint8ArrayToString(rpcMsg.seqno, 'base16')}`),
                 topic,
                 signature: rpcMsg.signature,
-                key: rpcMsg.key
+                key: publicKeyFromProtobuf(rpcMsg.key)
             };
             return {
                 raw: rpcMsg,
@@ -86,7 +86,7 @@ export async function validateToRawMessage(signaturePolicy, msg) {
             let fromPeerId;
             try {
                 // TODO: Fix PeerId types
-                fromPeerId = peerIdFromBytes(msg.from);
+                fromPeerId = peerIdFromMultihash(Digest.decode(msg.from));
             }
             catch (e) {
                 return { valid: false, error: ValidateError.InvalidPeerId };
@@ -99,9 +99,9 @@ export async function validateToRawMessage(signaturePolicy, msg) {
             // - verify sig
             let publicKey;
             if (msg.key != null) {
-                publicKey = unmarshalPublicKey(msg.key);
+                publicKey = publicKeyFromProtobuf(msg.key);
                 // TODO: Should `fromPeerId.pubKey` be optional?
-                if (fromPeerId.publicKey !== undefined && !uint8ArrayEquals(publicKey.bytes, fromPeerId.publicKey)) {
+                if (fromPeerId.publicKey !== undefined && !publicKey.equals(fromPeerId.publicKey)) {
                     return { valid: false, error: ValidateError.InvalidPeerId };
                 }
             }
@@ -109,7 +109,7 @@ export async function validateToRawMessage(signaturePolicy, msg) {
                 if (fromPeerId.publicKey == null) {
                     return { valid: false, error: ValidateError.InvalidPeerId };
                 }
-                publicKey = unmarshalPublicKey(fromPeerId.publicKey);
+                publicKey = fromPeerId.publicKey;
             }
             const rpcMsgPreSign = {
                 from: msg.from,
@@ -134,7 +134,7 @@ export async function validateToRawMessage(signaturePolicy, msg) {
                     sequenceNumber: BigInt(`0x${uint8ArrayToString(msg.seqno, 'base16')}`),
                     topic: msg.topic,
                     signature: msg.signature,
-                    key: msg.key ?? marshalPublicKey(publicKey)
+                    key: msg.key != null ? publicKeyFromProtobuf(msg.key) : publicKey
                 }
             };
         }
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/buildRawMessage.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/buildRawMessage.js.map
index d596983..df441d9 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/buildRawMessage.js.map
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/buildRawMessage.js.map
@@ -1 +1 @@
-{"version":3,"file":"buildRawMessage.js","sourceRoot":"","sources":["../../../src/utils/buildRawMessage.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"buildRawMessage.js","sourceRoot":"","sources":["../../../src/utils/buildRawMessage.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/msgIdFn.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/msgIdFn.js
index b95a717..488cb10 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/msgIdFn.js
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/msgIdFn.js
@@ -11,7 +11,7 @@ export function msgIdFnStrictSign(msg) {
     if (msg.sequenceNumber == null)
         throw Error('missing seqno field');
     // TODO: Should use .from here or key?
-    return msgId(msg.from.toBytes(), msg.sequenceNumber);
+    return msgId(msg.from.publicKey ?? msg.key, msg.sequenceNumber);
 }
 /**
  * Generate a message id, based on message `data`
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/msgIdFn.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/msgIdFn.js.map
index a6bd556..0538bf5 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/msgIdFn.js.map
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/msgIdFn.js.map
@@ -1 +1 @@
-{"version":3,"file":"msgIdFn.js","sourceRoot":"","sources":["../../../src/utils/msgIdFn.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAA;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAA;AAGjD;;GAEG;AACH,MAAM,UAAU,iBAAiB,CAAE,GAAY;IAC7C,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;QAC1B,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAA;IACjD,CAAC;IACD,sBAAsB;IACtB,IAAI,GAAG,CAAC,cAAc,IAAI,IAAI;QAAE,MAAM,KAAK,CAAC,qBAAqB,CAAC,CAAA;IAElE,sCAAsC;IACtC,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,GAAG,CAAC,cAAc,CAAC,CAAA;AACtD,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,mBAAmB,CAAE,GAAY;IACrD,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;AAChC,CAAC"}
\ No newline at end of file
+{"version":3,"file":"msgIdFn.js","sourceRoot":"","sources":["../../../src/utils/msgIdFn.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAA;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAA;AAGjD;;GAEG;AACH,MAAM,UAAU,iBAAiB,CAAE,GAAY;IAC7C,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;QAC1B,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAA;IACjD,CAAC;IACD,sBAAsB;IACtB,IAAI,GAAG,CAAC,cAAc,IAAI,IAAI;QAAE,MAAM,KAAK,CAAC,qBAAqB,CAAC,CAAA;IAElE,sCAAsC;IACtC,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,cAAc,CAAC,CAAA;AACjE,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,mBAAmB,CAAE,GAAY;IACrD,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;AAChC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.d.ts
index e2eac64..cfba540 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.d.ts
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.d.ts
@@ -1,8 +1,8 @@
 import { StrictSign, StrictNoSign } from '@libp2p/interface';
 import { type PublishConfig } from '../types.js';
-import type { PeerId } from '@libp2p/interface';
+import type { PeerId, PrivateKey } from '@libp2p/interface';
 /**
  * Prepare a PublishConfig object from a PeerId.
  */
-export declare function getPublishConfigFromPeerId(signaturePolicy: typeof StrictSign | typeof StrictNoSign, peerId?: PeerId): Promise<PublishConfig>;
+export declare function getPublishConfigFromPeerId(signaturePolicy: typeof StrictSign | typeof StrictNoSign, peerId: PeerId, privateKey: PrivateKey): PublishConfig;
 //# sourceMappingURL=publishConfig.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.d.ts.map
index e8c10a6..e291d9b 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.d.ts.map
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"publishConfig.d.ts","sourceRoot":"","sources":["../../../src/utils/publishConfig.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;AAC5D,OAAO,EAAE,KAAK,aAAa,EAAqB,MAAM,aAAa,CAAA;AACnE,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAA;AAE/C;;GAEG;AACH,wBAAsB,0BAA0B,CAC9C,eAAe,EAAE,OAAO,UAAU,GAAG,OAAO,YAAY,EACxD,MAAM,CAAC,EAAE,MAAM,GACd,OAAO,CAAC,aAAa,CAAC,CAkCxB"}
\ No newline at end of file
+{"version":3,"file":"publishConfig.d.ts","sourceRoot":"","sources":["../../../src/utils/publishConfig.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;AAC5D,OAAO,EAAE,KAAK,aAAa,EAAqB,MAAM,aAAa,CAAA;AACnE,OAAO,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;AAE3D;;GAEG;AACH,wBAAgB,0BAA0B,CACxC,eAAe,EAAE,OAAO,UAAU,GAAG,OAAO,YAAY,EACxD,MAAM,EAAE,MAAM,EACd,UAAU,EAAE,UAAU,GACrB,aAAa,CAmBf"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.js
index 21075bf..89ebede 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.js
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.js
@@ -1,27 +1,16 @@
-import { unmarshalPrivateKey } from '@libp2p/crypto/keys';
+import { publicKeyToProtobuf } from '@libp2p/crypto/keys';
 import { StrictSign, StrictNoSign } from '@libp2p/interface';
 import { PublishConfigType } from '../types.js';
 /**
  * Prepare a PublishConfig object from a PeerId.
  */
-export async function getPublishConfigFromPeerId(signaturePolicy, peerId) {
+export function getPublishConfigFromPeerId(signaturePolicy, peerId, privateKey) {
     switch (signaturePolicy) {
         case StrictSign: {
-            if (peerId == null) {
-                throw Error('Must provide PeerId');
-            }
-            if (peerId.privateKey == null) {
-                throw Error('Cannot sign message, no private key present');
-            }
-            if (peerId.publicKey == null) {
-                throw Error('Cannot sign message, no public key present');
-            }
-            // Transform privateKey once at initialization time instead of once per message
-            const privateKey = await unmarshalPrivateKey(peerId.privateKey);
             return {
                 type: PublishConfigType.Signing,
                 author: peerId,
-                key: peerId.publicKey,
+                key: publicKeyToProtobuf(privateKey.publicKey),
                 privateKey
             };
         }
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.js.map
index 6b28cb1..9949dfc 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.js.map
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/src/utils/publishConfig.js.map
@@ -1 +1 @@
-{"version":3,"file":"publishConfig.js","sourceRoot":"","sources":["../../../src/utils/publishConfig.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,qBAAqB,CAAA;AACzD,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;AAC5D,OAAO,EAAsB,iBAAiB,EAAE,MAAM,aAAa,CAAA;AAGnE;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,0BAA0B,CAC9C,eAAwD,EACxD,MAAe;IAEf,QAAQ,eAAe,EAAE,CAAC;QACxB,KAAK,UAAU,CAAC,CAAC,CAAC;YAChB,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC;gBACnB,MAAM,KAAK,CAAC,qBAAqB,CAAC,CAAA;YACpC,CAAC;YAED,IAAI,MAAM,CAAC,UAAU,IAAI,IAAI,EAAE,CAAC;gBAC9B,MAAM,KAAK,CAAC,6CAA6C,CAAC,CAAA;YAC5D,CAAC;YAED,IAAI,MAAM,CAAC,SAAS,IAAI,IAAI,EAAE,CAAC;gBAC7B,MAAM,KAAK,CAAC,4CAA4C,CAAC,CAAA;YAC3D,CAAC;YAED,+EAA+E;YAC/E,MAAM,UAAU,GAAG,MAAM,mBAAmB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;YAE/D,OAAO;gBACL,IAAI,EAAE,iBAAiB,CAAC,OAAO;gBAC/B,MAAM,EAAE,MAAM;gBACd,GAAG,EAAE,MAAM,CAAC,SAAS;gBACrB,UAAU;aACX,CAAA;QACH,CAAC;QAED,KAAK,YAAY;YACf,OAAO;gBACL,IAAI,EAAE,iBAAiB,CAAC,SAAS;aAClC,CAAA;QAEH;YACE,MAAM,IAAI,KAAK,CAAC,6BAA6B,eAAe,GAAG,CAAC,CAAA;IACpE,CAAC;AACH,CAAC"}
\ No newline at end of file
+{"version":3,"file":"publishConfig.js","sourceRoot":"","sources":["../../../src/utils/publishConfig.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,qBAAqB,CAAA;AACzD,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;AAC5D,OAAO,EAAsB,iBAAiB,EAAE,MAAM,aAAa,CAAA;AAGnE;;GAEG;AACH,MAAM,UAAU,0BAA0B,CACxC,eAAwD,EACxD,MAAc,EACd,UAAsB;IAEtB,QAAQ,eAAe,EAAE,CAAC;QACxB,KAAK,UAAU,CAAC,CAAC,CAAC;YAChB,OAAO;gBACL,IAAI,EAAE,iBAAiB,CAAC,OAAO;gBAC/B,MAAM,EAAE,MAAM;gBACd,GAAG,EAAE,mBAAmB,CAAC,UAAU,CAAC,SAAS,CAAC;gBAC9C,UAAU;aACX,CAAA;QACH,CAAC;QAED,KAAK,YAAY;YACf,OAAO;gBACL,IAAI,EAAE,iBAAiB,CAAC,SAAS;aAClC,CAAA;QAEH;YACE,MAAM,IAAI,KAAK,CAAC,6BAA6B,eAAe,GAAG,CAAC,CAAA;IACpE,CAAC;AACH,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/stats.json b/node_modules/@chainsafe/libp2p-gossipsub/dist/stats.json
new file mode 100644
index 0000000..36e00f3
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/stats.json
@@ -0,0 +1 @@
+{"inputs":{"node_modules/@libp2p/interface/dist/src/connection/index.js":{"bytes":201,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/connection-encrypter/index.js":{"bytes":44,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/connection-gater/index.js":{"bytes":44,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/content-routing/index.js":{"bytes":598,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/keys/index.js":{"bytes":131,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/metrics/index.js":{"bytes":44,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/peer-discovery/index.js":{"bytes":579,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/peer-id/index.js":{"bytes":186,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/peer-info/index.js":{"bytes":44,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/peer-routing/index.js":{"bytes":559,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/peer-store/index.js":{"bytes":44,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/peer-store/tags.js":{"bytes":72,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/pubsub/index.js":{"bytes":1523,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/record/index.js":{"bytes":44,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/stream-handler/index.js":{"bytes":44,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/stream-muxer/index.js":{"bytes":44,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/topology/index.js":{"bytes":44,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/transport/index.js":{"bytes":637,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/errors.js":{"bytes":2106,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/event-target.js":{"bytes":2165,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/events.browser.js":{"bytes":118,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/events.js":{"bytes":334,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/events.browser.js","kind":"import-statement","original":"events"}],"format":"esm"},"node_modules/@libp2p/interface/dist/src/startable.js":{"bytes":1261,"imports":[],"format":"esm"},"node_modules/@libp2p/interface/dist/src/index.js":{"bytes":1134,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/connection/index.js","kind":"import-statement","original":"./connection/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/connection-encrypter/index.js","kind":"import-statement","original":"./connection-encrypter/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/connection-gater/index.js","kind":"import-statement","original":"./connection-gater/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/content-routing/index.js","kind":"import-statement","original":"./content-routing/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/keys/index.js","kind":"import-statement","original":"./keys/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/metrics/index.js","kind":"import-statement","original":"./metrics/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/peer-discovery/index.js","kind":"import-statement","original":"./peer-discovery/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/peer-id/index.js","kind":"import-statement","original":"./peer-id/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/peer-info/index.js","kind":"import-statement","original":"./peer-info/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/peer-routing/index.js","kind":"import-statement","original":"./peer-routing/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/peer-store/index.js","kind":"import-statement","original":"./peer-store/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/peer-store/tags.js","kind":"import-statement","original":"./peer-store/tags.js"},{"path":"node_modules/@libp2p/interface/dist/src/pubsub/index.js","kind":"import-statement","original":"./pubsub/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/record/index.js","kind":"import-statement","original":"./record/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/stream-handler/index.js","kind":"import-statement","original":"./stream-handler/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/stream-muxer/index.js","kind":"import-statement","original":"./stream-muxer/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/topology/index.js","kind":"import-statement","original":"./topology/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/transport/index.js","kind":"import-statement","original":"./transport/index.js"},{"path":"node_modules/@libp2p/interface/dist/src/errors.js","kind":"import-statement","original":"./errors.js"},{"path":"node_modules/@libp2p/interface/dist/src/event-target.js","kind":"import-statement","original":"./event-target.js"},{"path":"node_modules/@libp2p/interface/dist/src/events.js","kind":"import-statement","original":"./events.js"},{"path":"node_modules/@libp2p/interface/dist/src/startable.js","kind":"import-statement","original":"./startable.js"}],"format":"esm"},"node_modules/multiformats/dist/src/bytes.js":{"bytes":1222,"imports":[],"format":"esm"},"node_modules/multiformats/dist/src/vendor/base-x.js":{"bytes":5458,"imports":[],"format":"esm"},"node_modules/multiformats/dist/src/bases/base.js":{"bytes":6159,"imports":[{"path":"node_modules/multiformats/dist/src/bytes.js","kind":"import-statement","original":"../bytes.js"},{"path":"node_modules/multiformats/dist/src/vendor/base-x.js","kind":"import-statement","original":"../vendor/base-x.js"}],"format":"esm"},"node_modules/multiformats/dist/src/bases/base58.js":{"bytes":379,"imports":[{"path":"node_modules/multiformats/dist/src/bases/base.js","kind":"import-statement","original":"./base.js"}],"format":"esm"},"node_modules/multiformats/dist/src/bases/base10.js":{"bytes":167,"imports":[{"path":"node_modules/multiformats/dist/src/bases/base.js","kind":"import-statement","original":"./base.js"}],"format":"esm"},"node_modules/multiformats/dist/src/bases/base16.js":{"bytes":333,"imports":[{"path":"node_modules/multiformats/dist/src/bases/base.js","kind":"import-statement","original":"./base.js"}],"format":"esm"},"node_modules/multiformats/dist/src/bases/base2.js":{"bytes":180,"imports":[{"path":"node_modules/multiformats/dist/src/bases/base.js","kind":"import-statement","original":"./base.js"}],"format":"esm"},"node_modules/multiformats/dist/src/bases/base256emoji.js":{"bytes":1854,"imports":[{"path":"node_modules/multiformats/dist/src/bases/base.js","kind":"import-statement","original":"./base.js"}],"format":"esm"},"node_modules/multiformats/dist/src/bases/base32.js":{"bytes":1443,"imports":[{"path":"node_modules/multiformats/dist/src/bases/base.js","kind":"import-statement","original":"./base.js"}],"format":"esm"},"node_modules/multiformats/dist/src/bases/base36.js":{"bytes":327,"imports":[{"path":"node_modules/multiformats/dist/src/bases/base.js","kind":"import-statement","original":"./base.js"}],"format":"esm"},"node_modules/multiformats/dist/src/bases/base64.js":{"bytes":793,"imports":[{"path":"node_modules/multiformats/dist/src/bases/base.js","kind":"import-statement","original":"./base.js"}],"format":"esm"},"node_modules/multiformats/dist/src/bases/base8.js":{"bytes":186,"imports":[{"path":"node_modules/multiformats/dist/src/bases/base.js","kind":"import-statement","original":"./base.js"}],"format":"esm"},"node_modules/multiformats/dist/src/bases/identity.js":{"bytes":272,"imports":[{"path":"node_modules/multiformats/dist/src/bytes.js","kind":"import-statement","original":"../bytes.js"},{"path":"node_modules/multiformats/dist/src/bases/base.js","kind":"import-statement","original":"./base.js"}],"format":"esm"},"node_modules/multiformats/dist/src/codecs/json.js":{"bytes":334,"imports":[],"format":"esm"},"node_modules/multiformats/dist/src/codecs/raw.js":{"bytes":238,"imports":[{"path":"node_modules/multiformats/dist/src/bytes.js","kind":"import-statement","original":"../bytes.js"}],"format":"esm"},"node_modules/multiformats/dist/src/vendor/varint.js":{"bytes":2107,"imports":[],"format":"esm"},"node_modules/multiformats/dist/src/varint.js":{"bytes":398,"imports":[{"path":"node_modules/multiformats/dist/src/vendor/varint.js","kind":"import-statement","original":"./vendor/varint.js"}],"format":"esm"},"node_modules/multiformats/dist/src/hashes/digest.js":{"bytes":1769,"imports":[{"path":"node_modules/multiformats/dist/src/bytes.js","kind":"import-statement","original":"../bytes.js"},{"path":"node_modules/multiformats/dist/src/varint.js","kind":"import-statement","original":"../varint.js"}],"format":"esm"},"node_modules/multiformats/dist/src/hashes/identity.js":{"bytes":309,"imports":[{"path":"node_modules/multiformats/dist/src/bytes.js","kind":"import-statement","original":"../bytes.js"},{"path":"node_modules/multiformats/dist/src/hashes/digest.js","kind":"import-statement","original":"./digest.js"}],"format":"esm"},"node_modules/multiformats/dist/src/hashes/hasher.js":{"bytes":911,"imports":[{"path":"node_modules/multiformats/dist/src/hashes/digest.js","kind":"import-statement","original":"./digest.js"}],"format":"esm"},"node_modules/multiformats/dist/src/hashes/sha2-browser.js":{"bytes":398,"imports":[{"path":"node_modules/multiformats/dist/src/hashes/hasher.js","kind":"import-statement","original":"./hasher.js"}],"format":"esm"},"node_modules/multiformats/dist/src/link/interface.js":{"bytes":161,"imports":[],"format":"esm"},"node_modules/multiformats/dist/src/cid.js":{"bytes":13234,"imports":[{"path":"node_modules/multiformats/dist/src/bases/base32.js","kind":"import-statement","original":"./bases/base32.js"},{"path":"node_modules/multiformats/dist/src/bases/base58.js","kind":"import-statement","original":"./bases/base58.js"},{"path":"node_modules/multiformats/dist/src/bytes.js","kind":"import-statement","original":"./bytes.js"},{"path":"node_modules/multiformats/dist/src/hashes/digest.js","kind":"import-statement","original":"./hashes/digest.js"},{"path":"node_modules/multiformats/dist/src/varint.js","kind":"import-statement","original":"./varint.js"},{"path":"node_modules/multiformats/dist/src/link/interface.js","kind":"import-statement","original":"./link/interface.js"}],"format":"esm"},"node_modules/multiformats/dist/src/bases/interface.js":{"bytes":179,"imports":[],"format":"esm"},"node_modules/multiformats/dist/src/hashes/interface.js":{"bytes":63,"imports":[],"format":"esm"},"node_modules/multiformats/dist/src/codecs/interface.js":{"bytes":48,"imports":[],"format":"esm"},"node_modules/multiformats/dist/src/block/interface.js":{"bytes":48,"imports":[],"format":"esm"},"node_modules/multiformats/dist/src/interface.js":{"bytes":228,"imports":[{"path":"node_modules/multiformats/dist/src/bases/interface.js","kind":"import-statement","original":"./bases/interface.js"},{"path":"node_modules/multiformats/dist/src/hashes/interface.js","kind":"import-statement","original":"./hashes/interface.js"},{"path":"node_modules/multiformats/dist/src/codecs/interface.js","kind":"import-statement","original":"./codecs/interface.js"},{"path":"node_modules/multiformats/dist/src/link/interface.js","kind":"import-statement","original":"./link/interface.js"},{"path":"node_modules/multiformats/dist/src/block/interface.js","kind":"import-statement","original":"./block/interface.js"}],"format":"esm"},"node_modules/multiformats/dist/src/index.js":{"bytes":12547,"imports":[{"path":"node_modules/multiformats/dist/src/bytes.js","kind":"import-statement","original":"./bytes.js"},{"path":"node_modules/multiformats/dist/src/cid.js","kind":"import-statement","original":"./cid.js"},{"path":"node_modules/multiformats/dist/src/hashes/digest.js","kind":"import-statement","original":"./hashes/digest.js"},{"path":"node_modules/multiformats/dist/src/hashes/hasher.js","kind":"import-statement","original":"./hashes/hasher.js"},{"path":"node_modules/multiformats/dist/src/varint.js","kind":"import-statement","original":"./varint.js"},{"path":"node_modules/multiformats/dist/src/interface.js","kind":"import-statement","original":"./interface.js"}],"format":"esm"},"node_modules/multiformats/dist/src/basics.js":{"bytes":1016,"imports":[{"path":"node_modules/multiformats/dist/src/bases/base10.js","kind":"import-statement","original":"./bases/base10.js"},{"path":"node_modules/multiformats/dist/src/bases/base16.js","kind":"import-statement","original":"./bases/base16.js"},{"path":"node_modules/multiformats/dist/src/bases/base2.js","kind":"import-statement","original":"./bases/base2.js"},{"path":"node_modules/multiformats/dist/src/bases/base256emoji.js","kind":"import-statement","original":"./bases/base256emoji.js"},{"path":"node_modules/multiformats/dist/src/bases/base32.js","kind":"import-statement","original":"./bases/base32.js"},{"path":"node_modules/multiformats/dist/src/bases/base36.js","kind":"import-statement","original":"./bases/base36.js"},{"path":"node_modules/multiformats/dist/src/bases/base58.js","kind":"import-statement","original":"./bases/base58.js"},{"path":"node_modules/multiformats/dist/src/bases/base64.js","kind":"import-statement","original":"./bases/base64.js"},{"path":"node_modules/multiformats/dist/src/bases/base8.js","kind":"import-statement","original":"./bases/base8.js"},{"path":"node_modules/multiformats/dist/src/bases/identity.js","kind":"import-statement","original":"./bases/identity.js"},{"path":"node_modules/multiformats/dist/src/codecs/json.js","kind":"import-statement","original":"./codecs/json.js"},{"path":"node_modules/multiformats/dist/src/codecs/raw.js","kind":"import-statement","original":"./codecs/raw.js"},{"path":"node_modules/multiformats/dist/src/hashes/identity.js","kind":"import-statement","original":"./hashes/identity.js"},{"path":"node_modules/multiformats/dist/src/hashes/sha2-browser.js","kind":"import-statement","original":"./hashes/sha2.js"},{"path":"node_modules/multiformats/dist/src/index.js","kind":"import-statement","original":"./index.js"}],"format":"esm"},"node_modules/uint8arrays/dist/src/equals.js":{"bytes":391,"imports":[],"format":"esm"},"node_modules/@libp2p/peer-id/dist/src/index.js":{"bytes":7634,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/multiformats/dist/src/bases/base58.js","kind":"import-statement","original":"multiformats/bases/base58"},{"path":"node_modules/multiformats/dist/src/basics.js","kind":"import-statement","original":"multiformats/basics"},{"path":"node_modules/multiformats/dist/src/cid.js","kind":"import-statement","original":"multiformats/cid"},{"path":"node_modules/multiformats/dist/src/hashes/digest.js","kind":"import-statement","original":"multiformats/hashes/digest"},{"path":"node_modules/multiformats/dist/src/hashes/identity.js","kind":"import-statement","original":"multiformats/hashes/identity"},{"path":"node_modules/multiformats/dist/src/hashes/sha2-browser.js","kind":"import-statement","original":"multiformats/hashes/sha2"},{"path":"node_modules/uint8arrays/dist/src/equals.js","kind":"import-statement","original":"uint8arrays/equals"}],"format":"esm"},"node_modules/uint8arrays/dist/src/util/as-uint8array.js":{"bytes":310,"imports":[],"format":"esm"},"node_modules/uint8arrays/dist/src/alloc.js":{"bytes":783,"imports":[{"path":"node_modules/uint8arrays/dist/src/util/as-uint8array.js","kind":"import-statement","original":"./util/as-uint8array.js"}],"format":"esm"},"node_modules/uint8-varint/dist/src/index.js":{"bytes":5331,"imports":[{"path":"node_modules/uint8arrays/dist/src/alloc.js","kind":"import-statement","original":"uint8arrays/alloc"}],"format":"esm"},"node_modules/uint8arrays/dist/src/concat.js":{"bytes":668,"imports":[{"path":"node_modules/uint8arrays/dist/src/alloc.js","kind":"import-statement","original":"./alloc.js"},{"path":"node_modules/uint8arrays/dist/src/util/as-uint8array.js","kind":"import-statement","original":"./util/as-uint8array.js"}],"format":"esm"},"node_modules/uint8arraylist/dist/src/index.js":{"bytes":19478,"imports":[{"path":"node_modules/uint8arrays/dist/src/alloc.js","kind":"import-statement","original":"uint8arrays/alloc"},{"path":"node_modules/uint8arrays/dist/src/concat.js","kind":"import-statement","original":"uint8arrays/concat"},{"path":"node_modules/uint8arrays/dist/src/equals.js","kind":"import-statement","original":"uint8arrays/equals"}],"format":"esm"},"node_modules/it-length-prefixed/dist/src/utils.js":{"bytes":124,"imports":[],"format":"esm"},"node_modules/it-length-prefixed/dist/src/encode.js":{"bytes":1603,"imports":[{"path":"node_modules/uint8-varint/dist/src/index.js","kind":"import-statement","original":"uint8-varint"},{"path":"node_modules/uint8arraylist/dist/src/index.js","kind":"import-statement","original":"uint8arraylist"},{"path":"node_modules/uint8arrays/dist/src/alloc.js","kind":"import-statement","original":"uint8arrays/alloc"},{"path":"node_modules/it-length-prefixed/dist/src/utils.js","kind":"import-statement","original":"./utils.js"}],"format":"esm"},"node_modules/err-code/index.js":{"bytes":1392,"imports":[],"format":"cjs"},"node_modules/it-length-prefixed/dist/src/decode.js":{"bytes":4692,"imports":[{"path":"node_modules/err-code/index.js","kind":"import-statement","original":"err-code"},{"path":"node_modules/uint8-varint/dist/src/index.js","kind":"import-statement","original":"uint8-varint"},{"path":"node_modules/uint8arraylist/dist/src/index.js","kind":"import-statement","original":"uint8arraylist"},{"path":"node_modules/it-length-prefixed/dist/src/utils.js","kind":"import-statement","original":"./utils.js"}],"format":"esm"},"node_modules/it-length-prefixed/dist/src/index.js":{"bytes":109,"imports":[{"path":"node_modules/it-length-prefixed/dist/src/encode.js","kind":"import-statement","original":"./encode.js"},{"path":"node_modules/it-length-prefixed/dist/src/decode.js","kind":"import-statement","original":"./decode.js"}],"format":"esm"},"node_modules/p-defer/index.js":{"bytes":197,"imports":[],"format":"esm"},"node_modules/it-pushable/dist/src/fifo.js":{"bytes":2149,"imports":[],"format":"esm"},"node_modules/it-pushable/dist/src/index.js":{"bytes":7016,"imports":[{"path":"node_modules/p-defer/index.js","kind":"import-statement","original":"p-defer"},{"path":"node_modules/it-pushable/dist/src/fifo.js","kind":"import-statement","original":"./fifo.js"}],"format":"esm"},"node_modules/it-merge/dist/src/index.js":{"bytes":2169,"imports":[{"path":"node_modules/it-pushable/dist/src/index.js","kind":"import-statement","original":"it-pushable"}],"format":"esm"},"node_modules/it-pipe/dist/src/index.js":{"bytes":2560,"imports":[{"path":"node_modules/it-pushable/dist/src/index.js","kind":"import-statement","original":"it-pushable"},{"path":"node_modules/it-merge/dist/src/index.js","kind":"import-statement","original":"it-merge"}],"format":"esm"},"dist/src/constants.js":{"bytes":9279,"imports":[],"format":"esm"},"node_modules/@protobufjs/aspromise/index.js":{"bytes":1592,"imports":[],"format":"cjs"},"node_modules/@protobufjs/base64/index.js":{"bytes":3943,"imports":[],"format":"cjs"},"node_modules/@protobufjs/eventemitter/index.js":{"bytes":2088,"imports":[],"format":"cjs"},"node_modules/@protobufjs/float/index.js":{"bytes":11448,"imports":[],"format":"cjs"},"node_modules/@protobufjs/inquire/index.js":{"bytes":544,"imports":[],"format":"cjs"},"node_modules/@protobufjs/utf8/index.js":{"bytes":3373,"imports":[],"format":"cjs"},"node_modules/@protobufjs/pool/index.js":{"bytes":1240,"imports":[],"format":"cjs"},"node_modules/protobufjs/src/util/longbits.js":{"bytes":5393,"imports":[{"path":"node_modules/protobufjs/src/util/minimal.js","kind":"require-call","original":"../util/minimal"}],"format":"cjs"},"node_modules/protobufjs/src/util/minimal.js":{"bytes":13238,"imports":[{"path":"node_modules/@protobufjs/aspromise/index.js","kind":"require-call","original":"@protobufjs/aspromise"},{"path":"node_modules/@protobufjs/base64/index.js","kind":"require-call","original":"@protobufjs/base64"},{"path":"node_modules/@protobufjs/eventemitter/index.js","kind":"require-call","original":"@protobufjs/eventemitter"},{"path":"node_modules/@protobufjs/float/index.js","kind":"require-call","original":"@protobufjs/float"},{"path":"node_modules/@protobufjs/inquire/index.js","kind":"require-call","original":"@protobufjs/inquire"},{"path":"node_modules/@protobufjs/utf8/index.js","kind":"require-call","original":"@protobufjs/utf8"},{"path":"node_modules/@protobufjs/pool/index.js","kind":"require-call","original":"@protobufjs/pool"},{"path":"node_modules/protobufjs/src/util/longbits.js","kind":"require-call","original":"./longbits"}],"format":"cjs"},"node_modules/protobufjs/src/writer.js":{"bytes":12072,"imports":[{"path":"node_modules/protobufjs/src/util/minimal.js","kind":"require-call","original":"./util/minimal"}],"format":"cjs"},"node_modules/protobufjs/src/writer_buffer.js":{"bytes":2356,"imports":[{"path":"node_modules/protobufjs/src/writer.js","kind":"require-call","original":"./writer"},{"path":"node_modules/protobufjs/src/util/minimal.js","kind":"require-call","original":"./util/minimal"}],"format":"cjs"},"node_modules/protobufjs/src/reader.js":{"bytes":11380,"imports":[{"path":"node_modules/protobufjs/src/util/minimal.js","kind":"require-call","original":"./util/minimal"}],"format":"cjs"},"node_modules/protobufjs/src/reader_buffer.js":{"bytes":1252,"imports":[{"path":"node_modules/protobufjs/src/reader.js","kind":"require-call","original":"./reader"},{"path":"node_modules/protobufjs/src/util/minimal.js","kind":"require-call","original":"./util/minimal"}],"format":"cjs"},"node_modules/protobufjs/src/rpc/service.js":{"bytes":4763,"imports":[{"path":"node_modules/protobufjs/src/util/minimal.js","kind":"require-call","original":"../util/minimal"}],"format":"cjs"},"node_modules/protobufjs/src/rpc.js":{"bytes":1204,"imports":[{"path":"node_modules/protobufjs/src/rpc/service.js","kind":"require-call","original":"./rpc/service"}],"format":"cjs"},"node_modules/protobufjs/src/roots.js":{"bytes":454,"imports":[],"format":"cjs"},"node_modules/protobufjs/src/index-minimal.js":{"bytes":925,"imports":[{"path":"node_modules/protobufjs/src/writer.js","kind":"require-call","original":"./writer"},{"path":"node_modules/protobufjs/src/writer_buffer.js","kind":"require-call","original":"./writer_buffer"},{"path":"node_modules/protobufjs/src/reader.js","kind":"require-call","original":"./reader"},{"path":"node_modules/protobufjs/src/reader_buffer.js","kind":"require-call","original":"./reader_buffer"},{"path":"node_modules/protobufjs/src/util/minimal.js","kind":"require-call","original":"./util/minimal"},{"path":"node_modules/protobufjs/src/rpc.js","kind":"require-call","original":"./rpc"},{"path":"node_modules/protobufjs/src/roots.js","kind":"require-call","original":"./roots"}],"format":"cjs"},"node_modules/protobufjs/minimal.js":{"bytes":96,"imports":[{"path":"node_modules/protobufjs/src/index-minimal.js","kind":"require-call","original":"./src/index-minimal"}],"format":"cjs"},"dist/src/message/decodeRpc.js":{"bytes":8364,"imports":[{"path":"node_modules/protobufjs/minimal.js","kind":"import-statement","original":"protobufjs/minimal.js"}],"format":"esm"},"dist/src/message/rpc.cjs":{"bytes":75538,"imports":[{"path":"node_modules/protobufjs/minimal.js","kind":"require-call","original":"protobufjs/minimal"},{"path":"<runtime>","kind":"import-statement","external":true}],"format":"cjs"},"dist/src/message/rpc.js":{"bytes":54,"imports":[{"path":"dist/src/message/rpc.cjs","kind":"import-statement","original":"./rpc.cjs"}],"format":"esm"},"dist/src/message-cache.js":{"bytes":4980,"imports":[],"format":"esm"},"dist/src/types.js":{"bytes":3864,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"}],"format":"esm"},"dist/src/metrics.js":{"bytes":40832,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"dist/src/types.js","kind":"import-statement","original":"./types.js"}],"format":"esm"},"dist/src/score/constants.js":{"bytes":201,"imports":[],"format":"esm"},"dist/src/score/peer-score-params.js":{"bytes":7666,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"dist/src/score/constants.js","kind":"import-statement","original":"./constants.js"}],"format":"esm"},"dist/src/score/peer-score-thresholds.js":{"bytes":1446,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"dist/src/score/constants.js","kind":"import-statement","original":"./constants.js"}],"format":"esm"},"dist/src/utils/set.js":{"bytes":987,"imports":[],"format":"esm"},"dist/src/score/compute-score.js":{"bytes":3443,"imports":[],"format":"esm"},"node_modules/denque/index.js":{"bytes":12497,"imports":[],"format":"cjs"},"dist/src/score/message-deliveries.js":{"bytes":2269,"imports":[{"path":"node_modules/denque/index.js","kind":"import-statement","original":"denque"},{"path":"dist/src/constants.js","kind":"import-statement","original":"../constants.js"}],"format":"esm"},"dist/src/score/peer-score.js":{"bytes":19057,"imports":[{"path":"dist/src/types.js","kind":"import-statement","original":"../types.js"},{"path":"dist/src/utils/set.js","kind":"import-statement","original":"../utils/set.js"},{"path":"dist/src/score/compute-score.js","kind":"import-statement","original":"./compute-score.js"},{"path":"dist/src/score/message-deliveries.js","kind":"import-statement","original":"./message-deliveries.js"},{"path":"dist/src/score/peer-score-params.js","kind":"import-statement","original":"./peer-score-params.js"}],"format":"esm"},"dist/src/score/index.js":{"bytes":150,"imports":[{"path":"dist/src/score/peer-score-params.js","kind":"import-statement","original":"./peer-score-params.js"},{"path":"dist/src/score/peer-score-thresholds.js","kind":"import-statement","original":"./peer-score-thresholds.js"},{"path":"dist/src/score/peer-score.js","kind":"import-statement","original":"./peer-score.js"}],"format":"esm"},"dist/src/score/scoreMetrics.js":{"bytes":5942,"imports":[],"format":"esm"},"node_modules/abortable-iterator/dist/src/abort-error.js":{"bytes":247,"imports":[],"format":"esm"},"node_modules/get-iterator/dist/src/index.js":{"bytes":499,"imports":[],"format":"esm"},"node_modules/abortable-iterator/dist/src/index.js":{"bytes":4600,"imports":[{"path":"node_modules/abortable-iterator/dist/src/abort-error.js","kind":"import-statement","original":"./abort-error.js"},{"path":"node_modules/get-iterator/dist/src/index.js","kind":"import-statement","original":"get-iterator"}],"format":"esm"},"dist/src/stream.js":{"bytes":2432,"imports":[{"path":"node_modules/abortable-iterator/dist/src/index.js","kind":"import-statement","original":"abortable-iterator"},{"path":"node_modules/it-length-prefixed/dist/src/index.js","kind":"import-statement","original":"it-length-prefixed"},{"path":"node_modules/it-merge/dist/src/index.js","kind":"import-statement","original":"it-merge"},{"path":"node_modules/it-pipe/dist/src/index.js","kind":"import-statement","original":"it-pipe"},{"path":"node_modules/it-pushable/dist/src/index.js","kind":"import-statement","original":"it-pushable"}],"format":"esm"},"dist/src/tracer.js":{"bytes":5744,"imports":[{"path":"dist/src/types.js","kind":"import-statement","original":"./types.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/webcrypto-browser.js":{"bytes":840,"imports":[],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/hmac/lengths.js":{"bytes":100,"imports":[],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/hmac/index-browser.js":{"bytes":742,"imports":[{"path":"node_modules/@libp2p/crypto/dist/src/webcrypto-browser.js","kind":"import-statement","original":"../webcrypto.js"},{"path":"node_modules/@libp2p/crypto/dist/src/hmac/lengths.js","kind":"import-statement","original":"./lengths.js"}],"format":"esm"},"node_modules/uint8arrays/dist/src/util/bases.js":{"bytes":1138,"imports":[{"path":"node_modules/multiformats/dist/src/basics.js","kind":"import-statement","original":"multiformats/basics"},{"path":"node_modules/uint8arrays/dist/src/alloc.js","kind":"import-statement","original":"../alloc.js"}],"format":"esm"},"node_modules/uint8arrays/dist/src/from-string.js":{"bytes":891,"imports":[{"path":"node_modules/uint8arrays/dist/src/util/as-uint8array.js","kind":"import-statement","original":"./util/as-uint8array.js"},{"path":"node_modules/uint8arrays/dist/src/util/bases.js","kind":"import-statement","original":"./util/bases.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/util.js":{"bytes":725,"imports":[{"path":"node_modules/uint8arrays/dist/src/concat.js","kind":"import-statement","original":"uint8arrays/concat"},{"path":"node_modules/uint8arrays/dist/src/from-string.js","kind":"import-statement","original":"uint8arrays/from-string"}],"format":"esm"},"node_modules/@noble/hashes/esm/_assert.js":{"bytes":1522,"imports":[],"format":"esm"},"node_modules/@noble/hashes/esm/crypto.js":{"bytes":146,"imports":[],"format":"esm"},"node_modules/@noble/hashes/esm/utils.js":{"bytes":6958,"imports":[{"path":"node_modules/@noble/hashes/esm/crypto.js","kind":"import-statement","original":"@noble/hashes/crypto"}],"format":"esm"},"node_modules/@noble/hashes/esm/_sha2.js":{"bytes":4360,"imports":[{"path":"node_modules/@noble/hashes/esm/_assert.js","kind":"import-statement","original":"./_assert.js"},{"path":"node_modules/@noble/hashes/esm/utils.js","kind":"import-statement","original":"./utils.js"}],"format":"esm"},"node_modules/@noble/hashes/esm/_u64.js":{"bytes":2967,"imports":[],"format":"esm"},"node_modules/@noble/hashes/esm/sha512.js":{"bytes":10881,"imports":[{"path":"node_modules/@noble/hashes/esm/_sha2.js","kind":"import-statement","original":"./_sha2.js"},{"path":"node_modules/@noble/hashes/esm/_u64.js","kind":"import-statement","original":"./_u64.js"},{"path":"node_modules/@noble/hashes/esm/utils.js","kind":"import-statement","original":"./utils.js"}],"format":"esm"},"node_modules/@noble/curves/esm/abstract/utils.js":{"bytes":10474,"imports":[],"format":"esm"},"node_modules/@noble/curves/esm/abstract/modular.js":{"bytes":16981,"imports":[{"path":"node_modules/@noble/curves/esm/abstract/utils.js","kind":"import-statement","original":"./utils.js"}],"format":"esm"},"node_modules/@noble/curves/esm/abstract/curve.js":{"bytes":6945,"imports":[{"path":"node_modules/@noble/curves/esm/abstract/modular.js","kind":"import-statement","original":"./modular.js"},{"path":"node_modules/@noble/curves/esm/abstract/utils.js","kind":"import-statement","original":"./utils.js"}],"format":"esm"},"node_modules/@noble/curves/esm/abstract/edwards.js":{"bytes":19208,"imports":[{"path":"node_modules/@noble/curves/esm/abstract/modular.js","kind":"import-statement","original":"./modular.js"},{"path":"node_modules/@noble/curves/esm/abstract/utils.js","kind":"import-statement","original":"./utils.js"},{"path":"node_modules/@noble/curves/esm/abstract/utils.js","kind":"import-statement","original":"./utils.js"},{"path":"node_modules/@noble/curves/esm/abstract/curve.js","kind":"import-statement","original":"./curve.js"}],"format":"esm"},"node_modules/@noble/curves/esm/abstract/montgomery.js":{"bytes":5852,"imports":[{"path":"node_modules/@noble/curves/esm/abstract/modular.js","kind":"import-statement","original":"./modular.js"},{"path":"node_modules/@noble/curves/esm/abstract/utils.js","kind":"import-statement","original":"./utils.js"}],"format":"esm"},"node_modules/@noble/curves/esm/abstract/hash-to-curve.js":{"bytes":6799,"imports":[{"path":"node_modules/@noble/curves/esm/abstract/modular.js","kind":"import-statement","original":"./modular.js"},{"path":"node_modules/@noble/curves/esm/abstract/utils.js","kind":"import-statement","original":"./utils.js"}],"format":"esm"},"node_modules/@noble/curves/esm/ed25519.js":{"bytes":20264,"imports":[{"path":"node_modules/@noble/hashes/esm/sha512.js","kind":"import-statement","original":"@noble/hashes/sha512"},{"path":"node_modules/@noble/hashes/esm/utils.js","kind":"import-statement","original":"@noble/hashes/utils"},{"path":"node_modules/@noble/curves/esm/abstract/edwards.js","kind":"import-statement","original":"./abstract/edwards.js"},{"path":"node_modules/@noble/curves/esm/abstract/montgomery.js","kind":"import-statement","original":"./abstract/montgomery.js"},{"path":"node_modules/@noble/curves/esm/abstract/modular.js","kind":"import-statement","original":"./abstract/modular.js"},{"path":"node_modules/@noble/curves/esm/abstract/utils.js","kind":"import-statement","original":"./abstract/utils.js"},{"path":"node_modules/@noble/curves/esm/abstract/hash-to-curve.js","kind":"import-statement","original":"./abstract/hash-to-curve.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/ed25519-browser.js":{"bytes":2032,"imports":[{"path":"node_modules/@noble/curves/esm/ed25519.js","kind":"import-statement","original":"@noble/curves/ed25519"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/ciphers/aes-gcm.browser.js":{"bytes":5286,"imports":[{"path":"node_modules/uint8arrays/dist/src/concat.js","kind":"import-statement","original":"uint8arrays/concat"},{"path":"node_modules/uint8arrays/dist/src/from-string.js","kind":"import-statement","original":"uint8arrays/from-string"},{"path":"node_modules/@libp2p/crypto/dist/src/webcrypto-browser.js","kind":"import-statement","original":"../webcrypto.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/exporter.js":{"bytes":518,"imports":[{"path":"node_modules/multiformats/dist/src/bases/base64.js","kind":"import-statement","original":"multiformats/bases/base64"},{"path":"node_modules/@libp2p/crypto/dist/src/ciphers/aes-gcm.browser.js","kind":"import-statement","original":"../ciphers/aes-gcm.js"}],"format":"esm"},"node_modules/protons-runtime/dist/src/utils/float.js":{"bytes":2565,"imports":[],"format":"esm"},"node_modules/protons-runtime/dist/src/utils/longbits.js":{"bytes":5240,"imports":[],"format":"esm"},"node_modules/protons-runtime/dist/src/utils/utf8.js":{"bytes":2850,"imports":[],"format":"esm"},"node_modules/protons-runtime/dist/src/utils/reader.js":{"bytes":10454,"imports":[{"path":"node_modules/protons-runtime/dist/src/utils/float.js","kind":"import-statement","original":"./float.js"},{"path":"node_modules/protons-runtime/dist/src/utils/longbits.js","kind":"import-statement","original":"./longbits.js"},{"path":"node_modules/protons-runtime/dist/src/utils/utf8.js","kind":"import-statement","original":"./utf8.js"}],"format":"esm"},"node_modules/protons-runtime/dist/src/decode.js":{"bytes":201,"imports":[{"path":"node_modules/protons-runtime/dist/src/utils/reader.js","kind":"import-statement","original":"./utils/reader.js"}],"format":"esm"},"node_modules/protons-runtime/dist/src/utils/pool.js":{"bytes":689,"imports":[{"path":"node_modules/uint8arrays/dist/src/alloc.js","kind":"import-statement","original":"uint8arrays/alloc"}],"format":"esm"},"node_modules/protons-runtime/dist/src/utils/writer.js":{"bytes":11412,"imports":[{"path":"node_modules/uint8arrays/dist/src/alloc.js","kind":"import-statement","original":"uint8arrays/alloc"},{"path":"node_modules/uint8arrays/dist/src/from-string.js","kind":"import-statement","original":"uint8arrays/from-string"},{"path":"node_modules/protons-runtime/dist/src/utils/float.js","kind":"import-statement","original":"./float.js"},{"path":"node_modules/protons-runtime/dist/src/utils/longbits.js","kind":"import-statement","original":"./longbits.js"},{"path":"node_modules/protons-runtime/dist/src/utils/pool.js","kind":"import-statement","original":"./pool.js"},{"path":"node_modules/protons-runtime/dist/src/utils/utf8.js","kind":"import-statement","original":"./utf8.js"}],"format":"esm"},"node_modules/protons-runtime/dist/src/encode.js":{"bytes":257,"imports":[{"path":"node_modules/protons-runtime/dist/src/utils/writer.js","kind":"import-statement","original":"./utils/writer.js"}],"format":"esm"},"node_modules/protons-runtime/dist/src/codec.js":{"bytes":697,"imports":[],"format":"esm"},"node_modules/protons-runtime/dist/src/codecs/enum.js":{"bytes":809,"imports":[{"path":"node_modules/protons-runtime/dist/src/codec.js","kind":"import-statement","original":"../codec.js"}],"format":"esm"},"node_modules/protons-runtime/dist/src/codecs/message.js":{"bytes":216,"imports":[{"path":"node_modules/protons-runtime/dist/src/codec.js","kind":"import-statement","original":"../codec.js"}],"format":"esm"},"node_modules/protons-runtime/dist/src/index.js":{"bytes":496,"imports":[{"path":"node_modules/protons-runtime/dist/src/decode.js","kind":"import-statement","original":"./decode.js"},{"path":"node_modules/protons-runtime/dist/src/encode.js","kind":"import-statement","original":"./encode.js"},{"path":"node_modules/protons-runtime/dist/src/codecs/enum.js","kind":"import-statement","original":"./codecs/enum.js"},{"path":"node_modules/protons-runtime/dist/src/codecs/message.js","kind":"import-statement","original":"./codecs/message.js"},{"path":"node_modules/protons-runtime/dist/src/utils/reader.js","kind":"import-statement","original":"./utils/reader.js"},{"path":"node_modules/protons-runtime/dist/src/utils/writer.js","kind":"import-statement","original":"./utils/writer.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/keys.js":{"bytes":4330,"imports":[{"path":"node_modules/protons-runtime/dist/src/index.js","kind":"import-statement","original":"protons-runtime"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/ed25519-class.js":{"bytes":4497,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/multiformats/dist/src/bases/base58.js","kind":"import-statement","original":"multiformats/bases/base58"},{"path":"node_modules/multiformats/dist/src/hashes/identity.js","kind":"import-statement","original":"multiformats/hashes/identity"},{"path":"node_modules/multiformats/dist/src/hashes/sha2-browser.js","kind":"import-statement","original":"multiformats/hashes/sha2"},{"path":"node_modules/uint8arrays/dist/src/equals.js","kind":"import-statement","original":"uint8arrays/equals"},{"path":"node_modules/@libp2p/crypto/dist/src/util.js","kind":"import-statement","original":"../util.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/ed25519-browser.js","kind":"import-statement","original":"./ed25519.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/exporter.js","kind":"import-statement","original":"./exporter.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/keys.js","kind":"import-statement","original":"./keys.js"}],"format":"esm"},"node_modules/uint8arrays/dist/src/to-string.js":{"bytes":769,"imports":[{"path":"node_modules/uint8arrays/dist/src/util/bases.js","kind":"import-statement","original":"./util/bases.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/ecdh-browser.js":{"bytes":3768,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/uint8arrays/dist/src/concat.js","kind":"import-statement","original":"uint8arrays/concat"},{"path":"node_modules/uint8arrays/dist/src/equals.js","kind":"import-statement","original":"uint8arrays/equals"},{"path":"node_modules/uint8arrays/dist/src/to-string.js","kind":"import-statement","original":"uint8arrays/to-string"},{"path":"node_modules/@libp2p/crypto/dist/src/util.js","kind":"import-statement","original":"../util.js"},{"path":"node_modules/@libp2p/crypto/dist/src/webcrypto-browser.js","kind":"import-statement","original":"../webcrypto.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/ephemeral-keys.js":{"bytes":323,"imports":[{"path":"node_modules/@libp2p/crypto/dist/src/keys/ecdh-browser.js","kind":"import-statement","original":"./ecdh.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/importer.js":{"bytes":527,"imports":[{"path":"node_modules/multiformats/dist/src/bases/base64.js","kind":"import-statement","original":"multiformats/bases/base64"},{"path":"node_modules/@libp2p/crypto/dist/src/ciphers/aes-gcm.browser.js","kind":"import-statement","original":"../ciphers/aes-gcm.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/key-stretcher.js":{"bytes":2153,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/uint8arrays/dist/src/concat.js","kind":"import-statement","original":"uint8arrays/concat"},{"path":"node_modules/uint8arrays/dist/src/from-string.js","kind":"import-statement","original":"uint8arrays/from-string"},{"path":"node_modules/@libp2p/crypto/dist/src/hmac/index-browser.js","kind":"import-statement","original":"../hmac/index.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/random-bytes.js":{"bytes":453,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/@noble/hashes/esm/utils.js","kind":"import-statement","original":"@noble/hashes/utils"}],"format":"esm"},"node_modules/@noble/hashes/esm/hmac.js":{"bytes":2795,"imports":[{"path":"node_modules/@noble/hashes/esm/_assert.js","kind":"import-statement","original":"./_assert.js"},{"path":"node_modules/@noble/hashes/esm/utils.js","kind":"import-statement","original":"./utils.js"}],"format":"esm"},"node_modules/@noble/hashes/esm/pbkdf2.js":{"bytes":3547,"imports":[{"path":"node_modules/@noble/hashes/esm/_assert.js","kind":"import-statement","original":"./_assert.js"},{"path":"node_modules/@noble/hashes/esm/hmac.js","kind":"import-statement","original":"./hmac.js"},{"path":"node_modules/@noble/hashes/esm/utils.js","kind":"import-statement","original":"./utils.js"}],"format":"esm"},"node_modules/pvtsutils/build/index.js":{"bytes":13560,"imports":[],"format":"cjs"},"node_modules/pvutils/build/utils.es.js":{"bytes":12019,"imports":[],"format":"esm"},"node_modules/asn1js/build/index.es.js":{"bytes":112142,"imports":[{"path":"node_modules/pvtsutils/build/index.js","kind":"import-statement","original":"pvtsutils"},{"path":"node_modules/pvutils/build/utils.es.js","kind":"import-statement","original":"pvutils"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/rsa-utils.js":{"bytes":13127,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/@noble/hashes/esm/pbkdf2.js","kind":"import-statement","original":"@noble/hashes/pbkdf2"},{"path":"node_modules/@noble/hashes/esm/sha512.js","kind":"import-statement","original":"@noble/hashes/sha512"},{"path":"node_modules/asn1js/build/index.es.js","kind":"import-statement","original":"asn1js"},{"path":"node_modules/uint8arrays/dist/src/from-string.js","kind":"import-statement","original":"uint8arrays/from-string"},{"path":"node_modules/uint8arrays/dist/src/to-string.js","kind":"import-statement","original":"uint8arrays/to-string"},{"path":"node_modules/@libp2p/crypto/dist/src/random-bytes.js","kind":"import-statement","original":"../random-bytes.js"},{"path":"node_modules/@libp2p/crypto/dist/src/webcrypto-browser.js","kind":"import-statement","original":"../webcrypto.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/rsa-class.js","kind":"import-statement","original":"./rsa-class.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/rsa-browser.js":{"bytes":3020,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/uint8arrays/dist/src/from-string.js","kind":"import-statement","original":"uint8arrays/from-string"},{"path":"node_modules/@libp2p/crypto/dist/src/random-bytes.js","kind":"import-statement","original":"../random-bytes.js"},{"path":"node_modules/@libp2p/crypto/dist/src/webcrypto-browser.js","kind":"import-statement","original":"../webcrypto.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/rsa-utils.js","kind":"import-statement","original":"./rsa-utils.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/rsa-class.js":{"bytes":4363,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/multiformats/dist/src/hashes/sha2-browser.js","kind":"import-statement","original":"multiformats/hashes/sha2"},{"path":"node_modules/uint8arrays/dist/src/equals.js","kind":"import-statement","original":"uint8arrays/equals"},{"path":"node_modules/uint8arrays/dist/src/to-string.js","kind":"import-statement","original":"uint8arrays/to-string"},{"path":"node_modules/@libp2p/crypto/dist/src/util.js","kind":"import-statement","original":"../util.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/exporter.js","kind":"import-statement","original":"./exporter.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/keys.js","kind":"import-statement","original":"./keys.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/rsa-browser.js","kind":"import-statement","original":"./rsa.js"}],"format":"esm"},"node_modules/@noble/hashes/esm/sha256.js":{"bytes":5003,"imports":[{"path":"node_modules/@noble/hashes/esm/_sha2.js","kind":"import-statement","original":"./_sha2.js"},{"path":"node_modules/@noble/hashes/esm/utils.js","kind":"import-statement","original":"./utils.js"}],"format":"esm"},"node_modules/@noble/curves/esm/abstract/weierstrass.js":{"bytes":45582,"imports":[{"path":"node_modules/@noble/curves/esm/abstract/modular.js","kind":"import-statement","original":"./modular.js"},{"path":"node_modules/@noble/curves/esm/abstract/utils.js","kind":"import-statement","original":"./utils.js"},{"path":"node_modules/@noble/curves/esm/abstract/utils.js","kind":"import-statement","original":"./utils.js"},{"path":"node_modules/@noble/curves/esm/abstract/curve.js","kind":"import-statement","original":"./curve.js"}],"format":"esm"},"node_modules/@noble/curves/esm/_shortw_utils.js":{"bytes":663,"imports":[{"path":"node_modules/@noble/hashes/esm/hmac.js","kind":"import-statement","original":"@noble/hashes/hmac"},{"path":"node_modules/@noble/hashes/esm/utils.js","kind":"import-statement","original":"@noble/hashes/utils"},{"path":"node_modules/@noble/curves/esm/abstract/weierstrass.js","kind":"import-statement","original":"./abstract/weierstrass.js"}],"format":"esm"},"node_modules/@noble/curves/esm/secp256k1.js":{"bytes":11814,"imports":[{"path":"node_modules/@noble/hashes/esm/sha256.js","kind":"import-statement","original":"@noble/hashes/sha256"},{"path":"node_modules/@noble/hashes/esm/utils.js","kind":"import-statement","original":"@noble/hashes/utils"},{"path":"node_modules/@noble/curves/esm/abstract/modular.js","kind":"import-statement","original":"./abstract/modular.js"},{"path":"node_modules/@noble/curves/esm/abstract/weierstrass.js","kind":"import-statement","original":"./abstract/weierstrass.js"},{"path":"node_modules/@noble/curves/esm/abstract/utils.js","kind":"import-statement","original":"./abstract/utils.js"},{"path":"node_modules/@noble/curves/esm/abstract/hash-to-curve.js","kind":"import-statement","original":"./abstract/hash-to-curve.js"},{"path":"node_modules/@noble/curves/esm/_shortw_utils.js","kind":"import-statement","original":"./_shortw_utils.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/secp256k1-browser.js":{"bytes":2364,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/@noble/curves/esm/secp256k1.js","kind":"import-statement","original":"@noble/curves/secp256k1"},{"path":"node_modules/multiformats/dist/src/hashes/sha2-browser.js","kind":"import-statement","original":"multiformats/hashes/sha2"},{"path":"node_modules/@libp2p/crypto/dist/src/util.js","kind":"import-statement","original":"../util.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/secp256k1-class.js":{"bytes":3275,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/multiformats/dist/src/hashes/sha2-browser.js","kind":"import-statement","original":"multiformats/hashes/sha2"},{"path":"node_modules/uint8arrays/dist/src/equals.js","kind":"import-statement","original":"uint8arrays/equals"},{"path":"node_modules/uint8arrays/dist/src/to-string.js","kind":"import-statement","original":"uint8arrays/to-string"},{"path":"node_modules/@libp2p/crypto/dist/src/util.js","kind":"import-statement","original":"../util.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/exporter.js","kind":"import-statement","original":"./exporter.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/keys.js","kind":"import-statement","original":"./keys.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/secp256k1-browser.js","kind":"import-statement","original":"./secp256k1.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/keys/index.js":{"bytes":4742,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/ed25519-class.js","kind":"import-statement","original":"./ed25519-class.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/ephemeral-keys.js","kind":"import-statement","original":"./ephemeral-keys.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/importer.js","kind":"import-statement","original":"./importer.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/key-stretcher.js","kind":"import-statement","original":"./key-stretcher.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/keys.js","kind":"import-statement","original":"./keys.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/rsa-class.js","kind":"import-statement","original":"./rsa-class.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/rsa-utils.js","kind":"import-statement","original":"./rsa-utils.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/secp256k1-class.js","kind":"import-statement","original":"./secp256k1-class.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/rsa-class.js","kind":"import-statement","original":"./rsa-class.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/ed25519-class.js","kind":"import-statement","original":"./ed25519-class.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/secp256k1-class.js","kind":"import-statement","original":"./secp256k1-class.js"}],"format":"esm"},"node_modules/@noble/hashes/esm/sha1.js":{"bytes":2732,"imports":[{"path":"node_modules/@noble/hashes/esm/_sha2.js","kind":"import-statement","original":"./_sha2.js"},{"path":"node_modules/@noble/hashes/esm/utils.js","kind":"import-statement","original":"./utils.js"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/pbkdf2.js":{"bytes":1158,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/@noble/hashes/esm/pbkdf2.js","kind":"import-statement","original":"@noble/hashes/pbkdf2"},{"path":"node_modules/@noble/hashes/esm/sha1.js","kind":"import-statement","original":"@noble/hashes/sha1"},{"path":"node_modules/@noble/hashes/esm/sha256.js","kind":"import-statement","original":"@noble/hashes/sha256"},{"path":"node_modules/@noble/hashes/esm/sha512.js","kind":"import-statement","original":"@noble/hashes/sha512"},{"path":"node_modules/multiformats/dist/src/bases/base64.js","kind":"import-statement","original":"multiformats/bases/base64"}],"format":"esm"},"node_modules/@libp2p/crypto/dist/src/index.js":{"bytes":869,"imports":[{"path":"node_modules/@libp2p/crypto/dist/src/hmac/index-browser.js","kind":"import-statement","original":"./hmac/index.js"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/index.js","kind":"import-statement","original":"./keys/index.js"},{"path":"node_modules/@libp2p/crypto/dist/src/pbkdf2.js","kind":"import-statement","original":"./pbkdf2.js"},{"path":"node_modules/@libp2p/crypto/dist/src/random-bytes.js","kind":"import-statement","original":"./random-bytes.js"}],"format":"esm"},"dist/src/utils/buildRawMessage.js":{"bytes":6292,"imports":[{"path":"node_modules/@libp2p/crypto/dist/src/index.js","kind":"import-statement","original":"@libp2p/crypto"},{"path":"node_modules/@libp2p/crypto/dist/src/keys/index.js","kind":"import-statement","original":"@libp2p/crypto/keys"},{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/@libp2p/peer-id/dist/src/index.js","kind":"import-statement","original":"@libp2p/peer-id"},{"path":"node_modules/uint8arrays/dist/src/concat.js","kind":"import-statement","original":"uint8arrays/concat"},{"path":"node_modules/uint8arrays/dist/src/equals.js","kind":"import-statement","original":"uint8arrays/equals"},{"path":"node_modules/uint8arrays/dist/src/from-string.js","kind":"import-statement","original":"uint8arrays/from-string"},{"path":"node_modules/uint8arrays/dist/src/to-string.js","kind":"import-statement","original":"uint8arrays/to-string"},{"path":"dist/src/message/rpc.js","kind":"import-statement","original":"../message/rpc.js"},{"path":"dist/src/types.js","kind":"import-statement","original":"../types.js"}],"format":"esm"},"dist/src/utils/shuffle.js":{"bytes":467,"imports":[],"format":"esm"},"dist/src/utils/messageIdToString.js":{"bytes":266,"imports":[{"path":"node_modules/uint8arrays/dist/src/to-string.js","kind":"import-statement","original":"uint8arrays/to-string"}],"format":"esm"},"dist/src/utils/publishConfig.js":{"bytes":1348,"imports":[{"path":"node_modules/@libp2p/crypto/dist/src/keys/index.js","kind":"import-statement","original":"@libp2p/crypto/keys"},{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"dist/src/types.js","kind":"import-statement","original":"../types.js"}],"format":"esm"},"dist/src/utils/index.js":{"bytes":168,"imports":[{"path":"dist/src/utils/shuffle.js","kind":"import-statement","original":"./shuffle.js"},{"path":"dist/src/utils/messageIdToString.js","kind":"import-statement","original":"./messageIdToString.js"},{"path":"dist/src/utils/publishConfig.js","kind":"import-statement","original":"./publishConfig.js"}],"format":"esm"},"node_modules/@libp2p/pubsub/dist/src/errors.js":{"bytes":1534,"imports":[],"format":"esm"},"node_modules/@libp2p/pubsub/dist/src/utils.js":{"bytes":3830,"imports":[{"path":"node_modules/@libp2p/crypto/dist/src/index.js","kind":"import-statement","original":"@libp2p/crypto"},{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/@libp2p/peer-id/dist/src/index.js","kind":"import-statement","original":"@libp2p/peer-id"},{"path":"node_modules/multiformats/dist/src/hashes/sha2-browser.js","kind":"import-statement","original":"multiformats/hashes/sha2"},{"path":"node_modules/uint8arrays/dist/src/from-string.js","kind":"import-statement","original":"uint8arrays/from-string"},{"path":"node_modules/uint8arrays/dist/src/to-string.js","kind":"import-statement","original":"uint8arrays/to-string"},{"path":"node_modules/@libp2p/pubsub/dist/src/errors.js","kind":"import-statement","original":"./errors.js"}],"format":"esm"},"dist/src/utils/msgIdFn.js":{"bytes":689,"imports":[{"path":"node_modules/@libp2p/pubsub/dist/src/utils.js","kind":"import-statement","original":"@libp2p/pubsub/utils"},{"path":"node_modules/multiformats/dist/src/hashes/sha2-browser.js","kind":"import-statement","original":"multiformats/hashes/sha2"}],"format":"esm"},"node_modules/@chainsafe/is-ip/lib/parser.js":{"bytes":7315,"imports":[],"format":"esm"},"node_modules/@chainsafe/is-ip/lib/parse.js":{"bytes":1158,"imports":[{"path":"node_modules/@chainsafe/is-ip/lib/parser.js","kind":"import-statement","original":"./parser.js"}],"format":"esm"},"node_modules/@chainsafe/netmask/dist/src/util.js":{"bytes":2034,"imports":[{"path":"node_modules/@chainsafe/netmask/dist/src/ip.js","kind":"import-statement","original":"./ip.js"}],"format":"esm"},"node_modules/@chainsafe/netmask/dist/src/ip.js":{"bytes":1502,"imports":[{"path":"node_modules/@chainsafe/is-ip/lib/parse.js","kind":"import-statement","original":"@chainsafe/is-ip/parse"},{"path":"node_modules/@chainsafe/netmask/dist/src/util.js","kind":"import-statement","original":"./util.js"}],"format":"esm"},"node_modules/@chainsafe/netmask/dist/src/cidr.js":{"bytes":1394,"imports":[{"path":"node_modules/@chainsafe/is-ip/lib/parse.js","kind":"import-statement","original":"@chainsafe/is-ip/parse"},{"path":"node_modules/@chainsafe/netmask/dist/src/ip.js","kind":"import-statement","original":"./ip.js"}],"format":"esm"},"node_modules/@chainsafe/netmask/dist/src/ipnet.js":{"bytes":1835,"imports":[{"path":"node_modules/@chainsafe/is-ip/lib/parse.js","kind":"import-statement","original":"@chainsafe/is-ip/parse"},{"path":"node_modules/@chainsafe/netmask/dist/src/cidr.js","kind":"import-statement","original":"./cidr.js"},{"path":"node_modules/@chainsafe/netmask/dist/src/ip.js","kind":"import-statement","original":"./ip.js"},{"path":"node_modules/@chainsafe/netmask/dist/src/util.js","kind":"import-statement","original":"./util.js"}],"format":"esm"},"node_modules/@chainsafe/netmask/dist/src/index.js":{"bytes":571,"imports":[{"path":"node_modules/@chainsafe/netmask/dist/src/ipnet.js","kind":"import-statement","original":"./ipnet.js"},{"path":"node_modules/@chainsafe/netmask/dist/src/util.js","kind":"import-statement","original":"./util.js"},{"path":"node_modules/@chainsafe/netmask/dist/src/ip.js","kind":"import-statement","original":"./ip.js"},{"path":"node_modules/@chainsafe/netmask/dist/src/ipnet.js","kind":"import-statement","original":"./ipnet.js"},{"path":"node_modules/@chainsafe/netmask/dist/src/cidr.js","kind":"import-statement","original":"./cidr.js"}],"format":"esm"},"node_modules/@chainsafe/is-ip/lib/is-ip.js":{"bytes":701,"imports":[{"path":"node_modules/@chainsafe/is-ip/lib/parse.js","kind":"import-statement","original":"./parse.js"}],"format":"esm"},"node_modules/@multiformats/multiaddr/dist/src/ip.js":{"bytes":2922,"imports":[{"path":"node_modules/@chainsafe/is-ip/lib/is-ip.js","kind":"import-statement","original":"@chainsafe/is-ip"},{"path":"node_modules/uint8arrays/dist/src/to-string.js","kind":"import-statement","original":"uint8arrays/to-string"},{"path":"node_modules/@chainsafe/is-ip/lib/is-ip.js","kind":"import-statement","original":"@chainsafe/is-ip"}],"format":"esm"},"node_modules/@multiformats/multiaddr/dist/src/protocols-table.js":{"bytes":2402,"imports":[],"format":"esm"},"node_modules/@multiformats/multiaddr/dist/src/convert.js":{"bytes":7876,"imports":[{"path":"node_modules/@chainsafe/netmask/dist/src/index.js","kind":"import-statement","original":"@chainsafe/netmask"},{"path":"node_modules/multiformats/dist/src/bases/base32.js","kind":"import-statement","original":"multiformats/bases/base32"},{"path":"node_modules/multiformats/dist/src/bases/base58.js","kind":"import-statement","original":"multiformats/bases/base58"},{"path":"node_modules/multiformats/dist/src/basics.js","kind":"import-statement","original":"multiformats/basics"},{"path":"node_modules/multiformats/dist/src/cid.js","kind":"import-statement","original":"multiformats/cid"},{"path":"node_modules/multiformats/dist/src/hashes/digest.js","kind":"import-statement","original":"multiformats/hashes/digest"},{"path":"node_modules/uint8-varint/dist/src/index.js","kind":"import-statement","original":"uint8-varint"},{"path":"node_modules/uint8arrays/dist/src/concat.js","kind":"import-statement","original":"uint8arrays/concat"},{"path":"node_modules/uint8arrays/dist/src/from-string.js","kind":"import-statement","original":"uint8arrays/from-string"},{"path":"node_modules/uint8arrays/dist/src/to-string.js","kind":"import-statement","original":"uint8arrays/to-string"},{"path":"node_modules/@multiformats/multiaddr/dist/src/ip.js","kind":"import-statement","original":"./ip.js"},{"path":"node_modules/@multiformats/multiaddr/dist/src/protocols-table.js","kind":"import-statement","original":"./protocols-table.js"}],"format":"esm"},"dist/src/utils/multiaddr.js":{"bytes":806,"imports":[{"path":"node_modules/@multiformats/multiaddr/dist/src/convert.js","kind":"import-statement","original":"@multiformats/multiaddr/convert"}],"format":"esm"},"dist/src/utils/time-cache.js":{"bytes":2127,"imports":[],"format":"esm"},"dist/src/index.js":{"bytes":102823,"imports":[{"path":"node_modules/@libp2p/interface/dist/src/index.js","kind":"import-statement","original":"@libp2p/interface"},{"path":"node_modules/@libp2p/peer-id/dist/src/index.js","kind":"import-statement","original":"@libp2p/peer-id"},{"path":"node_modules/it-length-prefixed/dist/src/index.js","kind":"import-statement","original":"it-length-prefixed"},{"path":"node_modules/it-pipe/dist/src/index.js","kind":"import-statement","original":"it-pipe"},{"path":"node_modules/it-pushable/dist/src/index.js","kind":"import-statement","original":"it-pushable"},{"path":"dist/src/constants.js","kind":"import-statement","original":"./constants.js"},{"path":"dist/src/constants.js","kind":"import-statement","original":"./constants.js"},{"path":"dist/src/message/decodeRpc.js","kind":"import-statement","original":"./message/decodeRpc.js"},{"path":"dist/src/message/rpc.js","kind":"import-statement","original":"./message/rpc.js"},{"path":"dist/src/message-cache.js","kind":"import-statement","original":"./message-cache.js"},{"path":"dist/src/metrics.js","kind":"import-statement","original":"./metrics.js"},{"path":"dist/src/score/index.js","kind":"import-statement","original":"./score/index.js"},{"path":"dist/src/score/scoreMetrics.js","kind":"import-statement","original":"./score/scoreMetrics.js"},{"path":"dist/src/stream.js","kind":"import-statement","original":"./stream.js"},{"path":"dist/src/tracer.js","kind":"import-statement","original":"./tracer.js"},{"path":"dist/src/types.js","kind":"import-statement","original":"./types.js"},{"path":"dist/src/utils/buildRawMessage.js","kind":"import-statement","original":"./utils/buildRawMessage.js"},{"path":"dist/src/utils/index.js","kind":"import-statement","original":"./utils/index.js"},{"path":"dist/src/utils/msgIdFn.js","kind":"import-statement","original":"./utils/msgIdFn.js"},{"path":"dist/src/utils/multiaddr.js","kind":"import-statement","original":"./utils/multiaddr.js"},{"path":"dist/src/utils/publishConfig.js","kind":"import-statement","original":"./utils/publishConfig.js"},{"path":"dist/src/utils/set.js","kind":"import-statement","original":"./utils/set.js"},{"path":"dist/src/utils/time-cache.js","kind":"import-statement","original":"./utils/time-cache.js"}],"format":"esm"}},"outputs":{"dist/index.min.js.map":{"imports":[],"exports":[],"inputs":{},"bytes":1403048},"dist/index.min.js":{"imports":[],"exports":[],"entryPoint":"dist/src/index.js","inputs":{"node_modules/err-code/index.js":{"bytesInOutput":468},"node_modules/@protobufjs/aspromise/index.js":{"bytesInOutput":381},"node_modules/@protobufjs/base64/index.js":{"bytesInOutput":1229},"node_modules/@protobufjs/eventemitter/index.js":{"bytesInOutput":577},"node_modules/@protobufjs/float/index.js":{"bytesInOutput":3036},"node_modules/@protobufjs/inquire/index.js":{"bytesInOutput":232},"node_modules/@protobufjs/utf8/index.js":{"bytesInOutput":1087},"node_modules/@protobufjs/pool/index.js":{"bytesInOutput":215},"node_modules/protobufjs/src/util/longbits.js":{"bytesInOutput":1834},"node_modules/protobufjs/src/util/minimal.js":{"bytesInOutput":3057},"node_modules/protobufjs/src/writer.js":{"bytesInOutput":3217},"node_modules/protobufjs/src/writer_buffer.js":{"bytesInOutput":836},"node_modules/protobufjs/src/reader.js":{"bytesInOutput":4013},"node_modules/protobufjs/src/reader_buffer.js":{"bytesInOutput":484},"node_modules/protobufjs/src/rpc/service.js":{"bytesInOutput":1058},"node_modules/protobufjs/src/rpc.js":{"bytesInOutput":56},"node_modules/protobufjs/src/roots.js":{"bytesInOutput":49},"node_modules/protobufjs/src/index-minimal.js":{"bytesInOutput":302},"node_modules/protobufjs/minimal.js":{"bytesInOutput":51},"dist/src/message/rpc.cjs":{"bytesInOutput":21192},"node_modules/denque/index.js":{"bytesInOutput":5704},"node_modules/pvtsutils/build/index.js":{"bytesInOutput":6050},"dist/src/index.js":{"bytesInOutput":33627},"node_modules/@libp2p/interface/dist/src/peer-id/index.js":{"bytesInOutput":37},"node_modules/@libp2p/interface/dist/src/pubsub/index.js":{"bytesInOutput":123},"node_modules/@libp2p/interface/dist/src/errors.js":{"bytesInOutput":127},"node_modules/@libp2p/interface/dist/src/event-target.js":{"bytesInOutput":748},"node_modules/multiformats/dist/src/bases/base58.js":{"bytesInOutput":277},"node_modules/multiformats/dist/src/bytes.js":{"bytesInOutput":539},"node_modules/multiformats/dist/src/vendor/base-x.js":{"bytesInOutput":1611},"node_modules/multiformats/dist/src/bases/base.js":{"bytesInOutput":2379},"node_modules/multiformats/dist/src/bases/base10.js":{"bytesInOutput":93},"node_modules/multiformats/dist/src/bases/base16.js":{"bytesInOutput":213},"node_modules/multiformats/dist/src/bases/base2.js":{"bytesInOutput":97},"node_modules/multiformats/dist/src/bases/base256emoji.js":{"bytesInOutput":2671},"node_modules/multiformats/dist/src/bases/base32.js":{"bytesInOutput":1071},"node_modules/multiformats/dist/src/bases/base36.js":{"bytesInOutput":225},"node_modules/multiformats/dist/src/bases/base64.js":{"bytesInOutput":601},"node_modules/multiformats/dist/src/bases/base8.js":{"bytesInOutput":103},"node_modules/multiformats/dist/src/bases/identity.js":{"bytesInOutput":108},"node_modules/multiformats/dist/src/codecs/json.js":{"bytesInOutput":42},"node_modules/multiformats/dist/src/hashes/identity.js":{"bytesInOutput":144},"node_modules/multiformats/dist/src/vendor/varint.js":{"bytesInOutput":736},"node_modules/multiformats/dist/src/varint.js":{"bytesInOutput":148},"node_modules/multiformats/dist/src/hashes/digest.js":{"bytesInOutput":537},"node_modules/multiformats/dist/src/hashes/sha2-browser.js":{"bytesInOutput":238},"node_modules/multiformats/dist/src/hashes/hasher.js":{"bytesInOutput":335},"node_modules/multiformats/dist/src/cid.js":{"bytesInOutput":3979},"node_modules/multiformats/dist/src/interface.js":{"bytesInOutput":0},"node_modules/multiformats/dist/src/index.js":{"bytesInOutput":0},"node_modules/multiformats/dist/src/basics.js":{"bytesInOutput":86},"node_modules/uint8arrays/dist/src/equals.js":{"bytesInOutput":139},"node_modules/@libp2p/peer-id/dist/src/index.js":{"bytesInOutput":2234},"node_modules/uint8arrays/dist/src/util/as-uint8array.js":{"bytesInOutput":99},"node_modules/uint8arrays/dist/src/alloc.js":{"bytesInOutput":220},"node_modules/uint8-varint/dist/src/index.js":{"bytesInOutput":1876},"node_modules/uint8arrays/dist/src/concat.js":{"bytesInOutput":195},"node_modules/uint8arraylist/dist/src/index.js":{"bytesInOutput":5804},"node_modules/it-length-prefixed/dist/src/utils.js":{"bytesInOutput":52},"node_modules/it-length-prefixed/dist/src/encode.js":{"bytesInOutput":431},"node_modules/it-length-prefixed/dist/src/index.js":{"bytesInOutput":0},"node_modules/it-length-prefixed/dist/src/decode.js":{"bytesInOutput":1476},"node_modules/p-defer/index.js":{"bytesInOutput":87},"node_modules/it-pushable/dist/src/fifo.js":{"bytesInOutput":1102},"node_modules/it-pushable/dist/src/index.js":{"bytesInOutput":1650},"node_modules/it-merge/dist/src/index.js":{"bytesInOutput":375},"node_modules/it-pipe/dist/src/index.js":{"bytesInOutput":818},"dist/src/constants.js":{"bytesInOutput":133},"dist/src/message/decodeRpc.js":{"bytesInOutput":3332},"dist/src/message/rpc.js":{"bytesInOutput":38},"dist/src/message-cache.js":{"bytesInOutput":1469},"dist/src/types.js":{"bytesInOutput":793},"dist/src/metrics.js":{"bytesInOutput":20289},"dist/src/score/constants.js":{"bytesInOutput":38},"dist/src/score/peer-score-params.js":{"bytesInOutput":4400},"dist/src/score/peer-score-thresholds.js":{"bytesInOutput":161},"dist/src/utils/set.js":{"bytesInOutput":340},"dist/src/score/compute-score.js":{"bytesInOutput":1215},"dist/src/score/message-deliveries.js":{"bytesInOutput":697},"dist/src/score/peer-score.js":{"bytesInOutput":6633},"dist/src/score/scoreMetrics.js":{"bytesInOutput":1965},"node_modules/abortable-iterator/dist/src/abort-error.js":{"bytesInOutput":129},"node_modules/get-iterator/dist/src/index.js":{"bytesInOutput":272},"node_modules/abortable-iterator/dist/src/index.js":{"bytesInOutput":731},"dist/src/stream.js":{"bytesInOutput":1171},"dist/src/tracer.js":{"bytesInOutput":1703},"node_modules/@libp2p/crypto/dist/src/webcrypto-browser.js":{"bytesInOutput":421},"node_modules/@libp2p/crypto/dist/src/keys/ed25519-class.js":{"bytesInOutput":1679},"node_modules/uint8arrays/dist/src/util/bases.js":{"bytesInOutput":482},"node_modules/uint8arrays/dist/src/from-string.js":{"bytesInOutput":254},"node_modules/@libp2p/crypto/dist/src/util.js":{"bytesInOutput":117},"node_modules/@noble/hashes/esm/_assert.js":{"bytesInOutput":853},"node_modules/@noble/hashes/esm/crypto.js":{"bytesInOutput":83},"node_modules/@noble/hashes/esm/utils.js":{"bytesInOutput":1463},"node_modules/@noble/hashes/esm/_sha2.js":{"bytesInOutput":1606},"node_modules/@noble/hashes/esm/_u64.js":{"bytesInOutput":1198},"node_modules/@noble/hashes/esm/sha512.js":{"bytesInOutput":4071},"node_modules/@noble/curves/esm/abstract/utils.js":{"bytesInOutput":4178},"node_modules/@noble/curves/esm/abstract/modular.js":{"bytesInOutput":3872},"node_modules/@noble/curves/esm/abstract/curve.js":{"bytesInOutput":1057},"node_modules/@noble/curves/esm/abstract/edwards.js":{"bytesInOutput":5488},"node_modules/@noble/curves/esm/ed25519.js":{"bytesInOutput":2126},"node_modules/@libp2p/crypto/dist/src/keys/ed25519-browser.js":{"bytesInOutput":661},"node_modules/@libp2p/crypto/dist/src/ciphers/aes-gcm.browser.js":{"bytesInOutput":1746},"node_modules/@libp2p/crypto/dist/src/keys/exporter.js":{"bytesInOutput":73},"node_modules/protons-runtime/dist/src/utils/float.js":{"bytesInOutput":536},"node_modules/protons-runtime/dist/src/utils/longbits.js":{"bytesInOutput":1699},"node_modules/protons-runtime/dist/src/utils/utf8.js":{"bytesInOutput":1030},"node_modules/protons-runtime/dist/src/utils/reader.js":{"bytesInOutput":3641},"node_modules/protons-runtime/dist/src/decode.js":{"bytesInOutput":48},"node_modules/protons-runtime/dist/src/index.js":{"bytesInOutput":0},"node_modules/protons-runtime/dist/src/utils/pool.js":{"bytesInOutput":160},"node_modules/protons-runtime/dist/src/utils/writer.js":{"bytesInOutput":3318},"node_modules/protons-runtime/dist/src/encode.js":{"bytesInOutput":81},"node_modules/protons-runtime/dist/src/codec.js":{"bytesInOutput":266},"node_modules/protons-runtime/dist/src/codecs/enum.js":{"bytesInOutput":222},"node_modules/protons-runtime/dist/src/codecs/message.js":{"bytesInOutput":62},"node_modules/@libp2p/crypto/dist/src/keys/keys.js":{"bytesInOutput":1268},"node_modules/uint8arrays/dist/src/to-string.js":{"bytesInOutput":289},"node_modules/@libp2p/crypto/dist/src/keys/rsa-class.js":{"bytesInOutput":1879},"node_modules/@libp2p/crypto/dist/src/random-bytes.js":{"bytesInOutput":133},"node_modules/@libp2p/crypto/dist/src/keys/rsa-utils.js":{"bytesInOutput":5217},"node_modules/@noble/hashes/esm/hmac.js":{"bytesInOutput":1231},"node_modules/@noble/hashes/esm/pbkdf2.js":{"bytesInOutput":828},"node_modules/asn1js/build/index.es.js":{"bytesInOutput":41877},"node_modules/pvutils/build/utils.es.js":{"bytesInOutput":1809},"node_modules/@libp2p/crypto/dist/src/keys/rsa-browser.js":{"bytesInOutput":1567},"node_modules/@libp2p/crypto/dist/src/keys/secp256k1-class.js":{"bytesInOutput":1245},"node_modules/@noble/hashes/esm/sha256.js":{"bytesInOutput":1878},"node_modules/@noble/curves/esm/abstract/weierstrass.js":{"bytesInOutput":12356},"node_modules/@noble/curves/esm/_shortw_utils.js":{"bytesInOutput":164},"node_modules/@noble/curves/esm/secp256k1.js":{"bytesInOutput":1433},"node_modules/@libp2p/crypto/dist/src/keys/secp256k1-browser.js":{"bytesInOutput":998},"node_modules/@libp2p/crypto/dist/src/keys/index.js":{"bytesInOutput":944},"dist/src/utils/buildRawMessage.js":{"bytesInOutput":1813},"dist/src/utils/shuffle.js":{"bytesInOutput":167},"dist/src/utils/messageIdToString.js":{"bytesInOutput":36},"dist/src/utils/publishConfig.js":{"bytesInOutput":433},"node_modules/@libp2p/pubsub/dist/src/utils.js":{"bytesInOutput":140},"dist/src/utils/msgIdFn.js":{"bytesInOutput":236},"node_modules/@chainsafe/is-ip/lib/parser.js":{"bytesInOutput":1825},"node_modules/@chainsafe/is-ip/lib/parse.js":{"bytesInOutput":142},"node_modules/@chainsafe/netmask/dist/src/ip.js":{"bytesInOutput":78},"node_modules/@chainsafe/netmask/dist/src/index.js":{"bytesInOutput":0},"node_modules/@chainsafe/is-ip/lib/is-ip.js":{"bytesInOutput":29},"node_modules/@multiformats/multiaddr/dist/src/ip.js":{"bytesInOutput":319},"node_modules/@multiformats/multiaddr/dist/src/protocols-table.js":{"bytesInOutput":1110},"node_modules/@multiformats/multiaddr/dist/src/convert.js":{"bytesInOutput":1186},"dist/src/utils/multiaddr.js":{"bytesInOutput":193},"dist/src/utils/time-cache.js":{"bytesInOutput":507}},"bytes":299247}}}
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/2-nodes.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/2-nodes.spec.d.ts
new file mode 100644
index 0000000..ea6a513
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/2-nodes.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=2-nodes.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/2-nodes.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/2-nodes.spec.d.ts.map
new file mode 100644
index 0000000..baff019
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/2-nodes.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"2-nodes.spec.d.ts","sourceRoot":"","sources":["../../test/2-nodes.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/2-nodes.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/2-nodes.spec.js
new file mode 100644
index 0000000..139d5e4
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/2-nodes.spec.js
@@ -0,0 +1,293 @@
+import { stop } from '@libp2p/interface';
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks';
+import { expect } from 'aegir/chai';
+import defer from 'p-defer';
+import { pEvent } from 'p-event';
+import pWaitFor from 'p-wait-for';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { toString as uint8ArrayToString } from 'uint8arrays/to-string';
+import { connectAllPubSubNodes, connectPubsubNodes, createComponentsArray } from './utils/create-pubsub.js';
+const shouldNotHappen = () => expect.fail();
+async function nodesArePubSubPeers(node0, node1, timeout = 60000) {
+    await pWaitFor(() => {
+        const node0SeesNode1 = node0.pubsub
+            .getPeers()
+            .map((p) => p.toString())
+            .includes(node1.components.peerId.toString());
+        const node1SeesNode0 = node1.pubsub
+            .getPeers()
+            .map((p) => p.toString())
+            .includes(node0.components.peerId.toString());
+        return node0SeesNode1 && node1SeesNode0;
+    }, {
+        timeout
+    });
+}
+describe('2 nodes', () => {
+    describe('Pubsub dial', () => {
+        let nodes;
+        // Create pubsub nodes
+        beforeEach(async () => {
+            mockNetwork.reset();
+            nodes = await createComponentsArray({ number: 2 });
+        });
+        afterEach(async () => {
+            await stop(...nodes.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            mockNetwork.reset();
+        });
+        it('Dial from nodeA to nodeB happened with FloodsubID', async () => {
+            await connectPubsubNodes(nodes[0], nodes[1]);
+            await nodesArePubSubPeers(nodes[0], nodes[1]);
+        });
+    });
+    describe('basics', () => {
+        let nodes;
+        // Create pubsub nodes
+        beforeEach(async () => {
+            mockNetwork.reset();
+            nodes = await createComponentsArray({ number: 2 });
+        });
+        afterEach(async () => {
+            await stop(...nodes.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            mockNetwork.reset();
+        });
+        it('Dial from nodeA to nodeB happened with GossipsubIDv11', async () => {
+            await connectPubsubNodes(nodes[0], nodes[1]);
+            await nodesArePubSubPeers(nodes[0], nodes[1]);
+        });
+    });
+    describe('subscription functionality', () => {
+        let nodes;
+        // Create pubsub nodes
+        beforeEach(async () => {
+            mockNetwork.reset();
+            nodes = await createComponentsArray({
+                number: 2,
+                connected: true
+            });
+            await nodesArePubSubPeers(nodes[0], nodes[1]);
+        });
+        afterEach(async () => {
+            await stop(...nodes.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            mockNetwork.reset();
+        });
+        it('Subscribe to a topic', async () => {
+            const topic = 'test_topic';
+            nodes[0].pubsub.subscribe(topic);
+            nodes[1].pubsub.subscribe(topic);
+            // await subscription change
+            const [evt0] = await Promise.all([
+                pEvent(nodes[0].pubsub, 'subscription-change'),
+                pEvent(nodes[1].pubsub, 'subscription-change')
+            ]);
+            const { peerId: changedPeerId, subscriptions: changedSubs } = evt0.detail;
+            expect(nodes[0].pubsub.getTopics()).to.include(topic);
+            expect(nodes[1].pubsub.getTopics()).to.include(topic);
+            expect(nodes[0].pubsub.getSubscribers(topic).map((p) => p.toString())).to.include(nodes[1].components.peerId.toString());
+            expect(nodes[1].pubsub.getSubscribers(topic).map((p) => p.toString())).to.include(nodes[0].components.peerId.toString());
+            expect(changedPeerId.toString()).to.equal(nodes[1].components.peerId.toString());
+            expect(changedSubs).to.have.lengthOf(1);
+            expect(changedSubs[0].topic).to.equal(topic);
+            expect(changedSubs[0].subscribe).to.equal(true);
+            // await heartbeats
+            await Promise.all([
+                pEvent(nodes[0].pubsub, 'gossipsub:heartbeat'),
+                pEvent(nodes[1].pubsub, 'gossipsub:heartbeat')
+            ]);
+            expect((nodes[0].pubsub).mesh.get(topic)?.has(nodes[1].components.peerId.toString())).to.be.true();
+            expect((nodes[1].pubsub).mesh.get(topic)?.has(nodes[0].components.peerId.toString())).to.be.true();
+        });
+    });
+    describe('publish functionality', () => {
+        const topic = 'Z';
+        let nodes;
+        // Create pubsub nodes
+        beforeEach(async () => {
+            mockNetwork.reset();
+            nodes = await createComponentsArray({
+                number: 2,
+                connected: true
+            });
+            // Create subscriptions
+            nodes[0].pubsub.subscribe(topic);
+            nodes[1].pubsub.subscribe(topic);
+            // await subscription change and heartbeat
+            await Promise.all([
+                pEvent(nodes[0].pubsub, 'subscription-change'),
+                pEvent(nodes[1].pubsub, 'subscription-change'),
+                pEvent(nodes[0].pubsub, 'gossipsub:heartbeat'),
+                pEvent(nodes[1].pubsub, 'gossipsub:heartbeat')
+            ]);
+        });
+        afterEach(async () => {
+            await stop(...nodes.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            mockNetwork.reset();
+        });
+        it('Publish to a topic - nodeA', async () => {
+            const promise = pEvent(nodes[1].pubsub, 'message');
+            nodes[0].pubsub.addEventListener('message', shouldNotHappen);
+            const data = uint8ArrayFromString('hey');
+            await nodes[0].pubsub.publish(topic, data);
+            const evt = await promise;
+            if (evt.detail.type !== 'signed') {
+                throw new Error('unexpected msg type');
+            }
+            expect(evt.detail.data).to.equalBytes(data);
+            expect(evt.detail.from.toString()).to.equal(nodes[0].components.peerId.toString());
+            nodes[0].pubsub.removeEventListener('message', shouldNotHappen);
+        });
+        it('Publish to a topic - nodeB', async () => {
+            const promise = pEvent(nodes[0].pubsub, 'message');
+            nodes[1].pubsub.addEventListener('message', shouldNotHappen);
+            const data = uint8ArrayFromString('banana');
+            await nodes[1].pubsub.publish(topic, data);
+            const evt = await promise;
+            if (evt.detail.type !== 'signed') {
+                throw new Error('unexpected msg type');
+            }
+            expect(evt.detail.data).to.equalBytes(data);
+            expect(evt.detail.from.toString()).to.equal(nodes[1].components.peerId.toString());
+            nodes[1].pubsub.removeEventListener('message', shouldNotHappen);
+        });
+        it('Publish 10 msg to a topic', async () => {
+            let counter = 0;
+            nodes[1].pubsub.addEventListener('message', shouldNotHappen);
+            nodes[0].pubsub.addEventListener('message', receivedMsg);
+            const done = defer();
+            function receivedMsg(evt) {
+                const msg = evt.detail;
+                expect(uint8ArrayToString(msg.data)).to.startWith('banana');
+                if (msg.type !== 'signed') {
+                    throw new Error('unexpected msg type');
+                }
+                expect(msg.from.toString()).to.equal(nodes[1].components.peerId.toString());
+                expect(msg.sequenceNumber).to.be.a('BigInt');
+                expect(msg.topic).to.equal(topic);
+                if (++counter === 10) {
+                    nodes[0].pubsub.removeEventListener('message', receivedMsg);
+                    nodes[1].pubsub.removeEventListener('message', shouldNotHappen);
+                    done.resolve();
+                }
+            }
+            await Promise.all(Array.from({ length: 10 }).map(async (_, i) => {
+                await nodes[1].pubsub.publish(topic, uint8ArrayFromString(`banana${i}`));
+            }));
+            await done.promise;
+        });
+    });
+    describe('publish after unsubscribe', () => {
+        const topic = 'Z';
+        let nodes;
+        // Create pubsub nodes
+        beforeEach(async () => {
+            mockNetwork.reset();
+            nodes = await createComponentsArray({ number: 2, init: { allowPublishToZeroTopicPeers: true } });
+            await connectAllPubSubNodes(nodes);
+            // Create subscriptions
+            nodes[0].pubsub.subscribe(topic);
+            nodes[1].pubsub.subscribe(topic);
+            // await subscription change and heartbeat
+            await Promise.all([
+                pEvent(nodes[0].pubsub, 'subscription-change'),
+                pEvent(nodes[1].pubsub, 'subscription-change')
+            ]);
+            await Promise.all([
+                pEvent(nodes[0].pubsub, 'gossipsub:heartbeat'),
+                pEvent(nodes[1].pubsub, 'gossipsub:heartbeat')
+            ]);
+        });
+        afterEach(async () => {
+            await stop(...nodes.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            mockNetwork.reset();
+        });
+        it('Unsubscribe from a topic', async () => {
+            nodes[0].pubsub.unsubscribe(topic);
+            expect(nodes[0].pubsub.getTopics()).to.be.empty();
+            const evt = await pEvent(nodes[1].pubsub, 'subscription-change');
+            const { peerId: changedPeerId, subscriptions: changedSubs } = evt.detail;
+            await pEvent(nodes[1].pubsub, 'gossipsub:heartbeat');
+            expect(nodes[1].pubsub.getPeers()).to.have.lengthOf(1);
+            expect(nodes[1].pubsub.getSubscribers(topic)).to.be.empty();
+            expect(changedPeerId.toString()).to.equal(nodes[0].components.peerId.toString());
+            expect(changedSubs).to.have.lengthOf(1);
+            expect(changedSubs[0].topic).to.equal(topic);
+            expect(changedSubs[0].subscribe).to.equal(false);
+        });
+        it('Publish to a topic after unsubscribe', async () => {
+            const promises = [pEvent(nodes[1].pubsub, 'subscription-change'), pEvent(nodes[1].pubsub, 'gossipsub:heartbeat')];
+            nodes[0].pubsub.unsubscribe(topic);
+            await Promise.all(promises);
+            const promise = new Promise((resolve, reject) => {
+                nodes[0].pubsub.addEventListener('message', reject);
+                setTimeout(() => {
+                    nodes[0].pubsub.removeEventListener('message', reject);
+                    resolve();
+                }, 100);
+            });
+            await nodes[1].pubsub.publish('Z', uint8ArrayFromString('banana'));
+            await nodes[0].pubsub.publish('Z', uint8ArrayFromString('banana'));
+            try {
+                await promise;
+            }
+            catch (e) {
+                expect.fail('message should not be received');
+            }
+        });
+    });
+    describe('nodes send state on connection', () => {
+        let nodes;
+        // Create pubsub nodes
+        beforeEach(async () => {
+            mockNetwork.reset();
+            nodes = await createComponentsArray({
+                number: 2
+            });
+            // Make subscriptions prior to new nodes
+            nodes[0].pubsub.subscribe('Za');
+            nodes[1].pubsub.subscribe('Zb');
+            expect(nodes[0].pubsub.getPeers()).to.be.empty();
+            expect(nodes[0].pubsub.getTopics()).to.include('Za');
+            expect(nodes[1].pubsub.getPeers()).to.be.empty();
+            expect(nodes[1].pubsub.getTopics()).to.include('Zb');
+        });
+        afterEach(async () => {
+            await stop(...nodes.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            mockNetwork.reset();
+        });
+        it('existing subscriptions are sent upon peer connection', async function () {
+            this.timeout(5000);
+            await Promise.all([
+                connectPubsubNodes(nodes[0], nodes[1]),
+                pEvent(nodes[0].pubsub, 'subscription-change'),
+                pEvent(nodes[1].pubsub, 'subscription-change')
+            ]);
+            expect(nodes[0].pubsub.getTopics()).to.include('Za');
+            expect(nodes[1].pubsub.getPeers()).to.have.lengthOf(1);
+            expect(nodes[1].pubsub.getSubscribers('Za').map((p) => p.toString())).to.include(nodes[0].components.peerId.toString());
+            expect(nodes[1].pubsub.getTopics()).to.include('Zb');
+            expect(nodes[0].pubsub.getPeers()).to.have.lengthOf(1);
+            expect(nodes[0].pubsub.getSubscribers('Zb').map((p) => p.toString())).to.include(nodes[1].components.peerId.toString());
+        });
+    });
+    describe('nodes handle stopping', () => {
+        let nodes;
+        // Create pubsub nodes
+        beforeEach(async () => {
+            mockNetwork.reset();
+            nodes = await createComponentsArray({
+                number: 2,
+                connected: true
+            });
+        });
+        afterEach(async () => {
+            await stop(...nodes.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            mockNetwork.reset();
+        });
+        it("nodes don't have peers after stopped", async () => {
+            await stop(...nodes.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            expect(nodes[0].pubsub.getPeers()).to.be.empty();
+            expect(nodes[1].pubsub.getPeers()).to.be.empty();
+        });
+    });
+});
+//# sourceMappingURL=2-nodes.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/2-nodes.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/2-nodes.spec.js.map
new file mode 100644
index 0000000..2ae1bb6
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/2-nodes.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"2-nodes.spec.js","sourceRoot":"","sources":["../../test/2-nodes.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAA;AACxC,OAAO,EAAE,WAAW,EAAE,MAAM,0CAA0C,CAAA;AACtE,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,MAAM,SAAS,CAAA;AAC3B,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAA;AAChC,OAAO,QAAQ,MAAM,YAAY,CAAA;AACjC,OAAO,EAAE,UAAU,IAAI,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAC5E,OAAO,EAAE,QAAQ,IAAI,kBAAkB,EAAE,MAAM,uBAAuB,CAAA;AACtE,OAAO,EACL,qBAAqB,EACrB,kBAAkB,EAClB,qBAAqB,EAEtB,MAAM,0BAA0B,CAAA;AAGjC,MAAM,eAAe,GAAG,GAAU,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,CAAA;AAElD,KAAK,UAAU,mBAAmB,CAAE,KAA6B,EAAE,KAA6B,EAAE,OAAO,GAAG,KAAK;IAC/G,MAAM,QAAQ,CACZ,GAAG,EAAE;QACH,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM;aAChC,QAAQ,EAAE;aACV,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;aACxB,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAA;QAC/C,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM;aAChC,QAAQ,EAAE;aACV,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;aACxB,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAA;QAC/C,OAAO,cAAc,IAAI,cAAc,CAAA;IACzC,CAAC,EACD;QACE,OAAO;KACR,CACF,CAAA;AACH,CAAC;AAED,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;IACvB,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;QAC3B,IAAI,KAA+B,CAAA;QAEnC,sBAAsB;QACtB,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,WAAW,CAAC,KAAK,EAAE,CAAA;YACnB,KAAK,GAAG,MAAM,qBAAqB,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAA;QACpD,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YAClH,WAAW,CAAC,KAAK,EAAE,CAAA;QACrB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;YACjE,MAAM,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;YAC5C,MAAM,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;QAC/C,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;QACtB,IAAI,KAA+B,CAAA;QAEnC,sBAAsB;QACtB,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,WAAW,CAAC,KAAK,EAAE,CAAA;YACnB,KAAK,GAAG,MAAM,qBAAqB,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAA;QACpD,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YAClH,WAAW,CAAC,KAAK,EAAE,CAAA;QACrB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;YACrE,MAAM,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;YAC5C,MAAM,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;QAC/C,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;QAC1C,IAAI,KAA+B,CAAA;QAEnC,sBAAsB;QACtB,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,WAAW,CAAC,KAAK,EAAE,CAAA;YACnB,KAAK,GAAG,MAAM,qBAAqB,CAAC;gBAClC,MAAM,EAAE,CAAC;gBACT,SAAS,EAAE,IAAI;aAChB,CAAC,CAAA;YACF,MAAM,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;QAC/C,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YAClH,WAAW,CAAC,KAAK,EAAE,CAAA;QACrB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;YACpC,MAAM,KAAK,GAAG,YAAY,CAAA;YAE1B,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;YAChC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;YAEhC,4BAA4B;YAC5B,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;gBAC/B,MAAM,CAA6D,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;gBAC1G,MAAM,CAA6D,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;aAC3G,CAAC,CAAA;YAEF,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,MAAM,CAAA;YAEzE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;YACrD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;YACrD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAC/E,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CACtC,CAAA;YACD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAC/E,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CACtC,CAAA;YAED,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAA;YAChF,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;YACvC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YAC5C,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;YAE/C,mBAAmB;YACnB,MAAM,OAAO,CAAC,GAAG,CAAC;gBAChB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;gBAC9C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;aAC/C,CAAC,CAAA;YAEF,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;YAClG,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA;QACpG,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACrC,MAAM,KAAK,GAAG,GAAG,CAAA;QACjB,IAAI,KAA+B,CAAA;QAEnC,sBAAsB;QACtB,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,WAAW,CAAC,KAAK,EAAE,CAAA;YACnB,KAAK,GAAG,MAAM,qBAAqB,CAAC;gBAClC,MAAM,EAAE,CAAC;gBACT,SAAS,EAAE,IAAI;aAChB,CAAC,CAAA;YAEF,uBAAuB;YACvB,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;YAChC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;YAEhC,0CAA0C;YAC1C,MAAM,OAAO,CAAC,GAAG,CAAC;gBAChB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;gBAC9C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;gBAC9C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;gBAC9C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;aAC/C,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YAClH,WAAW,CAAC,KAAK,EAAE,CAAA;QACrB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC1C,MAAM,OAAO,GAAG,MAAM,CAAkC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;YACnF,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAA;YAC5D,MAAM,IAAI,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAA;YAExC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;YAE1C,MAAM,GAAG,GAAG,MAAM,OAAO,CAAA;YAEzB,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;gBACjC,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAA;YACxC,CAAC;YACD,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;YAC3C,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAA;YAElF,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAA;QACjE,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC1C,MAAM,OAAO,GAAG,MAAM,CAAkC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;YACnF,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAA;YAC5D,MAAM,IAAI,GAAG,oBAAoB,CAAC,QAAQ,CAAC,CAAA;YAE3C,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;YAE1C,MAAM,GAAG,GAAG,MAAM,OAAO,CAAA;YAEzB,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;gBACjC,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAA;YACxC,CAAC;YACD,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;YAC3C,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAA;YAElF,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAA;QACjE,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;YACzC,IAAI,OAAO,GAAG,CAAC,CAAA;YAEf,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAA;YAC5D,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAA;YAExD,MAAM,IAAI,GAAG,KAAK,EAAE,CAAA;YAEpB,SAAS,WAAW,CAAE,GAAyB;gBAC7C,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAA;gBAEtB,MAAM,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;gBAE3D,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;oBAC1B,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAA;gBACxC,CAAC;gBACD,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAA;gBAC3E,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAA;gBAC5C,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;gBAEjC,IAAI,EAAE,OAAO,KAAK,EAAE,EAAE,CAAC;oBACrB,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAA;oBAC3D,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAA;oBAC/D,IAAI,CAAC,OAAO,EAAE,CAAA;gBAChB,CAAC;YACH,CAAC;YAED,MAAM,OAAO,CAAC,GAAG,CACf,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC5C,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,oBAAoB,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAA;YAC1E,CAAC,CAAC,CACH,CAAA;YAED,MAAM,IAAI,CAAC,OAAO,CAAA;QACpB,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACzC,MAAM,KAAK,GAAG,GAAG,CAAA;QACjB,IAAI,KAA+B,CAAA;QAEnC,sBAAsB;QACtB,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,WAAW,CAAC,KAAK,EAAE,CAAA;YACnB,KAAK,GAAG,MAAM,qBAAqB,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,4BAA4B,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;YAChG,MAAM,qBAAqB,CAAC,KAAK,CAAC,CAAA;YAElC,uBAAuB;YACvB,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;YAChC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;YAEhC,0CAA0C;YAC1C,MAAM,OAAO,CAAC,GAAG,CAAC;gBAChB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;gBAC9C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;aAC/C,CAAC,CAAA;YACF,MAAM,OAAO,CAAC,GAAG,CAAC;gBAChB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;gBAC9C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;aAC/C,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YAClH,WAAW,CAAC,KAAK,EAAE,CAAA;QACrB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;YACxC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;YAClC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;YAEjD,MAAM,GAAG,GAAG,MAAM,MAAM,CACtB,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EACf,qBAAqB,CACtB,CAAA;YACD,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAA;YAExE,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAA;YAEpD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;YACtD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;YAE3D,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAA;YAChF,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;YACvC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YAC5C,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QAClD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;YACpD,MAAM,QAAQ,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC,CAAA;YAEjH,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;YAElC,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YAE3B,MAAM,OAAO,GAAG,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACpD,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAA;gBAEnD,UAAU,CAAC,GAAG,EAAE;oBACd,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAA;oBACtD,OAAO,EAAE,CAAA;gBACX,CAAC,EAAE,GAAG,CAAC,CAAA;YACT,CAAC,CAAC,CAAA;YAEF,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAA;YAClE,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAA;YAElE,IAAI,CAAC;gBACH,MAAM,OAAO,CAAA;YACf,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACX,MAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAA;YAC/C,CAAC;QACH,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,gCAAgC,EAAE,GAAG,EAAE;QAC9C,IAAI,KAA+B,CAAA;QAEnC,sBAAsB;QACtB,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,WAAW,CAAC,KAAK,EAAE,CAAA;YACnB,KAAK,GAAG,MAAM,qBAAqB,CAAC;gBAClC,MAAM,EAAE,CAAC;aACV,CAAC,CAAA;YAEF,wCAAwC;YACxC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;YAC/B,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;YAE/B,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;YAChD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;YACpD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;YAChD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QACtD,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YAClH,WAAW,CAAC,KAAK,EAAE,CAAA;QACrB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,sDAAsD,EAAE,KAAK;YAC9D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;YAElB,MAAM,OAAO,CAAC,GAAG,CAAC;gBAChB,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;gBAC9C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,qBAAqB,CAAC;aAC/C,CAAC,CAAA;YAEF,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;YACpD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;YACtD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAC9E,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CACtC,CAAA;YAED,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;YACpD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;YACtD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAC9E,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CACtC,CAAA;QACH,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACrC,IAAI,KAA+B,CAAA;QAEnC,sBAAsB;QACtB,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,WAAW,CAAC,KAAK,EAAE,CAAA;YACnB,KAAK,GAAG,MAAM,qBAAqB,CAAC;gBAClC,MAAM,EAAE,CAAC;gBACT,SAAS,EAAE,IAAI;aAChB,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,KAAK,IAAI,EAAE;YACnB,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YAClH,WAAW,CAAC,KAAK,EAAE,CAAA;QACrB,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;YACpD,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YAClH,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;YAChD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QAClD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/accept-from.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/accept-from.spec.d.ts
new file mode 100644
index 0000000..fc7a6c0
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/accept-from.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=accept-from.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/accept-from.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/accept-from.spec.d.ts.map
new file mode 100644
index 0000000..0e3c1a5
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/accept-from.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"accept-from.spec.d.ts","sourceRoot":"","sources":["../../test/accept-from.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/accept-from.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/accept-from.spec.js
new file mode 100644
index 0000000..3d86544
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/accept-from.spec.js
@@ -0,0 +1,92 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import {} from '@libp2p/interface';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import sinon from 'sinon';
+import { stubInterface } from 'ts-sinon';
+import { GossipSub } from '../src/index.js';
+import { fastMsgIdFn } from './utils/msgId.js';
+const peerA = '16Uiu2HAmMkH6ZLen2tbhiuNCTZLLvrZaDgufNdT5MPjtC9Hr9YNA';
+describe('Gossipsub acceptFrom', () => {
+    let gossipsub;
+    let sandbox;
+    let scoreSpy;
+    beforeEach(async () => {
+        sandbox = sinon.createSandbox();
+        // not able to use fake timers or tests in browser are suspended
+        // sandbox.useFakeTimers(Date.now())
+        const privateKey = await generateKeyPair('Ed25519');
+        const peerId = peerIdFromPrivateKey(privateKey);
+        gossipsub = new GossipSub({
+            privateKey,
+            peerId,
+            registrar: stubInterface(),
+            peerStore: stubInterface(),
+            connectionManager: stubInterface(),
+            logger: defaultLogger()
+        }, { emitSelf: false, fastMsgIdFn });
+        // stubbing PeerScore causes some pending issue in firefox browser environment
+        // we can only spy it
+        // using scoreSpy.withArgs("peerA").calledOnce causes the pending issue in firefox
+        // while spy.getCall() is fine
+        scoreSpy = sandbox.spy(gossipsub.score, 'score');
+    });
+    afterEach(() => {
+        sandbox.restore();
+    });
+    it('should only white list peer with positive score', () => {
+        // by default the score is 0
+        gossipsub.acceptFrom(peerA);
+        // 1st time, we have to compute score
+        expect(scoreSpy.getCall(0).args[0]).to.be.equal(peerA);
+        expect(scoreSpy.getCall(0).returnValue).to.be.equal(0);
+        expect(scoreSpy.getCall(1)).to.not.be.ok();
+        // 2nd time, use a cached score since it's white listed
+        gossipsub.acceptFrom(peerA);
+        expect(scoreSpy.getCall(1)).to.not.be.ok();
+    });
+    it('should recompute score after 1s', async () => {
+        // by default the score is 0
+        gossipsub.acceptFrom(peerA);
+        // 1st time, we have to compute score
+        expect(scoreSpy.getCall(0).args[0]).to.be.equal(peerA);
+        expect(scoreSpy.getCall(1)).to.not.be.ok();
+        gossipsub.acceptFrom(peerA);
+        // score is cached
+        expect(scoreSpy.getCall(1)).to.not.be.ok();
+        // after 1s
+        await new Promise((resolve) => setTimeout(resolve, 1001));
+        gossipsub.acceptFrom(peerA);
+        expect(scoreSpy.getCall(1).args[0]).to.be.equal(peerA);
+        expect(scoreSpy.getCall(2)).to.not.be.ok();
+    });
+    it('should recompute score after max messages accepted', () => {
+        // by default the score is 0
+        gossipsub.acceptFrom(peerA);
+        // 1st time, we have to compute score
+        expect(scoreSpy.getCall(0).args[0]).to.be.equal(peerA);
+        expect(scoreSpy.getCall(1)).to.not.be.ok();
+        for (let i = 0; i < 128; i++) {
+            gossipsub.acceptFrom(peerA);
+        }
+        expect(scoreSpy.getCall(1)).to.not.be.ok();
+        // max messages reached
+        gossipsub.acceptFrom(peerA);
+        expect(scoreSpy.getCall(1).args[0]).to.be.equal(peerA);
+        expect(scoreSpy.getCall(2)).to.not.be.ok();
+    });
+    // TODO: run this in a unit test setup
+    // this causes the test to not finish in firefox environment
+    // it.skip('should NOT white list peer with negative score', () => {
+    //   // peerB is not white listed since score is negative
+    //   scoreStub.score.withArgs('peerB').returns(-1)
+    //   gossipsub["acceptFrom"]('peerB')
+    //   // 1st time, we have to compute score
+    //   expect(scoreStub.score.withArgs('peerB').calledOnce).to.be.true()
+    //   // 2nd time, still have to compute score since it's NOT white listed
+    //   gossipsub["acceptFrom"]('peerB')
+    //   expect(scoreStub.score.withArgs('peerB').calledTwice).to.be.true()
+    // })
+});
+//# sourceMappingURL=accept-from.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/accept-from.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/accept-from.spec.js.map
new file mode 100644
index 0000000..1302849
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/accept-from.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"accept-from.spec.js","sourceRoot":"","sources":["../../test/accept-from.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/allowedTopics.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/allowedTopics.spec.d.ts
new file mode 100644
index 0000000..8ba8e83
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/allowedTopics.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=allowedTopics.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/allowedTopics.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/allowedTopics.spec.d.ts.map
new file mode 100644
index 0000000..efec67b
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/allowedTopics.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"allowedTopics.spec.d.ts","sourceRoot":"","sources":["../../test/allowedTopics.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/allowedTopics.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/allowedTopics.spec.js
new file mode 100644
index 0000000..6ed6d08
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/allowedTopics.spec.js
@@ -0,0 +1,49 @@
+import { stop } from '@libp2p/interface';
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks';
+import { expect } from 'aegir/chai';
+import { pEvent } from 'p-event';
+import { connectAllPubSubNodes, createComponentsArray } from './utils/create-pubsub.js';
+/* eslint-disable dot-notation */
+describe('gossip / allowedTopics', () => {
+    let nodes;
+    const allowedTopic = 'topic_allowed';
+    const notAllowedTopic = 'topic_not_allowed';
+    const allowedTopics = [allowedTopic];
+    const allTopics = [allowedTopic, notAllowedTopic];
+    // Create pubsub nodes
+    beforeEach(async () => {
+        mockNetwork.reset();
+        nodes = await createComponentsArray({
+            number: 2,
+            connected: false,
+            init: {
+                allowedTopics
+            }
+        });
+    });
+    afterEach(async () => {
+        await stop(...nodes.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+        mockNetwork.reset();
+    });
+    it('should send gossip to non-mesh peers in topic', async function () {
+        this.timeout(10 * 1000);
+        const [nodeA, nodeB] = nodes;
+        // add subscriptions to each node
+        for (const topic of allTopics) {
+            nodeA.pubsub.subscribe(topic);
+        }
+        // every node connected to every other
+        await Promise.all([
+            connectAllPubSubNodes(nodes),
+            // nodeA should send nodeB all its subscriptions on connection
+            pEvent(nodeB.pubsub, 'subscription-change')
+        ]);
+        // eslint-disable-next-line @typescript-eslint/dot-notation
+        const nodeASubscriptions = Array.from((nodeA.pubsub)['subscriptions'].keys());
+        expect(nodeASubscriptions).deep.equals(allTopics, 'nodeA.subscriptions should be subcribed to all');
+        // eslint-disable-next-line @typescript-eslint/dot-notation
+        const nodeBTopics = Array.from((nodeB.pubsub)['topics'].keys());
+        expect(nodeBTopics).deep.equals(allowedTopics, 'nodeB.topics should only contain allowedTopics');
+    });
+});
+//# sourceMappingURL=allowedTopics.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/allowedTopics.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/allowedTopics.spec.js.map
new file mode 100644
index 0000000..1da0eb7
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/allowedTopics.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"allowedTopics.spec.js","sourceRoot":"","sources":["../../test/allowedTopics.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAA;AACxC,OAAO,EAAE,WAAW,EAAE,MAAM,0CAA0C,CAAA;AACtE,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAA;AAChC,OAAO,EAAE,qBAAqB,EAAE,qBAAqB,EAA+B,MAAM,0BAA0B,CAAA;AAEpH,iCAAiC;AACjC,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACtC,IAAI,KAA+B,CAAA;IAEnC,MAAM,YAAY,GAAG,eAAe,CAAA;IACpC,MAAM,eAAe,GAAG,mBAAmB,CAAA;IAC3C,MAAM,aAAa,GAAG,CAAC,YAAY,CAAC,CAAA;IACpC,MAAM,SAAS,GAAG,CAAC,YAAY,EAAE,eAAe,CAAC,CAAA;IAEjD,sBAAsB;IACtB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,WAAW,CAAC,KAAK,EAAE,CAAA;QACnB,KAAK,GAAG,MAAM,qBAAqB,CAAC;YAClC,MAAM,EAAE,CAAC;YACT,SAAS,EAAE,KAAK;YAChB,IAAI,EAAE;gBACJ,aAAa;aACd;SACF,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;QAClH,WAAW,CAAC,KAAK,EAAE,CAAA;IACrB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,+CAA+C,EAAE,KAAK;QACvD,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,CAAA;QACvB,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,KAAK,CAAA;QAE5B,iCAAiC;QACjC,KAAK,MAAM,KAAK,IAAI,SAAS,EAAE,CAAC;YAC9B,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;QAC/B,CAAC;QAED,sCAAsC;QACtC,MAAM,OAAO,CAAC,GAAG,CAAC;YAChB,qBAAqB,CAAC,KAAK,CAAC;YAC5B,8DAA8D;YAC9D,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,qBAAqB,CAAC;SAC5C,CAAC,CAAA;QAEF,2DAA2D;QAC3D,MAAM,kBAAkB,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA;QAC7E,MAAM,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,gDAAgD,CAAC,CAAA;QAEnG,2DAA2D;QAC3D,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA;QAC/D,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,gDAAgD,CAAC,CAAA;IAClG,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/asyncIterable.test.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/asyncIterable.test.d.ts
new file mode 100644
index 0000000..20d9496
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/asyncIterable.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=asyncIterable.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/asyncIterable.test.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/asyncIterable.test.d.ts.map
new file mode 100644
index 0000000..e99e026
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/asyncIterable.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"asyncIterable.test.d.ts","sourceRoot":"","sources":["../../../test/benchmark/asyncIterable.test.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/asyncIterable.test.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/asyncIterable.test.js
new file mode 100644
index 0000000..c8e5ce2
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/asyncIterable.test.js
@@ -0,0 +1,79 @@
+import { itBench } from '@dapplion/benchmark';
+import { abortableSource } from 'abortable-iterator';
+import all from 'it-all';
+import { pipe } from 'it-pipe';
+/* eslint-disable generator-star-spacing */
+describe('abortableSource cost', function () {
+    const n = 10000;
+    const bytes = new Uint8Array(200);
+    const controller = new AbortController();
+    async function* bytesSource() {
+        let i = 0;
+        while (i++ < n) {
+            yield bytes;
+        }
+    }
+    for (let k = 0; k < 5; k++) {
+        itBench({
+            id: `async iterate abortable x${k} bytesSource ${n}`,
+            beforeEach: () => {
+                let source = bytesSource();
+                for (let i = 0; i < k; i++) {
+                    source = abortableSource(source, controller.signal);
+                }
+                return source;
+            },
+            fn: async (source) => {
+                for await (const chunk of source) {
+                    // eslint-disable-next-line @typescript-eslint/no-unused-expressions
+                    chunk;
+                }
+            }
+        });
+    }
+});
+describe('pipe extra iterables cost', function () {
+    const n = 10000;
+    async function* numberSource() {
+        let i = 0;
+        while (i < n) {
+            yield i++;
+        }
+    }
+    async function* numberTransform(source) {
+        for await (const num of source) {
+            yield num + 1;
+        }
+    }
+    itBench({
+        id: `async iterate pipe x0 transforms ${n}`,
+        fn: async () => {
+            await pipe(numberSource, all);
+        }
+    });
+    itBench({
+        id: `async iterate pipe x1 transforms ${n}`,
+        fn: async () => {
+            await pipe(numberSource, numberTransform, all);
+        }
+    });
+    itBench({
+        id: `async iterate pipe x2 transforms ${n}`,
+        fn: async () => {
+            await pipe(numberSource, numberTransform, numberTransform, all);
+        }
+    });
+    itBench({
+        id: `async iterate pipe x4 transforms ${n}`,
+        fn: async () => {
+            await pipe(numberSource, numberTransform, numberTransform, numberTransform, numberTransform, all);
+        }
+    });
+    itBench({
+        id: `async iterate pipe x8 transforms ${n}`,
+        fn: async () => {
+            await pipe(numberSource, numberTransform, numberTransform, numberTransform, numberTransform, numberTransform, numberTransform, numberTransform, numberTransform, all);
+        }
+    });
+});
+//# sourceMappingURL=asyncIterable.test.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/asyncIterable.test.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/asyncIterable.test.js.map
new file mode 100644
index 0000000..efdb4ba
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/asyncIterable.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"asyncIterable.test.js","sourceRoot":"","sources":["../../../test/benchmark/asyncIterable.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAA;AAC7C,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAA;AACpD,OAAO,GAAG,MAAM,QAAQ,CAAA;AACxB,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAA;AAE9B,2CAA2C;AAE3C,QAAQ,CAAC,sBAAsB,EAAE;IAC/B,MAAM,CAAC,GAAG,KAAK,CAAA;IACf,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAA;IACjC,MAAM,UAAU,GAAG,IAAI,eAAe,EAAE,CAAA;IAExC,KAAK,SAAS,CAAC,CAAC,WAAW;QACzB,IAAI,CAAC,GAAG,CAAC,CAAA;QACT,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;YACf,MAAM,KAAK,CAAA;QACb,CAAC;IACH,CAAC;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QAC3B,OAAO,CAAC;YACN,EAAE,EAAE,4BAA4B,CAAC,gBAAgB,CAAC,EAAE;YACpD,UAAU,EAAE,GAAG,EAAE;gBACf,IAAI,MAAM,GAAG,WAAW,EAAE,CAAA;gBAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC3B,MAAM,GAAG,eAAe,CAAC,MAAM,EAAE,UAAU,CAAC,MAAM,CAAC,CAAA;gBACrD,CAAC;gBACD,OAAO,MAAM,CAAA;YACf,CAAC;YACD,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;gBACnB,IAAI,KAAK,EAAE,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;oBACjC,oEAAoE;oBACpE,KAAK,CAAA;gBACP,CAAC;YACH,CAAC;SACF,CAAC,CAAA;IACJ,CAAC;AACH,CAAC,CAAC,CAAA;AAEF,QAAQ,CAAC,2BAA2B,EAAE;IACpC,MAAM,CAAC,GAAG,KAAK,CAAA;IAEf,KAAK,SAAS,CAAC,CAAC,YAAY;QAC1B,IAAI,CAAC,GAAG,CAAC,CAAA;QACT,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YACb,MAAM,CAAC,EAAE,CAAA;QACX,CAAC;IACH,CAAC;IAED,KAAK,SAAS,CAAC,CAAC,eAAe,CAAE,MAA6B;QAC5D,IAAI,KAAK,EAAE,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;YAC/B,MAAM,GAAG,GAAG,CAAC,CAAA;QACf,CAAC;IACH,CAAC;IAED,OAAO,CAAC;QACN,EAAE,EAAE,oCAAoC,CAAC,EAAE;QAC3C,EAAE,EAAE,KAAK,IAAI,EAAE;YACb,MAAM,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,CAAA;QAC/B,CAAC;KACF,CAAC,CAAA;IAEF,OAAO,CAAC;QACN,EAAE,EAAE,oCAAoC,CAAC,EAAE;QAC3C,EAAE,EAAE,KAAK,IAAI,EAAE;YACb,MAAM,IAAI,CAAC,YAAY,EAAE,eAAe,EAAE,GAAG,CAAC,CAAA;QAChD,CAAC;KACF,CAAC,CAAA;IAEF,OAAO,CAAC;QACN,EAAE,EAAE,oCAAoC,CAAC,EAAE;QAC3C,EAAE,EAAE,KAAK,IAAI,EAAE;YACb,MAAM,IAAI,CACR,YAAY,EACZ,eAAe,EACf,eAAe,EACf,GAAG,CACJ,CAAA;QACH,CAAC;KACF,CAAC,CAAA;IAEF,OAAO,CAAC;QACN,EAAE,EAAE,oCAAoC,CAAC,EAAE;QAC3C,EAAE,EAAE,KAAK,IAAI,EAAE;YACb,MAAM,IAAI,CACR,YAAY,EACZ,eAAe,EACf,eAAe,EACf,eAAe,EACf,eAAe,EACf,GAAG,CACJ,CAAA;QACH,CAAC;KACF,CAAC,CAAA;IAEF,OAAO,CAAC;QACN,EAAE,EAAE,oCAAoC,CAAC,EAAE;QAC3C,EAAE,EAAE,KAAK,IAAI,EAAE;YACb,MAAM,IAAI,CACR,YAAY,EACZ,eAAe,EACf,eAAe,EACf,eAAe,EACf,eAAe,EACf,eAAe,EACf,eAAe,EACf,eAAe,EACf,eAAe,EACf,GAAG,CACJ,CAAA;QACH,CAAC;KACF,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/index.test.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/index.test.d.ts
new file mode 100644
index 0000000..121d59b
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/index.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=index.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/index.test.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/index.test.d.ts.map
new file mode 100644
index 0000000..dbcc819
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/index.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.test.d.ts","sourceRoot":"","sources":["../../../test/benchmark/index.test.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/index.test.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/index.test.js
new file mode 100644
index 0000000..e4e2454
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/index.test.js
@@ -0,0 +1,110 @@
+import { itBench } from '@dapplion/benchmark';
+import { expect } from 'aegir/chai';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { connectPubsubNodes, createComponentsArray, denseConnect } from '../utils/create-pubsub.js';
+import { awaitEvents, checkReceivedSubscriptions, checkReceivedSubscription } from '../utils/events.js';
+describe('heartbeat', function () {
+    const topic = 'foobar';
+    const numTopic = 70;
+    const numPeers = 50;
+    const numPeersPerTopic = 30;
+    let numLoop = 0;
+    const getTopic = (i) => {
+        return topic + String(i);
+    };
+    const getTopicPeerIndices = (topic) => {
+        // peer 0 join all topics
+        const peers = [0];
+        // topic 0 starts from index 1
+        // topic 1 starts from index 2...
+        for (let i = 0; i < numPeersPerTopic - 1; i++) {
+            const peerIndex = (i + topic + 1) % numPeers;
+            if (peerIndex !== 0)
+                peers.push(peerIndex);
+        }
+        return peers;
+    };
+    /**
+     * Star topology
+     * *       peer 1
+     * *      /
+     * peer 0  - peer 2
+     * *      \
+     * *       peer 3
+     *
+     * A topic contains peer 0 and some other peers, with numPeersPerTopic = 4
+     *
+     * |Topic|    Peers  |
+     * |-----|-----------|
+     * |  0  | 0, 1, 2, 3|
+     * |  1  | 0, 2, 3, 4|
+     */
+    itBench({
+        id: 'heartbeat',
+        before: async () => {
+            const psubs = await createComponentsArray({
+                number: numPeers,
+                init: {
+                    scoreParams: {
+                        IPColocationFactorWeight: 0
+                    },
+                    floodPublish: true,
+                    // TODO: why we need to configure this low score
+                    // probably we should tweak topic score params
+                    // is that why we don't have mesh peers?
+                    scoreThresholds: {
+                        gossipThreshold: -10,
+                        publishThreshold: -100,
+                        graylistThreshold: -1000
+                    }
+                }
+            });
+            // build the star
+            await Promise.all(psubs.slice(1).map(async (ps) => connectPubsubNodes(psubs[0], ps)));
+            await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+            await denseConnect(psubs);
+            // make sure psub 0 has `numPeers - 1` peers
+            expect(psubs[0].pubsub.getPeers().length).to.be.gte(numPeers - 1, `peer 0 should have at least ${numPeers - 1} peers`);
+            const peerIds = psubs.map((psub) => psub.components.peerId.toString());
+            for (let topicIndex = 0; topicIndex < numTopic; topicIndex++) {
+                const topic = getTopic(topicIndex);
+                psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+                const peerIndices = getTopicPeerIndices(topicIndex);
+                const peerIdsOnTopic = peerIndices.map((peerIndex) => peerIds[peerIndex]);
+                // peer 0 see all subscriptions from other
+                const subscription = checkReceivedSubscriptions(psubs[0], peerIdsOnTopic, topic);
+                // other peers should see the subsription from peer 0 to prevent PublishError.InsufficientPeers error
+                const otherSubscriptions = peerIndices
+                    .slice(1)
+                    .map((peerIndex) => psubs[peerIndex])
+                    .map(async (psub) => checkReceivedSubscription(psub, peerIds[0], topic, 0));
+                peerIndices.forEach((peerIndex) => { psubs[peerIndex].pubsub.subscribe(topic); });
+                await Promise.all([subscription, ...otherSubscriptions]);
+            }
+            // wait for heartbeats to build mesh
+            await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 3)));
+            // make sure psubs 0 have at least 10 topic peers and 4 mesh peers for each topic
+            for (let i = 0; i < numTopic; i++) {
+                expect((psubs[0].pubsub).getSubscribers(getTopic(i)).length).to.be.gte(10, `psub 0: topic ${i} does not have enough topic peers`);
+                expect((psubs[0].pubsub).getMeshPeers(getTopic(i)).length).to.be.gte(4, `psub 0: topic ${i} does not have enough mesh peers`);
+            }
+            return psubs;
+        },
+        beforeEach: async (psubs) => {
+            numLoop++;
+            const msg = `its not a flooooood ${numLoop}`;
+            const promises = [];
+            for (let topicIndex = 0; topicIndex < numTopic; topicIndex++) {
+                for (const peerIndex of getTopicPeerIndices(topicIndex)) {
+                    promises.push(psubs[peerIndex].pubsub.publish(getTopic(topicIndex), uint8ArrayFromString(psubs[peerIndex].components.peerId.toString() + msg)));
+                }
+            }
+            await Promise.all(promises);
+            return psubs[0];
+        },
+        fn: async (firstPsub) => {
+            return (firstPsub.pubsub).heartbeat();
+        }
+    });
+});
+//# sourceMappingURL=index.test.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/index.test.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/index.test.js.map
new file mode 100644
index 0000000..1cd94a0
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/index.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../../../test/benchmark/index.test.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/protobuf.test.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/protobuf.test.d.ts
new file mode 100644
index 0000000..05311f5
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/protobuf.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=protobuf.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/protobuf.test.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/protobuf.test.d.ts.map
new file mode 100644
index 0000000..a7e2596
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/protobuf.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"protobuf.test.d.ts","sourceRoot":"","sources":["../../../test/benchmark/protobuf.test.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/protobuf.test.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/protobuf.test.js
new file mode 100644
index 0000000..9e50b47
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/protobuf.test.js
@@ -0,0 +1,48 @@
+import crypto from 'node:crypto';
+import { itBench } from '@dapplion/benchmark';
+import { RPC } from '../../src/message/rpc.js';
+describe('protobuf', function () {
+    const testCases = [
+        // As of Oct 2023, Attestation length = 281
+        { name: 'Attestation', length: 300 },
+        // A SignedBeaconBlock could be from 70_000 to 300_000
+        { name: 'SignedBeaconBlock', length: 70_000 },
+        { name: 'SignedBeaconBlock', length: 140_000 },
+        { name: 'SignedBeaconBlock', length: 210_000 },
+        { name: 'SignedBeaconBlock', length: 280_000 }
+    ];
+    for (const { name, length } of testCases) {
+        const rpc = {
+            subscriptions: [],
+            messages: [
+                {
+                    topic: 'topic1',
+                    data: crypto.randomBytes(length),
+                    signature: Uint8Array.from(Array.from({ length: 96 }, () => 100))
+                }
+            ],
+            control: undefined
+        };
+        const bytes = RPC.encode(rpc);
+        const runsFactor = 1000;
+        itBench({
+            id: `decode ${name} message ${length} bytes`,
+            fn: () => {
+                for (let i = 0; i < runsFactor; i++) {
+                    RPC.decode(bytes);
+                }
+            },
+            runsFactor
+        });
+        itBench({
+            id: `encode ${name} message ${length} bytes`,
+            fn: () => {
+                for (let i = 0; i < runsFactor; i++) {
+                    RPC.encode(rpc);
+                }
+            },
+            runsFactor
+        });
+    }
+});
+//# sourceMappingURL=protobuf.test.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/protobuf.test.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/protobuf.test.js.map
new file mode 100644
index 0000000..0741329
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/protobuf.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"protobuf.test.js","sourceRoot":"","sources":["../../../test/benchmark/protobuf.test.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,aAAa,CAAA;AAChC,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAA;AAC7C,OAAO,EAAE,GAAG,EAAE,MAAM,0BAA0B,CAAA;AAE9C,QAAQ,CAAC,UAAU,EAAE;IACnB,MAAM,SAAS,GAA4C;QACzD,2CAA2C;QAC3C,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,GAAG,EAAE;QACpC,sDAAsD;QACtD,EAAE,IAAI,EAAE,mBAAmB,EAAE,MAAM,EAAE,MAAM,EAAE;QAC7C,EAAE,IAAI,EAAE,mBAAmB,EAAE,MAAM,EAAE,OAAO,EAAE;QAC9C,EAAE,IAAI,EAAE,mBAAmB,EAAE,MAAM,EAAE,OAAO,EAAE;QAC9C,EAAE,IAAI,EAAE,mBAAmB,EAAE,MAAM,EAAE,OAAO,EAAE;KAC/C,CAAA;IAED,KAAK,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,SAAS,EAAE,CAAC;QACzC,MAAM,GAAG,GAAQ;YACf,aAAa,EAAE,EAAE;YACjB,QAAQ,EAAE;gBACR;oBACE,KAAK,EAAE,QAAQ;oBACf,IAAI,EAAE,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC;oBAChC,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;iBAClE;aACF;YACD,OAAO,EAAE,SAAS;SACnB,CAAA;QAED,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;QAE7B,MAAM,UAAU,GAAG,IAAI,CAAA;QAEvB,OAAO,CAAC;YACN,EAAE,EAAE,UAAU,IAAI,YAAY,MAAM,QAAQ;YAC5C,EAAE,EAAE,GAAG,EAAE;gBACP,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC;oBACpC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;gBACnB,CAAC;YACH,CAAC;YACD,UAAU;SACX,CAAC,CAAA;QAEF,OAAO,CAAC;YACN,EAAE,EAAE,UAAU,IAAI,YAAY,MAAM,QAAQ;YAC5C,EAAE,EAAE,GAAG,EAAE;gBACP,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC;oBACpC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;gBACjB,CAAC;YACH,CAAC;YACD,UAAU;SACX,CAAC,CAAA;IACJ,CAAC;AACH,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/time-cache.test.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/time-cache.test.d.ts
new file mode 100644
index 0000000..8b84d29
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/time-cache.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=time-cache.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/time-cache.test.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/time-cache.test.d.ts.map
new file mode 100644
index 0000000..fae2ec2
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/time-cache.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"time-cache.test.d.ts","sourceRoot":"","sources":["../../../test/benchmark/time-cache.test.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/time-cache.test.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/time-cache.test.js
new file mode 100644
index 0000000..1d2dec6
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/time-cache.test.js
@@ -0,0 +1,22 @@
+import { itBench } from '@dapplion/benchmark';
+// eslint-disable-next-line @typescript-eslint/ban-ts-comment
+// @ts-expect-error no types
+import TimeCache from 'time-cache';
+import { SimpleTimeCache } from '../../src/utils/time-cache.js';
+// TODO: errors with "Error: root suite not found"
+describe('npm TimeCache vs SimpleTimeCache', () => {
+    const iterations = [1_000_000, 4_000_000, 8_000_000, 16_000_000];
+    const timeCache = new TimeCache({ validity: 1 });
+    const simpleTimeCache = new SimpleTimeCache({ validityMs: 1000 });
+    for (const iteration of iterations) {
+        itBench(`npm TimeCache.put x${iteration}`, () => {
+            for (let j = 0; j < iteration; j++)
+                timeCache.put(String(j));
+        });
+        itBench(`SimpleTimeCache.put x${iteration}`, () => {
+            for (let j = 0; j < iteration; j++)
+                simpleTimeCache.put(String(j), true);
+        });
+    }
+});
+//# sourceMappingURL=time-cache.test.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/time-cache.test.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/time-cache.test.js.map
new file mode 100644
index 0000000..0f77d79
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/benchmark/time-cache.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"time-cache.test.js","sourceRoot":"","sources":["../../../test/benchmark/time-cache.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAA;AAC7C,6DAA6D;AAC7D,4BAA4B;AAC5B,OAAO,SAAS,MAAM,YAAY,CAAA;AAClC,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAA;AAE/D,kDAAkD;AAClD,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;IAChD,MAAM,UAAU,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,CAAC,CAAA;IAChE,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAA;IAChD,MAAM,eAAe,GAAG,IAAI,eAAe,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAA;IAEjE,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE,CAAC;QACnC,OAAO,CAAC,sBAAsB,SAAS,EAAE,EAAE,GAAG,EAAE;YAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE;gBAAE,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;QAC9D,CAAC,CAAC,CAAA;QAEF,OAAO,CAAC,wBAAwB,SAAS,EAAE,EAAE,GAAG,EAAE;YAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE;gBAAE,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;QAC1E,CAAC,CAAC,CAAA;IACJ,CAAC;AACH,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/compliance.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/compliance.spec.d.ts
new file mode 100644
index 0000000..dac08d9
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/compliance.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=compliance.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/compliance.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/compliance.spec.d.ts.map
new file mode 100644
index 0000000..dc9e719
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/compliance.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"compliance.spec.d.ts","sourceRoot":"","sources":["../../test/compliance.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/compliance.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/compliance.spec.js
new file mode 100644
index 0000000..71c5311
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/compliance.spec.js
@@ -0,0 +1,35 @@
+import { TypedEventEmitter } from '@libp2p/interface';
+import tests from '@libp2p/interface-compliance-tests/pubsub';
+import { defaultLogger } from '@libp2p/logger';
+import { PersistentPeerStore } from '@libp2p/peer-store';
+import { MemoryDatastore } from 'datastore-core';
+import { GossipSub } from '../src/index.js';
+describe.skip('interface compliance', function () {
+    this.timeout(3000);
+    tests({
+        async setup(args) {
+            if (args == null) {
+                throw new Error('PubSubOptions is required');
+            }
+            const pubsub = new GossipSub({
+                ...args.components,
+                peerStore: new PersistentPeerStore({
+                    peerId: args.components.peerId,
+                    datastore: new MemoryDatastore(),
+                    events: new TypedEventEmitter(),
+                    logger: defaultLogger()
+                })
+            }, {
+                ...args.init,
+                // libp2p-interfaces-compliance-tests in test 'can subscribe and unsubscribe correctly' publishes to no peers
+                // Disable check to allow passing tests
+                allowPublishToZeroTopicPeers: true
+            });
+            return pubsub;
+        },
+        async teardown() {
+            //
+        }
+    });
+});
+//# sourceMappingURL=compliance.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/compliance.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/compliance.spec.js.map
new file mode 100644
index 0000000..d05a95d
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/compliance.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"compliance.spec.js","sourceRoot":"","sources":["../../test/compliance.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAA;AACrD,OAAO,KAAK,MAAM,2CAA2C,CAAA;AAC7D,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAA;AACxD,OAAO,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAA;AAChD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAA;AAG3C,QAAQ,CAAC,IAAI,CAAC,sBAAsB,EAAE;IACpC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IAElB,KAAK,CAAC;QACJ,KAAK,CAAC,KAAK,CAAE,IAAI;YACf,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;gBACjB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAA;YAC9C,CAAC;YAED,MAAM,MAAM,GAAG,IAAI,SAAS,CAC1B;gBACE,GAAG,IAAI,CAAC,UAAU;gBAClB,SAAS,EAAE,IAAI,mBAAmB,CAAC;oBACjC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;oBAC9B,SAAS,EAAE,IAAI,eAAe,EAAE;oBAChC,MAAM,EAAE,IAAI,iBAAiB,EAAgB;oBAC7C,MAAM,EAAE,aAAa,EAAE;iBACxB,CAAC;aACH,EACD;gBACE,GAAG,IAAI,CAAC,IAAI;gBACZ,6GAA6G;gBAC7G,uCAAuC;gBACvC,4BAA4B,EAAE,IAAI;aACnC,CACF,CAAA;YAED,OAAO,MAAM,CAAA;QACf,CAAC;QAED,KAAK,CAAC,QAAQ;YACZ,EAAE;QACJ,CAAC;KACF,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/decodeRpc.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/decodeRpc.spec.d.ts
new file mode 100644
index 0000000..ab025b8
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/decodeRpc.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=decodeRpc.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/decodeRpc.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/decodeRpc.spec.d.ts.map
new file mode 100644
index 0000000..4ba86d9
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/decodeRpc.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"decodeRpc.spec.d.ts","sourceRoot":"","sources":["../../test/decodeRpc.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/decodeRpc.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/decodeRpc.spec.js
new file mode 100644
index 0000000..48f75b5
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/decodeRpc.spec.js
@@ -0,0 +1,116 @@
+import { expect } from 'aegir/chai';
+import { decodeRpc, defaultDecodeRpcLimits } from '../src/message/decodeRpc.js';
+import { RPC } from '../src/message/index.js';
+describe('decodeRpc', () => {
+    const topicID = 'topic';
+    const msgID = new Uint8Array(8);
+    const subscription = { subscribe: true, topic: topicID };
+    const message = { topic: topicID, data: new Uint8Array(100) };
+    const peerInfo = { peerID: msgID, signedPeerRecord: msgID };
+    const ihave = { topicID, messageIDs: [msgID] };
+    const iwant = { messageIDs: [msgID] };
+    const graft = { topicID };
+    const prune = { topicID, peers: [peerInfo] };
+    describe('decode correctness', () => {
+        it('Should decode full RPC', () => {
+            const rpc = {
+                subscriptions: [subscription, subscription],
+                messages: [message, message],
+                control: {
+                    ihave: [ihave, ihave],
+                    iwant: [iwant, iwant],
+                    graft: [graft, graft],
+                    prune: [prune, prune]
+                }
+            };
+            const bytes = RPC.encode(rpc).finish();
+            // Compare as JSON
+            expect(RPC.fromObject(decodeRpc(bytes, defaultDecodeRpcLimits)).toJSON()).deep.equals(RPC.decode(bytes).toJSON());
+        });
+    });
+    describe('decode limits', () => {
+        const decodeRpcLimits = {
+            maxSubscriptions: 2,
+            maxMessages: 2,
+            maxControlMessages: 2,
+            maxIhaveMessageIDs: 3,
+            maxIwantMessageIDs: 3,
+            maxPeerInfos: 3
+        };
+        // Check no mutations on limits
+        const limitsAfter = { ...decodeRpcLimits };
+        after('decodeRpcLimits has not been mutated', () => {
+            expect(limitsAfter).deep.equals(decodeRpcLimits);
+        });
+        const rpcEmpty = {
+            subscriptions: [],
+            messages: [],
+            control: {
+                ihave: [],
+                iwant: [],
+                graft: [],
+                prune: []
+            }
+        };
+        const rpcEmptyBytes = RPC.encode(rpcEmpty).finish();
+        it('limit subscriptions.length', () => {
+            // Decode a fresh instance to allow safe mutations
+            const rpc = RPC.decode(rpcEmptyBytes);
+            rpc.subscriptions = [subscription, subscription, subscription];
+            expect(endecode(rpc).subscriptions).length(decodeRpcLimits.maxSubscriptions);
+        });
+        it('limit messages.length', () => {
+            const rpc = RPC.decode(rpcEmptyBytes);
+            rpc.messages = [message, message, message];
+            expect(endecode(rpc).messages).length(decodeRpcLimits.maxMessages);
+        });
+        it('limit control.ihave.length', () => {
+            const rpc = RPC.decode(rpcEmptyBytes);
+            rpc.control = { ihave: [ihave, ihave, ihave] };
+            expect(endecode(rpc).control?.ihave).length(decodeRpcLimits.maxControlMessages);
+        });
+        it('limit control.iwant.length', () => {
+            const rpc = RPC.decode(rpcEmptyBytes);
+            rpc.control = { iwant: [iwant, iwant, iwant] };
+            expect(endecode(rpc).control?.iwant).length(decodeRpcLimits.maxControlMessages);
+        });
+        it('limit control.graft.length', () => {
+            const rpc = RPC.decode(rpcEmptyBytes);
+            rpc.control = { graft: [graft, graft, graft] };
+            expect(endecode(rpc).control?.graft).length(decodeRpcLimits.maxControlMessages);
+        });
+        it('limit control.prune.length', () => {
+            const rpc = RPC.decode(rpcEmptyBytes);
+            rpc.control = { prune: [prune, prune, prune] };
+            expect(endecode(rpc).control?.prune).length(decodeRpcLimits.maxControlMessages);
+        });
+        it('limit ihave.messageIDs.length', () => {
+            const rpc = RPC.decode(rpcEmptyBytes);
+            // Limit to 3 items total, 2 (all) on the first one, 1 on the second one
+            rpc.control = { ihave: [{ messageIDs: [msgID, msgID] }, { messageIDs: [msgID, msgID] }] };
+            expect(decodeRpcLimits.maxIhaveMessageIDs).equals(3, 'Wrong maxIhaveMessageIDs');
+            expect(endecode(rpc).control?.ihave?.[0].messageIDs).length(2, 'Wrong ihave?.[0].messageIDs len');
+            expect(endecode(rpc).control?.ihave?.[1].messageIDs).length(1, 'Wrong ihave?.[1].messageIDs len');
+        });
+        it('limit iwant.messageIDs.length', () => {
+            const rpc = RPC.decode(rpcEmptyBytes);
+            // Limit to 3 items total, 2 (all) on the first one, 1 on the second one
+            rpc.control = { iwant: [{ messageIDs: [msgID, msgID] }, { messageIDs: [msgID, msgID] }] };
+            expect(decodeRpcLimits.maxIwantMessageIDs).equals(3, 'Wrong maxIwantMessageIDs');
+            expect(endecode(rpc).control?.iwant?.[0].messageIDs).length(2, 'Wrong iwant?.[0].messageIDs len');
+            expect(endecode(rpc).control?.iwant?.[1].messageIDs).length(1, 'Wrong iwant?.[1].messageIDs len');
+        });
+        it('limit prune.peers.length', () => {
+            const rpc = RPC.decode(rpcEmptyBytes);
+            // Limit to 3 items total, 2 (all) on the first one, 1 on the second one
+            rpc.control = { prune: [{ peers: [peerInfo, peerInfo] }, { peers: [peerInfo, peerInfo] }] };
+            expect(decodeRpcLimits.maxPeerInfos).equals(3, 'Wrong maxPeerInfos');
+            expect(endecode(rpc).control?.prune?.[0].peers).length(2, 'Wrong prune?.[0].peers len');
+            expect(endecode(rpc).control?.prune?.[1].peers).length(1, 'Wrong prune?.[1].peers len');
+        });
+        function endecode(rpc) {
+            return decodeRpc(RPC.encode(rpc).finish(), decodeRpcLimits);
+        }
+    });
+});
+//# sourceMappingURL=decodeRpc.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/decodeRpc.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/decodeRpc.spec.js.map
new file mode 100644
index 0000000..3d1ddef
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/decodeRpc.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"decodeRpc.spec.js","sourceRoot":"","sources":["../../test/decodeRpc.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/e2e/go-gossipsub.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/e2e/go-gossipsub.spec.d.ts
new file mode 100644
index 0000000..86c3450
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/e2e/go-gossipsub.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=go-gossipsub.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/e2e/go-gossipsub.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/e2e/go-gossipsub.spec.d.ts.map
new file mode 100644
index 0000000..35560e4
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/e2e/go-gossipsub.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-gossipsub.spec.d.ts","sourceRoot":"","sources":["../../../test/e2e/go-gossipsub.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/e2e/go-gossipsub.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/e2e/go-gossipsub.spec.js
new file mode 100644
index 0000000..fc27489
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/e2e/go-gossipsub.spec.js
@@ -0,0 +1,1113 @@
+import { FloodSub } from '@libp2p/floodsub';
+import { TopicValidatorResult } from '@libp2p/interface';
+import { stop } from '@libp2p/interface';
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import pRetry from 'p-retry';
+import pWaitFor from 'p-wait-for';
+import { equals as uint8ArrayEquals } from 'uint8arrays/equals';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { GossipsubD } from '../../src/constants.js';
+import { sparseConnect, denseConnect, connectSome, createComponentsArray, createComponents, connectPubsubNodes } from '../utils/create-pubsub.js';
+import { awaitEvents, checkReceivedSubscription, checkReceivedSubscriptions } from '../utils/events.js';
+import { fastMsgIdFn } from '../utils/index.js';
+/**
+ * These tests were translated from:
+ * https://github.com/libp2p/go-libp2p-pubsub/blob/master/gossipsub_test.go
+ */
+/**
+ * Given a topic and data (and debug metadata -- sender index and msg index)
+ * Return a function (takes a gossipsub (and receiver index))
+ * that returns a Promise that awaits the message being received
+ * and checks that the received message equals the given message
+ */
+const checkReceivedMessage = (topic, data, senderIx, msgIx) => async (node, receiverIx) => new Promise((resolve, reject) => {
+    const t = setTimeout(() => {
+        node.pubsub.removeEventListener('message', cb);
+        reject(new Error(`Message never received, sender ${senderIx}, receiver ${receiverIx}, index ${msgIx}`));
+    }, 60000);
+    const cb = (evt) => {
+        const msg = evt.detail;
+        if (msg.topic !== topic) {
+            return;
+        }
+        if (uint8ArrayEquals(data, msg.data)) {
+            clearTimeout(t);
+            node.pubsub.removeEventListener('message', cb);
+            resolve();
+        }
+    };
+    node.pubsub.addEventListener('message', cb);
+});
+describe('go-libp2p-pubsub gossipsub tests', function () {
+    // In Github runners it takes ~10sec the longest test
+    this.timeout(120 * 1000);
+    this.retries(3);
+    let psubs;
+    beforeEach(() => {
+        mockNetwork.reset();
+    });
+    afterEach(async () => {
+        await stop(...psubs.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+        mockNetwork.reset();
+    });
+    it('test sparse gossipsub', async function () {
+        // Create 20 gossipsub nodes
+        // Subscribe to the topic, all nodes
+        // Sparsely connect the nodes
+        // Publish 100 messages, each from a random node
+        // Assert that subscribed nodes receive the message
+        psubs = await createComponentsArray({
+            number: 20,
+            init: {
+                floodPublish: false,
+                batchPublish: true,
+                scoreParams: {
+                    IPColocationFactorThreshold: 20,
+                    behaviourPenaltyWeight: 0
+                }
+            }
+        });
+        const topic = 'foobar';
+        psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+        await sparseConnect(psubs);
+        // wait for heartbeats to build mesh
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+        const sendRecv = [];
+        for (let i = 0; i < 100; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = Math.floor(Math.random() * psubs.length);
+            const results = Promise.all(psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i)));
+            sendRecv.push(psubs[owner].pubsub.publish(topic, msg));
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+    });
+    const batchOpts = [true, false];
+    for (const batchPublish of batchOpts) {
+        // eslint-disable-next-line no-loop-func
+        it(`test dense gossipsub batchPublish=${batchPublish}`, async function () {
+            // Create 20 gossipsub nodes
+            // Subscribe to the topic, all nodes
+            // Densely connect the nodes
+            // Publish 100 messages, each from a random node
+            // Assert that subscribed nodes receive the message
+            psubs = await createComponentsArray({
+                number: 20,
+                init: {
+                    floodPublish: false,
+                    batchPublish,
+                    scoreParams: {
+                        IPColocationFactorThreshold: 20,
+                        behaviourPenaltyWeight: 0
+                    }
+                }
+            });
+            const topic = 'foobar';
+            psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+            await denseConnect(psubs);
+            // wait for heartbeats to build mesh
+            await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+            const sendRecv = [];
+            for (let i = 0; i < 100; i++) {
+                const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+                const owner = Math.floor(Math.random() * psubs.length);
+                const results = Promise.all(psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i)));
+                sendRecv.push(psubs[owner].pubsub.publish(topic, msg));
+                sendRecv.push(results);
+            }
+            await Promise.all(sendRecv);
+        });
+    }
+    it('test gossipsub fanout', async function () {
+        // Create 20 gossipsub nodes
+        // Subscribe to the topic, all nodes except the first
+        // Densely connect the nodes
+        // Publish 100 messages, each from the first node
+        // Assert that subscribed nodes receive the message
+        // Subscribe to the topic, first node
+        // Publish 100 messages, each from the first node
+        // Assert that subscribed nodes receive the message
+        psubs = await createComponentsArray({
+            number: 20,
+            init: {
+                floodPublish: false,
+                scoreParams: {
+                    IPColocationFactorThreshold: 20,
+                    behaviourPenaltyWeight: 0
+                }
+            }
+        });
+        const topic = 'foobar';
+        const promises = psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2));
+        psubs.slice(1).forEach((ps) => { ps.pubsub.subscribe(topic); });
+        await denseConnect(psubs);
+        // wait for heartbeats to build mesh
+        await Promise.all(promises);
+        let sendRecv = [];
+        for (let i = 0; i < 100; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = 0;
+            const results = Promise.all(psubs.slice(1).map(checkReceivedMessage(topic, msg, owner, i)));
+            await psubs[owner].pubsub.publish(topic, msg);
+            await results;
+        }
+        // await Promise.all(sendRecv)
+        psubs[0].pubsub.subscribe(topic);
+        // wait for a heartbeat
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 1)));
+        sendRecv = [];
+        for (let i = 0; i < 100; i++) {
+            const msg = uint8ArrayFromString(`2nd - ${i} its not a flooooood ${i}`);
+            const owner = 0;
+            const results = Promise.all(psubs
+                .slice(1)
+                .filter((psub, j) => j !== owner)
+                .map(checkReceivedMessage(topic, msg, owner, i)));
+            sendRecv.push(psubs[owner].pubsub.publish(topic, msg));
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+    });
+    it('test gossipsub fanout maintenance', async function () {
+        // Create 20 gossipsub nodes
+        // Subscribe to the topic, all nodes except the first
+        // Densely connect the nodes
+        // Publish 100 messages, each from the first node
+        // Assert that subscribed nodes receive the message
+        // Unsubscribe to the topic, all nodes except the first
+        // Resubscribe to the topic, all nodes except the first
+        // Publish 100 messages, each from the first node
+        // Assert that the subscribed nodes receive the message
+        psubs = await createComponentsArray({
+            number: 20,
+            init: {
+                floodPublish: false,
+                scoreParams: {
+                    IPColocationFactorThreshold: 20,
+                    behaviourPenaltyWeight: 0
+                }
+            }
+        });
+        const promises = psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2));
+        const topic = 'foobar';
+        psubs.slice(1).forEach((ps) => { ps.pubsub.subscribe(topic); });
+        await denseConnect(psubs);
+        // wait for heartbeats to build mesh
+        await Promise.all(promises);
+        let sendRecv = [];
+        const sendMessages = async (time) => {
+            for (let i = 0; i < 100; i++) {
+                const msg = uint8ArrayFromString(`${time} ${i} its not a flooooood ${i}`);
+                const owner = 0;
+                const results = Promise.all(psubs
+                    .slice(1)
+                    .filter((psub, j) => j !== owner)
+                    .map(checkReceivedMessage(topic, msg, owner, i)));
+                await psubs[owner].pubsub.publish(topic, msg);
+                sendRecv.push(results);
+            }
+        };
+        await sendMessages(1);
+        await Promise.all(sendRecv);
+        psubs.slice(1).forEach((ps) => { ps.pubsub.unsubscribe(topic); });
+        // wait for heartbeats
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+        psubs.slice(1).forEach((ps) => { ps.pubsub.subscribe(topic); });
+        // wait for heartbeats
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+        sendRecv = [];
+        await sendMessages(2);
+        await Promise.all(sendRecv);
+    });
+    it('test gossipsub fanout expiry', async function () {
+        // Create 10 gossipsub nodes
+        // Subscribe to the topic, all nodes except the first
+        // Densely connect the nodes
+        // Publish 5 messages, each from the first node
+        // Assert that the subscribed nodes receive every message
+        // Assert that the first node has fanout peers
+        // Wait until fanout expiry
+        // Assert that the first node has no fanout
+        psubs = await createComponentsArray({
+            number: 10,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: 20,
+                    behaviourPenaltyWeight: 0
+                },
+                floodPublish: false,
+                fanoutTTL: 1000
+            }
+        });
+        const promises = psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2));
+        const topic = 'foobar';
+        psubs.slice(1).forEach((ps) => { ps.pubsub.subscribe(topic); });
+        await denseConnect(psubs);
+        // wait for heartbeats to build mesh
+        await Promise.all(promises);
+        const sendRecv = [];
+        for (let i = 0; i < 5; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = 0;
+            const results = Promise.all(psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i)));
+            await psubs[owner].pubsub.publish(topic, msg);
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+        expect((psubs[0].pubsub).fanout).to.not.be.empty();
+        await pWaitFor(async () => {
+            return (psubs[0].pubsub).fanout.size === 0;
+        });
+    });
+    it('test gossipsub gossip', async function () {
+        // Create 20 gossipsub nodes
+        // Subscribe to the topic, all nodes
+        // Densely connect the nodes
+        // Publish 100 messages, each from a random node
+        // Assert that the subscribed nodes receive the message
+        // Wait a bit between each message so gossip can be interleaved
+        psubs = await createComponentsArray({
+            number: 20,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: 20,
+                    behaviourPenaltyWeight: 0
+                }
+            }
+        });
+        const promises = psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2));
+        const topic = 'foobar';
+        psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+        await denseConnect(psubs);
+        // wait for heartbeats to build mesh
+        await Promise.all(promises);
+        for (let i = 0; i < 100; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = Math.floor(Math.random() * psubs.length);
+            const results = Promise.all(psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i)));
+            await psubs[owner].pubsub.publish(topic, msg);
+            await results;
+            // wait a bit to have some gossip interleaved
+            await delay(100);
+        }
+        // and wait for some gossip flushing
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+    });
+    it('test gossipsub gossip propagation', async function () {
+        // Create 20 gossipsub nodes
+        // Split into two groups, just a single node shared between
+        // Densely connect each group to itself
+        // Subscribe to the topic, first group minus the shared node
+        // Publish 10 messages, each from the shared node
+        // Assert that the first group receives the messages
+        // Subscribe to the topic, second group minus the shared node
+        // Assert that the second group receives the messages (via gossip)
+        psubs = await createComponentsArray({
+            number: 20,
+            init: {
+                floodPublish: false,
+                scoreParams: {
+                    IPColocationFactorThreshold: 20,
+                    behaviourPenaltyWeight: 0
+                }
+            }
+        });
+        const topic = 'foobar';
+        const group1 = psubs.slice(0, GossipsubD + 1);
+        const group2 = psubs.slice(GossipsubD + 1);
+        group2.unshift(psubs[0]);
+        await denseConnect(group1);
+        await denseConnect(group2);
+        group1.slice(1).forEach((ps) => { ps.pubsub.subscribe(topic); });
+        // wait for heartbeats to build mesh
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 3)));
+        const sendRecv = [];
+        for (let i = 0; i < 10; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = 0;
+            const results = Promise.all(group1.slice(1).map(checkReceivedMessage(topic, msg, owner, i)));
+            sendRecv.push(psubs[owner].pubsub.publish(topic, msg));
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+        await delay(100);
+        psubs.slice(GossipsubD + 1).forEach((ps) => { ps.pubsub.subscribe(topic); });
+        const received = Array.from({ length: psubs.length - (GossipsubD + 1) }, () => []);
+        const results = Promise.all(group2.slice(1).map(async (ps, ix) => new Promise((resolve, reject) => {
+            const t = setTimeout(() => { reject(new Error('Timed out')); }, 10000);
+            ps.pubsub.addEventListener('message', (e) => {
+                if (e.detail.topic !== topic) {
+                    return;
+                }
+                received[ix].push(e.detail);
+                if (received[ix].length >= 10) {
+                    clearTimeout(t);
+                    resolve();
+                }
+            });
+        })));
+        await results;
+    });
+    it('test gossipsub prune', async function () {
+        // Create 20 gossipsub nodes
+        // Subscribe to the topic, all nodes
+        // Densely connect nodes
+        // Unsubscribe to the topic, first 5 nodes
+        // Publish 100 messages, each from a random node
+        // Assert that the subscribed nodes receive every message
+        psubs = await createComponentsArray({
+            number: 20,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: 20
+                }
+            }
+        });
+        const topic = 'foobar';
+        psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+        await denseConnect(psubs);
+        // wait for heartbeats to build mesh
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+        // disconnect some peers from the mesh to get some PRUNEs
+        psubs.slice(0, 5).forEach((ps) => { ps.pubsub.unsubscribe(topic); });
+        // wait a bit to take effect
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+        const sendRecv = [];
+        for (let i = 0; i < 100; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = Math.floor(Math.random() * psubs.length);
+            const results = Promise.all(psubs
+                .slice(5)
+                .filter((psub, j) => j + 5 !== owner)
+                .map(checkReceivedMessage(topic, msg, owner, i)));
+            sendRecv.push(psubs[owner].pubsub.publish(topic, msg));
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+    });
+    it('test gossipsub graft', async function () {
+        // Create 20 gossipsub nodes
+        // Sparsely connect nodes
+        // Subscribe to the topic, all nodes, waiting for each subscription to propagate first
+        // Publish 100 messages, each from a random node
+        // Assert that the subscribed nodes receive every message
+        psubs = await createComponentsArray({
+            number: 20,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: 20,
+                    behaviourPenaltyWeight: 0
+                }
+            }
+        });
+        const topic = 'foobar';
+        await sparseConnect(psubs);
+        for (const ps of psubs) {
+            ps.pubsub.subscribe(topic);
+            // wait for announce to propagate
+            await delay(100);
+        }
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+        const sendRecv = [];
+        for (let i = 0; i < 100; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = Math.floor(Math.random() * psubs.length);
+            const results = Promise.all(psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i)));
+            sendRecv.push(psubs[owner].pubsub.publish(topic, msg));
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+    });
+    it('test gossipsub remove peer', async function () {
+        // Create 20 gossipsub nodes
+        // Subscribe to the topic, all nodes
+        // Densely connect nodes
+        // Stop 5 nodes
+        // Publish 100 messages, each from a random still-started node
+        // Assert that the subscribed nodes receive every message
+        psubs = await createComponentsArray({
+            number: 20,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: 20
+                }
+            }
+        });
+        const topic = 'foobar';
+        await denseConnect(psubs);
+        psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+        // wait for heartbeats to build mesh
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+        // disconnect some peers to exercise _removePeer paths
+        afterEach(async () => {
+            await stop(...psubs
+                .slice(0, 5)
+                .reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+        });
+        const sendRecv = [];
+        for (let i = 0; i < 100; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = Math.floor(Math.random() * (psubs.length - 5));
+            const results = Promise.all(psubs
+                .slice(5)
+                .filter((psub, j) => j !== owner)
+                .map(checkReceivedMessage(topic, msg, owner, i)));
+            sendRecv.push(psubs.slice(5)[owner].pubsub.publish(topic, msg));
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+    });
+    it('test gossipsub graft prune retry', async function () {
+        // Create 10 gossipsub nodes
+        // Densely connect nodes
+        // Subscribe to 35 topics, all nodes
+        // Publish a message from each topic, each from a random node
+        // Assert that the subscribed nodes receive every message
+        psubs = await createComponentsArray({
+            number: 10,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: 20
+                }
+            }
+        });
+        const topic = 'foobar';
+        await denseConnect(psubs);
+        for (let i = 0; i < 35; i++) {
+            psubs.forEach((ps) => { ps.pubsub.subscribe(`${topic}${i}`); });
+        }
+        // wait for heartbeats to build mesh
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 9)));
+        for (let i = 0; i < 35; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = Math.floor(Math.random() * psubs.length);
+            const results = Promise.all(psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(`${topic}${i}`, msg, owner, i)));
+            await psubs[owner].pubsub.publish(`${topic}${i}`, msg);
+            await delay(20);
+            await results;
+        }
+    });
+    it.skip('test gossipsub control piggyback', async function () {
+        // Create 10 gossipsub nodes
+        // Densely connect nodes
+        // Subscribe to a 'flood' topic, all nodes
+        // Publish 10k messages on the flood topic, each from a random node, in the background
+        // Subscribe to 5 topics, all nodes
+        // Wait for the flood to stop
+        // Publish a message to each topic, each from a random node
+        // Assert that subscribed nodes receive each message
+        // Publish a message from each topic, each from a random node
+        // Assert that the subscribed nodes receive every message
+        psubs = await createComponentsArray({
+            number: 10,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: 20,
+                    behaviourPenaltyWeight: 0
+                }
+            }
+        });
+        const topic = 'foobar';
+        await denseConnect(psubs);
+        const floodTopic = 'flood';
+        psubs.forEach((ps) => { ps.pubsub.subscribe(floodTopic); });
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 1)));
+        // create a background flood of messages that overloads the queues
+        const floodOwner = Math.floor(Math.random() * psubs.length);
+        const floodMsg = uint8ArrayFromString('background flooooood');
+        const backgroundFlood = Promise.resolve().then(async () => {
+            for (let i = 0; i < 10000; i++) {
+                await psubs[floodOwner].pubsub.publish(floodTopic, floodMsg);
+            }
+        });
+        await delay(20);
+        // and subscribe to a bunch of topics in the meantime -- this should
+        // result in some dropped control messages, with subsequent piggybacking
+        // in the background flood
+        for (let i = 0; i < 5; i++) {
+            psubs.forEach((ps) => { ps.pubsub.subscribe(`${topic}${i}`); });
+        }
+        // wait for the flood to stop
+        await backgroundFlood;
+        // and test that we have functional overlays
+        const sendRecv = [];
+        for (let i = 0; i < 5; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = Math.floor(Math.random() * psubs.length);
+            const results = Promise.all(psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(`${topic}${i}`, msg, owner, i)));
+            await psubs[owner].pubsub.publish(`${topic}${i}`, msg);
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+    });
+    it('test mixed gossipsub', async function () {
+        // Create 20 gossipsub nodes
+        // Create 10 floodsub nodes
+        // Subscribe to the topic, all nodes
+        // Sparsely connect nodes
+        // Publish 100 messages, each from a random node
+        // Assert that the subscribed nodes receive every message
+        const gsubs = await createComponentsArray({
+            number: 20,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: 20,
+                    behaviourPenaltyWeight: 0
+                },
+                fastMsgIdFn
+            }
+        });
+        const fsubs = await createComponentsArray({
+            number: 10,
+            pubsub: FloodSub
+        });
+        psubs = gsubs.concat(fsubs);
+        const topic = 'foobar';
+        psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+        await sparseConnect(psubs);
+        // wait for heartbeats to build mesh
+        await Promise.all(gsubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+        const sendRecv = [];
+        for (let i = 0; i < 100; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = Math.floor(Math.random() * psubs.length);
+            const results = Promise.all(psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i)));
+            sendRecv.push(psubs[owner].pubsub.publish(topic, msg));
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+    });
+    it('test gossipsub multihops', async function () {
+        // Create 6 gossipsub nodes
+        // Connect nodes in a line (eg: 0 -> 1 -> 2 -> 3 ...)
+        // Subscribe to the topic, all nodes
+        // Publish a message from node 0
+        // Assert that the last node receives the message
+        const numPeers = 6;
+        psubs = await createComponentsArray({
+            number: numPeers,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: 20,
+                    behaviourPenaltyWeight: 0
+                }
+            }
+        });
+        const topic = 'foobar';
+        for (let i = 0; i < numPeers - 1; i++) {
+            await connectPubsubNodes(psubs[i], psubs[i + 1]);
+        }
+        const peerIdStrsByIdx = [];
+        for (let i = 0; i < numPeers; i++) {
+            if (i === 0) {
+                // first
+                peerIdStrsByIdx[i] = [psubs[i + 1].components.peerId.toString()];
+            }
+            else if (i > 0 && i < numPeers - 1) {
+                // middle
+                peerIdStrsByIdx[i] = [psubs[i + 1].components.peerId.toString(), psubs[i - 1].components.peerId.toString()];
+            }
+            else if (i === numPeers - 1) {
+                // last
+                peerIdStrsByIdx[i] = [psubs[i - 1].components.peerId.toString()];
+            }
+        }
+        const subscriptionPromises = psubs.map(async (psub, i) => checkReceivedSubscriptions(psub, peerIdStrsByIdx[i], topic));
+        psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+        // wait for heartbeats to build mesh
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+        await Promise.all(subscriptionPromises);
+        const msg = uint8ArrayFromString(`${0} its not a flooooood ${0}`);
+        const owner = 0;
+        const results = checkReceivedMessage(topic, msg, owner, 0)(psubs[5], 5);
+        await psubs[owner].pubsub.publish(topic, msg);
+        await results;
+    });
+    it('test gossipsub tree topology', async function () {
+        // Create 10 gossipsub nodes
+        // Connect nodes in a tree, diagram below
+        // Subscribe to the topic, all nodes
+        // Assert that the nodes are peered appropriately
+        // Publish two messages, one from either end of the tree
+        // Assert that the subscribed nodes receive every message
+        psubs = await createComponentsArray({
+            number: 10,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: 20
+                }
+            }
+        });
+        const topic = 'foobar';
+        /*
+         [0] -> [1] -> [2] -> [3]
+          |      L->[4]
+          v
+         [5] -> [6] -> [7]
+          |
+          v
+         [8] -> [9]
+        */
+        const treeTopology = [
+            [1, 5], // 0
+            [2, 4], // 1
+            [3], // 2
+            [], // 3 leaf
+            [], // 4 leaf
+            [6, 8], // 5
+            [7], // 6
+            [], // 7 leaf
+            [9], // 8
+            [] // 9 leaf
+        ];
+        for (let from = 0; from < treeTopology.length; from++) {
+            for (const to of treeTopology[from]) {
+                await connectPubsubNodes(psubs[from], psubs[to]);
+            }
+        }
+        const getPeerIdStrs = (idx) => {
+            const outbounds = treeTopology[idx];
+            const inbounds = [];
+            for (let i = 0; i < treeTopology.length; i++) {
+                if (treeTopology[i].includes(idx))
+                    inbounds.push(i);
+            }
+            return Array.from(new Set([...inbounds, ...outbounds])).map((i) => psubs[i].components.peerId.toString());
+        };
+        const subscriptionPromises = psubs.map(async (psub, i) => checkReceivedSubscriptions(psub, getPeerIdStrs(i), topic));
+        psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+        // wait for heartbeats to build mesh
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+        await Promise.all(subscriptionPromises);
+        expect(psubs[0].pubsub.getPeers().map((s) => s.toString())).to.have.members([
+            psubs[1].components.peerId.toString(),
+            psubs[5].components.peerId.toString()
+        ]);
+        expect(psubs[1].pubsub.getPeers().map((s) => s.toString())).to.have.members([
+            psubs[0].components.peerId.toString(),
+            psubs[2].components.peerId.toString(),
+            psubs[4].components.peerId.toString()
+        ]);
+        expect(psubs[2].pubsub.getPeers().map((s) => s.toString())).to.have.members([
+            psubs[1].components.peerId.toString(),
+            psubs[3].components.peerId.toString()
+        ]);
+        const sendRecv = [];
+        for (const owner of [9, 3]) {
+            const msg = uint8ArrayFromString(`${owner} its not a flooooood ${owner}`);
+            const results = Promise.all(psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, owner)));
+            sendRecv.push(psubs[owner].pubsub.publish(topic, msg));
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+    });
+    it('test gossipsub star topology with signed peer records', async function () {
+        // Create 20 gossipsub nodes with lower degrees
+        // Connect nodes to a center node, with the center having very low degree
+        // Subscribe to the topic, all nodes
+        // Assert that all nodes have > 1 connection
+        // Publish one message per node
+        // Assert that the subscribed nodes receive every message
+        psubs = await createComponentsArray({
+            number: 20,
+            init: {
+                scoreThresholds: {
+                    acceptPXThreshold: 0
+                },
+                scoreParams: {
+                    IPColocationFactorThreshold: 20
+                },
+                doPX: true,
+                D: 4,
+                Dhi: 5,
+                Dlo: 3,
+                Dscore: 3,
+                prunePeers: 5
+            }
+        });
+        (psubs[0].pubsub).opts.D = 0;
+        (psubs[0].pubsub).opts.Dhi = 0;
+        (psubs[0].pubsub).opts.Dlo = 0;
+        (psubs[0].pubsub).opts.Dscore = 0;
+        // build the star
+        await Promise.all(psubs.slice(1).map(async (ps) => connectPubsubNodes(psubs[0], ps)));
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+        // build the mesh
+        const topic = 'foobar';
+        const peerIdStrs = psubs.map((psub) => psub.components.peerId.toString());
+        const subscriptionPromise = checkReceivedSubscriptions(psubs[0], peerIdStrs, topic);
+        psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+        // wait a bit for the mesh to build
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 15, 25000)));
+        await subscriptionPromise;
+        // check that all peers have > 1 connection
+        psubs.forEach((ps) => {
+            expect(ps.components.connectionManager.getConnections().length).to.be.gt(1);
+        });
+        // send a message from each peer and assert it was propagated
+        const sendRecv = [];
+        for (let i = 0; i < psubs.length; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = i;
+            const results = Promise.all(psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i)));
+            sendRecv.push(psubs[owner].pubsub.publish(topic, msg));
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+    });
+    it('test gossipsub direct peers', async function () {
+        // Create 3 gossipsub nodes
+        // 2 and 3 with direct peer connections with each other
+        // Connect nodes: 2 <- 1 -> 3
+        // Assert that the nodes are connected
+        // Subscribe to the topic, all nodes
+        // Publish a message from each node
+        // Assert that all nodes receive the messages
+        // Disconnect peers
+        // Assert peers reconnect
+        // Publish a message from each node
+        // Assert that all nodes receive the messages
+        psubs = await Promise.all([
+            createComponents({
+                init: {
+                    scoreParams: {
+                        IPColocationFactorThreshold: 20
+                    },
+                    fastMsgIdFn,
+                    directConnectTicks: 2
+                }
+            }),
+            createComponents({
+                init: {
+                    scoreParams: {
+                        IPColocationFactorThreshold: 20
+                    },
+                    fastMsgIdFn,
+                    directConnectTicks: 2
+                }
+            }),
+            createComponents({
+                init: {
+                    scoreParams: {
+                        IPColocationFactorThreshold: 20
+                    },
+                    fastMsgIdFn
+                }
+            })
+        ]);
+        (psubs[1].pubsub).direct.add(psubs[2].components.peerId.toString());
+        await connectPubsubNodes(psubs[1], psubs[2]);
+        (psubs[2].pubsub).direct.add(psubs[1].components.peerId.toString());
+        await connectPubsubNodes(psubs[2], psubs[1]);
+        // each peer connects to 2 other peers
+        await connectPubsubNodes(psubs[0], psubs[1]);
+        await connectPubsubNodes(psubs[0], psubs[2]);
+        const topic = 'foobar';
+        const peerIdStrs = psubs.map((libp2p) => libp2p.components.peerId.toString());
+        let subscriptionPromises = psubs.map(async (libp2ps) => checkReceivedSubscriptions(libp2ps, peerIdStrs, topic));
+        psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 1)));
+        await Promise.all(subscriptionPromises);
+        let sendRecv = [];
+        for (let i = 0; i < 3; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = i;
+            const results = Promise.all(psubs.filter((_, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i)));
+            sendRecv.push(psubs[owner].pubsub.publish(topic, msg));
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+        const connectPromises = [1, 2].map(async (i) => awaitEvents(psubs[i].components.events, 'peer:connect', 1));
+        // disconnect the direct peers to test reconnection
+        // need more time to disconnect/connect/send subscriptions again
+        subscriptionPromises = [
+            checkReceivedSubscription(psubs[1], peerIdStrs[2], topic, 2, 10000),
+            checkReceivedSubscription(psubs[2], peerIdStrs[1], topic, 1, 10000)
+        ];
+        await psubs[1].components.connectionManager.closeConnections(psubs[2].components.peerId);
+        // TODO remove when https://github.com/libp2p/js-libp2p-interfaces/pull/268 is merged
+        await psubs[2].components.connectionManager.closeConnections(psubs[1].components.peerId);
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 5)));
+        await Promise.all(connectPromises);
+        await Promise.all(subscriptionPromises);
+        expect(psubs[1].components.connectionManager.getConnections(psubs[2].components.peerId)).to.not.be.empty();
+        sendRecv = [];
+        for (let i = 0; i < 3; i++) {
+            const msg = uint8ArrayFromString(`2nd - ${i} its not a flooooood ${i}`);
+            const owner = i;
+            const results = Promise.all(psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i)));
+            sendRecv.push(psubs[owner].pubsub.publish(topic, msg));
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+    });
+    it('test gossipsub flood publish', async function () {
+        // Create 30 gossipsub nodes
+        // Connect in star topology
+        // Subscribe to the topic, all nodes
+        // Publish 20 messages, each from the center node
+        // Assert that the other nodes receive the message
+        const numPeers = 30;
+        psubs = await createComponentsArray({
+            number: numPeers,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: 30
+                }
+            }
+        });
+        await Promise.all(psubs.slice(1).map(async (ps) => {
+            await connectPubsubNodes(psubs[0], ps);
+        }));
+        const owner = 0;
+        const psub0 = psubs[owner];
+        const peerIdStrs = psubs.filter((_, j) => j !== owner).map((psub) => psub.components.peerId.toString());
+        // build the (partial, unstable) mesh
+        const topic = 'foobar';
+        const subscriptionPromise = checkReceivedSubscriptions(psub0, peerIdStrs, topic);
+        psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 1)));
+        await subscriptionPromise;
+        // send messages from the star and assert they were received
+        const sendRecv = [];
+        for (let i = 0; i < 20; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const results = Promise.all(psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i)));
+            sendRecv.push(psubs[owner].pubsub.publish(topic, msg));
+            sendRecv.push(results);
+        }
+        await Promise.all(sendRecv);
+    });
+    it('test gossipsub negative score', async function () {
+        // Create 20 gossipsub nodes, with scoring params to quickly lower node 0's score
+        // Connect densely
+        // Subscribe to the topic, all nodes
+        // Publish 20 messages, each from a different node, collecting all received messages
+        // Assert that nodes other than 0 should not receive any messages from node 0
+        psubs = await createComponentsArray({
+            number: 20,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: 30,
+                    appSpecificScore: (p) => (p === psubs[0].components.peerId.toString() ? -1000 : 0),
+                    decayInterval: 1000,
+                    decayToZero: 0.01
+                },
+                scoreThresholds: {
+                    gossipThreshold: -10,
+                    publishThreshold: -100,
+                    graylistThreshold: -1000
+                },
+                fastMsgIdFn
+            }
+        });
+        await denseConnect(psubs);
+        const topic = 'foobar';
+        psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 3)));
+        psubs.slice(1).forEach((ps) => {
+            ps.pubsub.addEventListener('message', (evt) => {
+                if (evt.detail.type !== 'signed') {
+                    throw new Error('unexpected message type');
+                }
+                expect(evt.detail.from.equals(psubs[0].components.peerId)).to.be.false();
+            });
+        });
+        const sendRecv = [];
+        for (let i = 0; i < 20; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = i;
+            sendRecv.push(psubs[owner].pubsub.publish(topic, msg));
+        }
+        await Promise.all(sendRecv);
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+    });
+    it('test gossipsub score validator ex', async function () {
+        // Create 3 gossipsub nodes
+        // Connect fully
+        // Register a topic validator on node 0: ignore 1, reject 2
+        // Subscribe to the topic, node 0
+        // Publish 2 messages, from 1 and 2
+        // Assert that 0 received neither message
+        // Assert that 1's score is 0, 2's score is negative
+        const topic = 'foobar';
+        psubs = await createComponentsArray({
+            number: 3,
+            init: {
+                scoreParams: {
+                    topics: {
+                        [topic]: {
+                            topicWeight: 1,
+                            timeInMeshQuantum: 1000,
+                            invalidMessageDeliveriesWeight: -1,
+                            invalidMessageDeliveriesDecay: 0.9999,
+                            timeInMeshWeight: 0,
+                            timeInMeshCap: 0,
+                            firstMessageDeliveriesWeight: 0,
+                            firstMessageDeliveriesDecay: 0,
+                            firstMessageDeliveriesCap: 0,
+                            meshMessageDeliveriesWeight: 0,
+                            meshMessageDeliveriesDecay: 0,
+                            meshMessageDeliveriesCap: 0,
+                            meshMessageDeliveriesThreshold: 0,
+                            meshMessageDeliveriesWindow: 0,
+                            meshMessageDeliveriesActivation: 0,
+                            meshFailurePenaltyWeight: 0,
+                            meshFailurePenaltyDecay: 0
+                        }
+                    }
+                }
+            }
+        });
+        await connectPubsubNodes(psubs[0], psubs[1]);
+        await connectPubsubNodes(psubs[1], psubs[2]);
+        await connectPubsubNodes(psubs[0], psubs[2]);
+        (psubs[0].pubsub).topicValidators.set(topic, async (propagationSource, m) => {
+            if (propagationSource.equals(psubs[1].components.peerId))
+                return TopicValidatorResult.Ignore;
+            if (propagationSource.equals(psubs[2].components.peerId))
+                return TopicValidatorResult.Reject;
+            throw Error('Unknown PeerId');
+        });
+        psubs[0].pubsub.subscribe(topic);
+        await delay(200);
+        psubs[0].pubsub.addEventListener('message', () => expect.fail('node 0 should not receive any messages'));
+        const msg = uint8ArrayFromString('its not a flooooood');
+        await psubs[1].pubsub.publish(topic, msg);
+        const msg2 = uint8ArrayFromString('2nd - its not a flooooood');
+        await psubs[2].pubsub.publish(topic, msg2);
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)));
+        expect((psubs[0].pubsub).score.score(psubs[1].components.peerId.toString())).to.be.eql(0);
+        expect((psubs[0].pubsub).score.score(psubs[2].components.peerId.toString())).to.be.lt(0);
+    });
+    it('test gossipsub piggyback control', async function () {
+        psubs = await createComponentsArray({ number: 2 });
+        const otherId = psubs[1].components.peerId.toString();
+        const psub = psubs[0].pubsub;
+        const topic1 = 'topic_1';
+        const topic2 = 'topic_2';
+        const topic3 = 'topic_3';
+        psub.mesh.set(topic1, new Set([otherId]));
+        psub.mesh.set(topic2, new Set());
+        const rpc = {
+            subscriptions: [],
+            messages: []
+        };
+        const toGraft = (topicID) => ({ topicID });
+        const toPrune = (topicID) => ({ topicID, peers: [] });
+        psub.piggybackControl(otherId, rpc, {
+            graft: [toGraft(topic1), toGraft(topic2), toGraft(topic3)],
+            prune: [toPrune(topic1), toPrune(topic2), toPrune(topic3)],
+            ihave: [],
+            iwant: []
+        });
+        const expectedRpc = {
+            subscriptions: [],
+            messages: [],
+            control: {
+                graft: [toGraft(topic1)],
+                prune: [toPrune(topic2), toPrune(topic3)],
+                ihave: [],
+                iwant: []
+            }
+        };
+        expect(rpc).deep.equals(expectedRpc);
+        await psub.stop();
+    });
+    it('test gossipsub opportunistic grafting', async function () {
+        // Create 20 nodes
+        // 6 real gossip nodes, 14 'sybil' nodes, unresponsive nodes
+        // Connect some of the real nodes
+        // Connect every sybil to every real node
+        // Subscribe to the topic, all real nodes
+        // Publish 300 messages from the real nodes
+        // Wait for opgraft
+        // Assert the real peer meshes have at least 2 honest peers
+        const topic = 'test';
+        psubs = await createComponentsArray({
+            number: 20,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: 50,
+                    decayToZero: 0.01,
+                    topics: {
+                        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
+                        [topic]: {
+                            topicWeight: 1,
+                            timeInMeshWeight: 0.00002777,
+                            timeInMeshQuantum: 1000,
+                            timeInMeshCap: 3600,
+                            firstMessageDeliveriesWeight: 100,
+                            firstMessageDeliveriesDecay: 0.99997,
+                            firstMessageDeliveriesCap: 1000,
+                            meshMessageDeliveriesWeight: 0,
+                            invalidMessageDeliveriesDecay: 0.99997
+                        }
+                    }
+                },
+                scoreThresholds: {
+                    gossipThreshold: -10,
+                    publishThreshold: -100,
+                    graylistThreshold: -10000,
+                    opportunisticGraftThreshold: 1
+                }
+            }
+        });
+        const promises = psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 1));
+        const real = psubs.slice(0, 6);
+        const sybils = psubs.slice(6);
+        const connectPromises = real.map(async (psub) => awaitEvents(psub.components.events, 'peer:connect', 3));
+        await connectSome(real, 5);
+        await Promise.all(connectPromises);
+        sybils.forEach((s) => {
+            (s.pubsub).handleReceivedRpc = async function () {
+                //
+            };
+        });
+        for (let i = 0; i < sybils.length; i++) {
+            for (let j = 0; j < real.length; j++) {
+                await connectPubsubNodes(sybils[i], real[j]);
+            }
+        }
+        await Promise.all(promises);
+        const realPeerIdStrs = real.map((psub) => psub.components.peerId.toString());
+        const subscriptionPromises = real.map(async (psub) => {
+            const waitingPeerIdStrs = Array.from(psub.pubsub.getPeers().values())
+                .map((p) => p.toString())
+                .filter((peerId) => realPeerIdStrs.includes(peerId.toString()));
+            return checkReceivedSubscriptions(psub, waitingPeerIdStrs, topic);
+        });
+        psubs.forEach((ps) => { ps.pubsub.subscribe(topic); });
+        await Promise.all(subscriptionPromises);
+        for (let i = 0; i < 300; i++) {
+            const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`);
+            const owner = i % real.length;
+            await psubs[owner].pubsub.publish(topic, msg);
+        }
+        // now wait for opgraft cycles
+        await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 7)));
+        // check the honest node meshes, they should have at least 3 honest peers each
+        const realPeerIds = real.map((r) => r.components.peerId.toString());
+        await pRetry(async () => {
+            for (const r of real) {
+                const meshPeers = (r.pubsub).mesh.get(topic);
+                if (meshPeers == null) {
+                    throw new Error('meshPeers was null');
+                }
+                let count = 0;
+                realPeerIds.forEach((p) => {
+                    if (meshPeers.has(p)) {
+                        count++;
+                    }
+                });
+                if (count < 2) {
+                    await delay(100);
+                    throw new Error('Count was less than 3');
+                }
+            }
+        }, { retries: 10 });
+    });
+});
+//# sourceMappingURL=go-gossipsub.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/e2e/go-gossipsub.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/e2e/go-gossipsub.spec.js.map
new file mode 100644
index 0000000..1cba745
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/e2e/go-gossipsub.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"go-gossipsub.spec.js","sourceRoot":"","sources":["../../../test/e2e/go-gossipsub.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/floodsub.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/floodsub.spec.d.ts
new file mode 100644
index 0000000..f880385
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/floodsub.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=floodsub.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/floodsub.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/floodsub.spec.d.ts.map
new file mode 100644
index 0000000..7060884
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/floodsub.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"floodsub.spec.d.ts","sourceRoot":"","sources":["../../test/floodsub.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/floodsub.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/floodsub.spec.js
new file mode 100644
index 0000000..42522f8
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/floodsub.spec.js
@@ -0,0 +1,226 @@
+import { FloodSub } from '@libp2p/floodsub';
+import { stop } from '@libp2p/interface';
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import { pEvent } from 'p-event';
+import pRetry from 'p-retry';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { connectPubsubNodes, createComponents } from './utils/create-pubsub.js';
+describe('gossipsub fallbacks to floodsub', () => {
+    describe('basics', () => {
+        let nodeGs;
+        let nodeFs;
+        beforeEach(async () => {
+            mockNetwork.reset();
+            nodeGs = await createComponents({
+                init: {
+                    fallbackToFloodsub: true
+                }
+            });
+            nodeFs = await createComponents({
+                pubsub: FloodSub
+            });
+        });
+        afterEach(async () => {
+            await stop(...[nodeGs, nodeFs].reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            mockNetwork.reset();
+        });
+        it('Dial event happened from nodeGs to nodeFs', async () => {
+            await connectPubsubNodes(nodeGs, nodeFs);
+            await pRetry(() => {
+                // eslint-disable-next-line max-nested-callbacks
+                expect(nodeGs.pubsub.getPeers().map((s) => s.toString())).to.include(nodeFs.components.peerId.toString());
+                // eslint-disable-next-line max-nested-callbacks
+                expect(nodeFs.pubsub.getPeers().map((s) => s.toString())).to.include(nodeGs.components.peerId.toString());
+            });
+        });
+    });
+    describe.skip('should not be added if fallback disabled', () => {
+        let nodeGs;
+        let nodeFs;
+        beforeEach(async () => {
+            mockNetwork.reset();
+            nodeGs = await createComponents({
+                init: {
+                    fallbackToFloodsub: false
+                }
+            });
+            nodeFs = await createComponents({
+                pubsub: FloodSub
+            });
+        });
+        afterEach(async () => {
+            await stop(...[nodeGs, nodeFs].reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            mockNetwork.reset();
+        });
+        it('Dial event happened from nodeGs to nodeFs, but nodeGs does not support floodsub', async () => {
+            try {
+                await connectPubsubNodes(nodeGs, nodeFs);
+                expect.fail('Dial should not have succeed');
+            }
+            catch (err) {
+                expect(err.code).to.be.equal('ERR_UNSUPPORTED_PROTOCOL');
+            }
+        });
+    });
+    describe('subscription functionality', () => {
+        let nodeGs;
+        let nodeFs;
+        before(async () => {
+            mockNetwork.reset();
+            nodeGs = await createComponents({
+                init: {
+                    fallbackToFloodsub: true
+                }
+            });
+            nodeFs = await createComponents({
+                pubsub: FloodSub
+            });
+            await connectPubsubNodes(nodeGs, nodeFs);
+        });
+        afterEach(async () => {
+            await stop(...[nodeGs, nodeFs].reduce((acc, curr) => {
+                acc.push(curr.pubsub, ...Object.entries(curr.components));
+                return acc;
+            }, []));
+            mockNetwork.reset();
+        });
+        it('Subscribe to a topic', async function () {
+            this.timeout(10000);
+            const topic = 'Z';
+            nodeGs.pubsub.subscribe(topic);
+            nodeFs.pubsub.subscribe(topic);
+            // await subscription change
+            const [evt] = await Promise.all([
+                pEvent(nodeGs.pubsub, 'subscription-change'),
+                pEvent(nodeFs.pubsub, 'subscription-change')
+            ]);
+            const { peerId: changedPeerId, subscriptions: changedSubs } = evt.detail;
+            expect(nodeGs.pubsub.getTopics()).to.include(topic);
+            expect(nodeFs.pubsub.getTopics()).to.include(topic);
+            expect(nodeGs.pubsub.getPeers()).to.have.lengthOf(1);
+            expect(nodeFs.pubsub.getPeers()).to.have.lengthOf(1);
+            expect(nodeGs.pubsub.getSubscribers(topic).map((p) => p.toString())).to.include(nodeFs.components.peerId.toString());
+            expect(nodeFs.pubsub.getSubscribers(topic).map((p) => p.toString())).to.include(nodeGs.components.peerId.toString());
+            expect(nodeGs.pubsub.getPeers().map((p) => p.toString())).to.include(changedPeerId.toString());
+            expect(changedSubs).to.have.lengthOf(1);
+            expect(changedSubs[0].topic).to.equal(topic);
+            expect(changedSubs[0].subscribe).to.equal(true);
+        });
+    });
+    describe('publish functionality', () => {
+        let nodeGs;
+        let nodeFs;
+        const topic = 'Z';
+        beforeEach(async () => {
+            mockNetwork.reset();
+            nodeGs = await createComponents({
+                init: {
+                    fallbackToFloodsub: true
+                }
+            });
+            nodeFs = await createComponents({
+                pubsub: FloodSub
+            });
+            await connectPubsubNodes(nodeGs, nodeFs);
+            nodeGs.pubsub.subscribe(topic);
+            nodeFs.pubsub.subscribe(topic);
+            // await subscription change
+            await Promise.all([pEvent(nodeGs.pubsub, 'subscription-change'), pEvent(nodeFs.pubsub, 'subscription-change')]);
+        });
+        afterEach(async () => {
+            await stop(...[nodeGs, nodeFs].reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            mockNetwork.reset();
+        });
+        const batchPublishOpts = [true, false];
+        for (const batchPublish of batchPublishOpts) {
+            // eslint-disable-next-line no-loop-func
+            it(`Publish to a topic - nodeGs - batchPublish: ${batchPublish}`, async () => {
+                const promise = pEvent(nodeFs.pubsub, 'message');
+                const data = uint8ArrayFromString('hey');
+                await nodeGs.pubsub.publish(topic, data, { batchPublish });
+                const evt = await promise;
+                if (evt.detail.type !== 'signed') {
+                    throw new Error('unexpected message type');
+                }
+                expect(evt.detail.data).to.equalBytes(data);
+                expect(evt.detail.from.toString()).to.be.eql(nodeGs.components.peerId.toString());
+            });
+            // eslint-disable-next-line no-loop-func
+            it(`Publish to a topic - nodeFs - batchPublish: ${batchPublish}`, async () => {
+                const promise = pEvent(nodeGs.pubsub, 'message');
+                const data = uint8ArrayFromString('banana');
+                await nodeFs.pubsub.publish(topic, data, { batchPublish });
+                const evt = await promise;
+                if (evt.detail.type !== 'signed') {
+                    throw new Error('unexpected message type');
+                }
+                expect(evt.detail.data).to.equalBytes(data);
+                expect(evt.detail.from.toString()).to.be.eql(nodeFs.components.peerId.toString());
+            });
+        }
+    });
+    describe('publish after unsubscribe', () => {
+        let nodeGs;
+        let nodeFs;
+        const topic = 'Z';
+        beforeEach(async () => {
+            mockNetwork.reset();
+            nodeGs = await createComponents({
+                init: {
+                    fallbackToFloodsub: true
+                }
+            });
+            nodeFs = await createComponents({
+                pubsub: FloodSub
+            });
+            await connectPubsubNodes(nodeGs, nodeFs);
+            nodeGs.pubsub.subscribe(topic);
+            nodeFs.pubsub.subscribe(topic);
+            // await subscription change
+            await Promise.all([pEvent(nodeGs.pubsub, 'subscription-change'), pEvent(nodeFs.pubsub, 'subscription-change')]);
+            // allow subscriptions to propagate to the other peer
+            await delay(10);
+        });
+        afterEach(async () => {
+            await stop(...[nodeGs, nodeFs].reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            mockNetwork.reset();
+        });
+        it('Unsubscribe from a topic', async () => {
+            const promise = pEvent(nodeFs.pubsub, 'subscription-change');
+            nodeGs.pubsub.unsubscribe(topic);
+            expect(nodeGs.pubsub.getTopics()).to.be.empty();
+            const evt = await promise;
+            const { peerId: changedPeerId, subscriptions: changedSubs } = evt.detail;
+            expect(nodeFs.pubsub.getPeers()).to.have.lengthOf(1);
+            expect(nodeFs.pubsub.getSubscribers(topic)).to.be.empty();
+            expect(nodeFs.pubsub.getPeers().map((p) => p.toString())).to.include(changedPeerId.toString());
+            expect(changedSubs).to.have.lengthOf(1);
+            expect(changedSubs[0].topic).to.equal(topic);
+            expect(changedSubs[0].subscribe).to.equal(false);
+        });
+        it('Publish to a topic after unsubscribe', async () => {
+            nodeGs.pubsub.unsubscribe(topic);
+            await pEvent(nodeFs.pubsub, 'subscription-change');
+            const promise = new Promise((resolve, reject) => {
+                nodeGs.pubsub.addEventListener('message', reject, {
+                    once: true
+                });
+                setTimeout(() => {
+                    nodeGs.pubsub.removeEventListener('message', reject);
+                    resolve();
+                }, 100);
+            });
+            await nodeFs.pubsub.publish(topic, uint8ArrayFromString('banana'));
+            await nodeGs.pubsub.publish(topic, uint8ArrayFromString('banana'));
+            try {
+                await promise;
+            }
+            catch (e) {
+                expect.fail('message should not be received');
+            }
+        });
+    });
+});
+//# sourceMappingURL=floodsub.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/floodsub.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/floodsub.spec.js.map
new file mode 100644
index 0000000..84b3b75
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/floodsub.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"floodsub.spec.js","sourceRoot":"","sources":["../../test/floodsub.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/gossip.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/gossip.spec.d.ts
new file mode 100644
index 0000000..e16b30d
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/gossip.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=gossip.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/gossip.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/gossip.spec.d.ts.map
new file mode 100644
index 0000000..bd3eae1
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/gossip.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"gossip.spec.d.ts","sourceRoot":"","sources":["../../test/gossip.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/gossip.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/gossip.spec.js
new file mode 100644
index 0000000..8a8d521
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/gossip.spec.js
@@ -0,0 +1,223 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { stop } from '@libp2p/interface';
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import { pEvent } from 'p-event';
+import sinon, {} from 'sinon';
+import { stubInterface } from 'ts-sinon';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { GossipsubDhi } from '../src/constants.js';
+import { GossipSub } from '../src/index.js';
+import { connectAllPubSubNodes, createComponentsArray } from './utils/create-pubsub.js';
+describe('gossip', () => {
+    let nodes;
+    // Create pubsub nodes
+    beforeEach(async () => {
+        mockNetwork.reset();
+        nodes = await createComponentsArray({
+            number: GossipsubDhi + 2,
+            connected: false,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: GossipsubDhi + 3
+                },
+                maxInboundDataLength: 4000000,
+                allowPublishToZeroTopicPeers: false
+            }
+        });
+    });
+    afterEach(async () => {
+        await stop(...nodes.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+        mockNetwork.reset();
+    });
+    it('should send gossip to non-mesh peers in topic', async function () {
+        this.timeout(10e4);
+        const nodeA = nodes[0];
+        const topic = 'Z';
+        const subscriptionPromises = nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change'));
+        // add subscriptions to each node
+        nodes.forEach((n) => { n.pubsub.subscribe(topic); });
+        // every node connected to every other
+        await connectAllPubSubNodes(nodes);
+        // wait for subscriptions to be transmitted
+        await Promise.all(subscriptionPromises);
+        // await mesh rebalancing
+        await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')));
+        // set spy. NOTE: Forcing private property to be public
+        const nodeASpy = nodeA.pubsub;
+        sinon.spy(nodeASpy, 'pushGossip');
+        await nodeA.pubsub.publish(topic, uint8ArrayFromString('hey'));
+        // gossip happens during the heartbeat
+        await pEvent(nodeA.pubsub, 'gossipsub:heartbeat');
+        const mesh = (nodeA.pubsub).mesh.get(topic);
+        if (mesh == null) {
+            throw new Error('No mesh for topic');
+        }
+        nodeASpy.pushGossip
+            .getCalls()
+            .map((call) => call.args[0])
+            .forEach((peerId) => {
+            expect(mesh).to.not.include(peerId);
+        });
+        // unset spy
+        nodeASpy.pushGossip.restore();
+    });
+    it('Should allow publishing to zero peers if flag is passed', async function () {
+        this.timeout(10e4);
+        const nodeA = nodes[0];
+        const topic = 'Z';
+        const publishResult = await nodeA.pubsub.publish(topic, uint8ArrayFromString('hey'), {
+            allowPublishToZeroTopicPeers: true
+        });
+        // gossip happens during the heartbeat
+        await pEvent(nodeA.pubsub, 'gossipsub:heartbeat');
+        // should have sent message to peerB
+        expect(publishResult.recipients).to.deep.equal([]);
+    });
+    it('should tag peers', async function () {
+        this.timeout(10e4);
+        const nodeA = nodes[0];
+        const nodeB = nodes[1];
+        const topic = 'Z';
+        const twoNodes = [nodeA, nodeB];
+        const graftPromises = twoNodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:graft'));
+        // add subscriptions to each node
+        twoNodes.forEach((n) => { n.pubsub.subscribe(topic); });
+        // every node connected to every other
+        await connectAllPubSubNodes(twoNodes);
+        // await grafts
+        await Promise.all(graftPromises);
+        // await mesh rebalancing
+        await Promise.all(twoNodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')));
+        const peerInfoA = await nodeA.components.peerStore.get(nodeB.components.peerId).catch((e) => undefined);
+        const peerInfoB = await nodeB.components.peerStore.get(nodeA.components.peerId).catch((e) => undefined);
+        expect(peerInfoA?.tags.get(topic)?.value).to.equal(100);
+        expect(peerInfoB?.tags.get(topic)?.value).to.equal(100);
+    });
+    it('should remove the tags upon pruning', async function () {
+        this.timeout(10e4);
+        const nodeA = nodes[0];
+        const nodeB = nodes[1];
+        const topic = 'Z';
+        const twoNodes = [nodeA, nodeB];
+        const subscriptionPromises = nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change'));
+        // add subscriptions to each node
+        twoNodes.forEach((n) => { n.pubsub.subscribe(topic); });
+        // every node connected to every other
+        await connectAllPubSubNodes(nodes);
+        // await for subscriptions to be transmitted
+        await Promise.all(subscriptionPromises);
+        // await mesh rebalancing
+        await Promise.all(twoNodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')));
+        twoNodes.forEach((n) => { n.pubsub.unsubscribe(topic); });
+        // await for unsubscriptions to be transmitted
+        // await mesh rebalancing
+        await Promise.all(twoNodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')));
+        const peerInfoA = await nodeA.components.peerStore.get(nodeB.components.peerId).catch((e) => undefined);
+        const peerInfoB = await nodeB.components.peerStore.get(nodeA.components.peerId).catch((e) => undefined);
+        expect(peerInfoA?.tags.get(topic)).to.be.undefined();
+        expect(peerInfoB?.tags.get(topic)).to.be.undefined();
+    });
+    it('should reject incoming messages bigger than maxInboundDataLength limit', async function () {
+        this.timeout(10e4);
+        const nodeA = nodes[0];
+        const nodeB = nodes[1];
+        const twoNodes = [nodeA, nodeB];
+        const topic = 'Z';
+        const subscriptionPromises = twoNodes.map(async (n) => pEvent(n.pubsub, 'subscription-change'));
+        // add subscriptions to each node
+        twoNodes.forEach((n) => { n.pubsub.subscribe(topic); });
+        // every node connected to every other
+        await connectAllPubSubNodes(twoNodes);
+        // wait for subscriptions to be transmitted
+        await Promise.all(subscriptionPromises);
+        // await mesh rebalancing
+        await Promise.all(twoNodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')));
+        // set spy. NOTE: Forcing private property to be public
+        const nodeBSpy = nodeB.pubsub;
+        sinon.spy(nodeBSpy, 'handlePeerReadStreamError');
+        // This should lead to handlePeerReadStreamError at nodeB
+        await nodeA.pubsub.publish(topic, new Uint8Array(5000000));
+        await pEvent(nodeA.pubsub, 'gossipsub:heartbeat');
+        const expectedError = nodeBSpy.handlePeerReadStreamError.getCalls()[0]?.args[0];
+        expect(expectedError !== undefined && expectedError.code, 'ERR_MSG_DATA_TOO_LONG');
+        // unset spy
+        nodeBSpy.handlePeerReadStreamError.restore();
+    });
+    it('should send piggyback control into other sent messages', async function () {
+        this.timeout(10e4);
+        const nodeA = nodes[0];
+        const topic = 'Z';
+        const promises = nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change'));
+        // add subscriptions to each node
+        nodes.forEach((n) => { n.pubsub.subscribe(topic); });
+        // every node connected to every other
+        await connectAllPubSubNodes(nodes);
+        // wait for subscriptions to be transmitted
+        await Promise.all(promises);
+        // await nodeA mesh rebalancing
+        await pEvent(nodeA.pubsub, 'gossipsub:heartbeat');
+        const mesh = (nodeA.pubsub).mesh.get(topic);
+        if (mesh == null) {
+            throw new Error('No mesh for topic');
+        }
+        if (mesh.size === 0) {
+            throw new Error('Topic mesh was empty');
+        }
+        const peerB = Array.from(mesh)[0];
+        if (peerB == null) {
+            throw new Error('Could not get peer from mesh');
+        }
+        // should have peerB as a subscriber to the topic
+        expect(nodeA.pubsub.getSubscribers(topic).map((p) => p.toString())).to.include(peerB, "did not know about peerB's subscription to topic");
+        // should be able to send them messages
+        expect((nodeA.pubsub).streamsOutbound.has(peerB)).to.be.true('nodeA did not have connection open to peerB');
+        // set spy. NOTE: Forcing private property to be public
+        const nodeASpy = sinon.spy(nodeA.pubsub, 'piggybackControl');
+        // manually add control message to be sent to peerB
+        const graft = { ihave: [], iwant: [], graft: [{ topicID: topic }], prune: [] };
+        (nodeA.pubsub).control.set(peerB, graft);
+        (nodeA.pubsub).gossip.set(peerB, []);
+        const publishResult = await nodeA.pubsub.publish(topic, uint8ArrayFromString('hey'));
+        // should have sent message to peerB
+        expect(publishResult.recipients.map((p) => p.toString())).to.include(peerB, 'did not send pubsub message to peerB');
+        // wait until spy is called
+        const startTime = Date.now();
+        while (Date.now() - startTime < 5000) {
+            if (nodeASpy.callCount > 0)
+                break;
+        }
+        expect(nodeASpy.callCount).to.be.equal(1);
+        // expect control message to be sent alongside published message
+        const call = nodeASpy.getCalls()[0];
+        expect(call).to.have.deep.nested.property('args[1].control.graft', graft.graft);
+        // unset spy
+        nodeASpy.restore();
+    });
+    it('should allow configuring stream limits', async () => {
+        const maxInboundStreams = 7;
+        const maxOutboundStreams = 5;
+        const registrar = stubInterface();
+        const privateKey = await generateKeyPair('Ed25519');
+        const peerId = peerIdFromPrivateKey(privateKey);
+        const pubsub = new GossipSub({
+            privateKey,
+            peerId,
+            registrar,
+            peerStore: stubInterface(),
+            connectionManager: stubInterface(),
+            logger: defaultLogger()
+        }, {
+            maxInboundStreams,
+            maxOutboundStreams
+        });
+        await pubsub.start();
+        expect(registrar.register.called).to.be.true();
+        expect(registrar.handle.getCall(0)).to.have.nested.property('args[2].maxInboundStreams', maxInboundStreams);
+        expect(registrar.handle.getCall(0)).to.have.nested.property('args[2].maxOutboundStreams', maxOutboundStreams);
+        await pubsub.stop();
+    });
+});
+//# sourceMappingURL=gossip.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/gossip.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/gossip.spec.js.map
new file mode 100644
index 0000000..e07df04
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/gossip.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"gossip.spec.js","sourceRoot":"","sources":["../../test/gossip.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/heartbeat.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/heartbeat.spec.d.ts
new file mode 100644
index 0000000..023ae00
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/heartbeat.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=heartbeat.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/heartbeat.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/heartbeat.spec.d.ts.map
new file mode 100644
index 0000000..c13564c
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/heartbeat.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"heartbeat.spec.d.ts","sourceRoot":"","sources":["../../test/heartbeat.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/heartbeat.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/heartbeat.spec.js
new file mode 100644
index 0000000..bcbeada
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/heartbeat.spec.js
@@ -0,0 +1,31 @@
+import { stop } from '@libp2p/interface';
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks';
+import { expect } from 'aegir/chai';
+import { pEvent } from 'p-event';
+import { GossipsubHeartbeatInterval } from '../src/constants.js';
+import { createComponents } from './utils/create-pubsub.js';
+describe('heartbeat', () => {
+    let node;
+    before(async () => {
+        mockNetwork.reset();
+        node = await createComponents({
+            init: {
+                emitSelf: true
+            }
+        });
+    });
+    after(async () => {
+        await stop(node.pubsub, ...Object.entries(node.components));
+        mockNetwork.reset();
+    });
+    it('should occur with regularity defined by a constant', async function () {
+        this.timeout(GossipsubHeartbeatInterval * 5);
+        await pEvent(node.pubsub, 'gossipsub:heartbeat');
+        const t1 = Date.now();
+        await pEvent(node.pubsub, 'gossipsub:heartbeat');
+        const t2 = Date.now();
+        const safeFactor = 1.5;
+        expect(t2 - t1).to.be.lt(GossipsubHeartbeatInterval * safeFactor);
+    });
+});
+//# sourceMappingURL=heartbeat.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/heartbeat.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/heartbeat.spec.js.map
new file mode 100644
index 0000000..ed99f50
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/heartbeat.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"heartbeat.spec.js","sourceRoot":"","sources":["../../test/heartbeat.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAA;AACxC,OAAO,EAAE,WAAW,EAAE,MAAM,0CAA0C,CAAA;AACtE,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAA;AAChC,OAAO,EAAE,0BAA0B,EAAE,MAAM,qBAAqB,CAAA;AAChE,OAAO,EAAE,gBAAgB,EAA+B,MAAM,0BAA0B,CAAA;AAExF,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,IAAI,IAA4B,CAAA;IAEhC,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,WAAW,CAAC,KAAK,EAAE,CAAA;QACnB,IAAI,GAAG,MAAM,gBAAgB,CAAC;YAC5B,IAAI,EAAE;gBACJ,QAAQ,EAAE,IAAI;aACf;SACF,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,KAAK,CAAC,KAAK,IAAI,EAAE;QACf,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;QAC3D,WAAW,CAAC,KAAK,EAAE,CAAA;IACrB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oDAAoD,EAAE,KAAK;QAC5D,IAAI,CAAC,OAAO,CAAC,0BAA0B,GAAG,CAAC,CAAC,CAAA;QAE5C,MAAM,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAA;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QAErB,MAAM,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAA;QAChD,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QAErB,MAAM,UAAU,GAAG,GAAG,CAAA;QACtB,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,0BAA0B,GAAG,UAAU,CAAC,CAAA;IACnE,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/mesh.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/mesh.spec.d.ts
new file mode 100644
index 0000000..739752a
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/mesh.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=mesh.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/mesh.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/mesh.spec.d.ts.map
new file mode 100644
index 0000000..0ca3f98
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/mesh.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"mesh.spec.d.ts","sourceRoot":"","sources":["../../test/mesh.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/mesh.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/mesh.spec.js
new file mode 100644
index 0000000..924b948
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/mesh.spec.js
@@ -0,0 +1,61 @@
+import { stop } from '@libp2p/interface';
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import { pEvent } from 'p-event';
+import { GossipsubDhi } from '../src/constants.js';
+import { connectAllPubSubNodes, createComponentsArray } from './utils/create-pubsub.js';
+describe('mesh overlay', () => {
+    let nodes;
+    // Create pubsub nodes
+    beforeEach(async () => {
+        mockNetwork.reset();
+        nodes = await createComponentsArray({
+            number: GossipsubDhi + 2,
+            connected: false,
+            init: {
+                scoreParams: {
+                    IPColocationFactorThreshold: GossipsubDhi + 3
+                }
+            }
+        });
+    });
+    afterEach(async () => {
+        await stop(...nodes.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+        mockNetwork.reset();
+    });
+    it('should add mesh peers below threshold', async function () {
+        this.timeout(10e3);
+        // test against node0
+        const node0 = nodes[0];
+        const topic = 'Z';
+        // add subscriptions to each node
+        nodes.forEach((node) => { node.pubsub.subscribe(topic); });
+        // connect N (< GossipsubD) nodes to node0
+        const N = 4;
+        await connectAllPubSubNodes(nodes.slice(0, N + 1));
+        await delay(50);
+        // await mesh rebalancing
+        await new Promise((resolve) => {
+            (node0.pubsub).addEventListener('gossipsub:heartbeat', resolve, {
+                once: true
+            });
+        });
+        const mesh = (node0.pubsub).mesh.get(topic);
+        expect(mesh).to.have.property('size', N);
+    });
+    it('should remove mesh peers once above threshold', async function () {
+        this.timeout(10e4);
+        // test against node0
+        const node0 = nodes[0];
+        const topic = 'Z';
+        // add subscriptions to each node
+        nodes.forEach((node) => { node.pubsub.subscribe(topic); });
+        await connectAllPubSubNodes(nodes);
+        // await mesh rebalancing
+        await pEvent(node0.pubsub, 'gossipsub:heartbeat');
+        const mesh = (node0.pubsub).mesh.get(topic);
+        expect(mesh).to.have.property('size').that.is.lte(GossipsubDhi);
+    });
+});
+//# sourceMappingURL=mesh.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/mesh.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/mesh.spec.js.map
new file mode 100644
index 0000000..90ba2a0
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/mesh.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"mesh.spec.js","sourceRoot":"","sources":["../../test/mesh.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/message-cache.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/message-cache.spec.d.ts
new file mode 100644
index 0000000..291d274
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/message-cache.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=message-cache.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/message-cache.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/message-cache.spec.d.ts.map
new file mode 100644
index 0000000..af9ebd3
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/message-cache.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"message-cache.spec.d.ts","sourceRoot":"","sources":["../../test/message-cache.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/message-cache.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/message-cache.spec.js
new file mode 100644
index 0000000..02969ca
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/message-cache.spec.js
@@ -0,0 +1,134 @@
+import * as utils from '@libp2p/pubsub/utils';
+import { expect } from 'aegir/chai';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { MessageCache } from '../src/message-cache.js';
+import { messageIdToString } from '../src/utils/messageIdToString.js';
+import { getMsgId } from './utils/index.js';
+const toMessageId = (msgId) => {
+    return {
+        msgId,
+        msgIdStr: messageIdToString(msgId)
+    };
+};
+describe('Testing Message Cache Operations', () => {
+    const messageCache = new MessageCache(3, 5, messageIdToString);
+    const testMessages = [];
+    const topic = 'test';
+    const getGossipIDs = (mcache, topic) => {
+        const gossipIDsByTopic = mcache.getGossipIDs(new Set([topic]));
+        return gossipIDsByTopic.get(topic) ?? [];
+    };
+    before(async () => {
+        const makeTestMessage = (n) => {
+            return {
+                from: new Uint8Array(0),
+                data: uint8ArrayFromString(n.toString()),
+                seqno: uint8ArrayFromString(utils.randomSeqno().toString(16).padStart(16, '0'), 'base16'),
+                topic
+            };
+        };
+        for (let i = 0; i < 60; i++) {
+            testMessages.push(makeTestMessage(i));
+        }
+        for (let i = 0; i < 10; i++) {
+            messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], true);
+        }
+    });
+    it('Should retrieve correct messages for each test message', () => {
+        for (let i = 0; i < 10; i++) {
+            const messageId = getMsgId(testMessages[i]);
+            const message = messageCache.get(messageId);
+            expect(message).to.equal(testMessages[i]);
+        }
+    });
+    it('Get GossipIDs', () => {
+        const gossipIDs = getGossipIDs(messageCache, topic);
+        expect(gossipIDs.length).to.equal(10);
+        for (let i = 0; i < 10; i++) {
+            const messageID = getMsgId(testMessages[i]);
+            expect(messageID).to.deep.equal(gossipIDs[i]);
+        }
+    });
+    it('Shift message cache', async () => {
+        messageCache.shift();
+        for (let i = 10; i < 20; i++) {
+            messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], true);
+        }
+        for (let i = 0; i < 20; i++) {
+            const messageID = getMsgId(testMessages[i]);
+            const message = messageCache.get(messageID);
+            expect(message).to.equal(testMessages[i]);
+        }
+        let gossipIDs = getGossipIDs(messageCache, topic);
+        expect(gossipIDs.length).to.equal(20);
+        for (let i = 0; i < 10; i++) {
+            const messageID = getMsgId(testMessages[i]);
+            expect(messageID).to.deep.equal(gossipIDs[10 + i]);
+        }
+        for (let i = 10; i < 20; i++) {
+            const messageID = getMsgId(testMessages[i]);
+            expect(messageID).to.deep.equal(gossipIDs[i - 10]);
+        }
+        messageCache.shift();
+        for (let i = 20; i < 30; i++) {
+            messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], true);
+        }
+        messageCache.shift();
+        for (let i = 30; i < 40; i++) {
+            messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], true);
+        }
+        messageCache.shift();
+        for (let i = 40; i < 50; i++) {
+            messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], true);
+        }
+        messageCache.shift();
+        for (let i = 50; i < 60; i++) {
+            messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], true);
+        }
+        expect(messageCache.msgs.size).to.equal(50);
+        for (let i = 0; i < 10; i++) {
+            const messageID = getMsgId(testMessages[i]);
+            const message = messageCache.get(messageID);
+            expect(message).to.be.an('undefined');
+        }
+        for (let i = 10; i < 60; i++) {
+            const messageID = getMsgId(testMessages[i]);
+            const message = messageCache.get(messageID);
+            expect(message).to.equal(testMessages[i]);
+        }
+        gossipIDs = getGossipIDs(messageCache, topic);
+        expect(gossipIDs.length).to.equal(30);
+        for (let i = 0; i < 10; i++) {
+            const messageID = getMsgId(testMessages[50 + i]);
+            expect(messageID).to.deep.equal(gossipIDs[i]);
+        }
+        for (let i = 10; i < 20; i++) {
+            const messageID = getMsgId(testMessages[30 + i]);
+            expect(messageID).to.deep.equal(gossipIDs[i]);
+        }
+        for (let i = 20; i < 30; i++) {
+            const messageID = getMsgId(testMessages[10 + i]);
+            expect(messageID).to.deep.equal(gossipIDs[i]);
+        }
+    });
+    it('should not gossip not-validated message ids', () => {
+        let gossipIDs = getGossipIDs(messageCache, topic);
+        while (gossipIDs.length > 0) {
+            messageCache.shift();
+            gossipIDs = getGossipIDs(messageCache, topic);
+        }
+        expect(gossipIDs.length).to.be.equal(0);
+        for (let i = 10; i < 20; i++) {
+            // 5 last messages are not validated
+            const validated = i < 15;
+            messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], validated);
+        }
+        gossipIDs = getGossipIDs(messageCache, topic);
+        expect(gossipIDs.length).to.be.equal(5);
+        // only validate the new gossip ids
+        for (let i = 0; i < 5; i++) {
+            expect(gossipIDs[i]).to.deep.equal(getMsgId(testMessages[i + 10]), 'incorrect gossip message id ' + String(i));
+        }
+    });
+});
+//# sourceMappingURL=message-cache.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/message-cache.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/message-cache.spec.js.map
new file mode 100644
index 0000000..9eb3cf6
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/message-cache.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"message-cache.spec.js","sourceRoot":"","sources":["../../test/message-cache.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-params.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-params.spec.d.ts
new file mode 100644
index 0000000..91d19ba
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-params.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=peer-score-params.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-params.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-params.spec.d.ts.map
new file mode 100644
index 0000000..c913b75
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-params.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-score-params.spec.d.ts","sourceRoot":"","sources":["../../test/peer-score-params.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-params.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-params.spec.js
new file mode 100644
index 0000000..42d1af5
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-params.spec.js
@@ -0,0 +1,372 @@
+import { expect } from 'aegir/chai';
+import * as constants from '../src/constants.js';
+import { createTopicScoreParams, validateTopicScoreParams, createPeerScoreParams, validatePeerScoreParams } from '../src/score/index.js';
+describe('TopicScoreParams validation', () => {
+    it('should not throw on default TopicScoreParams', () => {
+        expect(() => { validateTopicScoreParams(createTopicScoreParams({})); }).to.not.throw();
+    });
+    it('should throw on invalid TopicScoreParams', () => {
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                topicWeight: -1
+            }));
+        }, 'topicWeight must be >= 0').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshWeight: -1,
+                timeInMeshQuantum: 1000
+            }));
+        }, 'timeInMeshWeight must be positive (or 0 to disable)').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshWeight: 1,
+                timeInMeshQuantum: -1
+            }));
+        }, 'timeInMeshQuantum must be positive').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshWeight: 1,
+                timeInMeshQuantum: 1000,
+                timeInMeshCap: -1
+            }));
+        }, 'timeInMeshCap must be positive').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                firstMessageDeliveriesWeight: -1
+            }));
+        }, 'firstMessageDeliveriesWeight must be positive (or 0 to disable)').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                firstMessageDeliveriesWeight: 1,
+                firstMessageDeliveriesDecay: -1
+            }));
+        }, 'firstMessageDeliveriesDecay must be between 0 and 1').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                firstMessageDeliveriesWeight: 1,
+                firstMessageDeliveriesDecay: 2
+            }));
+        }, 'firstMessageDeliveriesDecay must be between 0 and 1').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                firstMessageDeliveriesWeight: 1,
+                firstMessageDeliveriesDecay: 0.5,
+                firstMessageDeliveriesCap: -1
+            }));
+        }, 'firstMessageDeliveriesCap must be positive').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                meshMessageDeliveriesWeight: 1
+            }));
+        }, 'meshMessageDeliveriesWeight must be negative (or 0 to disable)').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                meshMessageDeliveriesWeight: -1,
+                meshMessageDeliveriesDecay: -1
+            }));
+        }, 'meshMessageDeliveriesDecay must be between 0 and 1').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                meshMessageDeliveriesWeight: -1,
+                meshMessageDeliveriesDecay: 2
+            }));
+        }, 'meshMessageDeliveriesDecay must be between 0 and 1').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                meshMessageDeliveriesWeight: -1,
+                meshMessageDeliveriesDecay: 0.5,
+                meshMessageDeliveriesCap: -1
+            }));
+        }, 'meshMessageDeliveriesCap must be positive').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                meshMessageDeliveriesWeight: -1,
+                meshMessageDeliveriesDecay: 5,
+                meshMessageDeliveriesThreshold: -3
+            }));
+        }, 'meshMessageDeliveriesDecay must be between 0 and 1').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                meshMessageDeliveriesWeight: -1,
+                meshMessageDeliveriesDecay: 0.5,
+                meshMessageDeliveriesThreshold: -3,
+                meshMessageDeliveriesWindow: -1
+            }));
+        }, 'meshMessageDeliveriesThreshold must be positive').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                meshMessageDeliveriesWeight: -1,
+                meshMessageDeliveriesDecay: 0.5,
+                meshMessageDeliveriesThreshold: 3,
+                meshMessageDeliveriesWindow: -1,
+                meshMessageDeliveriesActivation: 1
+            }));
+        }, 'meshMessageDeliveriesWindow must be non-negative').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                meshFailurePenaltyWeight: 1
+            }));
+        }, 'meshFailurePenaltyWeight must be negative').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                meshFailurePenaltyWeight: -1,
+                meshFailurePenaltyDecay: -1
+            }));
+        }, 'meshFailurePenaltyDecay must be between 0 and 1').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                meshFailurePenaltyWeight: -1,
+                meshFailurePenaltyDecay: 2
+            }));
+        }, 'meshFailurePenaltyDecay must be between 0 and 1').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                invalidMessageDeliveriesWeight: 1
+            }));
+        }, 'invalidMessageDeliveriesWeight must be negative').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                invalidMessageDeliveriesWeight: -1,
+                invalidMessageDeliveriesDecay: -1
+            }));
+        }, 'invalidMessageDeliveriesDecay must be between 0 and 1').to.throw();
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                timeInMeshQuantum: 1000,
+                invalidMessageDeliveriesWeight: -1,
+                invalidMessageDeliveriesDecay: 2
+            }));
+        }, 'invalidMessageDeliveriesDecay must be between 0 and 1').to.throw();
+    });
+    it('should not throw on valid TopicScoreParams', () => {
+        expect(() => {
+            validateTopicScoreParams(createTopicScoreParams({
+                topicWeight: 2,
+                timeInMeshWeight: 0.01,
+                timeInMeshQuantum: 1000,
+                timeInMeshCap: 10,
+                firstMessageDeliveriesWeight: 1,
+                firstMessageDeliveriesDecay: 0.5,
+                firstMessageDeliveriesCap: 10,
+                meshMessageDeliveriesWeight: -1,
+                meshMessageDeliveriesDecay: 0.5,
+                meshMessageDeliveriesCap: 10,
+                meshMessageDeliveriesThreshold: 5,
+                meshMessageDeliveriesWindow: 1,
+                meshMessageDeliveriesActivation: 1000,
+                meshFailurePenaltyWeight: -1,
+                meshFailurePenaltyDecay: 0.5,
+                invalidMessageDeliveriesWeight: -1,
+                invalidMessageDeliveriesDecay: 0.5
+            }));
+        }).to.not.throw();
+    });
+});
+describe('PeerScoreParams validation', () => {
+    const appScore = () => 0;
+    it('should throw on invalid PeerScoreParams', () => {
+        expect(() => {
+            validatePeerScoreParams(createPeerScoreParams({
+                topicScoreCap: -1,
+                appSpecificScore: appScore,
+                decayInterval: 1000,
+                decayToZero: 0.01
+            }));
+        }, 'topicScoreCap must be positive').to.throw();
+        expect(() => {
+            validatePeerScoreParams(createPeerScoreParams({
+                topicScoreCap: 1,
+                decayInterval: 999,
+                decayToZero: 0.01
+            }));
+        }, 'decayInterval must be at least 1s').to.throw();
+        expect(() => {
+            validatePeerScoreParams(createPeerScoreParams({
+                topicScoreCap: 1,
+                appSpecificScore: appScore,
+                decayInterval: 1000,
+                decayToZero: 0.01,
+                IPColocationFactorWeight: 1
+            }));
+        }, 'IPColocationFactorWeight should be negative').to.throw();
+        expect(() => {
+            validatePeerScoreParams(createPeerScoreParams({
+                topicScoreCap: 1,
+                appSpecificScore: appScore,
+                decayInterval: 1000,
+                decayToZero: 0.01,
+                IPColocationFactorWeight: -1,
+                IPColocationFactorThreshold: -1
+            }));
+        }, 'IPColocationFactorThreshold should be at least 1').to.throw();
+        /*
+        TODO: appears to be valid config?
+        expect(() =>
+          validatePeerScoreParams(
+            createPeerScoreParams({
+              topicScoreCap: 1,
+              appSpecificScore: appScore,
+              decayInterval: 1000,
+              decayToZero: 0.01,
+              IPColocationFactorWeight: -1,
+              IPColocationFactorThreshold: 0.99
+            })
+          ), "IPColocationFactorThreshold should be at least 1"
+        ).to.throw()
+        */
+        expect(() => {
+            validatePeerScoreParams(createPeerScoreParams({
+                topicScoreCap: 1,
+                appSpecificScore: appScore,
+                decayInterval: 1000,
+                decayToZero: -1,
+                IPColocationFactorWeight: -1,
+                IPColocationFactorThreshold: 1
+            }));
+        }, 'decayToZero must be between 0 and 1').to.throw();
+        expect(() => {
+            validatePeerScoreParams(createPeerScoreParams({
+                topicScoreCap: 1,
+                appSpecificScore: appScore,
+                decayInterval: 1000,
+                decayToZero: 2,
+                IPColocationFactorWeight: -1,
+                IPColocationFactorThreshold: 1
+            }));
+        }, 'decayToZero must be between 0 and 1').to.throw();
+        expect(() => {
+            validatePeerScoreParams(createPeerScoreParams({
+                appSpecificScore: appScore,
+                decayInterval: 1000,
+                decayToZero: 0.01,
+                behaviourPenaltyWeight: 1
+            }));
+        }).to.throw();
+        /*
+        TODO: appears to be valid config?
+        expect(() =>
+          validatePeerScoreParams(
+            createPeerScoreParams({
+              appSpecificScore: appScore,
+              decayInterval: 1000,
+              decayToZero: 0.01,
+              behaviourPenaltyWeight: -1
+            })
+          ), "behaviourPenaltyWeight MUST be negative (or zero to disable)"
+        ).to.throw()
+        */
+        expect(() => {
+            validatePeerScoreParams(createPeerScoreParams({
+                appSpecificScore: appScore,
+                decayInterval: 1000,
+                decayToZero: 0.01,
+                behaviourPenaltyWeight: -1,
+                behaviourPenaltyDecay: 2
+            }));
+        }, 'behaviourPenaltyDecay must be between 0 and 1').to.throw();
+        expect(() => {
+            validatePeerScoreParams(createPeerScoreParams({
+                topicScoreCap: 1,
+                appSpecificScore: appScore,
+                decayInterval: 1000,
+                decayToZero: 0.01,
+                IPColocationFactorWeight: -1,
+                IPColocationFactorThreshold: 1,
+                topics: {
+                    test: {
+                        topicWeight: -1,
+                        timeInMeshWeight: 0.01,
+                        timeInMeshQuantum: Number(constants.second),
+                        timeInMeshCap: 10,
+                        firstMessageDeliveriesWeight: 1,
+                        firstMessageDeliveriesDecay: 0.5,
+                        firstMessageDeliveriesCap: 10,
+                        meshMessageDeliveriesWeight: -1,
+                        meshMessageDeliveriesDecay: 0.5,
+                        meshMessageDeliveriesCap: 10,
+                        meshMessageDeliveriesThreshold: 5,
+                        meshMessageDeliveriesWindow: 1,
+                        meshMessageDeliveriesActivation: 1000,
+                        meshFailurePenaltyWeight: -1,
+                        meshFailurePenaltyDecay: 0.5,
+                        invalidMessageDeliveriesWeight: -1,
+                        invalidMessageDeliveriesDecay: 0.5
+                    }
+                }
+            }));
+        }).to.throw();
+    });
+    it('should not throw on valid PeerScoreParams', () => {
+        expect(() => {
+            validatePeerScoreParams(createPeerScoreParams({
+                appSpecificScore: appScore,
+                decayInterval: 1000,
+                decayToZero: 0.01,
+                IPColocationFactorWeight: -1,
+                IPColocationFactorThreshold: 1,
+                behaviourPenaltyWeight: -1,
+                behaviourPenaltyDecay: 0.999
+            }));
+        }).to.not.throw();
+        expect(() => {
+            validatePeerScoreParams(createPeerScoreParams({
+                topicScoreCap: 1,
+                appSpecificScore: appScore,
+                decayInterval: 1000,
+                decayToZero: 0.01,
+                IPColocationFactorWeight: -1,
+                IPColocationFactorThreshold: 1,
+                behaviourPenaltyWeight: -1,
+                behaviourPenaltyDecay: 0.999
+            }));
+        }).to.not.throw();
+        expect(() => {
+            validatePeerScoreParams(createPeerScoreParams({
+                topicScoreCap: 1,
+                appSpecificScore: appScore,
+                decayInterval: Number(constants.second),
+                decayToZero: 0.01,
+                IPColocationFactorWeight: -1,
+                IPColocationFactorThreshold: 1,
+                topics: {
+                    test: {
+                        topicWeight: 1,
+                        timeInMeshWeight: 0.01,
+                        timeInMeshQuantum: 1000,
+                        timeInMeshCap: 10,
+                        firstMessageDeliveriesWeight: 1,
+                        firstMessageDeliveriesDecay: 0.5,
+                        firstMessageDeliveriesCap: 10,
+                        meshMessageDeliveriesWeight: -1,
+                        meshMessageDeliveriesDecay: 0.5,
+                        meshMessageDeliveriesCap: 10,
+                        meshMessageDeliveriesThreshold: 5,
+                        meshMessageDeliveriesWindow: 1,
+                        meshMessageDeliveriesActivation: 1000,
+                        meshFailurePenaltyWeight: -1,
+                        meshFailurePenaltyDecay: 0.5,
+                        invalidMessageDeliveriesWeight: -1,
+                        invalidMessageDeliveriesDecay: 0.5
+                    }
+                }
+            }));
+        }).to.not.throw();
+    });
+});
+//# sourceMappingURL=peer-score-params.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-params.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-params.spec.js.map
new file mode 100644
index 0000000..d860ff5
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-params.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-score-params.spec.js","sourceRoot":"","sources":["../../test/peer-score-params.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-thresholds.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-thresholds.spec.d.ts
new file mode 100644
index 0000000..69d5ae7
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-thresholds.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=peer-score-thresholds.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-thresholds.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-thresholds.spec.d.ts.map
new file mode 100644
index 0000000..0777360
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-thresholds.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-score-thresholds.spec.d.ts","sourceRoot":"","sources":["../../test/peer-score-thresholds.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-thresholds.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-thresholds.spec.js
new file mode 100644
index 0000000..65e98c2
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-thresholds.spec.js
@@ -0,0 +1,55 @@
+import { expect } from 'aegir/chai';
+import { createPeerScoreThresholds, validatePeerScoreThresholds } from '../src/score/index.js';
+describe('PeerScoreThresholds validation', () => {
+    it('should throw on invalid PeerScoreThresholds', () => {
+        expect(() => {
+            validatePeerScoreThresholds(createPeerScoreThresholds({
+                gossipThreshold: 1
+            }));
+        }, 'gossipThreshold must be <= 0').to.throw();
+        expect(() => {
+            validatePeerScoreThresholds(createPeerScoreThresholds({
+                publishThreshold: 1
+            }));
+        }, 'publishThreshold must be <= 0 and <= gossip threshold').to.throw();
+        expect(() => {
+            validatePeerScoreThresholds(createPeerScoreThresholds({
+                gossipThreshold: -1,
+                publishThreshold: 0
+            }));
+        }, 'publishThreshold must be <= 0 and <= gossip threshold').to.throw();
+        expect(() => {
+            validatePeerScoreThresholds(createPeerScoreThresholds({
+                graylistThreshold: 1
+            }));
+        }, 'graylistThreshold must be <= 0 and <= publish threshold').to.throw();
+        expect(() => {
+            validatePeerScoreThresholds(createPeerScoreThresholds({
+                publishThreshold: -1,
+                graylistThreshold: -2
+            }));
+        }, 'graylistThreshold must be <= 0 and <= publish threshold').to.throw();
+        expect(() => {
+            validatePeerScoreThresholds(createPeerScoreThresholds({
+                acceptPXThreshold: -1
+            }));
+        }, 'acceptPXThreshold must be >= 0').to.throw();
+        expect(() => {
+            validatePeerScoreThresholds(createPeerScoreThresholds({
+                opportunisticGraftThreshold: -1
+            }));
+        }, 'opportunisticGraftThreshold must be >= 0').to.throw();
+    });
+    it('should not throw on valid PeerScoreThresholds', () => {
+        expect(() => {
+            validatePeerScoreThresholds(createPeerScoreThresholds({
+                gossipThreshold: -1,
+                publishThreshold: -2,
+                graylistThreshold: -3,
+                acceptPXThreshold: 1,
+                opportunisticGraftThreshold: 2
+            }));
+        }).to.not.throw();
+    });
+});
+//# sourceMappingURL=peer-score-thresholds.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-thresholds.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-thresholds.spec.js.map
new file mode 100644
index 0000000..0aba0d7
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score-thresholds.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-score-thresholds.spec.js","sourceRoot":"","sources":["../../test/peer-score-thresholds.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,yBAAyB,EAAE,2BAA2B,EAAE,MAAM,uBAAuB,CAAA;AAE9F,QAAQ,CAAC,gCAAgC,EAAE,GAAG,EAAE;IAC9C,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACrD,MAAM,CACJ,GAAG,EAAE;YACH,2BAA2B,CACzB,yBAAyB,CAAC;gBACxB,eAAe,EAAE,CAAC;aACnB,CAAC,CACH,CAAA;QACH,CAAC,EACD,8BAA8B,CAC/B,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACZ,MAAM,CACJ,GAAG,EAAE;YACH,2BAA2B,CACzB,yBAAyB,CAAC;gBACxB,gBAAgB,EAAE,CAAC;aACpB,CAAC,CACH,CAAA;QACH,CAAC,EACD,uDAAuD,CACxD,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACZ,MAAM,CACJ,GAAG,EAAE;YACH,2BAA2B,CACzB,yBAAyB,CAAC;gBACxB,eAAe,EAAE,CAAC,CAAC;gBACnB,gBAAgB,EAAE,CAAC;aACpB,CAAC,CACH,CAAA;QACH,CAAC,EACD,uDAAuD,CACxD,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACZ,MAAM,CACJ,GAAG,EAAE;YACH,2BAA2B,CACzB,yBAAyB,CAAC;gBACxB,iBAAiB,EAAE,CAAC;aACrB,CAAC,CACH,CAAA;QACH,CAAC,EACD,yDAAyD,CAC1D,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACZ,MAAM,CACJ,GAAG,EAAE;YACH,2BAA2B,CACzB,yBAAyB,CAAC;gBACxB,gBAAgB,EAAE,CAAC,CAAC;gBACpB,iBAAiB,EAAE,CAAC,CAAC;aACtB,CAAC,CACH,CAAA;QACH,CAAC,EACD,yDAAyD,CAC1D,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACZ,MAAM,CACJ,GAAG,EAAE;YACH,2BAA2B,CACzB,yBAAyB,CAAC;gBACxB,iBAAiB,EAAE,CAAC,CAAC;aACtB,CAAC,CACH,CAAA;QACH,CAAC,EACD,gCAAgC,CACjC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;QACZ,MAAM,CACJ,GAAG,EAAE;YACH,2BAA2B,CACzB,yBAAyB,CAAC;gBACxB,2BAA2B,EAAE,CAAC,CAAC;aAChC,CAAC,CACH,CAAA;QACH,CAAC,EACD,0CAA0C,CAC3C,CAAC,EAAE,CAAC,KAAK,EAAE,CAAA;IACd,CAAC,CAAC,CAAA;IACF,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,MAAM,CAAC,GAAG,EAAE;YACV,2BAA2B,CACzB,yBAAyB,CAAC;gBACxB,eAAe,EAAE,CAAC,CAAC;gBACnB,gBAAgB,EAAE,CAAC,CAAC;gBACpB,iBAAiB,EAAE,CAAC,CAAC;gBACrB,iBAAiB,EAAE,CAAC;gBACpB,2BAA2B,EAAE,CAAC;aAC/B,CAAC,CACH,CAAA;QACH,CAAC,CACA,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAA;IAClB,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score.spec.d.ts
new file mode 100644
index 0000000..6e333bb
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=peer-score.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score.spec.d.ts.map
new file mode 100644
index 0000000..ebbb846
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-score.spec.d.ts","sourceRoot":"","sources":["../../test/peer-score.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score.spec.js
new file mode 100644
index 0000000..4dddf04
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score.spec.js
@@ -0,0 +1,652 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import sinon from 'sinon';
+import { ScorePenalty } from '../src/metrics.js';
+import { PeerScore, createPeerScoreParams, createTopicScoreParams } from '../src/score/index.js';
+import { RejectReason } from '../src/types.js';
+import { getMsgIdStr, makeTestMessage } from './utils/index.js';
+/** Placeholder for some ScorePenalty value, only used for metrics */
+const scorePenaltyAny = ScorePenalty.BrokenPromise;
+describe('PeerScore', () => {
+    const logger = defaultLogger();
+    it('should score based on time in mesh', async () => {
+        // Create parameters with reasonable default values
+        const mytopic = 'mytopic';
+        const params = createPeerScoreParams({
+            topicScoreCap: 1000
+        });
+        const tparams = (params.topics[mytopic] = createTopicScoreParams({
+            topicWeight: 0.5,
+            timeInMeshWeight: 1,
+            timeInMeshQuantum: 1,
+            timeInMeshCap: 3600
+        }));
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        // Peer score should start at 0
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        ps.addPeer(peerA);
+        let aScore = ps.score(peerA);
+        expect(aScore, 'expected score to start at zero').to.equal(0);
+        // The time in mesh depends on how long the peer has been grafted
+        ps.graft(peerA, mytopic);
+        const elapsed = tparams.timeInMeshQuantum * 100;
+        await delay(elapsed + 10);
+        ps.refreshScores();
+        aScore = ps.score(peerA);
+        expect(aScore).to.be.gte(((tparams.topicWeight * tparams.timeInMeshWeight) / tparams.timeInMeshQuantum) * elapsed);
+    });
+    it('should cap time in mesh score', async () => {
+        // Create parameters with reasonable default values
+        const mytopic = 'mytopic';
+        const params = createPeerScoreParams({});
+        const tparams = (params.topics[mytopic] = createTopicScoreParams({
+            topicWeight: 0.5,
+            timeInMeshWeight: 1,
+            timeInMeshQuantum: 1,
+            timeInMeshCap: 10,
+            invalidMessageDeliveriesDecay: 0.1
+        }));
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        // Peer score should start at 0
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        ps.addPeer(peerA);
+        let aScore = ps.score(peerA);
+        expect(aScore, 'expected score to start at zero').to.equal(0);
+        // The time in mesh depends on how long the peer has been grafted
+        ps.graft(peerA, mytopic);
+        const elapsed = tparams.timeInMeshQuantum * 40;
+        await delay(elapsed);
+        ps.refreshScores();
+        aScore = ps.score(peerA);
+        expect(aScore).to.be.gt(tparams.topicWeight * tparams.timeInMeshWeight * tparams.timeInMeshCap * 0.5);
+        expect(aScore).to.be.lt(tparams.topicWeight * tparams.timeInMeshWeight * tparams.timeInMeshCap * 1.5);
+    });
+    it('should score first message deliveries', async () => {
+        // Create parameters with reasonable default values
+        const mytopic = 'mytopic';
+        const params = createPeerScoreParams({
+            topicScoreCap: 1000
+        });
+        const tparams = (params.topics[mytopic] = createTopicScoreParams({
+            topicWeight: 1,
+            firstMessageDeliveriesWeight: 1,
+            firstMessageDeliveriesDecay: 0.9,
+            firstMessageDeliveriesCap: 50000,
+            timeInMeshWeight: 0
+        }));
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        // Peer score should start at 0
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        ps.addPeer(peerA);
+        ps.graft(peerA, mytopic);
+        // deliver a bunch of messages from peer A
+        const nMessages = 100;
+        for (let i = 0; i < nMessages; i++) {
+            const msg = makeTestMessage(i, mytopic);
+            ps.validateMessage(getMsgIdStr(msg));
+            ps.deliverMessage(peerA, getMsgIdStr(msg), msg.topic);
+        }
+        ps.refreshScores();
+        const aScore = ps.score(peerA);
+        expect(aScore).to.be.equal(tparams.topicWeight * tparams.firstMessageDeliveriesWeight * nMessages * tparams.firstMessageDeliveriesDecay);
+    });
+    it('should cap first message deliveries score', async () => {
+        // Create parameters with reasonable default values
+        const mytopic = 'mytopic';
+        const params = createPeerScoreParams({
+            topicScoreCap: 1000
+        });
+        const tparams = (params.topics[mytopic] = createTopicScoreParams({
+            topicWeight: 1,
+            firstMessageDeliveriesWeight: 1,
+            firstMessageDeliveriesDecay: 0.9,
+            invalidMessageDeliveriesDecay: 0.9,
+            firstMessageDeliveriesCap: 50,
+            timeInMeshWeight: 0
+        }));
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        // Peer score should start at 0
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        ps.addPeer(peerA);
+        let aScore = ps.score(peerA);
+        expect(aScore, 'expected score to start at zero').to.equal(0);
+        // The time in mesh depends on how long the peer has been grafted
+        ps.graft(peerA, mytopic);
+        // deliver a bunch of messages from peer A
+        const nMessages = 100;
+        for (let i = 0; i < nMessages; i++) {
+            const msg = makeTestMessage(i, mytopic);
+            ps.validateMessage(getMsgIdStr(msg));
+            ps.deliverMessage(peerA, getMsgIdStr(msg), msg.topic);
+        }
+        ps.refreshScores();
+        aScore = ps.score(peerA);
+        expect(aScore).to.be.equal(tparams.topicWeight *
+            tparams.firstMessageDeliveriesWeight *
+            tparams.firstMessageDeliveriesCap *
+            tparams.firstMessageDeliveriesDecay);
+    });
+    it('should decay first message deliveries score', async () => {
+        // Create parameters with reasonable default values
+        const mytopic = 'mytopic';
+        const params = createPeerScoreParams({
+            topicScoreCap: 1000
+        });
+        const tparams = (params.topics[mytopic] = createTopicScoreParams({
+            topicWeight: 1,
+            firstMessageDeliveriesWeight: 1,
+            firstMessageDeliveriesDecay: 0.9, // decay 10% per decay interval
+            invalidMessageDeliveriesDecay: 0.9,
+            firstMessageDeliveriesCap: 50,
+            timeInMeshWeight: 0
+        }));
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        // Peer score should start at 0
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        ps.addPeer(peerA);
+        let aScore = ps.score(peerA);
+        expect(aScore, 'expected score to start at zero').to.equal(0);
+        // The time in mesh depends on how long the peer has been grafted
+        ps.graft(peerA, mytopic);
+        // deliver a bunch of messages from peer A
+        const nMessages = 100;
+        for (let i = 0; i < nMessages; i++) {
+            const msg = makeTestMessage(i, mytopic);
+            ps.validateMessage(getMsgIdStr(msg));
+            ps.deliverMessage(peerA, getMsgIdStr(msg), msg.topic);
+        }
+        ps.refreshScores();
+        aScore = ps.score(peerA);
+        let expected = tparams.topicWeight *
+            tparams.firstMessageDeliveriesWeight *
+            tparams.firstMessageDeliveriesCap *
+            tparams.firstMessageDeliveriesDecay;
+        expect(aScore).to.be.equal(expected);
+        // refreshing the scores applies the decay param
+        const decayInterals = 10;
+        for (let i = 0; i < decayInterals; i++) {
+            ps.refreshScores();
+            expected *= tparams.firstMessageDeliveriesDecay;
+        }
+        aScore = ps.score(peerA);
+        expect(aScore).to.be.equal(expected);
+    });
+    it('should score mesh message deliveries', async function () {
+        this.timeout(10000);
+        // Create parameters with reasonable default values
+        const mytopic = 'mytopic';
+        const params = createPeerScoreParams({});
+        const tparams = (params.topics[mytopic] = createTopicScoreParams({
+            topicWeight: 1,
+            meshMessageDeliveriesWeight: -1,
+            meshMessageDeliveriesActivation: 1000,
+            meshMessageDeliveriesWindow: 10,
+            meshMessageDeliveriesThreshold: 20,
+            meshMessageDeliveriesCap: 100,
+            meshMessageDeliveriesDecay: 0.9,
+            invalidMessageDeliveriesDecay: 0.9,
+            firstMessageDeliveriesWeight: 0,
+            timeInMeshWeight: 0
+        }));
+        // peer A always delivers the message first
+        // peer B delivers next (within the delivery window)
+        // peer C delivers outside the delivery window
+        // we expect peers A and B to have a score of zero, since all other param weights are zero
+        // peer C should have a negative score
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const peerB = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const peerC = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const peers = [peerA, peerB, peerC];
+        // Peer score should start at 0
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        peers.forEach((p) => {
+            ps.addPeer(p);
+            ps.graft(p, mytopic);
+        });
+        // assert that nobody has been penalized yet for not delivering messages before activation time
+        ps.refreshScores();
+        peers.forEach((p) => {
+            const score = ps.score(p);
+            expect(score, 'expected no mesh delivery penalty before activation time').to.equal(0);
+        });
+        // wait for the activation time to kick in
+        await delay(tparams.meshMessageDeliveriesActivation);
+        // deliver a bunch of messages from peers
+        const nMessages = 100;
+        for (let i = 0; i < nMessages; i++) {
+            const msg = makeTestMessage(i, mytopic);
+            ps.validateMessage(getMsgIdStr(msg));
+            ps.deliverMessage(peerA, getMsgIdStr(msg), msg.topic);
+            ps.duplicateMessage(peerB, getMsgIdStr(msg), msg.topic);
+            // deliver duplicate from peer C after the window
+            await delay(tparams.meshMessageDeliveriesWindow + 5);
+            ps.duplicateMessage(peerC, getMsgIdStr(msg), msg.topic);
+        }
+        ps.refreshScores();
+        const aScore = ps.score(peerA);
+        const bScore = ps.score(peerB);
+        const cScore = ps.score(peerC);
+        expect(aScore).to.be.gte(0);
+        expect(bScore).to.be.gte(0);
+        // the penalty is the difference between the threshold and the actual mesh deliveries, squared.
+        // since we didn't deliver anything, this is just the value of the threshold
+        const penalty = tparams.meshMessageDeliveriesThreshold * tparams.meshMessageDeliveriesThreshold;
+        const expected = tparams.topicWeight * tparams.meshMessageDeliveriesWeight * penalty;
+        expect(cScore).to.be.equal(expected);
+    });
+    it('should decay mesh message deliveries score', async function () {
+        this.timeout(10000);
+        // Create parameters with reasonable default values
+        const mytopic = 'mytopic';
+        const params = createPeerScoreParams({});
+        const tparams = (params.topics[mytopic] = createTopicScoreParams({
+            topicWeight: 1,
+            meshMessageDeliveriesWeight: -1,
+            meshMessageDeliveriesActivation: 1000,
+            meshMessageDeliveriesWindow: 10,
+            meshMessageDeliveriesThreshold: 20,
+            meshMessageDeliveriesCap: 100,
+            meshMessageDeliveriesDecay: 0.9,
+            invalidMessageDeliveriesDecay: 0.9,
+            firstMessageDeliveriesWeight: 0,
+            timeInMeshWeight: 0
+        }));
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        // Peer score should start at 0
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        ps.addPeer(peerA);
+        ps.graft(peerA, mytopic);
+        // wait for the activation time to kick in
+        await delay(tparams.meshMessageDeliveriesActivation + 10);
+        // deliver a bunch of messages from peer A
+        const nMessages = 40;
+        for (let i = 0; i < nMessages; i++) {
+            const msg = makeTestMessage(i, mytopic);
+            ps.validateMessage(getMsgIdStr(msg));
+            ps.deliverMessage(peerA, getMsgIdStr(msg), msg.topic);
+        }
+        ps.refreshScores();
+        let aScore = ps.score(peerA);
+        expect(aScore).to.be.gte(0);
+        // we need to refresh enough times for the decay to bring us below the threshold
+        let decayedDeliveryCount = nMessages * tparams.meshMessageDeliveriesDecay;
+        for (let i = 0; i < 20; i++) {
+            ps.refreshScores();
+            decayedDeliveryCount *= tparams.meshMessageDeliveriesDecay;
+        }
+        aScore = ps.score(peerA);
+        // the penalty is the difference between the threshold and the (decayed) mesh deliveries, squared.
+        const deficit = tparams.meshMessageDeliveriesThreshold - decayedDeliveryCount;
+        const penalty = deficit * deficit;
+        const expected = tparams.topicWeight * tparams.meshMessageDeliveriesWeight * penalty;
+        expect(aScore).to.be.equal(expected);
+    });
+    it('should score mesh message failures', async function () {
+        this.timeout(10000);
+        // Create parameters with reasonable default values
+        const mytopic = 'mytopic';
+        const params = createPeerScoreParams({});
+        // the mesh failure penalty is applied when a peer is pruned while their
+        // mesh deliveries are under the threshold.
+        // for this test, we set the mesh delivery threshold, but set
+        // meshMessageDeliveriesWeight to zero, so the only affect on the score
+        // is from the mesh failure penalty
+        const tparams = (params.topics[mytopic] = createTopicScoreParams({
+            topicWeight: 1,
+            meshFailurePenaltyWeight: -1,
+            meshFailurePenaltyDecay: 0.9,
+            meshMessageDeliveriesWeight: 0,
+            meshMessageDeliveriesActivation: 1000,
+            meshMessageDeliveriesWindow: 10,
+            meshMessageDeliveriesThreshold: 20,
+            meshMessageDeliveriesCap: 100,
+            meshMessageDeliveriesDecay: 0.9,
+            firstMessageDeliveriesWeight: 0,
+            timeInMeshWeight: 0
+        }));
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const peerB = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const peers = [peerA, peerB];
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        peers.forEach((p) => {
+            ps.addPeer(p);
+            ps.graft(p, mytopic);
+        });
+        // wait for the activation time to kick in
+        await delay(tparams.meshMessageDeliveriesActivation + 10);
+        // deliver a bunch of messages from peer A. peer B does nothing
+        const nMessages = 100;
+        for (let i = 0; i < nMessages; i++) {
+            const msg = makeTestMessage(i, mytopic);
+            ps.validateMessage(getMsgIdStr(msg));
+            ps.deliverMessage(peerA, getMsgIdStr(msg), msg.topic);
+        }
+        // peers A and B should both have zero scores, since the failure penalty hasn't been applied yet
+        ps.refreshScores();
+        let aScore = ps.score(peerA);
+        let bScore = ps.score(peerB);
+        expect(aScore).to.be.equal(0);
+        expect(bScore).to.be.equal(0);
+        // prune peer B to apply the penalty
+        ps.prune(peerB, mytopic);
+        ps.refreshScores();
+        aScore = ps.score(peerA);
+        bScore = ps.score(peerB);
+        expect(aScore).to.be.equal(0);
+        // penalty calculation is the same as for meshMessageDeliveries, but multiplied by meshFailurePenaltyWeight
+        // instead of meshMessageDeliveriesWeight
+        const penalty = tparams.meshMessageDeliveriesThreshold * tparams.meshMessageDeliveriesThreshold;
+        const expected = tparams.topicWeight * tparams.meshFailurePenaltyWeight * penalty * tparams.meshFailurePenaltyDecay;
+        expect(bScore).to.be.equal(expected);
+    });
+    it('should score invalid message deliveries', async function () {
+        // Create parameters with reasonable default values
+        const mytopic = 'mytopic';
+        const params = createPeerScoreParams({});
+        const tparams = (params.topics[mytopic] = createTopicScoreParams({
+            topicWeight: 1,
+            invalidMessageDeliveriesWeight: -1,
+            invalidMessageDeliveriesDecay: 0.9,
+            timeInMeshWeight: 0
+        }));
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        ps.addPeer(peerA);
+        ps.graft(peerA, mytopic);
+        // deliver a bunch of messages from peer A
+        const nMessages = 100;
+        for (let i = 0; i < nMessages; i++) {
+            const msg = makeTestMessage(i, mytopic);
+            ps.rejectMessage(peerA, getMsgIdStr(msg), msg.topic, RejectReason.Reject);
+        }
+        ps.refreshScores();
+        const aScore = ps.score(peerA);
+        const expected = tparams.topicWeight *
+            tparams.invalidMessageDeliveriesWeight *
+            (nMessages * tparams.invalidMessageDeliveriesDecay) ** 2;
+        expect(aScore).to.be.equal(expected);
+    });
+    it('should decay invalid message deliveries score', async function () {
+        // Create parameters with reasonable default values
+        const mytopic = 'mytopic';
+        const params = createPeerScoreParams({});
+        const tparams = (params.topics[mytopic] = createTopicScoreParams({
+            topicWeight: 1,
+            invalidMessageDeliveriesWeight: -1,
+            invalidMessageDeliveriesDecay: 0.9,
+            timeInMeshWeight: 0
+        }));
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        ps.addPeer(peerA);
+        ps.graft(peerA, mytopic);
+        // deliver a bunch of messages from peer A
+        const nMessages = 100;
+        for (let i = 0; i < nMessages; i++) {
+            const msg = makeTestMessage(i, mytopic);
+            ps.rejectMessage(peerA, getMsgIdStr(msg), msg.topic, RejectReason.Reject);
+        }
+        ps.refreshScores();
+        let aScore = ps.score(peerA);
+        let expected = tparams.topicWeight *
+            tparams.invalidMessageDeliveriesWeight *
+            (nMessages * tparams.invalidMessageDeliveriesDecay) ** 2;
+        expect(aScore).to.be.equal(expected);
+        // refresh scores a few times to apply decay
+        for (let i = 0; i < 10; i++) {
+            ps.refreshScores();
+            expected *= tparams.invalidMessageDeliveriesDecay ** 2;
+        }
+        aScore = ps.score(peerA);
+        expect(aScore).to.be.equal(expected);
+    });
+    it('should score invalid/ignored messages', async function () {
+        // this test adds coverage for the dark corners of message rejection
+        const mytopic = 'mytopic';
+        const params = createPeerScoreParams({});
+        params.topics[mytopic] = createTopicScoreParams({
+            topicWeight: 1,
+            invalidMessageDeliveriesWeight: -1,
+            invalidMessageDeliveriesDecay: 0.9,
+            timeInMeshQuantum: 1000
+        });
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const peerB = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        ps.addPeer(peerA);
+        ps.addPeer(peerB);
+        const msg = makeTestMessage(0, mytopic);
+        // insert a record
+        ps.validateMessage(getMsgIdStr(msg));
+        // this should have no effect in the score, and subsequent duplicate messages should have no effect either
+        ps.rejectMessage(peerA, getMsgIdStr(msg), msg.topic, RejectReason.Ignore);
+        ps.duplicateMessage(peerB, getMsgIdStr(msg), msg.topic);
+        let aScore = ps.score(peerA);
+        let bScore = ps.score(peerB);
+        let expected = 0;
+        expect(aScore).to.equal(expected);
+        expect(bScore).to.equal(expected);
+        // now clear the delivery record
+        let record = ps.deliveryRecords.queue.peekFront();
+        if (record == null) {
+            throw new Error('No record found');
+        }
+        record.expire = Date.now();
+        await delay(5);
+        ps.deliveryRecords.gc();
+        // insert a new record in the message deliveries
+        ps.validateMessage(getMsgIdStr(msg));
+        // and reject the message to make sure duplicates are also penalized
+        ps.rejectMessage(peerA, getMsgIdStr(msg), msg.topic, RejectReason.Reject);
+        ps.duplicateMessage(peerB, getMsgIdStr(msg), msg.topic);
+        aScore = ps.score(peerA);
+        bScore = ps.score(peerB);
+        expected = -1;
+        expect(aScore).to.equal(expected);
+        expect(bScore).to.equal(expected);
+        // now clear the delivery record again
+        record = ps.deliveryRecords.queue.peekFront();
+        if (record == null) {
+            throw new Error('No record found');
+        }
+        record.expire = Date.now();
+        await delay(5);
+        ps.deliveryRecords.gc();
+        // insert a new record in the message deliveries
+        ps.validateMessage(getMsgIdStr(msg));
+        // and reject the message after a duplicate has arrived
+        ps.duplicateMessage(peerB, getMsgIdStr(msg), msg.topic);
+        ps.rejectMessage(peerA, getMsgIdStr(msg), msg.topic, RejectReason.Reject);
+        aScore = ps.score(peerA);
+        bScore = ps.score(peerB);
+        expected = -4;
+        expect(aScore).to.equal(expected);
+        expect(bScore).to.equal(expected);
+    });
+    it('should score w/ application score', async function () {
+        const mytopic = 'mytopic';
+        let appScoreValue = 0;
+        const params = createPeerScoreParams({
+            appSpecificScore: () => appScoreValue,
+            appSpecificWeight: 0.5
+        });
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        ps.addPeer(peerA);
+        ps.graft(peerA, mytopic);
+        for (let i = -100; i < 100; i++) {
+            appScoreValue = i;
+            ps.refreshScores();
+            const aScore = ps.score(peerA);
+            const expected = i * params.appSpecificWeight;
+            expect(aScore).to.equal(expected);
+        }
+    });
+    it('should score w/ IP colocation', async function () {
+        const mytopic = 'mytopic';
+        const params = createPeerScoreParams({
+            IPColocationFactorThreshold: 1,
+            IPColocationFactorWeight: -1
+        });
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const peerB = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const peerC = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const peerD = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const peers = [peerA, peerB, peerC, peerD];
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        peers.forEach((p) => {
+            ps.addPeer(p);
+            ps.graft(p, mytopic);
+        });
+        const setIPsForPeer = (p, ips) => {
+            for (const ip of ips) {
+                ps.addIP(p, ip);
+            }
+        };
+        // peerA should have no penalty, but B, C, and D should be penalized for sharing an IP
+        setIPsForPeer(peerA, ['1.2.3.4']);
+        setIPsForPeer(peerB, ['2.3.4.5']);
+        setIPsForPeer(peerC, ['2.3.4.5', '3.4.5.6']);
+        setIPsForPeer(peerD, ['2.3.4.5']);
+        ps.refreshScores();
+        const aScore = ps.score(peerA);
+        const bScore = ps.score(peerB);
+        const cScore = ps.score(peerC);
+        const dScore = ps.score(peerD);
+        expect(aScore).to.equal(0);
+        const nShared = 3;
+        const ipSurplus = nShared - params.IPColocationFactorThreshold;
+        const penalty = ipSurplus ** 2;
+        const expected = params.IPColocationFactorWeight * penalty;
+        expect(bScore).to.equal(expected);
+        expect(cScore).to.equal(expected);
+        expect(dScore).to.equal(expected);
+    });
+    it('should score w/ behavior penalty', async function () {
+        const params = createPeerScoreParams({
+            behaviourPenaltyWeight: -1,
+            behaviourPenaltyDecay: 0.99
+        });
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        // add penalty on a non-existent peer
+        ps.addPenalty(peerA, 1, ScorePenalty.MessageDeficit);
+        let aScore = ps.score(peerA);
+        expect(aScore).to.equal(0);
+        // add the peer and test penalties
+        ps.addPeer(peerA);
+        aScore = ps.score(peerA);
+        expect(aScore).to.equal(0);
+        ps.addPenalty(peerA, 1, scorePenaltyAny);
+        aScore = ps.score(peerA);
+        expect(aScore).to.equal(-1);
+        ps.addPenalty(peerA, 1, scorePenaltyAny);
+        aScore = ps.score(peerA);
+        expect(aScore).to.equal(-4);
+        ps.refreshScores();
+        aScore = ps.score(peerA);
+        expect(aScore).to.equal(-3.9204);
+    });
+    it('should handle score retention', async function () {
+        const mytopic = 'mytopic';
+        const params = createPeerScoreParams({
+            appSpecificScore: () => -1000,
+            appSpecificWeight: 1,
+            retainScore: 800
+        });
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        ps.addPeer(peerA);
+        ps.graft(peerA, mytopic);
+        // score should equal -1000 (app-specific score)
+        const expected = -1000;
+        ps.refreshScores();
+        let aScore = ps.score(peerA);
+        expect(aScore).to.equal(expected);
+        // disconnect & wait half of the retainScoreTime
+        // should still have negative score
+        ps.removePeer(peerA);
+        const _delay = params.retainScore / 2;
+        await delay(_delay);
+        ps.refreshScores();
+        aScore = ps.score(peerA);
+        expect(aScore).to.equal(expected);
+        // wait remaining time (plus a little slop) and the score should reset to 0
+        await delay(_delay + 5);
+        ps.refreshScores();
+        aScore = ps.score(peerA);
+        expect(aScore).to.equal(0);
+    });
+});
+// TODO: https://github.com/ChainSafe/js-libp2p-gossipsub/issues/238
+describe.skip('PeerScore score cache', function () {
+    const peerA = '16Uiu2HAmMkH6ZLen2tbhiuNCTZLLvrZaDgufNdT5MPjtC9Hr9YNG';
+    const logger = defaultLogger();
+    let sandbox;
+    let computeStoreStub;
+    const params = createPeerScoreParams({
+        appSpecificScore: () => -1000,
+        appSpecificWeight: 1,
+        retainScore: 800,
+        decayInterval: 1000,
+        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
+        topics: { a: { topicWeight: 10 } }
+    });
+    let ps2;
+    beforeEach(() => {
+        sandbox = sinon.createSandbox();
+        const now = Date.now();
+        sandbox.useFakeTimers(now);
+        computeStoreStub = sinon.stub();
+        ps2 = new PeerScore(params, null, logger, {
+            scoreCacheValidityMs: 10,
+            computeScore: computeStoreStub
+        });
+    });
+    afterEach(() => {
+        sandbox.restore();
+    });
+    it('should compute first time', function () {
+        computeStoreStub.returns(10);
+        ps2.addPeer(peerA);
+        expect(computeStoreStub.calledOnce).to.be.false();
+        ps2.score(peerA);
+        expect(computeStoreStub.calledOnce).to.be.true();
+        // this time peerA score is cached
+        ps2.score(peerA);
+        expect(computeStoreStub.calledOnce).to.be.true();
+    });
+    const testCases = [
+        { name: 'decayInterval timeout', fun: () => sandbox.clock.tick(params.decayInterval) },
+        { name: 'refreshScores', fun: () => { ps2.refreshScores(); } },
+        { name: 'addPenalty', fun: () => { ps2.addPenalty(peerA, 10, scorePenaltyAny); } },
+        { name: 'graft', fun: () => { ps2.graft(peerA, 'a'); } },
+        { name: 'prune', fun: () => { ps2.prune(peerA, 'a'); } },
+        { name: 'markInvalidMessageDelivery', fun: () => { ps2.markInvalidMessageDelivery(peerA, 'a'); } },
+        { name: 'markFirstMessageDelivery', fun: () => { ps2.markFirstMessageDelivery(peerA, 'a'); } },
+        { name: 'markDuplicateMessageDelivery', fun: () => { ps2.markDuplicateMessageDelivery(peerA, 'a'); } },
+        { name: 'removeIPs', fun: () => { ps2.removeIP(peerA, '127.0.0.1'); } }
+    ];
+    for (const { name, fun } of testCases) {
+        // eslint-disable-next-line no-loop-func
+        it(`should invalidate the cache after ${name}`, function () {
+            // eslint-disable-line no-loop-func
+            computeStoreStub.returns(10);
+            ps2.addPeer(peerA);
+            ps2.score(peerA);
+            expect(computeStoreStub.calledOnce).to.be.true();
+            // the score is cached
+            ps2.score(peerA);
+            expect(computeStoreStub.calledOnce).to.be.true();
+            // invalidate the cache
+            fun();
+            // should not use the cache
+            ps2.score(peerA);
+            expect(computeStoreStub.calledTwice).to.be.true();
+        });
+    }
+});
+//# sourceMappingURL=peer-score.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score.spec.js.map
new file mode 100644
index 0000000..cb47e20
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/peer-score.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"peer-score.spec.js","sourceRoot":"","sources":["../../test/peer-score.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/scoreMetrics.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/scoreMetrics.spec.d.ts
new file mode 100644
index 0000000..6fe5864
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/scoreMetrics.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=scoreMetrics.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/scoreMetrics.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/scoreMetrics.spec.d.ts.map
new file mode 100644
index 0000000..2ff42f2
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/scoreMetrics.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"scoreMetrics.spec.d.ts","sourceRoot":"","sources":["../../test/scoreMetrics.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/scoreMetrics.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/scoreMetrics.spec.js
new file mode 100644
index 0000000..a308ac3
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/scoreMetrics.spec.js
@@ -0,0 +1,40 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import { ScorePenalty } from '../src/metrics.js';
+import { createPeerScoreParams, createTopicScoreParams, PeerScore } from '../src/score/index.js';
+import { computeAllPeersScoreWeights } from '../src/score/scoreMetrics.js';
+describe('score / scoreMetrics', () => {
+    const logger = defaultLogger();
+    it('computeScoreWeights', async () => {
+        // Create parameters with reasonable default values
+        const topic = 'test_topic';
+        const params = createPeerScoreParams({
+            topicScoreCap: 1000
+        });
+        params.topics[topic] = createTopicScoreParams({
+            topicWeight: 0.5,
+            timeInMeshWeight: 1,
+            timeInMeshQuantum: 1,
+            timeInMeshCap: 3600
+        });
+        // Add Map for metrics
+        const topicStrToLabel = new Map();
+        topicStrToLabel.set(topic, topic);
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        // Peer score should start at 0
+        const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 });
+        ps.addPeer(peerA);
+        // Do some actions that penalize the peer
+        const msgId = 'aaaaaaaaaaaaaaaa';
+        ps.addPenalty(peerA, 1, ScorePenalty.BrokenPromise);
+        ps.validateMessage(msgId);
+        ps.deliverMessage(peerA, msgId, topic);
+        const sw = computeAllPeersScoreWeights([peerA], ps.peerStats, ps.params, ps.peerIPs, topicStrToLabel);
+        // Ensure score is the same
+        expect(sw.score).to.deep.equal([ps.score(peerA)], 'Score from metrics and actual score not equal');
+        expect(sw.byTopic.get(topic)).to.deep.equal({ p1w: [0], p2w: [1], p3w: [0], p3bw: [0], p4w: [0] }, 'Wrong score weights by topic');
+    });
+});
+//# sourceMappingURL=scoreMetrics.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/scoreMetrics.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/scoreMetrics.spec.js.map
new file mode 100644
index 0000000..17c0f97
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/scoreMetrics.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"scoreMetrics.spec.js","sourceRoot":"","sources":["../../test/scoreMetrics.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAA;AAChD,OAAO,EAAE,qBAAqB,EAAE,sBAAsB,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAA;AAChG,OAAO,EAAE,2BAA2B,EAAE,MAAM,8BAA8B,CAAA;AAE1E,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,MAAM,MAAM,GAAG,aAAa,EAAE,CAAA;IAE9B,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QACnC,mDAAmD;QACnD,MAAM,KAAK,GAAG,YAAY,CAAA;QAE1B,MAAM,MAAM,GAAG,qBAAqB,CAAC;YACnC,aAAa,EAAE,IAAI;SACpB,CAAC,CAAA;QACF,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,sBAAsB,CAAC;YAC5C,WAAW,EAAE,GAAG;YAChB,gBAAgB,EAAE,CAAC;YACnB,iBAAiB,EAAE,CAAC;YACpB,aAAa,EAAE,IAAI;SACpB,CAAC,CAAA;QAEF,sBAAsB;QACtB,MAAM,eAAe,GAAG,IAAI,GAAG,EAAkB,CAAA;QACjD,eAAe,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;QAEjC,MAAM,KAAK,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QAC/E,+BAA+B;QAC/B,MAAM,EAAE,GAAG,IAAI,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE,CAAC,CAAA;QAC3E,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;QAEjB,yCAAyC;QACzC,MAAM,KAAK,GAAG,kBAAkB,CAAA;QAChC,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,YAAY,CAAC,aAAa,CAAC,CAAA;QACnD,EAAE,CAAC,eAAe,CAAC,KAAK,CAAC,CAAA;QACzB,EAAE,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA;QAEtC,MAAM,EAAE,GAAG,2BAA2B,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,OAAO,EAAE,eAAe,CAAC,CAAA;QAErG,2BAA2B;QAC3B,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,+CAA+C,CAAC,CAAA;QAClG,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CACzC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,EACrD,8BAA8B,CAC/B,CAAA;IACH,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/signature-policy.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/signature-policy.spec.d.ts
new file mode 100644
index 0000000..94b8dbe
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/signature-policy.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=signature-policy.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/signature-policy.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/signature-policy.spec.d.ts.map
new file mode 100644
index 0000000..046b484
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/signature-policy.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"signature-policy.spec.d.ts","sourceRoot":"","sources":["../../test/signature-policy.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/signature-policy.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/signature-policy.spec.js
new file mode 100644
index 0000000..dcb1a8b
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/signature-policy.spec.js
@@ -0,0 +1,160 @@
+import { stop } from '@libp2p/interface';
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks';
+import { expect } from 'aegir/chai';
+import { pEvent } from 'p-event';
+import { connectAllPubSubNodes, connectPubsubNodes, createComponents, createComponentsArray } from './utils/create-pubsub.js';
+describe('signature policy', () => {
+    describe('strict-sign', () => {
+        const numNodes = 3;
+        let nodes;
+        beforeEach(async () => {
+            mockNetwork.reset();
+            nodes = await createComponentsArray({
+                number: numNodes,
+                connected: false,
+                init: {
+                    scoreParams: {
+                        IPColocationFactorThreshold: 3
+                    },
+                    // crucial line
+                    globalSignaturePolicy: 'StrictSign'
+                }
+            });
+        });
+        afterEach(async () => {
+            await stop(...nodes.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            mockNetwork.reset();
+        });
+        it('should publish a message', async () => {
+            const topic = 'foo';
+            // add subscriptions to each node
+            nodes.forEach((n) => { n.pubsub.subscribe(topic); });
+            // connect all nodes
+            await connectAllPubSubNodes(nodes);
+            // wait for subscriptions to be transmitted
+            await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change')));
+            // await mesh rebalancing
+            await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')));
+            // publish a message on the topic
+            const result = await nodes[0].pubsub.publish(topic, new Uint8Array());
+            expect(result.recipients).to.length(numNodes - 1);
+        });
+        it('should forward a valid message', async () => {
+            const topic = 'foo';
+            // add subscriptions to each node
+            nodes.forEach((n) => { n.pubsub.subscribe(topic); });
+            // connect in a line
+            await Promise.all(Array.from({ length: numNodes - 1 }, async (_, i) => connectPubsubNodes(nodes[i], nodes[i + 1])));
+            // wait for subscriptions to be transmitted
+            await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change')));
+            // await mesh rebalancing
+            await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')));
+            // publish a message on the topic
+            const result = await nodes[0].pubsub.publish(topic, new Uint8Array());
+            expect(result.recipients).to.length(1);
+            // the last node should get the message
+            await pEvent(nodes[nodes.length - 1].pubsub, 'gossipsub:message');
+        });
+        it('should not forward an strict-no-sign message', async () => {
+            const topic = 'foo';
+            // add a no-sign peer to nodes
+            nodes.unshift(await createComponents({
+                init: {
+                    globalSignaturePolicy: 'StrictNoSign'
+                }
+            }));
+            // add subscriptions to each node
+            nodes.forEach((n) => { n.pubsub.subscribe(topic); });
+            // connect in a line
+            await Promise.all(Array.from({ length: numNodes - 1 }, async (_, i) => connectPubsubNodes(nodes[i], nodes[i + 1])));
+            // await mesh rebalancing
+            await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')));
+            // publish a message on the topic
+            const result = await nodes[0].pubsub.publish(topic, new Uint8Array());
+            expect(result.recipients).to.length(1);
+            // the last node should NOT get the message
+            try {
+                await pEvent(nodes[nodes.length - 1].pubsub, 'gossipsub:message', { timeout: 200 });
+                expect.fail('no-sign message should not be emitted from strict-sign peer');
+            }
+            catch (e) { }
+        });
+    });
+    describe('strict-no-sign', () => {
+        const numNodes = 3;
+        let nodes;
+        beforeEach(async () => {
+            mockNetwork.reset();
+            nodes = await createComponentsArray({
+                number: numNodes,
+                connected: false,
+                init: {
+                    scoreParams: {
+                        IPColocationFactorThreshold: 3
+                    },
+                    // crucial line
+                    globalSignaturePolicy: 'StrictNoSign'
+                }
+            });
+        });
+        afterEach(async () => {
+            await stop(...nodes.reduce((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []));
+            mockNetwork.reset();
+        });
+        it('should publish a message', async () => {
+            const topic = 'foo';
+            // add subscriptions to each node
+            nodes.forEach((n) => { n.pubsub.subscribe(topic); });
+            // connect all nodes
+            await connectAllPubSubNodes(nodes);
+            // wait for subscriptions to be transmitted
+            await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change')));
+            // await mesh rebalancing
+            await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')));
+            // publish a message on the topic
+            const result = await nodes[0].pubsub.publish(topic, new Uint8Array());
+            expect(result.recipients).to.length(numNodes - 1);
+        });
+        it('should forward a valid message', async () => {
+            const topic = 'foo';
+            // add subscriptions to each node
+            nodes.forEach((n) => { n.pubsub.subscribe(topic); });
+            // connect in a line
+            await Promise.all(Array.from({ length: numNodes - 1 }, async (_, i) => connectPubsubNodes(nodes[i], nodes[i + 1])));
+            // wait for subscriptions to be transmitted
+            await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change')));
+            // await mesh rebalancing
+            await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')));
+            // publish a message on the topic
+            const result = await nodes[0].pubsub.publish(topic, new Uint8Array());
+            expect(result.recipients).to.length(1);
+            // the last node should get the message
+            await pEvent(nodes[nodes.length - 1].pubsub, 'gossipsub:message');
+        });
+        it('should not forward an strict-sign message', async () => {
+            const topic = 'foo';
+            // add a no-sign peer to nodes
+            nodes.unshift(await createComponents({
+                init: {
+                    globalSignaturePolicy: 'StrictSign'
+                }
+            }));
+            // add subscriptions to each node
+            nodes.forEach((n) => { n.pubsub.subscribe(topic); });
+            // connect in a line
+            await Promise.all(Array.from({ length: numNodes - 1 }, async (_, i) => connectPubsubNodes(nodes[i], nodes[i + 1])));
+            // await mesh rebalancing
+            await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')));
+            // publish a message on the topic
+            const result = await nodes[0].pubsub.publish(topic, new Uint8Array());
+            expect(result.recipients).to.length(1);
+            // the last node should NOT get the message
+            try {
+                await pEvent(nodes[nodes.length - 1].pubsub, 'gossipsub:message', { timeout: 200 });
+                expect.fail('no-sign message should not be emitted from strict-sign peer');
+            }
+            catch (e) { }
+        });
+    });
+});
+//# sourceMappingURL=signature-policy.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/signature-policy.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/signature-policy.spec.js.map
new file mode 100644
index 0000000..3f42977
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/signature-policy.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"signature-policy.spec.js","sourceRoot":"","sources":["../../test/signature-policy.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/time-cache.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/time-cache.spec.d.ts
new file mode 100644
index 0000000..ca5a5fc
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/time-cache.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=time-cache.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/time-cache.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/time-cache.spec.d.ts.map
new file mode 100644
index 0000000..1c82004
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/time-cache.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"time-cache.spec.d.ts","sourceRoot":"","sources":["../../test/time-cache.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/time-cache.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/time-cache.spec.js
new file mode 100644
index 0000000..423d535
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/time-cache.spec.js
@@ -0,0 +1,52 @@
+import { expect } from 'aegir/chai';
+import sinon from 'sinon';
+import { SimpleTimeCache } from '../src/utils/time-cache.js';
+describe('SimpleTimeCache', () => {
+    const validityMs = 1000;
+    const timeCache = new SimpleTimeCache({ validityMs });
+    const sandbox = sinon.createSandbox();
+    beforeEach(() => {
+        sandbox.useFakeTimers();
+    });
+    afterEach(() => {
+        sandbox.restore();
+    });
+    it('should delete items after 1sec', () => {
+        timeCache.put('aFirst');
+        timeCache.put('bFirst');
+        timeCache.put('cFirst');
+        expect(timeCache.has('aFirst')).to.be.true();
+        expect(timeCache.has('bFirst')).to.be.true();
+        expect(timeCache.has('cFirst')).to.be.true();
+        sandbox.clock.tick(validityMs + 1);
+        // https://github.com/ChainSafe/js-libp2p-gossipsub/issues/232#issuecomment-1109589919
+        timeCache.prune();
+        timeCache.put('aSecond');
+        timeCache.put('bSecond');
+        timeCache.put('cSecond');
+        expect(timeCache.has('aSecond')).to.be.true();
+        expect(timeCache.has('bSecond')).to.be.true();
+        expect(timeCache.has('cSecond')).to.be.true();
+        expect(timeCache.has('aFirst')).to.be.false();
+        expect(timeCache.has('bFirst')).to.be.false();
+        expect(timeCache.has('cFirst')).to.be.false();
+    });
+    it('Map insertion order', () => {
+        const key1 = 'key1';
+        const key2 = 'key2';
+        const key3 = 'key3';
+        const map = new Map();
+        map.set(key1, Date.now());
+        map.set(key2, Date.now());
+        map.set(key3, Date.now());
+        expect(Array.from(map.keys())).deep.equals([key1, key2, key3], 'Map iterator order');
+        // Does not change key position
+        map.set(key2, Date.now());
+        expect(Array.from(map.keys())).deep.equals([key1, key2, key3], 'Map iterator order after re-set');
+        // Changes key position
+        map.delete(key2);
+        map.set(key2, Date.now());
+        expect(Array.from(map.keys())).deep.equals([key1, key3, key2], 'Map iterator order after delete set');
+    });
+});
+//# sourceMappingURL=time-cache.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/time-cache.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/time-cache.spec.js.map
new file mode 100644
index 0000000..b2549a8
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/time-cache.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"time-cache.spec.js","sourceRoot":"","sources":["../../test/time-cache.spec.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/tracer.spec.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/tracer.spec.d.ts
new file mode 100644
index 0000000..99d44dd
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/tracer.spec.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=tracer.spec.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/tracer.spec.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/tracer.spec.d.ts.map
new file mode 100644
index 0000000..55036e0
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/tracer.spec.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"tracer.spec.d.ts","sourceRoot":"","sources":["../../test/tracer.spec.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/tracer.spec.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/tracer.spec.js
new file mode 100644
index 0000000..fb26af0
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/tracer.spec.js
@@ -0,0 +1,55 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { expect } from 'aegir/chai';
+import delay from 'delay';
+import * as constants from '../src/constants.js';
+import { IWantTracer } from '../src/tracer.js';
+import { messageIdToString } from '../src/utils/messageIdToString.js';
+import { makeTestMessage, getMsgId, getMsgIdStr } from './utils/index.js';
+describe('IWantTracer', () => {
+    it('should track broken promises', async function () {
+        // tests that unfulfilled promises are tracked correctly
+        this.timeout(6000);
+        const t = new IWantTracer(constants.GossipsubIWantFollowupTime, messageIdToString, null);
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const peerB = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const msgIds = [];
+        for (let i = 0; i < 100; i++) {
+            const m = makeTestMessage(i, 'test_topic');
+            msgIds.push(getMsgId(m));
+        }
+        t.addPromise(peerA, msgIds);
+        t.addPromise(peerB, msgIds);
+        // no broken promises yet
+        let brokenPromises = t.getBrokenPromises();
+        expect(brokenPromises.size).to.be.equal(0);
+        // make promises break
+        await delay(constants.GossipsubIWantFollowupTime + 10);
+        brokenPromises = t.getBrokenPromises();
+        expect(brokenPromises.size).to.be.equal(2);
+        expect(brokenPromises.get(peerA)).to.be.equal(1);
+        expect(brokenPromises.get(peerB)).to.be.equal(1);
+    });
+    it('should track unbroken promises', async function () {
+        // like above, but this time we deliver messages to fullfil the promises
+        this.timeout(6000);
+        const t = new IWantTracer(constants.GossipsubIWantFollowupTime, messageIdToString, null);
+        const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const peerB = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString();
+        const msgs = [];
+        const msgIds = [];
+        for (let i = 0; i < 100; i++) {
+            const m = makeTestMessage(i, 'test_topic');
+            msgs.push(m);
+            msgIds.push(getMsgId(m));
+        }
+        t.addPromise(peerA, msgIds);
+        t.addPromise(peerB, msgIds);
+        msgs.forEach((msg) => { t.deliverMessage(getMsgIdStr(msg)); });
+        await delay(constants.GossipsubIWantFollowupTime + 10);
+        // there should be no broken promises
+        const brokenPromises = t.getBrokenPromises();
+        expect(brokenPromises.size).to.be.equal(0);
+    });
+});
+//# sourceMappingURL=tracer.spec.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/tracer.spec.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/tracer.spec.js.map
new file mode 100644
index 0000000..d860887
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/tracer.spec.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"tracer.spec.js","sourceRoot":"","sources":["../../test/tracer.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,KAAK,SAAS,MAAM,qBAAqB,CAAA;AAChD,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAA;AAC9C,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAA;AACrE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAA;AAEzE,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,EAAE,CAAC,8BAA8B,EAAE,KAAK;QACtC,wDAAwD;QACxD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QAClB,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,0BAA0B,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAA;QACxF,MAAM,KAAK,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QAC/E,MAAM,KAAK,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QAE/E,MAAM,MAAM,GAAiB,EAAE,CAAA;QAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7B,MAAM,CAAC,GAAG,eAAe,CAAC,CAAC,EAAE,YAAY,CAAC,CAAA;YAC1C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;QAC1B,CAAC;QAED,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;QAC3B,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;QAE3B,yBAAyB;QACzB,IAAI,cAAc,GAAG,CAAC,CAAC,iBAAiB,EAAE,CAAA;QAC1C,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QAE1C,sBAAsB;QACtB,MAAM,KAAK,CAAC,SAAS,CAAC,0BAA0B,GAAG,EAAE,CAAC,CAAA;QAEtD,cAAc,GAAG,CAAC,CAAC,iBAAiB,EAAE,CAAA;QACtC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QAC1C,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QAChD,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAClD,CAAC,CAAC,CAAA;IACF,EAAE,CAAC,gCAAgC,EAAE,KAAK;QACxC,wEAAwE;QACxE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QAClB,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,0BAA0B,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAA;QACxF,MAAM,KAAK,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QAC/E,MAAM,KAAK,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QAE/E,MAAM,IAAI,GAAG,EAAE,CAAA;QACf,MAAM,MAAM,GAAG,EAAE,CAAA;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7B,MAAM,CAAC,GAAG,eAAe,CAAC,CAAC,EAAE,YAAY,CAAC,CAAA;YAC1C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACZ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;QAC1B,CAAC;QAED,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;QAC3B,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;QAE3B,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,CAAA;QAE7D,MAAM,KAAK,CAAC,SAAS,CAAC,0BAA0B,GAAG,EAAE,CAAC,CAAA;QAEtD,qCAAqC;QACrC,MAAM,cAAc,GAAG,CAAC,CAAC,iBAAiB,EAAE,CAAA;QAC5C,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAC5C,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/unit/set.test.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/unit/set.test.d.ts
new file mode 100644
index 0000000..76be891
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/unit/set.test.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=set.test.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/unit/set.test.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/unit/set.test.d.ts.map
new file mode 100644
index 0000000..4810f51
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/unit/set.test.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"set.test.d.ts","sourceRoot":"","sources":["../../../test/unit/set.test.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/unit/set.test.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/unit/set.test.js
new file mode 100644
index 0000000..4f676c1
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/unit/set.test.js
@@ -0,0 +1,41 @@
+import { expect } from 'aegir/chai';
+import { removeFirstNItemsFromSet, removeItemsFromSet } from '../../src/utils/set.js';
+describe('Set util', function () {
+    describe('removeItemsFromSet', function () {
+        let s;
+        this.beforeEach(() => {
+            s = new Set([1, 2, 3, 4, 5]);
+        });
+        const testCases = [
+            { id: 'remove even numbers - need 0', ineed: 0, fn: (item) => item % 2 === 0, result: new Set([]) },
+            { id: 'remove even numbers - need 1', ineed: 1, fn: (item) => item % 2 === 0, result: new Set([2]) },
+            { id: 'remove even numbers - need 2', ineed: 2, fn: (item) => item % 2 === 0, result: new Set([2, 4]) },
+            { id: 'remove even numbers - need 10', ineed: 2, fn: (item) => item % 2 === 0, result: new Set([2, 4]) }
+        ];
+        for (const { id, ineed, fn, result } of testCases) {
+            // eslint-disable-next-line no-loop-func
+            it(id, () => {
+                expect(removeItemsFromSet(s, ineed, fn)).to.deep.equal(result);
+            });
+        }
+    });
+    describe('removeFirstNItemsFromSet', function () {
+        let s;
+        this.beforeEach(() => {
+            s = new Set([1, 2, 3, 4, 5]);
+        });
+        const testCases = [
+            { id: 'remove first 0 item', ineed: 0, result: new Set([]) },
+            { id: 'remove first 1 item', ineed: 1, result: new Set([1]) },
+            { id: 'remove first 2 item', ineed: 2, result: new Set([1, 2]) },
+            { id: 'remove first 10 item', ineed: 10, result: new Set([1, 2, 3, 4, 5]) }
+        ];
+        for (const { id, ineed, result } of testCases) {
+            // eslint-disable-next-line no-loop-func
+            it(id, () => {
+                expect(removeFirstNItemsFromSet(s, ineed)).to.deep.equal(result);
+            });
+        }
+    });
+});
+//# sourceMappingURL=set.test.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/unit/set.test.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/unit/set.test.js.map
new file mode 100644
index 0000000..dff2ad3
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/unit/set.test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"set.test.js","sourceRoot":"","sources":["../../../test/unit/set.test.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/create-pubsub.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/create-pubsub.d.ts
new file mode 100644
index 0000000..2a71f79
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/create-pubsub.d.ts
@@ -0,0 +1,32 @@
+import { GossipSub, type GossipSubComponents, type GossipsubOpts } from '../../src/index.js';
+import type { TypedEventTarget, Libp2pEvents, PubSub } from '@libp2p/interface';
+export interface CreateComponentsOpts {
+    init?: Partial<GossipsubOpts>;
+    pubsub?: {
+        new (opts?: any): PubSub;
+    };
+}
+export interface GossipSubTestComponents extends GossipSubComponents {
+    events: TypedEventTarget<Libp2pEvents>;
+}
+export interface GossipSubAndComponents {
+    pubsub: GossipSub;
+    components: GossipSubTestComponents;
+}
+export declare const createComponents: (opts: CreateComponentsOpts) => Promise<GossipSubAndComponents>;
+export declare const createComponentsArray: (opts?: CreateComponentsOpts & {
+    number: number;
+    connected?: boolean;
+}) => Promise<GossipSubAndComponents[]>;
+export declare const connectPubsubNodes: (a: GossipSubAndComponents, b: GossipSubAndComponents) => Promise<void>;
+export declare const connectAllPubSubNodes: (components: GossipSubAndComponents[]) => Promise<void>;
+/**
+ * Connect some gossipsub nodes to others, ensure each has num peers
+ *
+ * @param {GossipSubAndComponents[]} gss
+ * @param {number} num - number of peers to connect
+ */
+export declare function connectSome(gss: GossipSubAndComponents[], num: number): Promise<void>;
+export declare function sparseConnect(gss: GossipSubAndComponents[]): Promise<void>;
+export declare function denseConnect(gss: GossipSubAndComponents[]): Promise<void>;
+//# sourceMappingURL=create-pubsub.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/create-pubsub.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/create-pubsub.d.ts.map
new file mode 100644
index 0000000..c45d061
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/create-pubsub.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"create-pubsub.d.ts","sourceRoot":"","sources":["../../../test/utils/create-pubsub.ts"],"names":[],"mappings":"AASA,OAAO,EAAE,SAAS,EAAE,KAAK,mBAAmB,EAAE,KAAK,aAAa,EAAE,MAAM,oBAAoB,CAAA;AAC5F,OAAO,KAAK,EAAE,gBAAgB,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAA;AAG/E,MAAM,WAAW,oBAAoB;IACnC,IAAI,CAAC,EAAE,OAAO,CAAC,aAAa,CAAC,CAAA;IAC7B,MAAM,CAAC,EAAE;QAAE,KAAK,IAAI,CAAC,EAAE,GAAG,GAAG,MAAM,CAAA;KAAE,CAAA;CACtC;AAED,MAAM,WAAW,uBAAwB,SAAQ,mBAAmB;IAClE,MAAM,EAAE,gBAAgB,CAAC,YAAY,CAAC,CAAA;CACvC;AAED,MAAM,WAAW,sBAAsB;IACrC,MAAM,EAAE,SAAS,CAAA;IACjB,UAAU,EAAE,uBAAuB,CAAA;CACpC;AAED,eAAO,MAAM,gBAAgB,SAAgB,oBAAoB,KAAG,QAAQ,sBAAsB,CAoCjG,CAAA;AAED,eAAO,MAAM,qBAAqB,UAC1B,oBAAoB,GAAG;IAAE,MAAM,EAAE,MAAM,CAAC;IAAC,SAAS,CAAC,EAAE,OAAO,CAAA;CAAE,KACnE,QAAQ,sBAAsB,EAAE,CAYlC,CAAA;AAED,eAAO,MAAM,kBAAkB,MAAa,sBAAsB,KAAK,sBAAsB,KAAG,QAAQ,IAAI,CAU3G,CAAA;AAED,eAAO,MAAM,qBAAqB,eAAsB,sBAAsB,EAAE,KAAG,QAAQ,IAAI,CAM9F,CAAA;AAED;;;;;GAKG;AACH,wBAAsB,WAAW,CAAE,GAAG,EAAE,sBAAsB,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAoB5F;AAED,wBAAsB,aAAa,CAAE,GAAG,EAAE,sBAAsB,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAEjF;AAED,wBAAsB,YAAY,CAAE,GAAG,EAAE,sBAAsB,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAEhF"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/create-pubsub.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/create-pubsub.js
new file mode 100644
index 0000000..7296d09
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/create-pubsub.js
@@ -0,0 +1,98 @@
+import { setMaxListeners } from 'events';
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { TypedEventEmitter, start } from '@libp2p/interface';
+import { mockRegistrar, mockConnectionManager, mockNetwork } from '@libp2p/interface-compliance-tests/mocks';
+import { defaultLogger } from '@libp2p/logger';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { PersistentPeerStore } from '@libp2p/peer-store';
+import { MemoryDatastore } from 'datastore-core';
+import { stubInterface } from 'ts-sinon';
+import { GossipSub } from '../../src/index.js';
+export const createComponents = async (opts) => {
+    const Ctor = opts.pubsub ?? GossipSub;
+    const privateKey = await generateKeyPair('Ed25519');
+    const peerId = peerIdFromPrivateKey(privateKey);
+    const events = new TypedEventEmitter();
+    const logger = defaultLogger();
+    const components = {
+        privateKey,
+        peerId,
+        registrar: mockRegistrar(),
+        connectionManager: stubInterface(),
+        peerStore: new PersistentPeerStore({
+            peerId,
+            datastore: new MemoryDatastore(),
+            events,
+            logger
+        }),
+        events,
+        logger
+    };
+    components.connectionManager = mockConnectionManager(components);
+    const pubsub = new Ctor(components, opts.init);
+    await start(...Object.entries(components), pubsub);
+    mockNetwork.addNode(components);
+    try {
+        // not available everywhere
+        setMaxListeners(Infinity, pubsub);
+    }
+    catch { }
+    return { pubsub, components };
+};
+export const createComponentsArray = async (opts = { number: 1, connected: true }) => {
+    const output = await Promise.all(Array.from({ length: opts.number }).map(async (_, i) => createComponents({ ...opts, init: { ...opts.init, debugName: `libp2p:gossipsub:${i}` } })));
+    if (opts.connected ?? false) {
+        await connectAllPubSubNodes(output);
+    }
+    return output;
+};
+export const connectPubsubNodes = async (a, b) => {
+    const multicodecs = new Set([...a.pubsub.multicodecs, ...b.pubsub.multicodecs]);
+    const connection = await a.components.connectionManager.openConnection(b.components.peerId);
+    for (const multicodec of multicodecs) {
+        for (const topology of a.components.registrar.getTopologies(multicodec)) {
+            topology.onConnect?.(b.components.peerId, connection);
+        }
+    }
+};
+export const connectAllPubSubNodes = async (components) => {
+    for (let i = 0; i < components.length; i++) {
+        for (let j = i + 1; j < components.length; j++) {
+            await connectPubsubNodes(components[i], components[j]);
+        }
+    }
+};
+/**
+ * Connect some gossipsub nodes to others, ensure each has num peers
+ *
+ * @param {GossipSubAndComponents[]} gss
+ * @param {number} num - number of peers to connect
+ */
+export async function connectSome(gss, num) {
+    for (let i = 0; i < gss.length; i++) {
+        let count = 0;
+        // merely do a Math.random() and check for duplicate may take a lot of time to run a test
+        // so we make an array of candidate peers
+        // initially, don't populate i as a candidate to connect: candidatePeers[i] = i + 1
+        const candidatePeers = Array.from({ length: gss.length - 1 }, (_, j) => (j >= i ? j + 1 : j));
+        while (count < num) {
+            const n = Math.floor(Math.random() * candidatePeers.length);
+            const peer = candidatePeers[n];
+            await connectPubsubNodes(gss[i], gss[peer]);
+            // after connecting to a peer, update candidatePeers so that we don't connect to it again
+            for (let j = n; j < candidatePeers.length - 1; j++) {
+                candidatePeers[j] = candidatePeers[j + 1];
+            }
+            // remove the last item
+            candidatePeers.splice(candidatePeers.length - 1, 1);
+            count++;
+        }
+    }
+}
+export async function sparseConnect(gss) {
+    await connectSome(gss, 3);
+}
+export async function denseConnect(gss) {
+    await connectSome(gss, Math.min(gss.length - 1, 10));
+}
+//# sourceMappingURL=create-pubsub.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/create-pubsub.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/create-pubsub.js.map
new file mode 100644
index 0000000..8692d38
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/create-pubsub.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"create-pubsub.js","sourceRoot":"","sources":["../../../test/utils/create-pubsub.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/events.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/events.d.ts
new file mode 100644
index 0000000..3c7aab7
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/events.d.ts
@@ -0,0 +1,7 @@
+import type { GossipSubAndComponents } from './create-pubsub.js';
+import type { GossipsubEvents } from '../../src/index.js';
+import type { TypedEventTarget } from '@libp2p/interface';
+export declare const checkReceivedSubscription: (node: GossipSubAndComponents, peerIdStr: string, topic: string, peerIdx: number, timeout?: number) => Promise<void>;
+export declare const checkReceivedSubscriptions: (node: GossipSubAndComponents, peerIdStrs: string[], topic: string, timeout?: number) => Promise<void>;
+export declare const awaitEvents: <Events extends Record<string, any> = GossipsubEvents>(emitter: TypedEventTarget<Events>, event: keyof Events, number: number, timeout?: number) => Promise<void>;
+//# sourceMappingURL=events.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/events.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/events.d.ts.map
new file mode 100644
index 0000000..a5ecee9
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/events.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"events.d.ts","sourceRoot":"","sources":["../../../test/utils/events.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,EAAE,sBAAsB,EAAE,MAAM,oBAAoB,CAAA;AAChE,OAAO,KAAK,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAA;AACzD,OAAO,KAAK,EAAE,gBAAgB,EAA0B,MAAM,mBAAmB,CAAA;AAEjF,eAAO,MAAM,yBAAyB,SAC9B,sBAAsB,aACjB,MAAM,SACV,MAAM,WACJ,MAAM,uBAEd,QAAQ,IAAI,CA0BX,CAAA;AAEJ,eAAO,MAAM,0BAA0B,SAC/B,sBAAsB,cAChB,MAAM,EAAE,SACb,MAAM,uBAEZ,QAAQ,IAAI,CAcd,CAAA;AAED,eAAO,MAAM,WAAW,kEACb,iBAAiB,MAAM,CAAC,SAC1B,MAAM,MAAM,UACX,MAAM,uBAEb,QAAQ,IAAI,CAiBd,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/events.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/events.js
new file mode 100644
index 0000000..85f468e
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/events.js
@@ -0,0 +1,55 @@
+import { expect } from 'aegir/chai';
+import pWaitFor from 'p-wait-for';
+export const checkReceivedSubscription = async (node, peerIdStr, topic, peerIdx, timeout = 1000) => new Promise((resolve, reject) => {
+    const event = 'subscription-change';
+    const t = setTimeout(() => { reject(new Error(`Not received subscriptions of psub ${peerIdx}, topic ${topic}`)); }, timeout);
+    const cb = (evt) => {
+        const { peerId, subscriptions } = evt.detail;
+        // console.log('@@@ in test received subscriptions from peer id', peerId.toString())
+        if (peerId.toString() === peerIdStr && subscriptions[0].topic === topic && subscriptions[0].subscribe) {
+            clearTimeout(t);
+            node.pubsub.removeEventListener(event, cb);
+            if (Array.from(node.pubsub.getSubscribers(topic))
+                .map((p) => p.toString())
+                .includes(peerIdStr)) {
+                resolve();
+            }
+            else {
+                reject(Error('topics should include the peerId'));
+            }
+        }
+    };
+    node.pubsub.addEventListener(event, cb);
+});
+export const checkReceivedSubscriptions = async (node, peerIdStrs, topic, timeout = 5000) => {
+    const recvPeerIdStrs = peerIdStrs.filter((peerIdStr) => peerIdStr !== node.components.peerId.toString());
+    const promises = recvPeerIdStrs.map(async (peerIdStr, idx) => checkReceivedSubscription(node, peerIdStr, topic, idx, timeout));
+    await Promise.all(promises);
+    for (const str of recvPeerIdStrs) {
+        expect(Array.from(node.pubsub.getSubscribers(topic)).map((p) => p.toString())).to.include(str);
+    }
+    await pWaitFor(() => {
+        return recvPeerIdStrs.every((peerIdStr) => {
+            return (node.pubsub).streamsOutbound.has(peerIdStr);
+        });
+    });
+};
+export const awaitEvents = async (emitter, event, number, timeout = 30000) => {
+    return new Promise((resolve, reject) => {
+        let counter = 0;
+        const t = setTimeout(() => {
+            emitter.removeEventListener(event, cb);
+            reject(new Error(`${counter} of ${number} '${String(event)}' events received after ${timeout}ms`));
+        }, timeout);
+        const cb = () => {
+            counter++;
+            if (counter >= number) {
+                clearTimeout(t);
+                emitter.removeEventListener(event, cb);
+                resolve();
+            }
+        };
+        emitter.addEventListener(event, cb);
+    });
+};
+//# sourceMappingURL=events.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/events.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/events.js.map
new file mode 100644
index 0000000..8e6c4af
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/events.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"events.js","sourceRoot":"","sources":["../../../test/utils/events.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/index.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/index.d.ts
new file mode 100644
index 0000000..1060a53
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/index.d.ts
@@ -0,0 +1,7 @@
+import type { RPC } from '../../src/message/rpc.js';
+import type { TopicStr } from '../../src/types.js';
+import type { PeerId } from '@libp2p/interface';
+export * from './msgId.js';
+export declare const createPeerId: () => Promise<PeerId>;
+export declare function makeTestMessage(i: number, topic: TopicStr, from?: PeerId): RPC.Message;
+//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/index.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/index.d.ts.map
new file mode 100644
index 0000000..89a9a0e
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/index.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../../test/utils/index.ts"],"names":[],"mappings":"AAGA,OAAO,KAAK,EAAE,GAAG,EAAE,MAAM,0BAA0B,CAAA;AACnD,OAAO,KAAK,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAA;AAClD,OAAO,KAAK,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAA;AAE/C,cAAc,YAAY,CAAA;AAE1B,eAAO,MAAM,YAAY,QAAa,QAAQ,MAAM,CAInD,CAAA;AAKD,wBAAgB,eAAe,CAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,MAAM,GAAG,GAAG,CAAC,OAAO,CAOvF"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/index.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/index.js
new file mode 100644
index 0000000..d948edf
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/index.js
@@ -0,0 +1,19 @@
+import { generateKeyPair } from '@libp2p/crypto/keys';
+import { peerIdFromPrivateKey } from '@libp2p/peer-id';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+export * from './msgId.js';
+export const createPeerId = async () => {
+    const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'));
+    return peerId;
+};
+let seq = 0n;
+const defaultPeer = uint8ArrayFromString('12D3KooWBsYhazxNL7aeisdwttzc6DejNaM48889t5ifiS6tTrBf', 'base58btc');
+export function makeTestMessage(i, topic, from) {
+    return {
+        seqno: uint8ArrayFromString((seq++).toString(16).padStart(16, '0'), 'base16'),
+        data: Uint8Array.from([i]),
+        from: from?.toMultihash().bytes ?? defaultPeer,
+        topic
+    };
+}
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/index.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/index.js.map
new file mode 100644
index 0000000..e1d182b
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../test/utils/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAA;AACrD,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAA;AACtD,OAAO,EAAE,UAAU,IAAI,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAK5E,cAAc,YAAY,CAAA;AAE1B,MAAM,CAAC,MAAM,YAAY,GAAG,KAAK,IAAqB,EAAE;IACtD,MAAM,MAAM,GAAG,oBAAoB,CAAC,MAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAA;IAErE,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAED,IAAI,GAAG,GAAG,EAAE,CAAA;AACZ,MAAM,WAAW,GAAG,oBAAoB,CAAC,sDAAsD,EAAE,WAAW,CAAC,CAAA;AAE7G,MAAM,UAAU,eAAe,CAAE,CAAS,EAAE,KAAe,EAAE,IAAa;IACxE,OAAO;QACL,KAAK,EAAE,oBAAoB,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC;QAC7E,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,KAAK,IAAI,WAAW;QAC9C,KAAK;KACN,CAAA;AACH,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/msgId.d.ts b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/msgId.d.ts
new file mode 100644
index 0000000..4f1d17c
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/msgId.d.ts
@@ -0,0 +1,5 @@
+import type { RPC } from '../../src/message/rpc.js';
+export declare const getMsgId: (msg: RPC.Message) => Uint8Array;
+export declare const getMsgIdStr: (msg: RPC.Message) => string;
+export declare const fastMsgIdFn: (msg: RPC.Message) => string;
+//# sourceMappingURL=msgId.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/msgId.d.ts.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/msgId.d.ts.map
new file mode 100644
index 0000000..08d2530
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/msgId.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"msgId.d.ts","sourceRoot":"","sources":["../../../test/utils/msgId.ts"],"names":[],"mappings":"AAGA,OAAO,KAAK,EAAE,GAAG,EAAE,MAAM,0BAA0B,CAAA;AAEnD,eAAO,MAAM,QAAQ,QAAS,IAAI,OAAO,KAAG,UAO3C,CAAA;AAED,eAAO,MAAM,WAAW,QAAS,IAAI,OAAO,KAAG,MAA0C,CAAA;AAEzF,eAAO,MAAM,WAAW,QAAS,IAAI,OAAO,KAAG,MAEe,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/msgId.js b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/msgId.js
new file mode 100644
index 0000000..9b2dac8
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/msgId.js
@@ -0,0 +1,16 @@
+import { digest } from '@chainsafe/as-sha256';
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';
+import { messageIdToString } from '../../src/utils/messageIdToString.js';
+export const getMsgId = (msg) => {
+    const from = msg.from != null ? msg.from : new Uint8Array(0);
+    const seqno = msg.seqno instanceof Uint8Array ? msg.seqno : uint8ArrayFromString(msg.seqno ?? '');
+    const result = new Uint8Array(from.length + seqno.length);
+    result.set(from, 0);
+    result.set(seqno, from.length);
+    return result;
+};
+export const getMsgIdStr = (msg) => messageIdToString(getMsgId(msg));
+export const fastMsgIdFn = (msg) => 
+// eslint-disable-next-line @typescript-eslint/ban-ts-comment
+msg.data != null ? messageIdToString(digest(msg.data)) : '0';
+//# sourceMappingURL=msgId.js.map
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/msgId.js.map b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/msgId.js.map
new file mode 100644
index 0000000..e59402f
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/test/utils/msgId.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"msgId.js","sourceRoot":"","sources":["../../../test/utils/msgId.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAA;AAC7C,OAAO,EAAE,UAAU,IAAI,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAC5E,OAAO,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAA;AAGxE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,GAAgB,EAAc,EAAE;IACvD,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;IAC5D,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,YAAY,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,CAAA;IACjG,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAA;IACzD,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;IACnB,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;IAC9B,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,GAAgB,EAAU,EAAE,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA;AAEzF,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,GAAgB,EAAU,EAAE;AACtD,6DAA6D;AAC7D,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAA"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/dist/tsconfig.tsbuildinfo b/node_modules/@chainsafe/libp2p-gossipsub/dist/tsconfig.tsbuildinfo
new file mode 100644
index 0000000..aca8b22
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/dist/tsconfig.tsbuildinfo
@@ -0,0 +1 @@
+{"program":{"fileNames":["../node_modules/typescript/lib/lib.es5.d.ts","../node_modules/typescript/lib/lib.es2015.d.ts","../node_modules/typescript/lib/lib.es2016.d.ts","../node_modules/typescript/lib/lib.es2017.d.ts","../node_modules/typescript/lib/lib.es2018.d.ts","../node_modules/typescript/lib/lib.es2019.d.ts","../node_modules/typescript/lib/lib.es2020.d.ts","../node_modules/typescript/lib/lib.es2021.d.ts","../node_modules/typescript/lib/lib.es2022.d.ts","../node_modules/typescript/lib/lib.es2023.d.ts","../node_modules/typescript/lib/lib.dom.d.ts","../node_modules/typescript/lib/lib.dom.iterable.d.ts","../node_modules/typescript/lib/lib.webworker.d.ts","../node_modules/typescript/lib/lib.es2015.core.d.ts","../node_modules/typescript/lib/lib.es2015.collection.d.ts","../node_modules/typescript/lib/lib.es2015.generator.d.ts","../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../node_modules/typescript/lib/lib.es2015.promise.d.ts","../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../node_modules/typescript/lib/lib.es2016.intl.d.ts","../node_modules/typescript/lib/lib.es2017.date.d.ts","../node_modules/typescript/lib/lib.es2017.object.d.ts","../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../node_modules/typescript/lib/lib.es2017.string.d.ts","../node_modules/typescript/lib/lib.es2017.intl.d.ts","../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../node_modules/typescript/lib/lib.es2018.intl.d.ts","../node_modules/typescript/lib/lib.es2018.promise.d.ts","../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../node_modules/typescript/lib/lib.es2019.array.d.ts","../node_modules/typescript/lib/lib.es2019.object.d.ts","../node_modules/typescript/lib/lib.es2019.string.d.ts","../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../node_modules/typescript/lib/lib.es2019.intl.d.ts","../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../node_modules/typescript/lib/lib.es2020.date.d.ts","../node_modules/typescript/lib/lib.es2020.promise.d.ts","../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../node_modules/typescript/lib/lib.es2020.string.d.ts","../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../node_modules/typescript/lib/lib.es2020.intl.d.ts","../node_modules/typescript/lib/lib.es2020.number.d.ts","../node_modules/typescript/lib/lib.es2021.promise.d.ts","../node_modules/typescript/lib/lib.es2021.string.d.ts","../node_modules/typescript/lib/lib.es2021.weakref.d.ts","../node_modules/typescript/lib/lib.es2021.intl.d.ts","../node_modules/typescript/lib/lib.es2022.array.d.ts","../node_modules/typescript/lib/lib.es2022.error.d.ts","../node_modules/typescript/lib/lib.es2022.intl.d.ts","../node_modules/typescript/lib/lib.es2022.object.d.ts","../node_modules/typescript/lib/lib.es2022.sharedmemory.d.ts","../node_modules/typescript/lib/lib.es2022.string.d.ts","../node_modules/typescript/lib/lib.es2022.regexp.d.ts","../node_modules/typescript/lib/lib.es2023.array.d.ts","../node_modules/typescript/lib/lib.es2023.collection.d.ts","../node_modules/typescript/lib/lib.esnext.intl.d.ts","../node_modules/typescript/lib/lib.decorators.d.ts","../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../src/config.ts","../src/constants.ts","../node_modules/multiformats/dist/src/bases/interface.d.ts","../node_modules/multiformats/dist/src/block/interface.d.ts","../node_modules/multiformats/dist/src/hashes/interface.d.ts","../node_modules/multiformats/dist/src/link/interface.d.ts","../node_modules/multiformats/dist/src/cid.d.ts","../node_modules/uint8arraylist/dist/src/index.d.ts","../node_modules/@libp2p/interface/dist/src/keys/index.d.ts","../node_modules/@libp2p/interface/dist/src/peer-id/index.d.ts","../node_modules/@multiformats/multiaddr/dist/src/protocols-table.d.ts","../node_modules/@multiformats/dns/dist/src/resolvers/dns-over-https.d.ts","../node_modules/@multiformats/dns/dist/src/resolvers/dns-json-over-https.d.ts","../node_modules/@multiformats/dns/dist/src/resolvers/index.d.ts","../node_modules/progress-events/dist/src/index.d.ts","../node_modules/@multiformats/dns/dist/src/index.d.ts","../node_modules/@multiformats/multiaddr/dist/src/resolvers/dnsaddr.d.ts","../node_modules/@multiformats/multiaddr/dist/src/resolvers/index.d.ts","../node_modules/@multiformats/multiaddr/dist/src/filter/multiaddr-filter.d.ts","../node_modules/@multiformats/multiaddr/dist/src/index.d.ts","../node_modules/it-stream-types/dist/src/index.d.ts","../node_modules/@libp2p/interface/dist/src/connection/index.d.ts","../node_modules/@libp2p/interface/dist/src/peer-info/index.d.ts","../node_modules/@libp2p/interface/dist/src/content-routing/index.d.ts","../node_modules/@libp2p/interface/dist/src/event-target.d.ts","../node_modules/@libp2p/interface/dist/src/metrics/index.d.ts","../node_modules/@libp2p/interface/dist/src/peer-routing/index.d.ts","../node_modules/@libp2p/interface/dist/src/peer-store/index.d.ts","../node_modules/@libp2p/interface/dist/src/startable.d.ts","../node_modules/@libp2p/interface/dist/src/stream-handler/index.d.ts","../node_modules/@libp2p/interface/dist/src/topology/index.d.ts","../node_modules/@libp2p/interface/dist/src/stream-muxer/index.d.ts","../node_modules/@libp2p/interface/dist/src/transport/index.d.ts","../node_modules/@libp2p/interface/dist/src/connection-encrypter/index.d.ts","../node_modules/@libp2p/interface/dist/src/connection-gater/index.d.ts","../node_modules/@libp2p/interface/dist/src/peer-discovery/index.d.ts","../node_modules/@libp2p/interface/dist/src/peer-store/tags.d.ts","../node_modules/it-pushable/dist/src/index.d.ts","../node_modules/@libp2p/interface/dist/src/pubsub/index.d.ts","../node_modules/@libp2p/interface/dist/src/record/index.d.ts","../node_modules/@libp2p/interface/dist/src/errors.d.ts","../node_modules/@types/node/assert.d.ts","../node_modules/@types/node/assert/strict.d.ts","../node_modules/buffer/index.d.ts","../node_modules/undici-types/header.d.ts","../node_modules/undici-types/readable.d.ts","../node_modules/undici-types/file.d.ts","../node_modules/undici-types/fetch.d.ts","../node_modules/undici-types/formdata.d.ts","../node_modules/undici-types/connector.d.ts","../node_modules/undici-types/client.d.ts","../node_modules/undici-types/errors.d.ts","../node_modules/undici-types/dispatcher.d.ts","../node_modules/undici-types/global-dispatcher.d.ts","../node_modules/undici-types/global-origin.d.ts","../node_modules/undici-types/pool-stats.d.ts","../node_modules/undici-types/pool.d.ts","../node_modules/undici-types/handlers.d.ts","../node_modules/undici-types/balanced-pool.d.ts","../node_modules/undici-types/agent.d.ts","../node_modules/undici-types/mock-interceptor.d.ts","../node_modules/undici-types/mock-agent.d.ts","../node_modules/undici-types/mock-client.d.ts","../node_modules/undici-types/mock-pool.d.ts","../node_modules/undici-types/mock-errors.d.ts","../node_modules/undici-types/proxy-agent.d.ts","../node_modules/undici-types/env-http-proxy-agent.d.ts","../node_modules/undici-types/retry-handler.d.ts","../node_modules/undici-types/retry-agent.d.ts","../node_modules/undici-types/api.d.ts","../node_modules/undici-types/interceptors.d.ts","../node_modules/undici-types/util.d.ts","../node_modules/undici-types/cookies.d.ts","../node_modules/undici-types/patch.d.ts","../node_modules/undici-types/websocket.d.ts","../node_modules/undici-types/eventsource.d.ts","../node_modules/undici-types/filereader.d.ts","../node_modules/undici-types/diagnostics-channel.d.ts","../node_modules/undici-types/content-type.d.ts","../node_modules/undici-types/cache.d.ts","../node_modules/undici-types/index.d.ts","../node_modules/@types/node/globals.d.ts","../node_modules/@types/node/async_hooks.d.ts","../node_modules/@types/node/buffer.d.ts","../node_modules/@types/node/child_process.d.ts","../node_modules/@types/node/cluster.d.ts","../node_modules/@types/node/console.d.ts","../node_modules/@types/node/constants.d.ts","../node_modules/@types/node/crypto.d.ts","../node_modules/@types/node/dgram.d.ts","../node_modules/@types/node/diagnostics_channel.d.ts","../node_modules/@types/node/dns.d.ts","../node_modules/@types/node/dns/promises.d.ts","../node_modules/@types/node/domain.d.ts","../node_modules/@types/node/dom-events.d.ts","../node_modules/@types/node/events.d.ts","../node_modules/@types/node/fs.d.ts","../node_modules/@types/node/fs/promises.d.ts","../node_modules/@types/node/http.d.ts","../node_modules/@types/node/http2.d.ts","../node_modules/@types/node/https.d.ts","../node_modules/@types/node/inspector.d.ts","../node_modules/@types/node/module.d.ts","../node_modules/@types/node/net.d.ts","../node_modules/@types/node/os.d.ts","../node_modules/@types/node/path.d.ts","../node_modules/@types/node/perf_hooks.d.ts","../node_modules/@types/node/process.d.ts","../node_modules/@types/node/punycode.d.ts","../node_modules/@types/node/querystring.d.ts","../node_modules/@types/node/readline.d.ts","../node_modules/@types/node/readline/promises.d.ts","../node_modules/@types/node/repl.d.ts","../node_modules/@types/node/sea.d.ts","../node_modules/@types/node/stream.d.ts","../node_modules/@types/node/stream/promises.d.ts","../node_modules/@types/node/stream/consumers.d.ts","../node_modules/@types/node/stream/web.d.ts","../node_modules/@types/node/string_decoder.d.ts","../node_modules/@types/node/test.d.ts","../node_modules/@types/node/timers.d.ts","../node_modules/@types/node/timers/promises.d.ts","../node_modules/@types/node/tls.d.ts","../node_modules/@types/node/trace_events.d.ts","../node_modules/@types/node/tty.d.ts","../node_modules/@types/node/url.d.ts","../node_modules/@types/node/util.d.ts","../node_modules/@types/node/v8.d.ts","../node_modules/@types/node/vm.d.ts","../node_modules/@types/node/wasi.d.ts","../node_modules/@types/node/worker_threads.d.ts","../node_modules/@types/node/zlib.d.ts","../node_modules/@types/node/globals.global.d.ts","../node_modules/@types/node/index.d.ts","../node_modules/@libp2p/interface/dist/src/events.d.ts","../node_modules/@libp2p/interface/dist/src/index.d.ts","../node_modules/@libp2p/peer-id/dist/src/index.d.ts","../node_modules/it-length-prefixed/dist/src/encode.d.ts","../node_modules/it-reader/dist/src/index.d.ts","../node_modules/it-length-prefixed/dist/src/decode.d.ts","../node_modules/it-length-prefixed/dist/src/index.d.ts","../node_modules/it-pipe/dist/src/index.d.ts","../node_modules/multiformats/dist/src/hashes/digest.d.ts","../src/message/decoderpc.ts","../node_modules/protons-runtime/dist/src/codec.d.ts","../node_modules/protons-runtime/dist/src/decode.d.ts","../node_modules/protons-runtime/dist/src/encode.d.ts","../node_modules/protons-runtime/dist/src/codecs/enum.d.ts","../node_modules/protons-runtime/dist/src/codecs/message.d.ts","../node_modules/protons-runtime/dist/src/utils/reader.d.ts","../node_modules/protons-runtime/dist/src/utils/writer.d.ts","../node_modules/protons-runtime/dist/src/index.d.ts","../src/message/rpc.ts","../src/types.ts","../src/message-cache.ts","../src/score/constants.ts","../src/score/peer-score-thresholds.ts","../src/metrics.ts","../src/score/peer-score-params.ts","../src/utils/set.ts","../src/score/peer-stats.ts","../src/score/compute-score.ts","../node_modules/denque/index.d.ts","../src/score/message-deliveries.ts","../src/score/peer-score.ts","../src/score/index.ts","../src/score/scoremetrics.ts","../src/stream.ts","../src/tracer.ts","../node_modules/@libp2p/crypto/dist/src/hmac/index.d.ts","../node_modules/multiformats/dist/src/bytes.d.ts","../node_modules/multiformats/dist/src/hashes/hasher.d.ts","../node_modules/multiformats/dist/src/varint.d.ts","../node_modules/multiformats/dist/src/codecs/interface.d.ts","../node_modules/multiformats/dist/src/interface.d.ts","../node_modules/multiformats/dist/src/index.d.ts","../node_modules/@libp2p/crypto/dist/src/keys/interface.d.ts","../node_modules/@libp2p/crypto/dist/src/keys/ecdh.d.ts","../node_modules/@libp2p/crypto/dist/src/keys/key-stretcher.d.ts","../node_modules/@libp2p/crypto/dist/src/keys/index.d.ts","../node_modules/@libp2p/crypto/dist/src/pbkdf2.d.ts","../node_modules/@libp2p/crypto/dist/src/random-bytes.d.ts","../node_modules/@libp2p/crypto/dist/src/index.d.ts","../node_modules/uint8arrays/dist/src/concat.d.ts","../node_modules/multiformats/dist/src/codecs/json.d.ts","../node_modules/multiformats/dist/src/codecs/raw.d.ts","../node_modules/multiformats/dist/src/bases/base.d.ts","../node_modules/multiformats/dist/src/basics.d.ts","../node_modules/uint8arrays/dist/src/util/bases.d.ts","../node_modules/uint8arrays/dist/src/from-string.d.ts","../node_modules/uint8arrays/dist/src/to-string.d.ts","../src/utils/buildrawmessage.ts","../src/utils/create-gossip-rpc.ts","../src/utils/shuffle.ts","../src/utils/messageidtostring.ts","../src/utils/publishconfig.ts","../src/utils/index.ts","../node_modules/@libp2p/pubsub/dist/src/utils.d.ts","../node_modules/multiformats/dist/src/hashes/sha2.d.ts","../src/utils/msgidfn.ts","../node_modules/@chainsafe/netmask/dist/src/util.d.ts","../node_modules/@chainsafe/netmask/dist/src/ip.d.ts","../node_modules/@chainsafe/netmask/dist/src/ipnet.d.ts","../node_modules/@chainsafe/netmask/dist/src/cidr.d.ts","../node_modules/@chainsafe/netmask/dist/src/index.d.ts","../node_modules/@multiformats/multiaddr/dist/src/convert.d.ts","../src/utils/multiaddr.ts","../src/utils/time-cache.ts","../node_modules/@libp2p/interface-internal/dist/src/address-manager/index.d.ts","../node_modules/@libp2p/peer-collections/dist/src/map.d.ts","../node_modules/@libp2p/peer-collections/dist/src/set.d.ts","../node_modules/@libp2p/peer-collections/dist/src/list.d.ts","../node_modules/@libp2p/peer-collections/dist/src/filter.d.ts","../node_modules/@libp2p/peer-collections/dist/src/tracked-map.d.ts","../node_modules/@libp2p/peer-collections/dist/src/tracked-set.d.ts","../node_modules/@libp2p/peer-collections/dist/src/tracked-list.d.ts","../node_modules/@libp2p/peer-collections/dist/src/index.d.ts","../node_modules/@libp2p/interface-internal/dist/src/connection-manager/index.d.ts","../node_modules/@libp2p/interface-internal/dist/src/random-walk/index.d.ts","../node_modules/@libp2p/interface-internal/dist/src/record/index.d.ts","../node_modules/@libp2p/interface-internal/dist/src/registrar/index.d.ts","../node_modules/@libp2p/interface-internal/dist/src/transport-manager/index.d.ts","../node_modules/@libp2p/interface-internal/dist/src/index.d.ts","../src/index.ts","../src/message/index.ts","../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/connection-gater.d.ts","../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/connection-manager.d.ts","../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/connection.d.ts","../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/multiaddr-connection.d.ts","../node_modules/@libp2p/logger/dist/src/index.d.ts","../node_modules/@libp2p/utils/dist/src/abstract-stream.d.ts","../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/muxer.d.ts","../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/registrar.d.ts","../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/upgrader.d.ts","../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/duplex.d.ts","../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/metrics.d.ts","../node_modules/@libp2p/interface-compliance-tests/dist/src/mocks/index.d.ts","../node_modules/@types/chai/index.d.ts","../node_modules/@types/chai-as-promised/index.d.ts","../node_modules/chai-parentheses/index.d.ts","../node_modules/@types/chai-subset/index.d.ts","../node_modules/chai-bites/index.d.ts","../node_modules/@types/chai-string/index.d.ts","../node_modules/aegir/dist/utils/chai.d.ts","../node_modules/p-defer/index.d.ts","../node_modules/p-timeout/index.d.ts","../node_modules/p-event/index.d.ts","../node_modules/p-wait-for/index.d.ts","../node_modules/interface-datastore/dist/src/key.d.ts","../node_modules/interface-datastore/node_modules/interface-store/dist/src/errors.d.ts","../node_modules/interface-datastore/node_modules/interface-store/dist/src/index.d.ts","../node_modules/interface-datastore/dist/src/index.d.ts","../node_modules/@libp2p/peer-store/dist/src/index.d.ts","../node_modules/datastore-core/dist/src/errors.d.ts","../node_modules/datastore-core/dist/src/shard.d.ts","../node_modules/interface-store/dist/src/index.d.ts","../node_modules/datastore-core/dist/src/base.d.ts","../node_modules/datastore-core/dist/src/memory.d.ts","../node_modules/datastore-core/dist/src/keytransform.d.ts","../node_modules/datastore-core/dist/src/sharding.d.ts","../node_modules/datastore-core/dist/src/mount.d.ts","../node_modules/datastore-core/dist/src/tiered.d.ts","../node_modules/datastore-core/dist/src/namespace.d.ts","../node_modules/datastore-core/dist/src/index.d.ts","../node_modules/@types/sinonjs__fake-timers/index.d.ts","../node_modules/@types/sinon/index.d.ts","../node_modules/ts-sinon/dist/index.d.ts","../test/utils/create-pubsub.ts","../test/2-nodes.spec.ts","../node_modules/@chainsafe/as-sha256/lib/hashobject.d.ts","../node_modules/@chainsafe/as-sha256/lib/wasm.d.ts","../node_modules/@chainsafe/as-sha256/lib/sha256.d.ts","../node_modules/@chainsafe/as-sha256/lib/index.d.ts","../test/utils/msgid.ts","../test/accept-from.spec.ts","../test/allowedtopics.spec.ts","../node_modules/@libp2p/interface-compliance-tests/dist/src/index.d.ts","../node_modules/@libp2p/interface-compliance-tests/dist/src/pubsub/index.d.ts","../test/compliance.spec.ts","../node_modules/eventemitter3/index.d.ts","../node_modules/p-queue/dist/queue.d.ts","../node_modules/p-queue/dist/options.d.ts","../node_modules/p-queue/dist/priority-queue.d.ts","../node_modules/p-queue/dist/index.d.ts","../node_modules/@libp2p/pubsub/dist/src/index.d.ts","../node_modules/@libp2p/floodsub/dist/src/cache.d.ts","../node_modules/@libp2p/floodsub/dist/src/config.d.ts","../node_modules/@libp2p/floodsub/dist/src/index.d.ts","../node_modules/delay/index.d.ts","../node_modules/@types/retry/index.d.ts","../node_modules/p-retry/index.d.ts","../test/floodsub.spec.ts","../test/gossip.spec.ts","../test/heartbeat.spec.ts","../test/mesh.spec.ts","../test/utils/index.ts","../test/message-cache.spec.ts","../test/peer-score-params.spec.ts","../test/peer-score-thresholds.spec.ts","../test/peer-score.spec.ts","../test/scoremetrics.spec.ts","../test/signature-policy.spec.ts","../test/time-cache.spec.ts","../test/tracer.spec.ts","../node_modules/@dapplion/benchmark/lib/utils/mochacliexports.d.ts","../node_modules/@dapplion/benchmark/lib/types.d.ts","../node_modules/@dapplion/benchmark/lib/mochaplugin/runbenchfn.d.ts","../node_modules/@dapplion/benchmark/lib/mochaplugin/index.d.ts","../node_modules/@dapplion/benchmark/lib/index.d.ts","../node_modules/abortable-iterator/dist/src/abort-error.d.ts","../node_modules/abortable-iterator/dist/src/index.d.ts","../node_modules/it-all/dist/src/index.d.ts","../test/benchmark/asynciterable.test.ts","../test/utils/events.ts","../test/benchmark/index.test.ts","../test/benchmark/protobuf.test.ts","../test/benchmark/time-cache.test.ts","../node_modules/uint8arrays/dist/src/equals.d.ts","../test/e2e/go-gossipsub.spec.ts","../test/unit/set.test.ts","../node_modules/keyv/src/index.d.ts","../node_modules/@types/http-cache-semantics/index.d.ts","../node_modules/@types/responselike/index.d.ts","../node_modules/@types/cacheable-request/index.d.ts","../node_modules/@types/ms/index.d.ts","../node_modules/@types/debug/index.d.ts","../node_modules/@types/dns-packet/index.d.ts","../node_modules/@types/istanbul-lib-coverage/index.d.ts","../node_modules/@types/json-schema/index.d.ts","../node_modules/@types/json5/index.d.ts","../node_modules/@types/keyv/index.d.ts","../node_modules/@types/linkify-it/build/index.cjs.d.ts","../node_modules/@types/linkify-it/index.d.ts","../node_modules/@types/mdurl/build/index.cjs.d.ts","../node_modules/@types/mdurl/index.d.ts","../node_modules/@types/markdown-it/dist/index.cjs.d.ts","../node_modules/@types/markdown-it/index.d.ts","../node_modules/@types/unist/index.d.ts","../node_modules/@types/mdast/index.d.ts","../node_modules/@types/minimatch/index.d.ts","../node_modules/@types/minimist/index.d.ts","../node_modules/@types/mocha/index.d.ts","../node_modules/@types/murmurhash3js-revisited/index.d.ts","../node_modules/@types/normalize-package-data/index.d.ts","../node_modules/@types/parse-json/index.d.ts","../node_modules/@types/semver/classes/semver.d.ts","../node_modules/@types/semver/functions/parse.d.ts","../node_modules/@types/semver/functions/valid.d.ts","../node_modules/@types/semver/functions/clean.d.ts","../node_modules/@types/semver/functions/inc.d.ts","../node_modules/@types/semver/functions/diff.d.ts","../node_modules/@types/semver/functions/major.d.ts","../node_modules/@types/semver/functions/minor.d.ts","../node_modules/@types/semver/functions/patch.d.ts","../node_modules/@types/semver/functions/prerelease.d.ts","../node_modules/@types/semver/functions/compare.d.ts","../node_modules/@types/semver/functions/rcompare.d.ts","../node_modules/@types/semver/functions/compare-loose.d.ts","../node_modules/@types/semver/functions/compare-build.d.ts","../node_modules/@types/semver/functions/sort.d.ts","../node_modules/@types/semver/functions/rsort.d.ts","../node_modules/@types/semver/functions/gt.d.ts","../node_modules/@types/semver/functions/lt.d.ts","../node_modules/@types/semver/functions/eq.d.ts","../node_modules/@types/semver/functions/neq.d.ts","../node_modules/@types/semver/functions/gte.d.ts","../node_modules/@types/semver/functions/lte.d.ts","../node_modules/@types/semver/functions/cmp.d.ts","../node_modules/@types/semver/functions/coerce.d.ts","../node_modules/@types/semver/classes/comparator.d.ts","../node_modules/@types/semver/classes/range.d.ts","../node_modules/@types/semver/functions/satisfies.d.ts","../node_modules/@types/semver/ranges/max-satisfying.d.ts","../node_modules/@types/semver/ranges/min-satisfying.d.ts","../node_modules/@types/semver/ranges/to-comparators.d.ts","../node_modules/@types/semver/ranges/min-version.d.ts","../node_modules/@types/semver/ranges/valid.d.ts","../node_modules/@types/semver/ranges/outside.d.ts","../node_modules/@types/semver/ranges/gtr.d.ts","../node_modules/@types/semver/ranges/ltr.d.ts","../node_modules/@types/semver/ranges/intersects.d.ts","../node_modules/@types/semver/ranges/simplify.d.ts","../node_modules/@types/semver/ranges/subset.d.ts","../node_modules/@types/semver/internals/identifiers.d.ts","../node_modules/@types/semver/index.d.ts","../node_modules/@types/sinon-chai/index.d.ts","../node_modules/@types/strip-bom/index.d.ts","../node_modules/@types/strip-json-comments/index.d.ts","../node_modules/@types/yargs-parser/index.d.ts","../node_modules/@types/yargs/index.d.ts","../node_modules/@types/yauzl/index.d.ts"],"fileInfos":[{"version":"824cb491a40f7e8fdeb56f1df5edf91b23f3e3ee6b4cde84d4a99be32338faee","affectsGlobalScope":true},"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","9a68c0c07ae2fa71b44384a839b7b8d81662a236d4b9ac30916718f7510b1b2d","5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","5514e54f17d6d74ecefedc73c504eadffdeda79c7ea205cf9febead32d45c4bc","1c0cdb8dc619bc549c3e5020643e7cf7ae7940058e8c7e5aefa5871b6d86f44b",{"version":"87d693a4920d794a73384b3c779cadcb8548ac6945aa7a925832fe2418c9527a","affectsGlobalScope":true},{"version":"76f838d5d49b65de83bc345c04aa54c62a3cfdb72a477dc0c0fce89a30596c30","affectsGlobalScope":true},{"version":"db88e2781075c7bca86634724f38a132de718ddf3a470a3a2cdb182f4364af9e","affectsGlobalScope":true},{"version":"138fb588d26538783b78d1e3b2c2cc12d55840b97bf5e08bca7f7a174fbe2f17","affectsGlobalScope":true},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true},{"version":"4443e68b35f3332f753eacc66a04ac1d2053b8b035a0e0ac1d455392b5e243b3","affectsGlobalScope":true},{"version":"bc47685641087c015972a3f072480889f0d6c65515f12bd85222f49a98952ed7","affectsGlobalScope":true},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true},{"version":"93495ff27b8746f55d19fcbcdbaccc99fd95f19d057aed1bd2c0cafe1335fbf0","affectsGlobalScope":true},{"version":"6fc23bb8c3965964be8c597310a2878b53a0306edb71d4b5a4dfe760186bcc01","affectsGlobalScope":true},{"version":"ea011c76963fb15ef1cdd7ce6a6808b46322c527de2077b6cfdf23ae6f5f9ec7","affectsGlobalScope":true},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true},{"version":"bb42a7797d996412ecdc5b2787720de477103a0b2e53058569069a0e2bae6c7e","affectsGlobalScope":true},{"version":"4738f2420687fd85629c9efb470793bb753709c2379e5f85bc1815d875ceadcd","affectsGlobalScope":true},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true},{"version":"9fc46429fbe091ac5ad2608c657201eb68b6f1b8341bd6d670047d32ed0a88fa","affectsGlobalScope":true},{"version":"61c37c1de663cf4171e1192466e52c7a382afa58da01b1dc75058f032ddf0839","affectsGlobalScope":true},{"version":"b541a838a13f9234aba650a825393ffc2292dc0fc87681a5d81ef0c96d281e7a","affectsGlobalScope":true},{"version":"b20fe0eca9a4e405f1a5ae24a2b3290b37cf7f21eba6cbe4fc3fab979237d4f3","affectsGlobalScope":true},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true},{"version":"49ed889be54031e1044af0ad2c603d627b8bda8b50c1a68435fe85583901d072","affectsGlobalScope":true},{"version":"e93d098658ce4f0c8a0779e6cab91d0259efb88a318137f686ad76f8410ca270","affectsGlobalScope":true},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true},{"version":"bf14a426dbbf1022d11bd08d6b8e709a2e9d246f0c6c1032f3b2edb9a902adbe","affectsGlobalScope":true},{"version":"5e07ed3809d48205d5b985642a59f2eba47c402374a7cf8006b686f79efadcbd","affectsGlobalScope":true},{"version":"2b72d528b2e2fe3c57889ca7baef5e13a56c957b946906d03767c642f386bbc3","affectsGlobalScope":true},{"version":"8073890e29d2f46fdbc19b8d6d2eb9ea58db9a2052f8640af20baff9afbc8640","affectsGlobalScope":true},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true},{"version":"51e547984877a62227042850456de71a5c45e7fe86b7c975c6e68896c86fa23b","affectsGlobalScope":true},{"version":"956d27abdea9652e8368ce029bb1e0b9174e9678a273529f426df4b3d90abd60","affectsGlobalScope":true},{"version":"4fa6ed14e98aa80b91f61b9805c653ee82af3502dc21c9da5268d3857772ca05","affectsGlobalScope":true},{"version":"e6633e05da3ff36e6da2ec170d0d03ccf33de50ca4dc6f5aeecb572cedd162fb","affectsGlobalScope":true},{"version":"d8670852241d4c6e03f2b89d67497a4bbefe29ecaa5a444e2c11a9b05e6fccc6","affectsGlobalScope":true},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true},{"version":"caccc56c72713969e1cfe5c3d44e5bab151544d9d2b373d7dbe5a1e4166652be","affectsGlobalScope":true},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true},{"version":"50d53ccd31f6667aff66e3d62adf948879a3a16f05d89882d1188084ee415bbc","affectsGlobalScope":true},{"version":"08a58483392df5fcc1db57d782e87734f77ae9eab42516028acbfe46f29a3ef7","affectsGlobalScope":true},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true},{"version":"13f6e6380c78e15e140243dc4be2fa546c287c6d61f4729bc2dd7cf449605471","affectsGlobalScope":true},{"version":"33358442698bb565130f52ba79bfd3d4d484ac85fe33f3cb1759c54d18201393","affectsGlobalScope":true},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true},{"version":"8dd05b63a186702e76716cb824a892741fe274c82ec741669f6704e336b31bec","signature":"87c73268165bf20f01c101ac785e8a9d1d95ff203d05d3548a6c49952597e321"},{"version":"11f59b2fe369086ae532118462306d4d8622d2ceada716e834adfa26b456f914","signature":"ea438e982614f14ddf033f957aec98c89f09d9979734eee158f1d74c1a555f70"},"4a3605bef1a5ef29fd5a1696dd95b0b4e2259e2d07a4d88fac79f3a9765c44a2","370079895f1acdd4bb5194a403c85bf60cfbb2654bced9430a6c7210e7246be8","90240231e730deed31569f6c686766a538e4a024bbc33ea1738fe924f477ba61","552223520e823223ee13c5764e9b69b1819c985818a8bcda435d8d1dbd909bee","49b7c3ddd683c09aa437dd92681699387441f522524b14d2331ce494a9bf2f27","d35b5db21a04a45ae6323c4d4b25acc983dfe2870fc670fd05249eb19d839a5e","637b97f727f21c07a73f09130dc7bf5ac94d04511b179b5eb3e9a4d85a16147a","fb69a046d9f55e2c182c07e793017518b002859497084c0f69f3ee74edd0c4b9","5212dd78d1d63ab33332c8846a0ea5ce248159e74033cde16de48373036b4704","954b3c04ee9f94ca1e262f3e5a6e833b0da0066514b3d4b97b92b7f0c85f8700","a2fc9ce1ae5bed7068d701d8aeebf13321de0f42c217dc2e10f1622dcaa53a7f","8e81f220cb935d551e88cff11541d5e89d3a3494a52fe6247e98016a9dbd4c2d","6b2576a04253626ba41b7dc7ec5977bec07f3b6952b16249d9fa8a3a0d79901c","9de17491f2bfbccea92500e174079d53bdedae34dbebe5d4a12a06ab09814710","e88481085a8576fa52efc913e631c1a833d16179486469b8538d8c4fab2f7381","aec68502c8f4ffaecb4440b37363473582fec0bfee4fb8668a87daa7f700f708","d71577e78c7a4257074aaf82f595724175210c89e8b467ef82f949a6cbd891bc","cf548af8b03cbbc79fdc4f357b5560f618c6d2f68c8688e6eb759c3c11d962c3","c84146dbc9d2e5f43d2cbf15485a4eabf90219dbb66c0d481f20f12d3851bffc","9dc5a1d8f09f9faf21207253a92b461190d59c81ee12c9ac612630e699749990","99c24f331c9f4e75a779b9a988e942442db3cf29923ceb820d3bdd4ed1edfef2","25b1f20d5868ef9ef18132f7dd76b40b7038688ff7c56c58930537a8dff9f231","4105fa0ecfaffb578c8051c3de22e8c984191aac8de14641ee99beed9c5e5bd9","9bba18dcac8cc9bdce65a4e34122d90474617cdf857feddeeba1e7a3638097d4","8c92080253bac0506d82b83d555a029582595f0944abb349954ea732322baa5c","45d4c8d63a67224af62bebff18da32bb2817e306c9fd9e5d1dac6ef8d2da7ead","230eb449f719119cab1728252f20ecdd36d7a20cef659e4a51ada1a232a8aaad","5f264ca312dfcbf23917febc8d7a73ef5be9c248af605939de1c7c4129aa65f2","c1c7b50665ce0b8aa4b95f3843167ac7ac25d1f724d77c2a07b597abb9cf394c","1bf687d978bdd6d5aff10b9eb0ff0695179f8594d4446946fd0182d6d25fa433","ec26029e3a4eccf8ee79d5c76093fbe928cedc83d813fca9be4f055d61530013","e0ff6a627dfbfb9d32e49f34879a763680e37758c509ddd809cb316b96f34390","2113d72680c7ddad6d3b6f70a29432a35c074c94ec6823a7c16ccd69847d965c","c8ffd61bf2db2e7bccb996dd70c9499805cb338f1b1c781987e38ba99dd5b296","55e5a976b594dc02f054860fb59a5299872a5b3c8c90e96733a5c9c9d4ed1fb8","fac83d4c6898d5bf90c508cc84409ded40fdc14611cf42d7fb750fb2c7847979","1668310e691181966c371fce881c88cb1c2e65ac832ef5470434ad926998da2f","4f1eb6b9c2b666278e09019281953fc4ecadad3b2ba2781b2602445743eaaeca","cd4a19200e7e4b235f85c3a15176f84b68bca0a171e802df091553e679238621","2db0dd3aaa2ed285950273ce96ae8a450b45423aa9da2d10e194570f1233fa6b","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","4967529644e391115ca5592184d4b63980569adf60ee685f968fd59ab1557188","5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","4d2b0eb911816f66abe4970898f97a2cfc902bcd743cbfa5017fad79f7ef90d8","bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","e53a3c2a9f624d90f24bf4588aacd223e7bec1b9d0d479b68d2f4a9e6011147f","24b8685c62562f5d98615c5a0c1d05f297cf5065f15246edfe99e81ec4c0e011","93507c745e8f29090efb99399c3f77bec07db17acd75634249dc92f961573387","339dc5265ee5ed92e536a93a04c4ebbc2128f45eeec6ed29f379e0085283542c","4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107",{"version":"e7be367719c613d580d4b27fdf8fe64c9736f48217f4b322c0d63b2971460918","affectsGlobalScope":true},"3d77c73be94570813f8cadd1f05ebc3dc5e2e4fdefe4d340ca20cd018724ee36",{"version":"9d8f6e55f5a038f4dca0cacd6566f9b82c576eee35c694b89230e9dec1895a77","affectsGlobalScope":true},"62f1c00d3d246e0e3cf0224f91e122d560428ec1ccc36bb51d4574a84f1dbad0","53f0960fdcc53d097918adfd8861ffbe0db989c56ffc16c052197bf115da5ed6",{"version":"662163e5327f260b23ca0a1a1ad8a74078aabb587c904fcb5ef518986987eaff","affectsGlobalScope":true},"a40826e8476694e90da94aa008283a7de50d1dafd37beada623863f1901cb7fb",{"version":"f85c06e750743acf31f0cfd3be284a364d469761649e29547d0dd6be48875150","affectsGlobalScope":true},"b0c0d1d13be149f790a75b381b413490f98558649428bb916fd2d71a3f47a134","3c884d9d9ec454bdf0d5a0b8465bf8297d2caa4d853851d92cc417ac6f30b969","0364f8bb461d6e84252412d4e5590feda4eb582f77d47f7a024a7a9ff105dfdc","5433f7f77cd1fd53f45bd82445a4e437b2f6a72a32070e907530a4fea56c30c8","d0ca5d7df114035258a9d01165be309371fcccf0cccd9d57b1453204686d1ed0",{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true},{"version":"9a30b7fefd7f8abbca4828d481c61c18e40fe5ff107e113b1c1fcd2c8dcf2743","affectsGlobalScope":true},"173b6275a81ebdb283b180654890f46516c21199734fed01a773b1c168b8c45c","304f66274aa8119e8d65a49b1cff84cbf803def6afe1b2cc987386e9a9890e22","1b9adafe8a7fefaeaf9099a0e06f602903f6268438147b843a33a5233ac71745","98273274f2dbb79b0b2009b20f74eca4a7146a3447c912d580cd5d2d94a7ae30","c933f7ba4b201c98b14275fd11a14abb950178afd2074703250fe3654fc10cd2","dccdf1677e531e33f8ac961a68bc537418c9a414797c1ea7e91307501cdc3f5e",{"version":"ea455cc68871b049bcecd9f56d4cf27b852d6dafd5e3b54468ca87cc11604e4d","affectsGlobalScope":true},"8f5814f29dbaf8bacd1764aebdf1c8a6eb86381f6a188ddbac0fcbaab855ce52","a63d03de72adfb91777784015bd3b4125abd2f5ef867fc5a13920b5649e8f52b","d20e003f3d518a7c1f749dbe27c6ab5e3be7b3c905a48361b04a9557de4a6900",{"version":"452e8a437aa57fe832dece2a5d3ea8dd0ab1de03ca778d09798c56ece0a29e80","affectsGlobalScope":true},{"version":"a20f1e119615bf7632729fd89b6c0b5ffdc2df3b512d6304146294528e3ebe19","affectsGlobalScope":true},"575fb200043b11b464db8e42cc64379c5fd322b6d787638e005b5ee98a64486d","6de2f225d942562733e231a695534b30039bdf1875b377bb7255881f0df8ede8","56249fd3ef1f6b90888e606f4ea648c43978ef43a7263aafad64f8d83cd3b8aa","139ad1dc93a503da85b7a0d5f615bddbae61ad796bc68fedd049150db67a1e26","7b166975fdbd3b37afb64707b98bca88e46577bbc6c59871f9383a7df2daacd1","9eece5e586312581ccd106d4853e861aaaa1a39f8e3ea672b8c3847eedd12f6e","81505c54d7cad0009352eaa21bd923ab7cdee7ec3405357a54d9a5da033a2084","269929a24b2816343a178008ac9ae9248304d92a8ba8e233055e0ed6dbe6ef71","93452d394fdd1dc551ec62f5042366f011a00d342d36d50793b3529bfc9bd633","3c1f19c7abcda6b3a4cf9438a15c7307a080bd3b51dfd56b198d9f86baf19447","2ee1645e0df9d84467cfe1d67b0ad3003c2f387de55874d565094464ee6f2927",{"version":"a321f588d51d742955993766d2969ed19006110a080572bfd24054178a5be640","affectsGlobalScope":true},{"version":"9cf780e96b687e4bdfd1907ed26a688c18b89797490a00598fa8b8ab683335dd","affectsGlobalScope":true},"98e00f3613402504bc2a2c9a621800ab48e0a463d1eed062208a4ae98ad8f84c","9ae88ce9f73446c24b2d2452e993b676da1b31fca5ceb7276e7f36279f693ed1","e49d7625faff2a7842e4e7b9b197f972633fca685afcf6b4403400c97d087c36","b82c38abc53922b1b3670c3af6f333c21b735722a8f156e7d357a2da7c53a0a0",{"version":"b423f53647708043299ded4daa68d95c967a2ac30aa1437adc4442129d7d0a6c","affectsGlobalScope":true},{"version":"21fcdcb618236f0feaca7e511e2da10c19970f86e09c934cef2d45b340ad92b5","affectsGlobalScope":true},"4f0fc7b7f54422bd97cfaf558ddb4bca86893839367b746a8f86b60ac7619673","4cdd8b6b51599180a387cc7c1c50f49eca5ce06595d781638fd0216520d98246","d91a7d8b5655c42986f1bdfe2105c4408f472831c8f20cf11a8c3345b6b56c8c",{"version":"8704423bf338bff381ebc951ed819935d0252d90cd6de7dffe5b0a5debb65d07","affectsGlobalScope":true},"b33379077284c9e55d2410d814b71b15522c5f71f9e93e15a8c3c41d463b00f6",{"version":"ab9b9a36e5284fd8d3bf2f7d5fcbc60052f25f27e4d20954782099282c60d23e","affectsGlobalScope":true},"a42be67ed1ddaec743582f41fc219db96a1b69719fccac6d1464321178d610fc","c663a7e4ee2cb54d99cf095479a5bcf1dd18d762ffdfa038aa1b2d79b070b0d7","5463c98206a890ea7a759fbcc97b0c042ab1a740b3e24037f7fbf40bae70a3c5","5bccd6ffc11fed820a432ac819200e6af38f8c3625e6eae0cf0f07ca85856392","f30cfcfff28ee8f87563225b47239bb07b9b11edd09dda0ea6499b18cca1a30e","0edb8a97ead1fefd337458449050857e80740e31a3f76cffa656262f4e651a50","6d2d14bb016a70a5ee1afb1cc7718d4369fb645979c725454c688f791ac7218f","8d7622e53b676dfd20828ba435649c217a5d9dee9cdc3713ee808fa2140513da","56558ae167446acf230ea2cc072a835309a37ae63d286b484308afd8c504c2d6","8510595d2ca2660e6407be65d8bf95f0c53877dbb812e269cdd980fc34de5f78",{"version":"d9411d8047fa05102fa6a7ac24678d912d7fa8cf5f977543cc1c68b6879db77d","signature":"7ad3e0aaeb840047fa4711306188cac803514091f251b6baecb9b2aacf15b976"},"6d268309f0e15dd820b2df9806234166554cb4e2fe00d11737adcb4e5489f700","58cf96187feb10cc8ad3bb080871cd30888ef63bc5db131f11458850ef8f6245","9102986ff52326a2016e8cddc1cf3092f0808ac916dcc8dc2d2c7195cd181987","fa82b7b22d9df87323e31e9e2ad75911028f3e544647fd212424b3c4452fee3f","01f20dac9dc14f0d306e5d1215c5c1c3b4d1805905e60ae92fabac4031eae7da","9ceec2a882368c0160a8a3879aa0efce0fb985751fc23ff6191006030969cfa4","cad5d6451789234434c28dd2d6a8267b0d64c479b1ad267321faa31ba90d570b","d5197053be441d40f4d074185a40d461137c8fa8db9e00cceedf2d9ca6583157",{"version":"4b1cf17121265b05b91d5fc9ac0d65868fa3a6af314207a0e4fe9f5f4237836e","signature":"3cd33c37432c2de7bdd9f1d48b3ea4fd03afad4969cfc5ba88d81e6ed03f432c"},{"version":"bb3c6e08fd9ba9ecdff61464835611a6f4e3cfc481a93dbcca54955f1520b497","signature":"6db29cf7af1d68c8194d98f1c444cea3b30a2c65deda3428452efaa05717b81d"},{"version":"b372f7c0506cdd643db284d1236961d64af030b3620d5d24a37bd2838432294e","signature":"561ef05d7e369040c28800d878d7e6461af62e459460263e911d508f319c8d5d"},{"version":"99744299c6ed40a1e3cfcd196366e4637caa51d9e53f0d6ff2fd66b38bcc28d2","signature":"bfac3bc2fd0ea0309e070d9dd562c405792fbf921a2f6467dee37eb78888cfb6"},{"version":"17f0527913dd4534bcdabe77c0df3d60d4bd4369b42876eb7e051f698d182e67","signature":"a1b60bd2328318dcbec30bdf529dad31a13315ff2df60c8bd71630c58a575b06"},{"version":"13cfe6635f9c03a7e6cf8a2292bcb958a5472b61f8571b13d344223fa3b55341","signature":"a399dd9b73e4bbfbed2ad1c1259d707f5f147f40dc5e3eeb541bf0bf2da42b25"},{"version":"5de87c7f41b18c016a8a71fc368338bbebcdb08f48457c41f3d47e0454343c0e","signature":"8cc6a35806cd10d448b0f2ab01fe0b6194ca57fdaced2d71781b68e83c55bd88"},{"version":"8bcf62f57052931576536b09b50c9f1e777b0cbb87ccdc6afb1a53ec8517cca1","signature":"8f364fec0ef20506aa9cf00b5cd8b620c1c0389687b11a3a32b0b5d4716ad894"},{"version":"438a50f997e321d98f7f6b46407e2a46acc5de9550569ed2d82ad3245bf83548","signature":"5d11703e2c5d4dbe00bbe79f3bc864d178cf8d6ebccc2d1448ea29e93654f029"},{"version":"0b188566ea6bb7f4251794faba6d0534505f75e08af589c5ce2497a34435c56e","signature":"f4e82c91aac3b61f3ad04f11a44c5b79f724ff8a09281d0afa24a6624633ff25"},"ed849d616865076f44a41c87f27698f7cdf230290c44bafc71d7c2bc6919b202",{"version":"f27753c06cdb9072f8ff706d23c24bfabb0224e575debf10ea01b7c1efe1cf1c","signature":"7b8b9017156ef8bf3bbe42785fac8956e5c9869f4a494536d7f548a7c1c7d98a"},{"version":"1c8dbedbe10722901b2da628b22a26921b8d1b11bfaaa220117850263cabba6f","signature":"07c34d1f83dfc5746de4229e01f0cb4d388a9f128eab6beadb4ae1621ebb87c6"},{"version":"a8985c08f974af3ba240ad89d4a2e483678fdfa3ed0d2741a6e9ed67d57d12d4","signature":"763bb8df872cbb8783e29e19bd7a1dea0f88f7fd7398343af38be8509a65df82"},{"version":"a031e8f05e3d040582f30fdf02a2b92dcee98ec44adb1a974a27ea47b7f46561","signature":"1950f058bfb5c505c748f9282d279455393e01b4c8670e7cc550d4f05613f981"},{"version":"4aab28c4bd16b397705467cce237518b886147480bedf08416294ea503e2728e","signature":"372b3681eb9618821c0e0e10bcc775b838e45b51912b8998bc5ba035100dc9e5"},{"version":"2ea09bfb3c0bc2a8f2dde6bd453b616d03a4a0372e8de6ba41a163a5015cc97e","signature":"c286b410193495d067668bcdbd13ea3f3a39001edff02edee248babf2652e563"},"18e2ed308bb90cde2d3d2b4ed6de12abe41b6f73e321616176b7f258de3c2774","929fc31f7523aaa1d19735b77e637af06e58d76007648ec088ecfbec1521cbfe","a6eb23f2a83113ce0ab7203bfda2be0888720f8d694a20abaef83b9f62832061","363dca5004ac5a3d9c2bba12812b97a64461911762f0b8f9320a8856ec53bcad","1447d46bff9e7c5c77da14515a7456ea5e919ce6e28f5e6746edf99818e4be47","557b8c7481296f4b7ed362320f3bbb40bb87404edf880c81224f365a8d1e17f3","283ed3d075bf7d3e8793f63b2a52f475ed84d95b7b6351c5d5bcc6c49d4b845b","7a6f74294b8fb90f5e3832be21e25898dd81b2a1adc36dda6929813ba4135311","89a5d8e15c48814223e8c3abc5dfc9cabbe36bce09d665dde5091729955ad663","5d40e6a7071d0d1e6e558e17214ff786ecb3ea73e31b25a88c2cbe2435fa1252","3931f0e7d90c0c6b3b52d5010c6f7156adcfcbb54f2325774135d77640df36c0","60cbc38a9b402c14c388a7254781752b279017b3adeb94b840dcbf4872a6a410","3d2ec84143e6462a786b5d9ecf06f4f6f67a59a1f16c5a3a5e41721ba8478b7f","96b8f393e636547f0477e387138cd7ca9a7c556343b89f446cfc5672dee5e643","2e34b7e7c07624978db18b34c8a528928a7c24bc4b047add3e9d90bdc49e267f","ba3f6f0ee47f46cdce55620aec5726de80e92a930982634afe9918c114c38f0b","6f38045547cdfd54ec19abcd943cace72c775fde739c5e0e1d917cf3030c16b5","6544dab49004fecb69a4ef775e9ad2773a6148b1f9bfd9b75508e3afa11f5d35","bd4c741820ec3574b7ed3b782c8d78034d6e4631d11997e701e6b955b86a87c1","e2dd36a524ea5b13de1ed104ede9cea79696588175c1df1940d6a29113a4aee0","ac63a01fcac70315fc9b416e9a57e568b18032c7cfcaa314e1751f03ef71286f","a878d4c7237a7af50e96534295fcf723134d70cbb1e9bfd8365266b912aee6ec",{"version":"74d37a17c3cdb67e03ede296c123bb0a4590f64614b6a303c857a50c76fd1f48","signature":"d5dc186100e52b4b8f97c9d09c6462cf6fa359a7d62d2403ebd596e843f68271"},{"version":"d26ee30a8f7c1bfe0b9954618224c24412832c8a91add7aa80d6fdf2a0a7745a","signature":"387e1f9577d2a83aca689b6abf6e3e86abae87f578e8788635baeb675f13e1df"},{"version":"51cb9f385c5ae02d228005eaabded3a1e9b51ee78cbae0a4f172f6ff9c3c8fc0","signature":"2ad4a77b1a4c9215f0391871d4da4afc3f23b1a813147a13ca9b3ad8ff85bd85"},{"version":"579945f69bb73bdbc126af5b84d68012733084dfb2e81bf178338e4567c46838","signature":"f88e179eb581dd7c9e8da094cd3505e7708ec9f973854b5d3c60ecaf3ebaa6b9"},{"version":"a6219ab754d1c77302f2fc9fe3437aa0dff7ba7dc614e38691f9d47e838536cc","signature":"85d9b79d06f74b9da7c0572065e3e71f5184e88523049dc61f2f31e1570fbb5f"},{"version":"0d2671b56be9f27055595b2f52a2b5ea130dbab296e0963a63aadc8f7416a5b3","signature":"27d091afaec0fb41ee0186f689a2f4be48f898600ee063a296b04a8cfea8429e"},"cc9ac6b245413dc56348b6c588ef2371e5d2f2179c62f272880ac41d36fba11f","130e4655e30a6d7a8004566642e24bf3016b5e5a2e5dcd72c0a61b663f7df711",{"version":"612f4324198c98cc596d05dbd8e02c93e64c19bf81d74ed44e2e3bc26c7a3dc3","signature":"62aba97d8d0ff6caa48694bc249de47bb92ad690ea5357ce3d8e44c44d186607"},"603177107b8f7d1e5b993470f4cdec86b61d48a052c5c12e51e340b93531334e","3fff2e6159326d7dbb59c163736a0c522f1cbba6730dc01823a973452666fccd","6a445cf1acf23219aac91c5909f5c338b9408fb7ae6467a434f0e15eff913814","6aa9a466f775ad6d8d48a4d69eac063e4ed47365dfa7aec82a8b554b70938bb4","c1dba063181dfe84123cc9e8afdb0e5a20a0ec72300def7786447499b67a61ff","fba062292ee802cb4f5de98f6f7fe10727fa0f3b8b5dfc5bc0ccb8f77a33ca4d",{"version":"35aed20164f7e1e9c8fa0e0dbe6c4baaf2042459251caba0d532af216af8cd7e","signature":"d67e678d1a4372e83c689185fe828ca49262a16ecdc9f53f9d0b190b26fb0ecc"},{"version":"65be30c9d1273048c3a137fcd7f88bcc584a3ce4b09a11f2c88e470057fe5cc8","signature":"ec9395ba50d412a16586a6951264ce0fad2e77d5be49f9b0b7d8c500d3fb8078"},"af89ab13b40dd28cd91818fc6329914d2b9663591831f032ff0f0cb4a028d4a5","63007f1618ada5041fb3b47630b64a9987d268bf740dd72334c38b5d23f5239b","3395f90467d2bb9db039a5c22ed6659ca2ff6f0b4f7ee5f223b0f77288f54ea7","20df2907d398e369d49e8906d6e0f096c465501e9ceff9d61293bf0f4e9020f1","302aa8248dab7c689c103162e542224aa7f3b0db46e29d0fb468fac721cf1c41","ea0a3bb69845621165c21e80ebb0d2b28dad22cd9920564516ce8e927a828f79","6a81475a67505af60be3242841c65ce4bf6d0b624d8b3fada646ba459a3eaad8","6834dd6cc060648604278cdb920a9316fa916e9116134b17dfad90e42800ca47","19fba62f1aab90f0110738261ed8bc1da82c89433fc43265f14870d4380d10b8","fbb2df54f4778b4d691bbc7c0a6e1e241dfffaca19f443cc9f230f450458bf89","da98d8109f379be48d459a6821ebd7cc728af62557e1c44f864e04360686af93","ef6e6d838cc600162626a53167046484f38e9a4bab9454e72350bed76c497228","cfe60041768a999abb3287444372ffedc9589ba9ba449548226b17a6da46ce35","c8b50ecedc9ff1b0e83c96f0a334d022874199f7c2d00d182ca6672176b0ea9d","b66ede73039e8751e06e3cab843e5a4265c1124a3285c3d854092c37a966b1f5",{"version":"6495e1160ae7950f8d5743202dbe8b87b5bfa2a594fe6dee2b7579cc7f299517","signature":"5456ba18b24c4a9a77f123c3a794df7a9023f0e8f9a6666b5ed31a939734a7a6"},{"version":"bce6042b814db95d7da4bdf53cc3010ac7f09330d20509523450e33387d9132e","signature":"d324925dc9b0f2349ea9c38e8cd0fc151f5520a02a7a44b50d4becac60d827ea"},"1f63ac6272e4d2d43cb25552b4ed8a89ffc86244ea655f685e8e3685433c7b23","91351db4fac763d38a774a29f00ffcaf186a88ef7a8d487acb9e03577d5fc8bc","094be99dc9410d3cb517ba523ae031864c5e258a3904ed8058773672768c2c6c","fafe1e5b2114bc57a6da341cad2bb44298543caa3fd7680e6bb0f29215048aa2","841f7ca2af7f4d9cca1f9fa2288a4849fc9d49ca15b47336892efd06a14dd1d8","796eea44840b57d4c6741d119d767c5ea294fdf610151158fd0a2f236cf21367","309ab701fcc8aa7f3c9b53fe84cb5ef7cbd579888de19423c8fc54402be9e8d9","5ad6d882be6f8e602795bc0bd0fac7806b16ba7715be494fe0279e2c5e3e23c0","596ab45ef67fa8dae4996a2a61dc5055ae2b3dc5102cf3b43ee7965a7088943b","a3f9f52ce73700565c8d9ba2aa75823ab8fc8e7258a27ecb828cd4257b8f918d","5f4884638ab10b753ec0c7406916fc746bb99cc0044b9a4a67b2006b7e57e8af","4b5603a1ccca455500cfb39517d41ec011f31ba84bb6de44473344a237d89168",{"version":"6a9eb9c5d3f7474937973fe4b0a9e53025634c2e39118eda436d89f3e9df976f","affectsGlobalScope":true},{"version":"86e56d97b13ef0a58bc9c59aee782ae7d47d63802b5b32129ec5e5d62c20dbfa","affectsGlobalScope":true},{"version":"c1f79c6d85cd84518fd7349588b3c61bdc189f58e3866f925cbf4631c81e31f9","affectsGlobalScope":true},{"version":"54db406753da16e177f094aa66da79840f447de6d87ddd1543a80c9418c52545","affectsGlobalScope":true},{"version":"42f28f4cfca4a70bd89c1d55d76c7978275030b894f6793f36890265c11a83a4","affectsGlobalScope":true},{"version":"7cf1027da9599f056355b46bbea31dbf7f715f797dffb9cbb3402d4490c503e5","affectsGlobalScope":true},"96dbd0787b57ae02981d26d5f2441f0f8444fb46d7578c56527eab89cff13a7d","68f02ba57c531227ef5804dd57f2e940b10c544c96dadd3c0ef958ba4b6fdbc1","91764b36fe5e1c5d688f5f90eeea47703a059ab9a81bf80f7bbc9b04507b7bd3","115327b8e1f68c03004d841b83e332ed16b8f48af59ac00f38313887d7ec2920","adb5ad16c19ff8dbfa9daa3a7dc8e1b039c381a2b94383144a53368681ad8ca0","a1f708ddf34053065f8f53682123421af299cee37ae110a86ba07851adf940da","395e6fa1fc8f46f827a5f7d3b7dabc836627ae57e41338f93c221b88d4978f15","749effab6d7e72df8d126868c82b8166cdde84d48453e44f65cbad42ad900b06","11705a4aad6e2e724b82ffee6c4fa271d798f0fb68806ace4b1c425c266f8d98","d68afd5ea85e35c4c4e8995e55f10d6861439ea9dc2666293c0cf4124bf56f32","d626f2c25d5d6daddb082576771a8e7b591233a7893a1739513c44f35a3f7489","7c59943d77166c1aecd731af8683a7b5a0984e1bc0427fa35be504d77c41fdcd","89dd83418d3c93418929123f21a02434537b5c79ede3c0c6ab5a495d602db155","8b1b666fe96fd9e713f1279a3e446f16ee824f46ca0c2c075e4e89f0b1258e6c","6aecbb60c2216da24acb86490f7c6270a820fd85424c8a509e3d284aa47f7a56","d357e56d630bcd0f63cfc678e306702555b4f791c2d8e07f037de39171be4cd3","238f87de951ed064c7ec3e30a987f386d4821bacfc8c7548cdccf848b8b6035c","a93ae01c9ed49ba423599144ffa3cd520db83e53b32471865905a65113bb3e59","6088973936033e869d3616b63d25c15363862b491f46af77d40a5215ee8cc1a8","9a4b7c467be504c4500cf6e54b0a3b8afdfbe0ed2c1da640202f44a7cef721b2","6de78fade656d64b03de50a84597d74c76e3ff5436a7ad082d01ce1d74099bf8","7d2a0ba1297be385a89b5515b88cd31b4a1eeef5236f710166dc1b36b1741e1b","9d92b037978bb9525bc4b673ebddd443277542e010c0aef019c03a170ccdaa73","54384a11c0f6ca8d5d8bab90d4bdab2c722aa8676a716340eb08082a02ca9ad6",{"version":"9253f5aa9552bf74e567cf957c0d019e3175cfaf39806d1e237bb6ac1030de37","signature":"c690e95d11aff99412d1ca20b622b02cb1603b032162a09621d7b0279a42b68e"},{"version":"f9c64057681304a919f6f6e8c5c102682d5f83cdd88c3227b6848e6dc59b7b90","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"a62a02c433e6fee26404825310ad462433320ef2e9f80fa7b9156135fd975f8f","22f15ae5c80b3e795da92636aa03d8f981811d067d82bff01ca54093c0535ec0","b56d4bc83ec01834829979ad57de59b4947cd62f71b102ab0040b6960d5bdc81","a10213415bf98670b026b77a90c7933594f0b5c34bde5b74e80134fdf0331bba",{"version":"ebeb47324e6f4c9ce1e1aae7bee0383907e554b45dc5efd6cc02570e2f04dec4","signature":"b6d8db2aba9da17434e5b89238a83f61c4351117eb983386099cb2da471e3fc0"},{"version":"0229ccedabd55ed02687fb1c7f0754a4b3e492dd962abe84c693734a25d383d6","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"f57a831a821c73281c1a1ff6aea7a77979a935c38dd054b6bb0d17d5a88de16f","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"5bca2169d85cde638dc45542bb3674c42e5a0eea70ac2737cb48848a0c9e10b4","3319e44b7252ab86cf9e519b9bdf95ac5a2cacfb859fecf2fee171ce1c0a35b5",{"version":"bdb020c4b9eafeed0f0dab872b2dc231d048a024638f5ab8643427b04aca8a60","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"27679e96d1bd38c5938178aaf4abe8627493090b63d6bae2ce8436e6a87ebe4d","136f00f14878a614113b221f2797dd7f5a7fb2220f95cbbbc390a85675f991c0","b04de4c5a5e9e0cc6b6b3d99b0e046705d9226fc384cb89c73014b2be4a84417","af4eea486904e256eb4e3a79c21355b9b065298952e9f2a0a921e8d75168f4a7","1841e57d29c33dd1798d82ceca05b7a95430b7976f14dabd4bcf81f6d114f235","cd4ee8e901877e80dcb0d073d489cb18a512993164a531332b88279c0874664e","db4d7c9c5038c75e1df338d780a6c06c79589b5105f138dd29b62310aab749fe","b056f955c85dd0eb196ff290138eb4a83787c3f413505b9ae2676a602be7d40d","02f124f948535d4bbf50970ed38a8adb34c8c4289148fb0e6287eef4d86a0be5","27573b15894c6311146838fa3b45786bacc013a4bca6c84adc1b11a4e7c8a4c0","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","3725da27619321470183eb7dd61190b139e5bcc4cf9366d6d828906a76e31742",{"version":"ce087b0720c7ce0a245417efa7f1caa632389735cd8c08fbd91648e89289f5ed","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"9be82644fc4fc7001ada3237cc7039ecbd01de6f46d5eaef7f45dc3b332bf632","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"e37a60516fbd37a8e1b5754e0c4d83dcdebf8caa69af9e2f85128d2ad3a14671","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"badc99c99a2a4937bbc9c0b45d1fe87fdb76de541ecc4df06190c6b176576a26","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"57cc9477892b65bc1ac29fe692bf94b09e99a4aef71de4ad43deba65d517fd4e","signature":"e8e1588ea2f394850673db82c023d00334ee1adc8020f878dec1397f29599310"},{"version":"be6841ef527743e78855852946f910a72c13a7c958e3b23291623c3b473039e4","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"e9de90ec37c779c529f4ed850b6061e7614f656a3e9b28d58da922d25abc001f","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"28edc4982430b64f209794844087f5211a7a10e69b923f08b26496032901425a","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"fcc9bfbc389ea5ba817d368038a8d11f8c30f3e92ec89722503fbe088602ed17","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"b38fb980b2970ce5ee0961f36fc1caf8b021a9d93bdef7375936cbcc701f2afe","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"dc00f4ea8deeeeda44f2ada171bdb3e225a35d47d2995133bd6b0692d15fd965","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"2e5bc0aaa314127b7a9eb69781d884e83778aa1ab188c39fa44ca915848862d5","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"37abf966f15aea02fef48da8fb22a179f24cd0bbe365d44e1925d6496d722adb","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"4ef576c5a52f34423f6328a6834c6fc874c6683a0626c0f21d6b2209f460dffd","7b195dbf43d2194d18627fe3e190979b5bd2f0752001193260c89b01c36460e2","7350c835566c20d980134ad870a072daa93754c6b65d602a46f2bc2e2ae12165","ee9b614565fe2e96c3202c092ea4e4bc902f51d1508bf8015d8f2275686ab040","f6f278c43d4e70fe1abb2c826a0b1c1ea7c4f6ff50b272aacdda3b39c51f4d61","c4e851542f10b993f5eff6dc91f4ca474e570b7c4c4098ebc4bb3ec84528504e","e86f647e06504800fe4b635e5f4a208d9518a47d317e55735764d4261957f1a0","5ccc3c7f73ef48c223635cd4506f21133560de7abc4c09c623327bb1b54386dc",{"version":"68e64f59387b867ac2095c6703ae2b29cf9238182c0d2f6c819c137c7b7e477c","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"21af2545d0971da878ee5759ecfabcd607bb4c2c7e37f6e8bdf1e9afa7c2cb09","signature":"cef616486b509f32ffa4cfc089081383e016ce41b2be7c3feabcb93a0de727d6"},{"version":"13181ae8f64d6d1c1845f8e57a4e1e52dc72993bd3a439360ae135f45992377d","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"a47dab43c145ad4ac232acd1d87313adbf913f0457947fa82759f97318df54f5","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"b9369fb6d4997b2aa16b9e736c7816cc35a8d1f60dc9a09592bb5e9654597ca6","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"66336b5a5d5e897e932cbf1e306ff8ac8a9929971409a8049c8c8a249cd8b57c",{"version":"92cea114cd7f8323105dfed55e06ea98770ceae98facf77e1815c70cef032e50","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},{"version":"5b31a8edcc52ba5af5085fa8477f51fb723d0c2f71edb5e648ec24c1ba0a1f72","signature":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881"},"42baf4ca38c38deaf411ea73f37bc39ff56c6e5c761a968b64ac1b25c92b5cd8","d7dbe0ad36bdca8a6ecf143422a48e72cc8927bab7b23a1a2485c2f78a7022c6","8718fa41d7cf4aa91de4e8f164c90f88e0bf343aa92a1b9b725a9c675c64e16b","f992cd6cc0bcbaa4e6c810468c90f2d8595f8c6c3cf050c806397d3de8585562","68cc8d6fcc2f270d7108f02f3ebc59480a54615be3e09a47e14527f349e9d53e","3eb11dbf3489064a47a2e1cf9d261b1f100ef0b3b50ffca6c44dd99d6dd81ac1","bc222163edcb8df6ba9b506d053d6c5afcae50e85695151cf4636a3107deaba9","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","96d14f21b7652903852eef49379d04dbda28c16ed36468f8c9fa08f7c14c9538","fec943fdb3275eb6e006b35e04a8e2e99e9adf3f4b969ddf15315ac7575a93e4","742f21debb3937c3839a63245648238555bdab1ea095d43fd10c88a64029bf76","7cfdf3b9a5ba934a058bfc9390c074104dc7223b7e3c16fd5335206d789bc3d3","0944f27ebff4b20646b71e7e3faaaae50a6debd40bc63e225de1320dd15c5795","5d30565583300c9256072a013ac0318cc603ff769b4c5cafc222394ea93963e1","8a7219b41d3c1c93f3f3b779146f313efade2404eeece88dcd366df7e2364977","a109c4289d59d9019cfe1eeab506fe57817ee549499b02a83a7e9d3bdf662d63","89121c1bf2990f5219bfd802a3e7fc557de447c62058d6af68d6b6348d64499a","d4a22007b481fe2a2e6bfd3a42c00cd62d41edb36d30fc4697df2692e9891fc8","8841e2aa774b89bd23302dede20663306dc1b9902431ac64b24be8b8d0e3f649","fbca5ffaebf282ec3cdac47b0d1d4a138a8b0bb32105251a38acb235087d3318",{"version":"90ebf5865e27d8966ef44b073e6e83b0ddd45058bab1d58b1e4b5a47d36396c4","affectsGlobalScope":true},"cb482592bfcbdfcefa8d155590399e8bff66277e60e17bfada7c2f31322e7b87","22293bd6fa12747929f8dfca3ec1684a3fe08638aa18023dd286ab337e88a592","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","7d8ddf0f021c53099e34ee831a06c394d50371816caa98684812f089b4c6b3d4",{"version":"525b52b38b44420fb1758c0917e7b67cf379f7f9477d2ba7343f3d5f50a44258","affectsGlobalScope":true},"4006c872e38a2c4e09c593bc0cdd32b7b4f5c4843910bea0def631c483fff6c5","ab6aa3a65d473871ee093e3b7b71ed0f9c69e07d1d4295f45c9efd91a771241d","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","26a770cec4bd2e7dbba95c6e536390fffe83c6268b78974a93727903b515c4e7","74d5a87c3616cd5d8691059d531504403aa857e09cbaecb1c64dfb9ace0db185"],"root":[65,66,208,[217,226],[228,233],[256,261],264,271,272,288,289,332,333,[338,340],343,[356,368],[377,381],383,384],"options":{"allowJs":true,"checkJs":true,"composite":true,"declaration":true,"declarationMap":true,"emitDeclarationOnly":false,"esModuleInterop":true,"importsNotUsedAsValues":0,"module":7,"noEmitOnError":true,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"noUnusedLocals":true,"noUnusedParameters":false,"outDir":"./","removeComments":false,"skipLibCheck":true,"sourceMap":true,"strict":true,"stripInternal":true,"target":9,"useUnknownInCatchVariables":true},"fileIdsList":[[334,336],[335],[265,266,267,268],[372],[370,371],[370],[369],[234,244,245,246],[241],[200,240,242,243],[72,200,349,350,351],[200],[84,200,287],[72,85,200,287],[72,85],[290,291,292,293,296,297,298,299,300],[72,84,85,200],[102,200,295],[200,287],[200,287,341],[84],[79,84,200,281],[273,282,283,284,285,286],[72,200],[79,84,200],[72,74,85,86,200],[74,84,86],[72,74,84,85,200],[71,87,200],[160,198],[73,74,79,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,199],[69,71,72],[86],[87,89],[69,71,73],[74,84],[74,87,200],[73,74,84],[72,73,74,86,89,102],[72,73],[72,85,86,200],[74,86],[79,84,86,89,96,200],[274,275,276,277,278,279,280],[200,276],[200,274],[200,275],[69,71,200],[84,200,316],[72,200,281,287,348],[72,85,200,294],[78,79],[78],[76,77,80],[84,269],[75,80,82,83],[80,82,84],[81,84],[160,163,190,198,385,386,387],[302],[389],[198],[396],[397,399],[400],[402],[398],[106],[147],[148,153,182],[149,154,160,161,168,179,190],[149,150,160,168],[151,191],[152,153,161,169],[153,179,187],[154,156,160,168],[147,155],[156,157],[160],[158,160],[147,160],[160,161,162,179,190],[160,161,162,175,179,182],[145,148,195],[156,160,163,168,179,190],[160,161,163,164,168,179,187,190],[163,165,179,187,190],[106,107,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],[160,166],[167,190,195],[156,160,168,179],[169],[170],[147,171],[106,107,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],[173],[174],[160,175,176],[175,177,191,193],[148,160,179,180,181,182],[148,179,181],[179,180],[182],[183],[106,179],[160,185,186],[185,186],[153,168,179,187],[188],[168,189],[148,163,174,190],[153,191],[179,192],[167,193],[194],[148,153,160,162,171,179,190,193,195],[179,196],[163,179,198],[410,449],[410,434,449],[449],[410],[410,435,449],[410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],[435,449],[302,330],[329],[453],[160,179,198],[85,374],[302,303,304,305,306,307],[302,303],[316,320],[316,318,319,321,322,323,324,325,326,327],[316,320,321,328],[313,316,320,321],[316,320,321],[316,320,323],[316,328],[313,315],[255],[314],[72,85,203,205],[72,85,205],[72,202,204],[85],[67],[240,249,250,251],[70,71],[70],[68],[238],[69],[69,207],[236],[71,207,235,236,237,239],[67,68,69,70,238],[67,68,69],[310],[344,345,346,347],[345],[345,346],[354],[216],[209],[72,209],[209,210,211,212,213,214,215],[72,216],[330],[253],[240,252],[117,121,190],[117,179,190],[112],[114,117,187,190],[168,187],[112,198],[114,117,168,190],[109,110,113,116,148,160,179,190],[117,124],[109,115],[117,138,139],[113,117,148,182,190,198],[148,198],[138,148,198],[111,112,198],[117],[111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144],[117,132],[117,124,125],[115,117,125,126],[116],[109,112,117],[117,121,125,126],[121],[115,117,120,190],[109,114,117,124],[148,179],[112,117,138,148,195,198],[65,66,72,84,102,200,201,205,206,207,208,217,218,219,222,224,230,231,232,233,256,257,260,261,264,271,272,287],[217,218],[217],[200,217,218,221],[223,225],[221,223,229],[66,227],[200,220],[200,218,222,223,224,225,226,228],[218],[72,102,200,205,206],[218,222],[84,200,217],[200,201,207,217,218,244,247,248,254,255],[258,259,260],[200,262,263],[84,270],[200,218,244],[200,254,255,301,308,309,311,312,332],[200,201,244,287,288,294,308,330,331,338],[200,301,308,311,332],[206,373,375,376],[254,308,332,373,378],[153,217,373],[272,373],[200,288,294,317,328,342],[66,200,217,223,254,301,308,312,332,352,353,355,360,378,382],[200,254,301,308,311,332,352,353,355],[66,200,201,244,254,287,288,294,301,308,311,330,331,332],[66,200,301,308,311,332],[66,200,301,308,311,332,353],[217,218,219,254,259,262,308,360],[66,230,308],[230,308],[201,218,222,223,225,230,244,294,308,330,353,360],[201,222,230,231,244,294,308],[272,308,330],[66,201,233,244,259,308,353,360],[224,308],[160,200,201,244,287,288,294,301,317,328,331],[200,288,308,312,332],[200,201,217,218,244,254,338],[217,254,259,337],[313,320],[65,200,208,217,218,219,222,230,232,233,287],[227],[200,217,218],[200,218],[200,288],[200,288,332],[200,217,218,338]],"referencedMap":[[337,1],[336,2],[269,3],[373,4],[372,5],[371,6],[370,7],[247,8],[242,9],[244,10],[243,9],[352,11],[290,12],[291,13],[292,14],[299,15],[301,16],[300,12],[293,17],[296,18],[297,19],[298,19],[342,20],[273,21],[282,22],[287,23],[283,12],[284,24],[285,12],[286,25],[98,26],[99,27],[86,28],[88,29],[199,30],[200,31],[73,32],[90,33],[100,34],[74,35],[87,36],[91,37],[92,38],[103,39],[104,40],[94,33],[96,41],[95,42],[97,43],[294,12],[277,12],[281,44],[276,12],[274,12],[275,12],[280,45],[278,46],[279,47],[201,48],[317,49],[349,50],[262,12],[295,51],[80,52],[77,53],[76,53],[78,54],[270,55],[83,21],[84,56],[75,21],[81,57],[82,58],[388,59],[303,60],[307,60],[305,60],[390,61],[391,62],[395,30],[397,63],[400,64],[401,65],[403,66],[399,67],[106,68],[107,68],[147,69],[148,70],[149,71],[150,72],[151,73],[152,74],[153,75],[154,76],[155,77],[156,78],[157,78],[159,79],[158,80],[160,81],[161,82],[162,83],[146,84],[163,85],[164,86],[165,87],[198,88],[166,89],[167,90],[168,91],[169,92],[170,93],[171,94],[172,95],[173,96],[174,97],[175,98],[176,98],[177,99],[179,100],[181,101],[180,102],[182,103],[183,104],[184,105],[185,106],[186,107],[187,108],[188,109],[189,110],[190,111],[191,112],[192,113],[193,114],[194,115],[195,116],[196,117],[387,118],[434,119],[435,120],[410,121],[413,121],[432,119],[433,119],[423,119],[422,122],[420,119],[415,119],[428,119],[426,119],[430,119],[414,119],[427,119],[431,119],[416,119],[417,119],[429,119],[411,119],[418,119],[419,119],[421,119],[425,119],[436,123],[424,119],[412,119],[449,124],[443,123],[445,125],[444,123],[437,123],[438,123],[440,123],[442,123],[446,125],[447,125],[439,125],[441,125],[450,126],[330,127],[454,128],[455,129],[375,130],[308,131],[306,60],[304,132],[321,133],[328,134],[323,135],[322,136],[325,137],[327,138],[319,139],[324,135],[326,137],[316,140],[313,141],[315,142],[204,143],[202,144],[205,145],[206,146],[203,15],[385,79],[251,147],[252,148],[68,149],[71,150],[238,151],[249,152],[250,152],[207,153],[236,154],[263,155],[240,156],[239,157],[70,158],[311,159],[348,160],[346,161],[347,162],[355,163],[312,159],[209,164],[212,165],[213,165],[210,166],[211,165],[216,167],[214,168],[215,164],[331,169],[254,170],[255,170],[253,171],[124,172],[134,173],[123,172],[144,174],[115,175],[114,176],[143,62],[137,177],[142,178],[117,179],[131,180],[116,181],[140,182],[112,183],[111,184],[141,185],[113,186],[118,187],[122,187],[145,188],[135,189],[126,190],[127,191],[129,192],[125,193],[128,194],[138,62],[120,195],[121,196],[130,197],[110,198],[133,189],[132,187],[139,199],[288,200],[219,201],[289,202],[217,168],[222,203],[226,204],[230,205],[228,206],[223,207],[221,207],[229,208],[225,209],[231,204],[232,210],[233,211],[218,212],[256,213],[257,202],[261,214],[259,141],[264,215],[271,216],[260,217],[333,218],[339,219],[340,220],[377,221],[379,222],[380,223],[381,224],[343,225],[383,226],[356,227],[357,228],[358,229],[359,230],[361,231],[362,232],[363,233],[364,234],[365,235],[366,220],[367,236],[368,237],[384,238],[332,239],[378,240],[360,241],[338,242]],"exportedModulesMap":[[337,1],[336,2],[269,3],[373,4],[372,5],[371,6],[370,7],[247,8],[242,9],[244,10],[243,9],[352,11],[290,12],[291,13],[292,14],[299,15],[301,16],[300,12],[293,17],[296,18],[297,19],[298,19],[342,20],[273,21],[282,22],[287,23],[283,12],[284,24],[285,12],[286,25],[98,26],[99,27],[86,28],[88,29],[199,30],[200,31],[73,32],[90,33],[100,34],[74,35],[87,36],[91,37],[92,38],[103,39],[104,40],[94,33],[96,41],[95,42],[97,43],[294,12],[277,12],[281,44],[276,12],[274,12],[275,12],[280,45],[278,46],[279,47],[201,48],[317,49],[349,50],[262,12],[295,51],[80,52],[77,53],[76,53],[78,54],[270,55],[83,21],[84,56],[75,21],[81,57],[82,58],[388,59],[303,60],[307,60],[305,60],[390,61],[391,62],[395,30],[397,63],[400,64],[401,65],[403,66],[399,67],[106,68],[107,68],[147,69],[148,70],[149,71],[150,72],[151,73],[152,74],[153,75],[154,76],[155,77],[156,78],[157,78],[159,79],[158,80],[160,81],[161,82],[162,83],[146,84],[163,85],[164,86],[165,87],[198,88],[166,89],[167,90],[168,91],[169,92],[170,93],[171,94],[172,95],[173,96],[174,97],[175,98],[176,98],[177,99],[179,100],[181,101],[180,102],[182,103],[183,104],[184,105],[185,106],[186,107],[187,108],[188,109],[189,110],[190,111],[191,112],[192,113],[193,114],[194,115],[195,116],[196,117],[387,118],[434,119],[435,120],[410,121],[413,121],[432,119],[433,119],[423,119],[422,122],[420,119],[415,119],[428,119],[426,119],[430,119],[414,119],[427,119],[431,119],[416,119],[417,119],[429,119],[411,119],[418,119],[419,119],[421,119],[425,119],[436,123],[424,119],[412,119],[449,124],[443,123],[445,125],[444,123],[437,123],[438,123],[440,123],[442,123],[446,125],[447,125],[439,125],[441,125],[450,126],[330,127],[454,128],[455,129],[375,130],[308,131],[306,60],[304,132],[321,133],[328,134],[323,135],[322,136],[325,137],[327,138],[319,139],[324,135],[326,137],[316,243],[313,141],[315,142],[204,143],[202,144],[205,145],[206,146],[203,15],[385,79],[251,147],[252,148],[68,149],[71,150],[238,151],[249,152],[250,152],[207,153],[236,154],[263,155],[240,156],[239,157],[70,158],[311,159],[348,160],[346,161],[347,162],[355,163],[312,159],[209,164],[212,165],[213,165],[210,166],[211,165],[216,167],[214,168],[215,164],[331,169],[254,170],[255,170],[253,171],[124,172],[134,173],[123,172],[144,174],[115,175],[114,176],[143,62],[137,177],[142,178],[117,179],[131,180],[116,181],[140,182],[112,183],[111,184],[141,185],[113,186],[118,187],[122,187],[145,188],[135,189],[126,190],[127,191],[129,192],[125,193],[128,194],[138,62],[120,195],[121,196],[130,197],[110,198],[133,189],[132,187],[139,199],[288,244],[219,201],[289,202],[217,168],[222,203],[226,204],[230,205],[228,245],[229,208],[225,209],[231,204],[232,24],[233,211],[218,212],[256,246],[257,202],[261,214],[264,12],[271,21],[260,247],[332,248],[378,249],[360,250],[338,202]],"semanticDiagnosticsPerFile":[334,337,336,335,268,269,266,267,265,373,372,371,370,369,234,247,242,244,241,243,245,246,350,351,352,341,290,291,292,299,301,300,293,296,297,298,342,273,282,287,283,284,285,286,98,99,86,88,105,89,199,200,73,90,100,74,87,91,92,101,103,104,93,94,96,95,97,294,277,281,276,274,275,280,278,279,201,317,349,262,295,80,77,76,78,270,83,84,75,81,82,388,303,307,305,302,390,391,386,392,393,394,395,396,397,400,401,403,398,399,404,405,406,389,407,106,107,147,148,149,150,151,152,153,154,155,156,157,159,158,160,161,162,146,197,163,164,165,198,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,408,409,387,354,434,435,410,413,432,433,423,422,420,415,428,426,430,414,427,431,416,417,429,411,418,419,421,425,436,424,412,449,448,443,445,444,437,438,440,442,446,447,439,441,450,330,329,451,452,402,453,454,455,374,375,308,108,306,304,321,318,328,323,322,325,327,319,324,326,353,227,344,316,313,314,315,320,376,204,202,205,206,102,203,85,385,251,67,252,68,235,71,238,249,250,207,236,69,263,240,239,70,237,309,311,348,346,347,345,355,310,312,79,209,212,213,210,211,216,214,215,331,63,64,11,12,15,14,2,16,17,18,19,20,21,22,23,3,24,4,25,29,26,27,28,30,31,32,5,33,34,35,36,6,40,37,38,39,41,7,42,47,48,43,44,45,46,8,52,49,50,51,53,9,54,55,56,59,57,58,60,61,10,1,62,13,72,248,382,254,255,253,124,134,123,144,115,114,143,137,142,117,131,116,140,112,111,141,113,118,119,122,109,145,135,126,127,129,125,128,138,120,121,130,110,133,132,136,139,65,66,288,219,208,289,217,222,226,220,230,228,223,221,229,225,231,232,233,218,256,257,261,259,264,271,260,224,258,272,333,339,340,377,379,380,381,343,383,356,357,358,359,361,362,363,364,365,366,367,368,384,332,378,360,338],"latestChangedDtsFile":"./src/utils/publishConfig.d.ts"},"version":"5.4.5"}
\ No newline at end of file
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts b/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts
index 1f821e2..72227e6 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts
+++ b/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts
@@ -1,8 +1,9 @@
 import { TypedEventEmitter, StrictSign, StrictNoSign, TopicValidatorResult, serviceCapabilities, serviceDependencies } from '@libp2p/interface'
-import { peerIdFromBytes, peerIdFromString } from '@libp2p/peer-id'
+import { peerIdFromMultihash, peerIdFromString } from '@libp2p/peer-id'
 import { encode } from 'it-length-prefixed'
 import { pipe } from 'it-pipe'
 import { pushable } from 'it-pushable'
+import * as Digest from 'multiformats/hashes/digest'
 import * as constants from './constants.js'
 import {
   ACCEPT_FROM_WHITELIST_DURATION_MS,
@@ -73,7 +74,8 @@ import type {
   TopicValidatorFn,
   Logger,
   ComponentLogger,
-  Topology
+  Topology,
+  PrivateKey
 } from '@libp2p/interface'
 import type { ConnectionManager, IncomingStreamData, Registrar } from '@libp2p/interface-internal'
 import type { Multiaddr } from '@multiformats/multiaddr'
@@ -166,13 +168,13 @@ export interface GossipsubOpts extends GossipsubOptsSpec, PubSubInit {
   maxOutboundStreams?: number
 
   /**
-   * Pass true to run on transient connections - data or time-limited
+   * Pass true to run on limited connections - data or time-limited
    * connections that may be closed at any time such as circuit relay
    * connections.
    *
    * @default false
    */
-  runOnTransientConnection?: boolean
+  runOnLimitedConnection?: boolean
 
   /**
    * Specify max buffer size in bytes for OutboundStream.
@@ -259,6 +261,7 @@ interface AcceptFromWhitelistEntry {
 }
 
 export interface GossipSubComponents {
+  privateKey: PrivateKey
   peerId: PeerId
   peerStore: PeerStore
   registrar: Registrar
@@ -420,7 +423,7 @@ export class GossipSub extends TypedEventEmitter<GossipsubEvents> implements Pub
   private status: GossipStatus = { code: GossipStatusCode.stopped }
   private readonly maxInboundStreams?: number
   private readonly maxOutboundStreams?: number
-  private readonly runOnTransientConnection?: boolean
+  private readonly runOnLimitedConnection?: boolean
   private readonly allowedTopics: Set<TopicStr> | null
 
   private heartbeatTimer: {
@@ -554,7 +557,7 @@ export class GossipSub extends TypedEventEmitter<GossipsubEvents> implements Pub
 
     this.maxInboundStreams = options.maxInboundStreams
     this.maxOutboundStreams = options.maxOutboundStreams
-    this.runOnTransientConnection = options.runOnTransientConnection
+    this.runOnLimitedConnection = options.runOnLimitedConnection
 
     this.allowedTopics = (opts.allowedTopics != null) ? new Set(opts.allowedTopics) : null
   }
@@ -591,7 +594,7 @@ export class GossipSub extends TypedEventEmitter<GossipsubEvents> implements Pub
 
     this.log('starting')
 
-    this.publishConfig = await getPublishConfigFromPeerId(this.globalSignaturePolicy, this.components.peerId)
+    this.publishConfig = getPublishConfigFromPeerId(this.globalSignaturePolicy, this.components.peerId, this.components.privateKey)
 
     // Create the outbound inflight queue
     // This ensures that outbound stream creation happens sequentially
@@ -619,7 +622,7 @@ export class GossipSub extends TypedEventEmitter<GossipsubEvents> implements Pub
         registrar.handle(multicodec, this.onIncomingStream.bind(this), {
           maxInboundStreams: this.maxInboundStreams,
           maxOutboundStreams: this.maxOutboundStreams,
-          runOnTransientConnection: this.runOnTransientConnection
+          runOnLimitedConnection: this.runOnLimitedConnection
         })
       )
     )
@@ -646,7 +649,7 @@ export class GossipSub extends TypedEventEmitter<GossipsubEvents> implements Pub
     const topology: Topology = {
       onConnect: this.onPeerConnected.bind(this),
       onDisconnect: this.onPeerDisconnected.bind(this),
-      notifyOnTransient: this.runOnTransientConnection
+      notifyOnLimitedConnection: this.runOnLimitedConnection
     }
     const registrarTopologyIds = await Promise.all(
       this.multicodecs.map(async (multicodec) => registrar.register(multicodec, topology))
@@ -817,7 +820,7 @@ export class GossipSub extends TypedEventEmitter<GossipsubEvents> implements Pub
     try {
       const stream = new OutboundStream(
         await connection.newStream(this.multicodecs, {
-          runOnTransientConnection: this.runOnTransientConnection
+          runOnLimitedConnection: this.runOnLimitedConnection
         }),
         (e) => { this.log.error('outbound pipe error', e) },
         { maxBufferSize: this.opts.maxOutboundBufferSize }
@@ -1778,7 +1781,7 @@ export class GossipSub extends TypedEventEmitter<GossipsubEvents> implements Pub
           return
         }
 
-        const peer = peerIdFromBytes(pi.peerID)
+        const peer = peerIdFromMultihash(Digest.decode(pi.peerID))
         const p = peer.toString()
 
         if (this.peers.has(p)) {
@@ -2616,7 +2619,7 @@ export class GossipSub extends TypedEventEmitter<GossipsubEvents> implements Pub
         }
 
         return {
-          peerID: id.toBytes(),
+          peerID: id.toMultihash().bytes,
           signedPeerRecord: peerInfo?.peerRecordEnvelope
         }
       })
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/src/utils/buildRawMessage.ts b/node_modules/@chainsafe/libp2p-gossipsub/src/utils/buildRawMessage.ts
index 71b4007..3771dea 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/src/utils/buildRawMessage.ts
+++ b/node_modules/@chainsafe/libp2p-gossipsub/src/utils/buildRawMessage.ts
@@ -1,9 +1,9 @@
 import { randomBytes } from '@libp2p/crypto'
-import { marshalPublicKey, unmarshalPublicKey } from '@libp2p/crypto/keys'
+import { publicKeyFromProtobuf } from '@libp2p/crypto/keys'
 import { StrictSign, StrictNoSign, type Message, type PublicKey, type PeerId } from '@libp2p/interface'
-import { peerIdFromBytes } from '@libp2p/peer-id'
+import { peerIdFromMultihash } from '@libp2p/peer-id'
+import * as Digest from 'multiformats/hashes/digest'
 import { concat as uint8ArrayConcat } from 'uint8arrays/concat'
-import { equals as uint8ArrayEquals } from 'uint8arrays/equals'
 import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'
 import { toString as uint8ArrayToString } from 'uint8arrays/to-string'
 import { RPC } from '../message/rpc.js'
@@ -25,7 +25,7 @@ export async function buildRawMessage (
   switch (publishConfig.type) {
     case PublishConfigType.Signing: {
       const rpcMsg: RPC.Message = {
-        from: publishConfig.author.toBytes(),
+        from: publishConfig.author.toMultihash().bytes,
         data: transformedData,
         seqno: randomBytes(8),
         topic,
@@ -47,7 +47,7 @@ export async function buildRawMessage (
         sequenceNumber: BigInt(`0x${uint8ArrayToString(rpcMsg.seqno as Uint8Array, 'base16')}`),
         topic,
         signature: rpcMsg.signature,
-        key: rpcMsg.key
+        key: publicKeyFromProtobuf(rpcMsg.key)
       }
       return {
         raw: rpcMsg,
@@ -108,7 +108,7 @@ export async function validateToRawMessage (
       let fromPeerId: PeerId
       try {
         // TODO: Fix PeerId types
-        fromPeerId = peerIdFromBytes(msg.from)
+        fromPeerId = peerIdFromMultihash(Digest.decode(msg.from))
       } catch (e) {
         return { valid: false, error: ValidateError.InvalidPeerId }
       }
@@ -122,16 +122,16 @@ export async function validateToRawMessage (
 
       let publicKey: PublicKey
       if (msg.key != null) {
-        publicKey = unmarshalPublicKey(msg.key)
+        publicKey = publicKeyFromProtobuf(msg.key)
         // TODO: Should `fromPeerId.pubKey` be optional?
-        if (fromPeerId.publicKey !== undefined && !uint8ArrayEquals(publicKey.bytes, fromPeerId.publicKey)) {
+        if (fromPeerId.publicKey !== undefined && !publicKey.equals(fromPeerId.publicKey)) {
           return { valid: false, error: ValidateError.InvalidPeerId }
         }
       } else {
         if (fromPeerId.publicKey == null) {
           return { valid: false, error: ValidateError.InvalidPeerId }
         }
-        publicKey = unmarshalPublicKey(fromPeerId.publicKey)
+        publicKey = fromPeerId.publicKey
       }
 
       const rpcMsgPreSign: RPC.Message = {
@@ -160,7 +160,7 @@ export async function validateToRawMessage (
           sequenceNumber: BigInt(`0x${uint8ArrayToString(msg.seqno, 'base16')}`),
           topic: msg.topic,
           signature: msg.signature,
-          key: msg.key ?? marshalPublicKey(publicKey)
+          key: msg.key != null ? publicKeyFromProtobuf(msg.key) : publicKey
         }
       }
     }
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/src/utils/msgIdFn.ts b/node_modules/@chainsafe/libp2p-gossipsub/src/utils/msgIdFn.ts
index a36d40a..510378d 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/src/utils/msgIdFn.ts
+++ b/node_modules/@chainsafe/libp2p-gossipsub/src/utils/msgIdFn.ts
@@ -13,7 +13,7 @@ export function msgIdFnStrictSign (msg: Message): Uint8Array {
   if (msg.sequenceNumber == null) throw Error('missing seqno field')
 
   // TODO: Should use .from here or key?
-  return msgId(msg.from.toBytes(), msg.sequenceNumber)
+  return msgId(msg.from.publicKey ?? msg.key, msg.sequenceNumber)
 }
 
 /**
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/src/utils/publishConfig.ts b/node_modules/@chainsafe/libp2p-gossipsub/src/utils/publishConfig.ts
index 7d3acda..cec74c9 100644
--- a/node_modules/@chainsafe/libp2p-gossipsub/src/utils/publishConfig.ts
+++ b/node_modules/@chainsafe/libp2p-gossipsub/src/utils/publishConfig.ts
@@ -1,36 +1,22 @@
-import { unmarshalPrivateKey } from '@libp2p/crypto/keys'
+import { publicKeyToProtobuf } from '@libp2p/crypto/keys'
 import { StrictSign, StrictNoSign } from '@libp2p/interface'
 import { type PublishConfig, PublishConfigType } from '../types.js'
-import type { PeerId } from '@libp2p/interface'
+import type { PeerId, PrivateKey } from '@libp2p/interface'
 
 /**
  * Prepare a PublishConfig object from a PeerId.
  */
-export async function getPublishConfigFromPeerId (
+export function getPublishConfigFromPeerId (
   signaturePolicy: typeof StrictSign | typeof StrictNoSign,
-  peerId?: PeerId
-): Promise<PublishConfig> {
+  peerId: PeerId,
+  privateKey: PrivateKey
+): PublishConfig {
   switch (signaturePolicy) {
     case StrictSign: {
-      if (peerId == null) {
-        throw Error('Must provide PeerId')
-      }
-
-      if (peerId.privateKey == null) {
-        throw Error('Cannot sign message, no private key present')
-      }
-
-      if (peerId.publicKey == null) {
-        throw Error('Cannot sign message, no public key present')
-      }
-
-      // Transform privateKey once at initialization time instead of once per message
-      const privateKey = await unmarshalPrivateKey(peerId.privateKey)
-
       return {
         type: PublishConfigType.Signing,
         author: peerId,
-        key: peerId.publicKey,
+        key: publicKeyToProtobuf(privateKey.publicKey),
         privateKey
       }
     }
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/2-nodes.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/2-nodes.spec.ts
new file mode 100644
index 0000000..82a3d9d
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/2-nodes.spec.ts
@@ -0,0 +1,388 @@
+import { stop } from '@libp2p/interface'
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks'
+import { expect } from 'aegir/chai'
+import defer from 'p-defer'
+import { pEvent } from 'p-event'
+import pWaitFor from 'p-wait-for'
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'
+import { toString as uint8ArrayToString } from 'uint8arrays/to-string'
+import {
+  connectAllPubSubNodes,
+  connectPubsubNodes,
+  createComponentsArray,
+  type GossipSubAndComponents
+} from './utils/create-pubsub.js'
+import type { Message, SubscriptionChangeData } from '@libp2p/interface'
+
+const shouldNotHappen = (): never => expect.fail()
+
+async function nodesArePubSubPeers (node0: GossipSubAndComponents, node1: GossipSubAndComponents, timeout = 60000): Promise<void> {
+  await pWaitFor(
+    () => {
+      const node0SeesNode1 = node0.pubsub
+        .getPeers()
+        .map((p) => p.toString())
+        .includes(node1.components.peerId.toString())
+      const node1SeesNode0 = node1.pubsub
+        .getPeers()
+        .map((p) => p.toString())
+        .includes(node0.components.peerId.toString())
+      return node0SeesNode1 && node1SeesNode0
+    },
+    {
+      timeout
+    }
+  )
+}
+
+describe('2 nodes', () => {
+  describe('Pubsub dial', () => {
+    let nodes: GossipSubAndComponents[]
+
+    // Create pubsub nodes
+    beforeEach(async () => {
+      mockNetwork.reset()
+      nodes = await createComponentsArray({ number: 2 })
+    })
+
+    afterEach(async () => {
+      await stop(...nodes.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+      mockNetwork.reset()
+    })
+
+    it('Dial from nodeA to nodeB happened with FloodsubID', async () => {
+      await connectPubsubNodes(nodes[0], nodes[1])
+      await nodesArePubSubPeers(nodes[0], nodes[1])
+    })
+  })
+
+  describe('basics', () => {
+    let nodes: GossipSubAndComponents[]
+
+    // Create pubsub nodes
+    beforeEach(async () => {
+      mockNetwork.reset()
+      nodes = await createComponentsArray({ number: 2 })
+    })
+
+    afterEach(async () => {
+      await stop(...nodes.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+      mockNetwork.reset()
+    })
+
+    it('Dial from nodeA to nodeB happened with GossipsubIDv11', async () => {
+      await connectPubsubNodes(nodes[0], nodes[1])
+      await nodesArePubSubPeers(nodes[0], nodes[1])
+    })
+  })
+
+  describe('subscription functionality', () => {
+    let nodes: GossipSubAndComponents[]
+
+    // Create pubsub nodes
+    beforeEach(async () => {
+      mockNetwork.reset()
+      nodes = await createComponentsArray({
+        number: 2,
+        connected: true
+      })
+      await nodesArePubSubPeers(nodes[0], nodes[1])
+    })
+
+    afterEach(async () => {
+      await stop(...nodes.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+      mockNetwork.reset()
+    })
+
+    it('Subscribe to a topic', async () => {
+      const topic = 'test_topic'
+
+      nodes[0].pubsub.subscribe(topic)
+      nodes[1].pubsub.subscribe(topic)
+
+      // await subscription change
+      const [evt0] = await Promise.all([
+        pEvent<'subscription-change', CustomEvent<SubscriptionChangeData>>(nodes[0].pubsub, 'subscription-change'),
+        pEvent<'subscription-change', CustomEvent<SubscriptionChangeData>>(nodes[1].pubsub, 'subscription-change')
+      ])
+
+      const { peerId: changedPeerId, subscriptions: changedSubs } = evt0.detail
+
+      expect(nodes[0].pubsub.getTopics()).to.include(topic)
+      expect(nodes[1].pubsub.getTopics()).to.include(topic)
+      expect(nodes[0].pubsub.getSubscribers(topic).map((p) => p.toString())).to.include(
+        nodes[1].components.peerId.toString()
+      )
+      expect(nodes[1].pubsub.getSubscribers(topic).map((p) => p.toString())).to.include(
+        nodes[0].components.peerId.toString()
+      )
+
+      expect(changedPeerId.toString()).to.equal(nodes[1].components.peerId.toString())
+      expect(changedSubs).to.have.lengthOf(1)
+      expect(changedSubs[0].topic).to.equal(topic)
+      expect(changedSubs[0].subscribe).to.equal(true)
+
+      // await heartbeats
+      await Promise.all([
+        pEvent(nodes[0].pubsub, 'gossipsub:heartbeat'),
+        pEvent(nodes[1].pubsub, 'gossipsub:heartbeat')
+      ])
+
+      expect((nodes[0].pubsub).mesh.get(topic)?.has(nodes[1].components.peerId.toString())).to.be.true()
+      expect((nodes[1].pubsub).mesh.get(topic)?.has(nodes[0].components.peerId.toString())).to.be.true()
+    })
+  })
+
+  describe('publish functionality', () => {
+    const topic = 'Z'
+    let nodes: GossipSubAndComponents[]
+
+    // Create pubsub nodes
+    beforeEach(async () => {
+      mockNetwork.reset()
+      nodes = await createComponentsArray({
+        number: 2,
+        connected: true
+      })
+
+      // Create subscriptions
+      nodes[0].pubsub.subscribe(topic)
+      nodes[1].pubsub.subscribe(topic)
+
+      // await subscription change and heartbeat
+      await Promise.all([
+        pEvent(nodes[0].pubsub, 'subscription-change'),
+        pEvent(nodes[1].pubsub, 'subscription-change'),
+        pEvent(nodes[0].pubsub, 'gossipsub:heartbeat'),
+        pEvent(nodes[1].pubsub, 'gossipsub:heartbeat')
+      ])
+    })
+
+    afterEach(async () => {
+      await stop(...nodes.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+      mockNetwork.reset()
+    })
+
+    it('Publish to a topic - nodeA', async () => {
+      const promise = pEvent<'message', CustomEvent<Message>>(nodes[1].pubsub, 'message')
+      nodes[0].pubsub.addEventListener('message', shouldNotHappen)
+      const data = uint8ArrayFromString('hey')
+
+      await nodes[0].pubsub.publish(topic, data)
+
+      const evt = await promise
+
+      if (evt.detail.type !== 'signed') {
+        throw new Error('unexpected msg type')
+      }
+      expect(evt.detail.data).to.equalBytes(data)
+      expect(evt.detail.from.toString()).to.equal(nodes[0].components.peerId.toString())
+
+      nodes[0].pubsub.removeEventListener('message', shouldNotHappen)
+    })
+
+    it('Publish to a topic - nodeB', async () => {
+      const promise = pEvent<'message', CustomEvent<Message>>(nodes[0].pubsub, 'message')
+      nodes[1].pubsub.addEventListener('message', shouldNotHappen)
+      const data = uint8ArrayFromString('banana')
+
+      await nodes[1].pubsub.publish(topic, data)
+
+      const evt = await promise
+
+      if (evt.detail.type !== 'signed') {
+        throw new Error('unexpected msg type')
+      }
+      expect(evt.detail.data).to.equalBytes(data)
+      expect(evt.detail.from.toString()).to.equal(nodes[1].components.peerId.toString())
+
+      nodes[1].pubsub.removeEventListener('message', shouldNotHappen)
+    })
+
+    it('Publish 10 msg to a topic', async () => {
+      let counter = 0
+
+      nodes[1].pubsub.addEventListener('message', shouldNotHappen)
+      nodes[0].pubsub.addEventListener('message', receivedMsg)
+
+      const done = defer()
+
+      function receivedMsg (evt: CustomEvent<Message>): void {
+        const msg = evt.detail
+
+        expect(uint8ArrayToString(msg.data)).to.startWith('banana')
+
+        if (msg.type !== 'signed') {
+          throw new Error('unexpected msg type')
+        }
+        expect(msg.from.toString()).to.equal(nodes[1].components.peerId.toString())
+        expect(msg.sequenceNumber).to.be.a('BigInt')
+        expect(msg.topic).to.equal(topic)
+
+        if (++counter === 10) {
+          nodes[0].pubsub.removeEventListener('message', receivedMsg)
+          nodes[1].pubsub.removeEventListener('message', shouldNotHappen)
+          done.resolve()
+        }
+      }
+
+      await Promise.all(
+        Array.from({ length: 10 }).map(async (_, i) => {
+          await nodes[1].pubsub.publish(topic, uint8ArrayFromString(`banana${i}`))
+        })
+      )
+
+      await done.promise
+    })
+  })
+
+  describe('publish after unsubscribe', () => {
+    const topic = 'Z'
+    let nodes: GossipSubAndComponents[]
+
+    // Create pubsub nodes
+    beforeEach(async () => {
+      mockNetwork.reset()
+      nodes = await createComponentsArray({ number: 2, init: { allowPublishToZeroTopicPeers: true } })
+      await connectAllPubSubNodes(nodes)
+
+      // Create subscriptions
+      nodes[0].pubsub.subscribe(topic)
+      nodes[1].pubsub.subscribe(topic)
+
+      // await subscription change and heartbeat
+      await Promise.all([
+        pEvent(nodes[0].pubsub, 'subscription-change'),
+        pEvent(nodes[1].pubsub, 'subscription-change')
+      ])
+      await Promise.all([
+        pEvent(nodes[0].pubsub, 'gossipsub:heartbeat'),
+        pEvent(nodes[1].pubsub, 'gossipsub:heartbeat')
+      ])
+    })
+
+    afterEach(async () => {
+      await stop(...nodes.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+      mockNetwork.reset()
+    })
+
+    it('Unsubscribe from a topic', async () => {
+      nodes[0].pubsub.unsubscribe(topic)
+      expect(nodes[0].pubsub.getTopics()).to.be.empty()
+
+      const evt = await pEvent<'subscription-change', CustomEvent<SubscriptionChangeData>>(
+        nodes[1].pubsub,
+        'subscription-change'
+      )
+      const { peerId: changedPeerId, subscriptions: changedSubs } = evt.detail
+
+      await pEvent(nodes[1].pubsub, 'gossipsub:heartbeat')
+
+      expect(nodes[1].pubsub.getPeers()).to.have.lengthOf(1)
+      expect(nodes[1].pubsub.getSubscribers(topic)).to.be.empty()
+
+      expect(changedPeerId.toString()).to.equal(nodes[0].components.peerId.toString())
+      expect(changedSubs).to.have.lengthOf(1)
+      expect(changedSubs[0].topic).to.equal(topic)
+      expect(changedSubs[0].subscribe).to.equal(false)
+    })
+
+    it('Publish to a topic after unsubscribe', async () => {
+      const promises = [pEvent(nodes[1].pubsub, 'subscription-change'), pEvent(nodes[1].pubsub, 'gossipsub:heartbeat')]
+
+      nodes[0].pubsub.unsubscribe(topic)
+
+      await Promise.all(promises)
+
+      const promise = new Promise<void>((resolve, reject) => {
+        nodes[0].pubsub.addEventListener('message', reject)
+
+        setTimeout(() => {
+          nodes[0].pubsub.removeEventListener('message', reject)
+          resolve()
+        }, 100)
+      })
+
+      await nodes[1].pubsub.publish('Z', uint8ArrayFromString('banana'))
+      await nodes[0].pubsub.publish('Z', uint8ArrayFromString('banana'))
+
+      try {
+        await promise
+      } catch (e) {
+        expect.fail('message should not be received')
+      }
+    })
+  })
+
+  describe('nodes send state on connection', () => {
+    let nodes: GossipSubAndComponents[]
+
+    // Create pubsub nodes
+    beforeEach(async () => {
+      mockNetwork.reset()
+      nodes = await createComponentsArray({
+        number: 2
+      })
+
+      // Make subscriptions prior to new nodes
+      nodes[0].pubsub.subscribe('Za')
+      nodes[1].pubsub.subscribe('Zb')
+
+      expect(nodes[0].pubsub.getPeers()).to.be.empty()
+      expect(nodes[0].pubsub.getTopics()).to.include('Za')
+      expect(nodes[1].pubsub.getPeers()).to.be.empty()
+      expect(nodes[1].pubsub.getTopics()).to.include('Zb')
+    })
+
+    afterEach(async () => {
+      await stop(...nodes.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+      mockNetwork.reset()
+    })
+
+    it('existing subscriptions are sent upon peer connection', async function () {
+      this.timeout(5000)
+
+      await Promise.all([
+        connectPubsubNodes(nodes[0], nodes[1]),
+        pEvent(nodes[0].pubsub, 'subscription-change'),
+        pEvent(nodes[1].pubsub, 'subscription-change')
+      ])
+
+      expect(nodes[0].pubsub.getTopics()).to.include('Za')
+      expect(nodes[1].pubsub.getPeers()).to.have.lengthOf(1)
+      expect(nodes[1].pubsub.getSubscribers('Za').map((p) => p.toString())).to.include(
+        nodes[0].components.peerId.toString()
+      )
+
+      expect(nodes[1].pubsub.getTopics()).to.include('Zb')
+      expect(nodes[0].pubsub.getPeers()).to.have.lengthOf(1)
+      expect(nodes[0].pubsub.getSubscribers('Zb').map((p) => p.toString())).to.include(
+        nodes[1].components.peerId.toString()
+      )
+    })
+  })
+
+  describe('nodes handle stopping', () => {
+    let nodes: GossipSubAndComponents[]
+
+    // Create pubsub nodes
+    beforeEach(async () => {
+      mockNetwork.reset()
+      nodes = await createComponentsArray({
+        number: 2,
+        connected: true
+      })
+    })
+
+    afterEach(async () => {
+      await stop(...nodes.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+      mockNetwork.reset()
+    })
+
+    it("nodes don't have peers after stopped", async () => {
+      await stop(...nodes.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+      expect(nodes[0].pubsub.getPeers()).to.be.empty()
+      expect(nodes[1].pubsub.getPeers()).to.be.empty()
+    })
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/accept-from.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/accept-from.spec.ts
new file mode 100644
index 0000000..5f114fa
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/accept-from.spec.ts
@@ -0,0 +1,109 @@
+import { generateKeyPair } from '@libp2p/crypto/keys'
+import { type PeerStore } from '@libp2p/interface'
+import { defaultLogger } from '@libp2p/logger'
+import { peerIdFromPrivateKey } from '@libp2p/peer-id'
+import { expect } from 'aegir/chai'
+import sinon from 'sinon'
+import { stubInterface } from 'ts-sinon'
+import { GossipSub } from '../src/index.js'
+import { fastMsgIdFn } from './utils/msgId.js'
+import type { ConnectionManager, Registrar } from '@libp2p/interface-internal'
+
+const peerA = '16Uiu2HAmMkH6ZLen2tbhiuNCTZLLvrZaDgufNdT5MPjtC9Hr9YNA'
+
+describe('Gossipsub acceptFrom', () => {
+  let gossipsub: GossipSub
+  let sandbox: sinon.SinonSandbox
+  let scoreSpy: sinon.SinonSpy<[id: string], number>
+
+  beforeEach(async () => {
+    sandbox = sinon.createSandbox()
+    // not able to use fake timers or tests in browser are suspended
+    // sandbox.useFakeTimers(Date.now())
+
+    const privateKey = await generateKeyPair('Ed25519')
+    const peerId = peerIdFromPrivateKey(privateKey)
+    gossipsub = new GossipSub(
+      {
+        privateKey,
+        peerId,
+        registrar: stubInterface<Registrar>(),
+        peerStore: stubInterface<PeerStore>(),
+        connectionManager: stubInterface<ConnectionManager>(),
+        logger: defaultLogger()
+      },
+      { emitSelf: false, fastMsgIdFn }
+    )
+
+    // stubbing PeerScore causes some pending issue in firefox browser environment
+    // we can only spy it
+    // using scoreSpy.withArgs("peerA").calledOnce causes the pending issue in firefox
+    // while spy.getCall() is fine
+    scoreSpy = sandbox.spy(gossipsub.score, 'score')
+  })
+
+  afterEach(() => {
+    sandbox.restore()
+  })
+
+  it('should only white list peer with positive score', () => {
+    // by default the score is 0
+    gossipsub.acceptFrom(peerA)
+    // 1st time, we have to compute score
+    expect(scoreSpy.getCall(0).args[0]).to.be.equal(peerA)
+    expect(scoreSpy.getCall(0).returnValue).to.be.equal(0)
+    expect(scoreSpy.getCall(1)).to.not.be.ok()
+    // 2nd time, use a cached score since it's white listed
+    gossipsub.acceptFrom(peerA)
+    expect(scoreSpy.getCall(1)).to.not.be.ok()
+  })
+
+  it('should recompute score after 1s', async () => {
+    // by default the score is 0
+    gossipsub.acceptFrom(peerA)
+    // 1st time, we have to compute score
+    expect(scoreSpy.getCall(0).args[0]).to.be.equal(peerA)
+    expect(scoreSpy.getCall(1)).to.not.be.ok()
+    gossipsub.acceptFrom(peerA)
+    // score is cached
+    expect(scoreSpy.getCall(1)).to.not.be.ok()
+
+    // after 1s
+    await new Promise((resolve) => setTimeout(resolve, 1001))
+
+    gossipsub.acceptFrom(peerA)
+    expect(scoreSpy.getCall(1).args[0]).to.be.equal(peerA)
+    expect(scoreSpy.getCall(2)).to.not.be.ok()
+  })
+
+  it('should recompute score after max messages accepted', () => {
+    // by default the score is 0
+    gossipsub.acceptFrom(peerA)
+    // 1st time, we have to compute score
+    expect(scoreSpy.getCall(0).args[0]).to.be.equal(peerA)
+    expect(scoreSpy.getCall(1)).to.not.be.ok()
+
+    for (let i = 0; i < 128; i++) {
+      gossipsub.acceptFrom(peerA)
+    }
+    expect(scoreSpy.getCall(1)).to.not.be.ok()
+
+    // max messages reached
+    gossipsub.acceptFrom(peerA)
+    expect(scoreSpy.getCall(1).args[0]).to.be.equal(peerA)
+    expect(scoreSpy.getCall(2)).to.not.be.ok()
+  })
+
+  // TODO: run this in a unit test setup
+  // this causes the test to not finish in firefox environment
+  // it.skip('should NOT white list peer with negative score', () => {
+  //   // peerB is not white listed since score is negative
+  //   scoreStub.score.withArgs('peerB').returns(-1)
+  //   gossipsub["acceptFrom"]('peerB')
+  //   // 1st time, we have to compute score
+  //   expect(scoreStub.score.withArgs('peerB').calledOnce).to.be.true()
+  //   // 2nd time, still have to compute score since it's NOT white listed
+  //   gossipsub["acceptFrom"]('peerB')
+  //   expect(scoreStub.score.withArgs('peerB').calledTwice).to.be.true()
+  // })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/allowedTopics.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/allowedTopics.spec.ts
new file mode 100644
index 0000000..48d54f5
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/allowedTopics.spec.ts
@@ -0,0 +1,57 @@
+import { stop } from '@libp2p/interface'
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks'
+import { expect } from 'aegir/chai'
+import { pEvent } from 'p-event'
+import { connectAllPubSubNodes, createComponentsArray, type GossipSubAndComponents } from './utils/create-pubsub.js'
+
+/* eslint-disable dot-notation */
+describe('gossip / allowedTopics', () => {
+  let nodes: GossipSubAndComponents[]
+
+  const allowedTopic = 'topic_allowed'
+  const notAllowedTopic = 'topic_not_allowed'
+  const allowedTopics = [allowedTopic]
+  const allTopics = [allowedTopic, notAllowedTopic]
+
+  // Create pubsub nodes
+  beforeEach(async () => {
+    mockNetwork.reset()
+    nodes = await createComponentsArray({
+      number: 2,
+      connected: false,
+      init: {
+        allowedTopics
+      }
+    })
+  })
+
+  afterEach(async () => {
+    await stop(...nodes.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+    mockNetwork.reset()
+  })
+
+  it('should send gossip to non-mesh peers in topic', async function () {
+    this.timeout(10 * 1000)
+    const [nodeA, nodeB] = nodes
+
+    // add subscriptions to each node
+    for (const topic of allTopics) {
+      nodeA.pubsub.subscribe(topic)
+    }
+
+    // every node connected to every other
+    await Promise.all([
+      connectAllPubSubNodes(nodes),
+      // nodeA should send nodeB all its subscriptions on connection
+      pEvent(nodeB.pubsub, 'subscription-change')
+    ])
+
+    // eslint-disable-next-line @typescript-eslint/dot-notation
+    const nodeASubscriptions = Array.from((nodeA.pubsub)['subscriptions'].keys())
+    expect(nodeASubscriptions).deep.equals(allTopics, 'nodeA.subscriptions should be subcribed to all')
+
+    // eslint-disable-next-line @typescript-eslint/dot-notation
+    const nodeBTopics = Array.from((nodeB.pubsub)['topics'].keys())
+    expect(nodeBTopics).deep.equals(allowedTopics, 'nodeB.topics should only contain allowedTopics')
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/benchmark/asyncIterable.test.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/benchmark/asyncIterable.test.ts
new file mode 100644
index 0000000..a5cf2ff
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/benchmark/asyncIterable.test.ts
@@ -0,0 +1,113 @@
+import { itBench } from '@dapplion/benchmark'
+import { abortableSource } from 'abortable-iterator'
+import all from 'it-all'
+import { pipe } from 'it-pipe'
+
+/* eslint-disable generator-star-spacing */
+
+describe('abortableSource cost', function () {
+  const n = 10000
+  const bytes = new Uint8Array(200)
+  const controller = new AbortController()
+
+  async function* bytesSource (): AsyncGenerator<Uint8Array, void, unknown> {
+    let i = 0
+    while (i++ < n) {
+      yield bytes
+    }
+  }
+
+  for (let k = 0; k < 5; k++) {
+    itBench({
+      id: `async iterate abortable x${k} bytesSource ${n}`,
+      beforeEach: () => {
+        let source = bytesSource()
+        for (let i = 0; i < k; i++) {
+          source = abortableSource(source, controller.signal)
+        }
+        return source
+      },
+      fn: async (source) => {
+        for await (const chunk of source) {
+          // eslint-disable-next-line @typescript-eslint/no-unused-expressions
+          chunk
+        }
+      }
+    })
+  }
+})
+
+describe('pipe extra iterables cost', function () {
+  const n = 10000
+
+  async function* numberSource (): AsyncGenerator<number, void, unknown> {
+    let i = 0
+    while (i < n) {
+      yield i++
+    }
+  }
+
+  async function* numberTransform (source: AsyncIterable<number>): AsyncIterable<number> {
+    for await (const num of source) {
+      yield num + 1
+    }
+  }
+
+  itBench({
+    id: `async iterate pipe x0 transforms ${n}`,
+    fn: async () => {
+      await pipe(numberSource, all)
+    }
+  })
+
+  itBench({
+    id: `async iterate pipe x1 transforms ${n}`,
+    fn: async () => {
+      await pipe(numberSource, numberTransform, all)
+    }
+  })
+
+  itBench({
+    id: `async iterate pipe x2 transforms ${n}`,
+    fn: async () => {
+      await pipe(
+        numberSource,
+        numberTransform,
+        numberTransform,
+        all
+      )
+    }
+  })
+
+  itBench({
+    id: `async iterate pipe x4 transforms ${n}`,
+    fn: async () => {
+      await pipe(
+        numberSource,
+        numberTransform,
+        numberTransform,
+        numberTransform,
+        numberTransform,
+        all
+      )
+    }
+  })
+
+  itBench({
+    id: `async iterate pipe x8 transforms ${n}`,
+    fn: async () => {
+      await pipe(
+        numberSource,
+        numberTransform,
+        numberTransform,
+        numberTransform,
+        numberTransform,
+        numberTransform,
+        numberTransform,
+        numberTransform,
+        numberTransform,
+        all
+      )
+    }
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/benchmark/index.test.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/benchmark/index.test.ts
new file mode 100644
index 0000000..583e15e
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/benchmark/index.test.ts
@@ -0,0 +1,140 @@
+import { itBench } from '@dapplion/benchmark'
+import { expect } from 'aegir/chai'
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'
+import {
+  connectPubsubNodes,
+  createComponentsArray,
+  denseConnect,
+  type GossipSubAndComponents
+} from '../utils/create-pubsub.js'
+import { awaitEvents, checkReceivedSubscriptions, checkReceivedSubscription } from '../utils/events.js'
+
+describe('heartbeat', function () {
+  const topic = 'foobar'
+  const numTopic = 70
+  const numPeers = 50
+  const numPeersPerTopic = 30
+  let numLoop = 0
+
+  const getTopic = (i: number): string => {
+    return topic + String(i)
+  }
+
+  const getTopicPeerIndices = (topic: number): number[] => {
+    // peer 0 join all topics
+    const peers = [0]
+    // topic 0 starts from index 1
+    // topic 1 starts from index 2...
+    for (let i = 0; i < numPeersPerTopic - 1; i++) {
+      const peerIndex = (i + topic + 1) % numPeers
+      if (peerIndex !== 0) peers.push(peerIndex)
+    }
+    return peers
+  }
+
+  /**
+   * Star topology
+   * *       peer 1
+   * *      /
+   * peer 0  - peer 2
+   * *      \
+   * *       peer 3
+   *
+   * A topic contains peer 0 and some other peers, with numPeersPerTopic = 4
+   *
+   * |Topic|    Peers  |
+   * |-----|-----------|
+   * |  0  | 0, 1, 2, 3|
+   * |  1  | 0, 2, 3, 4|
+   */
+  itBench({
+    id: 'heartbeat',
+    before: async () => {
+      const psubs = await createComponentsArray({
+        number: numPeers,
+        init: {
+          scoreParams: {
+            IPColocationFactorWeight: 0
+          },
+          floodPublish: true,
+          // TODO: why we need to configure this low score
+          // probably we should tweak topic score params
+          // is that why we don't have mesh peers?
+          scoreThresholds: {
+            gossipThreshold: -10,
+            publishThreshold: -100,
+            graylistThreshold: -1000
+          }
+        }
+      })
+
+      // build the star
+      await Promise.all(psubs.slice(1).map(async (ps) => connectPubsubNodes(psubs[0], ps)))
+      await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+
+      await denseConnect(psubs)
+
+      // make sure psub 0 has `numPeers - 1` peers
+      expect(psubs[0].pubsub.getPeers().length).to.be.gte(
+        numPeers - 1,
+        `peer 0 should have at least ${numPeers - 1} peers`
+      )
+
+      const peerIds = psubs.map((psub) => psub.components.peerId.toString())
+      for (let topicIndex = 0; topicIndex < numTopic; topicIndex++) {
+        const topic = getTopic(topicIndex)
+        psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+        const peerIndices = getTopicPeerIndices(topicIndex)
+        const peerIdsOnTopic = peerIndices.map((peerIndex) => peerIds[peerIndex])
+        // peer 0 see all subscriptions from other
+        const subscription = checkReceivedSubscriptions(psubs[0], peerIdsOnTopic, topic)
+        // other peers should see the subsription from peer 0 to prevent PublishError.InsufficientPeers error
+        const otherSubscriptions = peerIndices
+          .slice(1)
+          .map((peerIndex) => psubs[peerIndex])
+          .map(async (psub) => checkReceivedSubscription(psub, peerIds[0], topic, 0))
+        peerIndices.forEach((peerIndex) => { psubs[peerIndex].pubsub.subscribe(topic) })
+        await Promise.all([subscription, ...otherSubscriptions])
+      }
+
+      // wait for heartbeats to build mesh
+      await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 3)))
+
+      // make sure psubs 0 have at least 10 topic peers and 4 mesh peers for each topic
+      for (let i = 0; i < numTopic; i++) {
+        expect((psubs[0].pubsub).getSubscribers(getTopic(i)).length).to.be.gte(
+          10,
+          `psub 0: topic ${i} does not have enough topic peers`
+        )
+
+        expect((psubs[0].pubsub).getMeshPeers(getTopic(i)).length).to.be.gte(
+          4,
+          `psub 0: topic ${i} does not have enough mesh peers`
+        )
+      }
+
+      return psubs
+    },
+    beforeEach: async (psubs) => {
+      numLoop++
+      const msg = `its not a flooooood ${numLoop}`
+      const promises = []
+      for (let topicIndex = 0; topicIndex < numTopic; topicIndex++) {
+        for (const peerIndex of getTopicPeerIndices(topicIndex)) {
+          promises.push(
+            psubs[peerIndex].pubsub.publish(
+              getTopic(topicIndex),
+              uint8ArrayFromString(psubs[peerIndex].components.peerId.toString() + msg)
+            )
+          )
+        }
+      }
+      await Promise.all(promises)
+
+      return psubs[0]
+    },
+    fn: async (firstPsub: GossipSubAndComponents) => {
+      return (firstPsub.pubsub).heartbeat()
+    }
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/benchmark/protobuf.test.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/benchmark/protobuf.test.ts
new file mode 100644
index 0000000..e94b369
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/benchmark/protobuf.test.ts
@@ -0,0 +1,53 @@
+import crypto from 'node:crypto'
+import { itBench } from '@dapplion/benchmark'
+import { RPC } from '../../src/message/rpc.js'
+
+describe('protobuf', function () {
+  const testCases: Array<{ name: string, length: number }> = [
+    // As of Oct 2023, Attestation length = 281
+    { name: 'Attestation', length: 300 },
+    // A SignedBeaconBlock could be from 70_000 to 300_000
+    { name: 'SignedBeaconBlock', length: 70_000 },
+    { name: 'SignedBeaconBlock', length: 140_000 },
+    { name: 'SignedBeaconBlock', length: 210_000 },
+    { name: 'SignedBeaconBlock', length: 280_000 }
+  ]
+
+  for (const { name, length } of testCases) {
+    const rpc: RPC = {
+      subscriptions: [],
+      messages: [
+        {
+          topic: 'topic1',
+          data: crypto.randomBytes(length),
+          signature: Uint8Array.from(Array.from({ length: 96 }, () => 100))
+        }
+      ],
+      control: undefined
+    }
+
+    const bytes = RPC.encode(rpc)
+
+    const runsFactor = 1000
+
+    itBench({
+      id: `decode ${name} message ${length} bytes`,
+      fn: () => {
+        for (let i = 0; i < runsFactor; i++) {
+          RPC.decode(bytes)
+        }
+      },
+      runsFactor
+    })
+
+    itBench({
+      id: `encode ${name} message ${length} bytes`,
+      fn: () => {
+        for (let i = 0; i < runsFactor; i++) {
+          RPC.encode(rpc)
+        }
+      },
+      runsFactor
+    })
+  }
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/benchmark/time-cache.test.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/benchmark/time-cache.test.ts
new file mode 100644
index 0000000..7d294ff
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/benchmark/time-cache.test.ts
@@ -0,0 +1,22 @@
+import { itBench } from '@dapplion/benchmark'
+// eslint-disable-next-line @typescript-eslint/ban-ts-comment
+// @ts-expect-error no types
+import TimeCache from 'time-cache'
+import { SimpleTimeCache } from '../../src/utils/time-cache.js'
+
+// TODO: errors with "Error: root suite not found"
+describe('npm TimeCache vs SimpleTimeCache', () => {
+  const iterations = [1_000_000, 4_000_000, 8_000_000, 16_000_000]
+  const timeCache = new TimeCache({ validity: 1 })
+  const simpleTimeCache = new SimpleTimeCache({ validityMs: 1000 })
+
+  for (const iteration of iterations) {
+    itBench(`npm TimeCache.put x${iteration}`, () => {
+      for (let j = 0; j < iteration; j++) timeCache.put(String(j))
+    })
+
+    itBench(`SimpleTimeCache.put x${iteration}`, () => {
+      for (let j = 0; j < iteration; j++) simpleTimeCache.put(String(j), true)
+    })
+  }
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/compliance.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/compliance.spec.ts
new file mode 100644
index 0000000..d5e364a
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/compliance.spec.ts
@@ -0,0 +1,43 @@
+import { TypedEventEmitter } from '@libp2p/interface'
+import tests from '@libp2p/interface-compliance-tests/pubsub'
+import { defaultLogger } from '@libp2p/logger'
+import { PersistentPeerStore } from '@libp2p/peer-store'
+import { MemoryDatastore } from 'datastore-core'
+import { GossipSub } from '../src/index.js'
+import type { Libp2pEvents } from '@libp2p/interface'
+
+describe.skip('interface compliance', function () {
+  this.timeout(3000)
+
+  tests({
+    async setup (args) {
+      if (args == null) {
+        throw new Error('PubSubOptions is required')
+      }
+
+      const pubsub = new GossipSub(
+        {
+          ...args.components,
+          peerStore: new PersistentPeerStore({
+            peerId: args.components.peerId,
+            datastore: new MemoryDatastore(),
+            events: new TypedEventEmitter<Libp2pEvents>(),
+            logger: defaultLogger()
+          })
+        },
+        {
+          ...args.init,
+          // libp2p-interfaces-compliance-tests in test 'can subscribe and unsubscribe correctly' publishes to no peers
+          // Disable check to allow passing tests
+          allowPublishToZeroTopicPeers: true
+        }
+      )
+
+      return pubsub
+    },
+
+    async teardown () {
+      //
+    }
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/e2e/go-gossipsub.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/e2e/go-gossipsub.spec.ts
new file mode 100644
index 0000000..ebb81e8
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/e2e/go-gossipsub.spec.ts
@@ -0,0 +1,1332 @@
+import { FloodSub } from '@libp2p/floodsub'
+import { type Message, TopicValidatorResult, type Libp2pEvents } from '@libp2p/interface'
+import { stop } from '@libp2p/interface'
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks'
+import { expect } from 'aegir/chai'
+import delay from 'delay'
+import pRetry from 'p-retry'
+import pWaitFor from 'p-wait-for'
+import { equals as uint8ArrayEquals } from 'uint8arrays/equals'
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'
+import { GossipsubD } from '../../src/constants.js'
+import {
+  sparseConnect,
+  denseConnect,
+  connectSome,
+  createComponentsArray,
+  createComponents,
+  connectPubsubNodes,
+  type GossipSubAndComponents
+} from '../utils/create-pubsub.js'
+import { awaitEvents, checkReceivedSubscription, checkReceivedSubscriptions } from '../utils/events.js'
+import { fastMsgIdFn } from '../utils/index.js'
+import type { RPC } from '../../src/message/rpc.js'
+import type { TopicScoreParams } from '../../src/score/peer-score-params.js'
+
+/**
+ * These tests were translated from:
+ * https://github.com/libp2p/go-libp2p-pubsub/blob/master/gossipsub_test.go
+ */
+
+/**
+ * Given a topic and data (and debug metadata -- sender index and msg index)
+ * Return a function (takes a gossipsub (and receiver index))
+ * that returns a Promise that awaits the message being received
+ * and checks that the received message equals the given message
+ */
+const checkReceivedMessage =
+  (topic: string, data: Uint8Array, senderIx: number, msgIx: number) =>
+    async (node: GossipSubAndComponents, receiverIx: number) =>
+      new Promise<void>((resolve, reject) => {
+        const t = setTimeout(() => {
+          node.pubsub.removeEventListener('message', cb)
+          reject(new Error(`Message never received, sender ${senderIx}, receiver ${receiverIx}, index ${msgIx}`))
+        }, 60000)
+        const cb = (evt: CustomEvent<Message>): void => {
+          const msg = evt.detail
+
+          if (msg.topic !== topic) {
+            return
+          }
+
+          if (uint8ArrayEquals(data, msg.data)) {
+            clearTimeout(t)
+            node.pubsub.removeEventListener('message', cb)
+            resolve()
+          }
+        }
+        node.pubsub.addEventListener('message', cb)
+      })
+
+describe('go-libp2p-pubsub gossipsub tests', function () {
+  // In Github runners it takes ~10sec the longest test
+  this.timeout(120 * 1000)
+  this.retries(3)
+
+  let psubs: GossipSubAndComponents[]
+
+  beforeEach(() => {
+    mockNetwork.reset()
+  })
+
+  afterEach(async () => {
+    await stop(...psubs.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+    mockNetwork.reset()
+  })
+
+  it('test sparse gossipsub', async function () {
+    // Create 20 gossipsub nodes
+    // Subscribe to the topic, all nodes
+    // Sparsely connect the nodes
+    // Publish 100 messages, each from a random node
+    // Assert that subscribed nodes receive the message
+    psubs = await createComponentsArray({
+      number: 20,
+      init: {
+        floodPublish: false,
+        batchPublish: true,
+        scoreParams: {
+          IPColocationFactorThreshold: 20,
+          behaviourPenaltyWeight: 0
+        }
+      }
+    })
+    const topic = 'foobar'
+    psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    await sparseConnect(psubs)
+
+    // wait for heartbeats to build mesh
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+
+    const sendRecv = []
+    for (let i = 0; i < 100; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+
+      const owner = Math.floor(Math.random() * psubs.length)
+      const results = Promise.all(
+        psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i))
+      )
+      sendRecv.push(psubs[owner].pubsub.publish(topic, msg))
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+  })
+
+  const batchOpts = [true, false]
+  for (const batchPublish of batchOpts) {
+    // eslint-disable-next-line no-loop-func
+    it(`test dense gossipsub batchPublish=${batchPublish}`, async function () {
+      // Create 20 gossipsub nodes
+      // Subscribe to the topic, all nodes
+      // Densely connect the nodes
+      // Publish 100 messages, each from a random node
+      // Assert that subscribed nodes receive the message
+      psubs = await createComponentsArray({
+        number: 20,
+        init: {
+          floodPublish: false,
+          batchPublish,
+          scoreParams: {
+            IPColocationFactorThreshold: 20,
+            behaviourPenaltyWeight: 0
+          }
+        }
+      })
+      const topic = 'foobar'
+      psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+      await denseConnect(psubs)
+
+      // wait for heartbeats to build mesh
+      await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+
+      const sendRecv = []
+      for (let i = 0; i < 100; i++) {
+        const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+        const owner = Math.floor(Math.random() * psubs.length)
+        const results = Promise.all(
+          psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i))
+        )
+        sendRecv.push(psubs[owner].pubsub.publish(topic, msg))
+        sendRecv.push(results)
+      }
+      await Promise.all(sendRecv)
+    })
+  }
+
+  it('test gossipsub fanout', async function () {
+    // Create 20 gossipsub nodes
+    // Subscribe to the topic, all nodes except the first
+    // Densely connect the nodes
+    // Publish 100 messages, each from the first node
+    // Assert that subscribed nodes receive the message
+    // Subscribe to the topic, first node
+    // Publish 100 messages, each from the first node
+    // Assert that subscribed nodes receive the message
+    psubs = await createComponentsArray({
+      number: 20,
+      init: {
+        floodPublish: false,
+        scoreParams: {
+          IPColocationFactorThreshold: 20,
+          behaviourPenaltyWeight: 0
+        }
+      }
+    })
+    const topic = 'foobar'
+    const promises = psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2))
+    psubs.slice(1).forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    await denseConnect(psubs)
+
+    // wait for heartbeats to build mesh
+    await Promise.all(promises)
+
+    let sendRecv = []
+    for (let i = 0; i < 100; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+
+      const owner = 0
+
+      const results = Promise.all(psubs.slice(1).map(checkReceivedMessage(topic, msg, owner, i)))
+      await psubs[owner].pubsub.publish(topic, msg)
+      await results
+    }
+    // await Promise.all(sendRecv)
+
+    psubs[0].pubsub.subscribe(topic)
+
+    // wait for a heartbeat
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 1)))
+
+    sendRecv = []
+    for (let i = 0; i < 100; i++) {
+      const msg = uint8ArrayFromString(`2nd - ${i} its not a flooooood ${i}`)
+
+      const owner = 0
+
+      const results = Promise.all(
+        psubs
+          .slice(1)
+          .filter((psub, j) => j !== owner)
+          .map(checkReceivedMessage(topic, msg, owner, i))
+      )
+      sendRecv.push(psubs[owner].pubsub.publish(topic, msg))
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+  })
+
+  it('test gossipsub fanout maintenance', async function () {
+    // Create 20 gossipsub nodes
+    // Subscribe to the topic, all nodes except the first
+    // Densely connect the nodes
+    // Publish 100 messages, each from the first node
+    // Assert that subscribed nodes receive the message
+    // Unsubscribe to the topic, all nodes except the first
+    // Resubscribe to the topic, all nodes except the first
+    // Publish 100 messages, each from the first node
+    // Assert that the subscribed nodes receive the message
+    psubs = await createComponentsArray({
+      number: 20,
+      init: {
+        floodPublish: false,
+        scoreParams: {
+          IPColocationFactorThreshold: 20,
+          behaviourPenaltyWeight: 0
+        }
+      }
+    })
+    const promises = psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2))
+    const topic = 'foobar'
+    psubs.slice(1).forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    await denseConnect(psubs)
+
+    // wait for heartbeats to build mesh
+    await Promise.all(promises)
+    let sendRecv: Array<Promise<unknown>> = []
+    const sendMessages = async (time: number): Promise<void> => {
+      for (let i = 0; i < 100; i++) {
+        const msg = uint8ArrayFromString(`${time} ${i} its not a flooooood ${i}`)
+
+        const owner = 0
+
+        const results = Promise.all(
+          psubs
+            .slice(1)
+            .filter((psub, j) => j !== owner)
+            .map(checkReceivedMessage(topic, msg, owner, i))
+        )
+        await psubs[owner].pubsub.publish(topic, msg)
+        sendRecv.push(results)
+      }
+    }
+    await sendMessages(1)
+    await Promise.all(sendRecv)
+
+    psubs.slice(1).forEach((ps) => { ps.pubsub.unsubscribe(topic) })
+
+    // wait for heartbeats
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+    psubs.slice(1).forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    // wait for heartbeats
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+    sendRecv = []
+    await sendMessages(2)
+    await Promise.all(sendRecv)
+  })
+
+  it('test gossipsub fanout expiry', async function () {
+    // Create 10 gossipsub nodes
+    // Subscribe to the topic, all nodes except the first
+    // Densely connect the nodes
+    // Publish 5 messages, each from the first node
+    // Assert that the subscribed nodes receive every message
+    // Assert that the first node has fanout peers
+    // Wait until fanout expiry
+    // Assert that the first node has no fanout
+    psubs = await createComponentsArray({
+      number: 10,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: 20,
+          behaviourPenaltyWeight: 0
+        },
+        floodPublish: false,
+        fanoutTTL: 1000
+      }
+    })
+    const promises = psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2))
+    const topic = 'foobar'
+    psubs.slice(1).forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    await denseConnect(psubs)
+
+    // wait for heartbeats to build mesh
+    await Promise.all(promises)
+
+    const sendRecv = []
+    for (let i = 0; i < 5; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+
+      const owner = 0
+
+      const results = Promise.all(
+        psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i))
+      )
+      await psubs[owner].pubsub.publish(topic, msg)
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+
+    expect((psubs[0].pubsub).fanout).to.not.be.empty()
+
+    await pWaitFor(async () => {
+      return (psubs[0].pubsub).fanout.size === 0
+    })
+  })
+
+  it('test gossipsub gossip', async function () {
+    // Create 20 gossipsub nodes
+    // Subscribe to the topic, all nodes
+    // Densely connect the nodes
+    // Publish 100 messages, each from a random node
+    // Assert that the subscribed nodes receive the message
+    // Wait a bit between each message so gossip can be interleaved
+    psubs = await createComponentsArray({
+      number: 20,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: 20,
+          behaviourPenaltyWeight: 0
+        }
+      }
+    })
+    const promises = psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2))
+    const topic = 'foobar'
+    psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    await denseConnect(psubs)
+
+    // wait for heartbeats to build mesh
+    await Promise.all(promises)
+
+    for (let i = 0; i < 100; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+      const owner = Math.floor(Math.random() * psubs.length)
+      const results = Promise.all(
+        psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i))
+      )
+      await psubs[owner].pubsub.publish(topic, msg)
+      await results
+      // wait a bit to have some gossip interleaved
+      await delay(100)
+    }
+    // and wait for some gossip flushing
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+  })
+
+  it('test gossipsub gossip propagation', async function () {
+    // Create 20 gossipsub nodes
+    // Split into two groups, just a single node shared between
+    // Densely connect each group to itself
+    // Subscribe to the topic, first group minus the shared node
+    // Publish 10 messages, each from the shared node
+    // Assert that the first group receives the messages
+    // Subscribe to the topic, second group minus the shared node
+    // Assert that the second group receives the messages (via gossip)
+    psubs = await createComponentsArray({
+      number: 20,
+      init: {
+        floodPublish: false,
+        scoreParams: {
+          IPColocationFactorThreshold: 20,
+          behaviourPenaltyWeight: 0
+        }
+      }
+    })
+    const topic = 'foobar'
+    const group1 = psubs.slice(0, GossipsubD + 1)
+    const group2 = psubs.slice(GossipsubD + 1)
+    group2.unshift(psubs[0])
+
+    await denseConnect(group1)
+    await denseConnect(group2)
+
+    group1.slice(1).forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    // wait for heartbeats to build mesh
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 3)))
+
+    const sendRecv: Array<Promise<unknown>> = []
+    for (let i = 0; i < 10; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+      const owner = 0
+      const results = Promise.all(group1.slice(1).map(checkReceivedMessage(topic, msg, owner, i)))
+      sendRecv.push(psubs[owner].pubsub.publish(topic, msg))
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+
+    await delay(100)
+
+    psubs.slice(GossipsubD + 1).forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    const received: Message[][] = Array.from({ length: psubs.length - (GossipsubD + 1) }, () => [])
+    const results = Promise.all(
+      group2.slice(1).map(
+        async (ps, ix) =>
+          new Promise<void>((resolve, reject) => {
+            const t = setTimeout(() => { reject(new Error('Timed out')) }, 10000)
+            ps.pubsub.addEventListener('message', (e: CustomEvent<Message>) => {
+              if (e.detail.topic !== topic) {
+                return
+              }
+
+              received[ix].push(e.detail)
+              if (received[ix].length >= 10) {
+                clearTimeout(t)
+                resolve()
+              }
+            })
+          })
+      )
+    )
+
+    await results
+  })
+
+  it('test gossipsub prune', async function () {
+    // Create 20 gossipsub nodes
+    // Subscribe to the topic, all nodes
+    // Densely connect nodes
+    // Unsubscribe to the topic, first 5 nodes
+    // Publish 100 messages, each from a random node
+    // Assert that the subscribed nodes receive every message
+    psubs = await createComponentsArray({
+      number: 20,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: 20
+        }
+      }
+    })
+    const topic = 'foobar'
+    psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    await denseConnect(psubs)
+
+    // wait for heartbeats to build mesh
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+
+    // disconnect some peers from the mesh to get some PRUNEs
+    psubs.slice(0, 5).forEach((ps) => { ps.pubsub.unsubscribe(topic) })
+
+    // wait a bit to take effect
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+
+    const sendRecv: Array<Promise<unknown>> = []
+    for (let i = 0; i < 100; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+      const owner = Math.floor(Math.random() * psubs.length)
+      const results = Promise.all(
+        psubs
+          .slice(5)
+          .filter((psub, j) => j + 5 !== owner)
+          .map(checkReceivedMessage(topic, msg, owner, i))
+      )
+      sendRecv.push(psubs[owner].pubsub.publish(topic, msg))
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+  })
+
+  it('test gossipsub graft', async function () {
+    // Create 20 gossipsub nodes
+    // Sparsely connect nodes
+    // Subscribe to the topic, all nodes, waiting for each subscription to propagate first
+    // Publish 100 messages, each from a random node
+    // Assert that the subscribed nodes receive every message
+    psubs = await createComponentsArray({
+      number: 20,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: 20,
+          behaviourPenaltyWeight: 0
+        }
+      }
+    })
+    const topic = 'foobar'
+
+    await sparseConnect(psubs)
+
+    for (const ps of psubs) {
+      ps.pubsub.subscribe(topic)
+      // wait for announce to propagate
+      await delay(100)
+    }
+
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+
+    const sendRecv = []
+    for (let i = 0; i < 100; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+      const owner = Math.floor(Math.random() * psubs.length)
+      const results = Promise.all(
+        psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i))
+      )
+      sendRecv.push(psubs[owner].pubsub.publish(topic, msg))
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+  })
+
+  it('test gossipsub remove peer', async function () {
+    // Create 20 gossipsub nodes
+    // Subscribe to the topic, all nodes
+    // Densely connect nodes
+    // Stop 5 nodes
+    // Publish 100 messages, each from a random still-started node
+    // Assert that the subscribed nodes receive every message
+    psubs = await createComponentsArray({
+      number: 20,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: 20
+        }
+      }
+    })
+    const topic = 'foobar'
+
+    await denseConnect(psubs)
+
+    psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    // wait for heartbeats to build mesh
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+
+    // disconnect some peers to exercise _removePeer paths
+    afterEach(async () => {
+      await stop(
+        ...psubs
+          .slice(0, 5)
+          .reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), [])
+      )
+    })
+
+    const sendRecv = []
+    for (let i = 0; i < 100; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+      const owner = Math.floor(Math.random() * (psubs.length - 5))
+      const results = Promise.all(
+        psubs
+          .slice(5)
+          .filter((psub, j) => j !== owner)
+          .map(checkReceivedMessage(topic, msg, owner, i))
+      )
+      sendRecv.push(psubs.slice(5)[owner].pubsub.publish(topic, msg))
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+  })
+
+  it('test gossipsub graft prune retry', async function () {
+    // Create 10 gossipsub nodes
+    // Densely connect nodes
+    // Subscribe to 35 topics, all nodes
+    // Publish a message from each topic, each from a random node
+    // Assert that the subscribed nodes receive every message
+    psubs = await createComponentsArray({
+      number: 10,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: 20
+        }
+      }
+    })
+    const topic = 'foobar'
+
+    await denseConnect(psubs)
+
+    for (let i = 0; i < 35; i++) {
+      psubs.forEach((ps) => { ps.pubsub.subscribe(`${topic}${i}`) })
+    }
+
+    // wait for heartbeats to build mesh
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 9)))
+
+    for (let i = 0; i < 35; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+      const owner = Math.floor(Math.random() * psubs.length)
+      const results = Promise.all(
+        psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(`${topic}${i}`, msg, owner, i))
+      )
+      await psubs[owner].pubsub.publish(`${topic}${i}`, msg)
+      await delay(20)
+      await results
+    }
+  })
+
+  it.skip('test gossipsub control piggyback', async function () {
+    // Create 10 gossipsub nodes
+    // Densely connect nodes
+    // Subscribe to a 'flood' topic, all nodes
+    // Publish 10k messages on the flood topic, each from a random node, in the background
+    // Subscribe to 5 topics, all nodes
+    // Wait for the flood to stop
+    // Publish a message to each topic, each from a random node
+    // Assert that subscribed nodes receive each message
+    // Publish a message from each topic, each from a random node
+    // Assert that the subscribed nodes receive every message
+    psubs = await createComponentsArray({
+      number: 10,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: 20,
+          behaviourPenaltyWeight: 0
+        }
+      }
+    })
+    const topic = 'foobar'
+
+    await denseConnect(psubs)
+
+    const floodTopic = 'flood'
+    psubs.forEach((ps) => { ps.pubsub.subscribe(floodTopic) })
+
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 1)))
+
+    // create a background flood of messages that overloads the queues
+    const floodOwner = Math.floor(Math.random() * psubs.length)
+    const floodMsg = uint8ArrayFromString('background flooooood')
+    const backgroundFlood = Promise.resolve().then(async () => {
+      for (let i = 0; i < 10000; i++) {
+        await psubs[floodOwner].pubsub.publish(floodTopic, floodMsg)
+      }
+    })
+
+    await delay(20)
+
+    // and subscribe to a bunch of topics in the meantime -- this should
+    // result in some dropped control messages, with subsequent piggybacking
+    // in the background flood
+    for (let i = 0; i < 5; i++) {
+      psubs.forEach((ps) => { ps.pubsub.subscribe(`${topic}${i}`) })
+    }
+
+    // wait for the flood to stop
+    await backgroundFlood
+
+    // and test that we have functional overlays
+    const sendRecv: Array<Promise<unknown>> = []
+    for (let i = 0; i < 5; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+      const owner = Math.floor(Math.random() * psubs.length)
+      const results = Promise.all(
+        psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(`${topic}${i}`, msg, owner, i))
+      )
+      await psubs[owner].pubsub.publish(`${topic}${i}`, msg)
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+  })
+
+  it('test mixed gossipsub', async function () {
+    // Create 20 gossipsub nodes
+    // Create 10 floodsub nodes
+    // Subscribe to the topic, all nodes
+    // Sparsely connect nodes
+    // Publish 100 messages, each from a random node
+    // Assert that the subscribed nodes receive every message
+    const gsubs: GossipSubAndComponents[] = await createComponentsArray({
+      number: 20,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: 20,
+          behaviourPenaltyWeight: 0
+        },
+        fastMsgIdFn
+      }
+    })
+    const fsubs = await createComponentsArray({
+      number: 10,
+      pubsub: FloodSub
+    })
+    psubs = gsubs.concat(fsubs)
+
+    const topic = 'foobar'
+    psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    await sparseConnect(psubs)
+
+    // wait for heartbeats to build mesh
+    await Promise.all(gsubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+
+    const sendRecv = []
+    for (let i = 0; i < 100; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+      const owner = Math.floor(Math.random() * psubs.length)
+      const results = Promise.all(
+        psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i))
+      )
+      sendRecv.push(psubs[owner].pubsub.publish(topic, msg))
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+  })
+
+  it('test gossipsub multihops', async function () {
+    // Create 6 gossipsub nodes
+    // Connect nodes in a line (eg: 0 -> 1 -> 2 -> 3 ...)
+    // Subscribe to the topic, all nodes
+    // Publish a message from node 0
+    // Assert that the last node receives the message
+    const numPeers = 6
+    psubs = await createComponentsArray({
+      number: numPeers,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: 20,
+          behaviourPenaltyWeight: 0
+        }
+      }
+    })
+    const topic = 'foobar'
+
+    for (let i = 0; i < numPeers - 1; i++) {
+      await connectPubsubNodes(psubs[i], psubs[i + 1])
+    }
+    const peerIdStrsByIdx: string[][] = []
+    for (let i = 0; i < numPeers; i++) {
+      if (i === 0) {
+        // first
+        peerIdStrsByIdx[i] = [psubs[i + 1].components.peerId.toString()]
+      } else if (i > 0 && i < numPeers - 1) {
+        // middle
+        peerIdStrsByIdx[i] = [psubs[i + 1].components.peerId.toString(), psubs[i - 1].components.peerId.toString()]
+      } else if (i === numPeers - 1) {
+        // last
+        peerIdStrsByIdx[i] = [psubs[i - 1].components.peerId.toString()]
+      }
+    }
+
+    const subscriptionPromises = psubs.map(
+      async (psub, i) => checkReceivedSubscriptions(psub, peerIdStrsByIdx[i], topic)
+    )
+    psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    // wait for heartbeats to build mesh
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+    await Promise.all(subscriptionPromises)
+
+    const msg = uint8ArrayFromString(`${0} its not a flooooood ${0}`)
+    const owner = 0
+    const results = checkReceivedMessage(topic, msg, owner, 0)(psubs[5], 5)
+    await psubs[owner].pubsub.publish(topic, msg)
+    await results
+  })
+
+  it('test gossipsub tree topology', async function () {
+    // Create 10 gossipsub nodes
+    // Connect nodes in a tree, diagram below
+    // Subscribe to the topic, all nodes
+    // Assert that the nodes are peered appropriately
+    // Publish two messages, one from either end of the tree
+    // Assert that the subscribed nodes receive every message
+    psubs = await createComponentsArray({
+      number: 10,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: 20
+        }
+      }
+    })
+    const topic = 'foobar'
+
+    /*
+     [0] -> [1] -> [2] -> [3]
+      |      L->[4]
+      v
+     [5] -> [6] -> [7]
+      |
+      v
+     [8] -> [9]
+    */
+    const treeTopology = [
+      [1, 5], // 0
+      [2, 4], // 1
+      [3], // 2
+      [], // 3 leaf
+      [], // 4 leaf
+      [6, 8], // 5
+      [7], // 6
+      [], // 7 leaf
+      [9], // 8
+      [] // 9 leaf
+    ]
+    for (let from = 0; from < treeTopology.length; from++) {
+      for (const to of treeTopology[from]) {
+        await connectPubsubNodes(psubs[from], psubs[to])
+      }
+    }
+
+    const getPeerIdStrs = (idx: number): string[] => {
+      const outbounds = treeTopology[idx]
+      const inbounds = []
+      for (let i = 0; i < treeTopology.length; i++) {
+        if (treeTopology[i].includes(idx)) inbounds.push(i)
+      }
+      return Array.from(new Set([...inbounds, ...outbounds])).map((i) => psubs[i].components.peerId.toString())
+    }
+
+    const subscriptionPromises = psubs.map(
+      async (psub, i) => checkReceivedSubscriptions(psub, getPeerIdStrs(i), topic)
+    )
+    psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    // wait for heartbeats to build mesh
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+    await Promise.all(subscriptionPromises)
+
+    expect(psubs[0].pubsub.getPeers().map((s) => s.toString())).to.have.members([
+      psubs[1].components.peerId.toString(),
+      psubs[5].components.peerId.toString()
+    ])
+    expect(psubs[1].pubsub.getPeers().map((s) => s.toString())).to.have.members([
+      psubs[0].components.peerId.toString(),
+      psubs[2].components.peerId.toString(),
+      psubs[4].components.peerId.toString()
+    ])
+    expect(psubs[2].pubsub.getPeers().map((s) => s.toString())).to.have.members([
+      psubs[1].components.peerId.toString(),
+      psubs[3].components.peerId.toString()
+    ])
+
+    const sendRecv = []
+    for (const owner of [9, 3]) {
+      const msg = uint8ArrayFromString(`${owner} its not a flooooood ${owner}`)
+      const results = Promise.all(
+        psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, owner))
+      )
+      sendRecv.push(psubs[owner].pubsub.publish(topic, msg))
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+  })
+
+  it('test gossipsub star topology with signed peer records', async function () {
+    // Create 20 gossipsub nodes with lower degrees
+    // Connect nodes to a center node, with the center having very low degree
+    // Subscribe to the topic, all nodes
+    // Assert that all nodes have > 1 connection
+    // Publish one message per node
+    // Assert that the subscribed nodes receive every message
+    psubs = await createComponentsArray({
+      number: 20,
+      init: {
+        scoreThresholds: {
+          acceptPXThreshold: 0
+        },
+        scoreParams: {
+          IPColocationFactorThreshold: 20
+        },
+        doPX: true,
+        D: 4,
+        Dhi: 5,
+        Dlo: 3,
+        Dscore: 3,
+        prunePeers: 5
+      }
+    })
+
+    // configure the center of the star with very low D
+    ;(psubs[0].pubsub).opts.D = 0
+    ;(psubs[0].pubsub).opts.Dhi = 0
+    ;(psubs[0].pubsub).opts.Dlo = 0
+    ;(psubs[0].pubsub).opts.Dscore = 0
+
+    // build the star
+    await Promise.all(psubs.slice(1).map(async (ps) => connectPubsubNodes(psubs[0], ps)))
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+
+    // build the mesh
+    const topic = 'foobar'
+    const peerIdStrs = psubs.map((psub) => psub.components.peerId.toString())
+    const subscriptionPromise = checkReceivedSubscriptions(psubs[0], peerIdStrs, topic)
+    psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    // wait a bit for the mesh to build
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 15, 25000)))
+    await subscriptionPromise
+
+    // check that all peers have > 1 connection
+    psubs.forEach((ps) => {
+      expect(ps.components.connectionManager.getConnections().length).to.be.gt(1)
+    })
+
+    // send a message from each peer and assert it was propagated
+    const sendRecv = []
+    for (let i = 0; i < psubs.length; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+      const owner = i
+      const results = Promise.all(
+        psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i))
+      )
+      sendRecv.push(psubs[owner].pubsub.publish(topic, msg))
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+  })
+
+  it('test gossipsub direct peers', async function () {
+    // Create 3 gossipsub nodes
+    // 2 and 3 with direct peer connections with each other
+    // Connect nodes: 2 <- 1 -> 3
+    // Assert that the nodes are connected
+    // Subscribe to the topic, all nodes
+    // Publish a message from each node
+    // Assert that all nodes receive the messages
+    // Disconnect peers
+    // Assert peers reconnect
+    // Publish a message from each node
+    // Assert that all nodes receive the messages
+    psubs = await Promise.all([
+      createComponents({
+        init: {
+          scoreParams: {
+            IPColocationFactorThreshold: 20
+          },
+          fastMsgIdFn,
+          directConnectTicks: 2
+        }
+      }),
+      createComponents({
+        init: {
+          scoreParams: {
+            IPColocationFactorThreshold: 20
+          },
+          fastMsgIdFn,
+          directConnectTicks: 2
+        }
+      }),
+      createComponents({
+        init: {
+          scoreParams: {
+            IPColocationFactorThreshold: 20
+          },
+          fastMsgIdFn
+        }
+      })
+    ])
+    ;(psubs[1].pubsub).direct.add(psubs[2].components.peerId.toString())
+    await connectPubsubNodes(psubs[1], psubs[2])
+    ;(psubs[2].pubsub).direct.add(psubs[1].components.peerId.toString())
+    await connectPubsubNodes(psubs[2], psubs[1])
+
+    // each peer connects to 2 other peers
+    await connectPubsubNodes(psubs[0], psubs[1])
+    await connectPubsubNodes(psubs[0], psubs[2])
+
+    const topic = 'foobar'
+    const peerIdStrs = psubs.map((libp2p) => libp2p.components.peerId.toString())
+    let subscriptionPromises = psubs.map(async (libp2ps) => checkReceivedSubscriptions(libp2ps, peerIdStrs, topic))
+    psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 1)))
+    await Promise.all(subscriptionPromises)
+
+    let sendRecv = []
+    for (let i = 0; i < 3; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+      const owner = i
+      const results = Promise.all(psubs.filter((_, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i)))
+      sendRecv.push(psubs[owner].pubsub.publish(topic, msg))
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+
+    const connectPromises = [1, 2].map(async (i) => awaitEvents(psubs[i].components.events, 'peer:connect', 1))
+    // disconnect the direct peers to test reconnection
+    // need more time to disconnect/connect/send subscriptions again
+    subscriptionPromises = [
+      checkReceivedSubscription(psubs[1], peerIdStrs[2], topic, 2, 10000),
+      checkReceivedSubscription(psubs[2], peerIdStrs[1], topic, 1, 10000)
+    ]
+    await psubs[1].components.connectionManager.closeConnections(psubs[2].components.peerId)
+    // TODO remove when https://github.com/libp2p/js-libp2p-interfaces/pull/268 is merged
+    await psubs[2].components.connectionManager.closeConnections(psubs[1].components.peerId)
+
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 5)))
+    await Promise.all(connectPromises)
+    await Promise.all(subscriptionPromises)
+    expect(psubs[1].components.connectionManager.getConnections(psubs[2].components.peerId)).to.not.be.empty()
+
+    sendRecv = []
+    for (let i = 0; i < 3; i++) {
+      const msg = uint8ArrayFromString(`2nd - ${i} its not a flooooood ${i}`)
+      const owner = i
+      const results = Promise.all(
+        psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i))
+      )
+      sendRecv.push(psubs[owner].pubsub.publish(topic, msg))
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+  })
+
+  it('test gossipsub flood publish', async function () {
+    // Create 30 gossipsub nodes
+    // Connect in star topology
+    // Subscribe to the topic, all nodes
+    // Publish 20 messages, each from the center node
+    // Assert that the other nodes receive the message
+    const numPeers = 30
+    psubs = await createComponentsArray({
+      number: numPeers,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: 30
+        }
+      }
+    })
+
+    await Promise.all(
+      psubs.slice(1).map(async (ps) => {
+        await connectPubsubNodes(psubs[0], ps)
+      })
+    )
+
+    const owner = 0
+    const psub0 = psubs[owner]
+    const peerIdStrs = psubs.filter((_, j) => j !== owner).map((psub) => psub.components.peerId.toString())
+    // build the (partial, unstable) mesh
+    const topic = 'foobar'
+    const subscriptionPromise = checkReceivedSubscriptions(psub0, peerIdStrs, topic)
+    psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 1)))
+    await subscriptionPromise
+
+    // send messages from the star and assert they were received
+    const sendRecv = []
+    for (let i = 0; i < 20; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+      const results = Promise.all(
+        psubs.filter((psub, j) => j !== owner).map(checkReceivedMessage(topic, msg, owner, i))
+      )
+      sendRecv.push(psubs[owner].pubsub.publish(topic, msg))
+      sendRecv.push(results)
+    }
+    await Promise.all(sendRecv)
+  })
+
+  it('test gossipsub negative score', async function () {
+    // Create 20 gossipsub nodes, with scoring params to quickly lower node 0's score
+    // Connect densely
+    // Subscribe to the topic, all nodes
+    // Publish 20 messages, each from a different node, collecting all received messages
+    // Assert that nodes other than 0 should not receive any messages from node 0
+    psubs = await createComponentsArray({
+      number: 20,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: 30,
+          appSpecificScore: (p) => (p === psubs[0].components.peerId.toString() ? -1000 : 0),
+          decayInterval: 1000,
+          decayToZero: 0.01
+        },
+        scoreThresholds: {
+          gossipThreshold: -10,
+          publishThreshold: -100,
+          graylistThreshold: -1000
+        },
+        fastMsgIdFn
+      }
+    })
+
+    await denseConnect(psubs)
+
+    const topic = 'foobar'
+    psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 3)))
+
+    psubs.slice(1).forEach((ps) => {
+      ps.pubsub.addEventListener('message', (evt) => {
+        if (evt.detail.type !== 'signed') {
+          throw new Error('unexpected message type')
+        }
+        expect(evt.detail.from.equals(psubs[0].components.peerId)).to.be.false()
+      })
+    }
+    )
+
+    const sendRecv = []
+    for (let i = 0; i < 20; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+      const owner = i
+      sendRecv.push(psubs[owner].pubsub.publish(topic, msg))
+    }
+    await Promise.all(sendRecv)
+
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+  })
+
+  it('test gossipsub score validator ex', async function () {
+    // Create 3 gossipsub nodes
+    // Connect fully
+    // Register a topic validator on node 0: ignore 1, reject 2
+    // Subscribe to the topic, node 0
+    // Publish 2 messages, from 1 and 2
+    // Assert that 0 received neither message
+    // Assert that 1's score is 0, 2's score is negative
+    const topic = 'foobar'
+    psubs = await createComponentsArray({
+      number: 3,
+      init: {
+        scoreParams: {
+          topics: {
+            [topic]: {
+              topicWeight: 1,
+              timeInMeshQuantum: 1000,
+              invalidMessageDeliveriesWeight: -1,
+              invalidMessageDeliveriesDecay: 0.9999,
+              timeInMeshWeight: 0,
+              timeInMeshCap: 0,
+              firstMessageDeliveriesWeight: 0,
+              firstMessageDeliveriesDecay: 0,
+              firstMessageDeliveriesCap: 0,
+              meshMessageDeliveriesWeight: 0,
+              meshMessageDeliveriesDecay: 0,
+              meshMessageDeliveriesCap: 0,
+              meshMessageDeliveriesThreshold: 0,
+              meshMessageDeliveriesWindow: 0,
+              meshMessageDeliveriesActivation: 0,
+              meshFailurePenaltyWeight: 0,
+              meshFailurePenaltyDecay: 0
+            }
+          }
+        }
+      }
+    })
+
+    await connectPubsubNodes(psubs[0], psubs[1])
+    await connectPubsubNodes(psubs[1], psubs[2])
+    await connectPubsubNodes(psubs[0], psubs[2])
+    ;(psubs[0].pubsub).topicValidators.set(topic, async (propagationSource, m) => {
+      if (propagationSource.equals(psubs[1].components.peerId)) return TopicValidatorResult.Ignore
+      if (propagationSource.equals(psubs[2].components.peerId)) return TopicValidatorResult.Reject
+      throw Error('Unknown PeerId')
+    })
+
+    psubs[0].pubsub.subscribe(topic)
+
+    await delay(200)
+
+    psubs[0].pubsub.addEventListener('message', () => expect.fail('node 0 should not receive any messages'))
+
+    const msg = uint8ArrayFromString('its not a flooooood')
+    await psubs[1].pubsub.publish(topic, msg)
+    const msg2 = uint8ArrayFromString('2nd - its not a flooooood')
+    await psubs[2].pubsub.publish(topic, msg2)
+
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 2)))
+
+    expect((psubs[0].pubsub).score.score(psubs[1].components.peerId.toString())).to.be.eql(0)
+    expect((psubs[0].pubsub).score.score(psubs[2].components.peerId.toString())).to.be.lt(0)
+  })
+
+  it('test gossipsub piggyback control', async function () {
+    psubs = await createComponentsArray({ number: 2 })
+    const otherId = psubs[1].components.peerId.toString()
+    const psub = psubs[0].pubsub
+
+    const topic1 = 'topic_1'
+    const topic2 = 'topic_2'
+    const topic3 = 'topic_3'
+    psub.mesh.set(topic1, new Set([otherId]))
+    psub.mesh.set(topic2, new Set())
+
+    const rpc: RPC = {
+      subscriptions: [],
+      messages: []
+    }
+
+    const toGraft = (topicID: string): RPC.ControlGraft => ({ topicID })
+    const toPrune = (topicID: string): RPC.ControlPrune => ({ topicID, peers: [] })
+
+    psub.piggybackControl(otherId, rpc, {
+      graft: [toGraft(topic1), toGraft(topic2), toGraft(topic3)],
+      prune: [toPrune(topic1), toPrune(topic2), toPrune(topic3)],
+      ihave: [],
+      iwant: []
+    })
+
+    const expectedRpc: RPC = {
+      subscriptions: [],
+      messages: [],
+      control: {
+        graft: [toGraft(topic1)],
+        prune: [toPrune(topic2), toPrune(topic3)],
+        ihave: [],
+        iwant: []
+      }
+    }
+
+    expect(rpc).deep.equals(expectedRpc)
+
+    await psub.stop()
+  })
+
+  it('test gossipsub opportunistic grafting', async function () {
+    // Create 20 nodes
+    // 6 real gossip nodes, 14 'sybil' nodes, unresponsive nodes
+    // Connect some of the real nodes
+    // Connect every sybil to every real node
+    // Subscribe to the topic, all real nodes
+    // Publish 300 messages from the real nodes
+    // Wait for opgraft
+    // Assert the real peer meshes have at least 2 honest peers
+    const topic = 'test'
+    psubs = await createComponentsArray({
+      number: 20,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: 50,
+          decayToZero: 0.01,
+          topics: {
+            // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
+            [topic]: {
+              topicWeight: 1,
+              timeInMeshWeight: 0.00002777,
+              timeInMeshQuantum: 1000,
+              timeInMeshCap: 3600,
+              firstMessageDeliveriesWeight: 100,
+              firstMessageDeliveriesDecay: 0.99997,
+              firstMessageDeliveriesCap: 1000,
+              meshMessageDeliveriesWeight: 0,
+              invalidMessageDeliveriesDecay: 0.99997
+            } as TopicScoreParams
+          }
+        },
+        scoreThresholds: {
+          gossipThreshold: -10,
+          publishThreshold: -100,
+          graylistThreshold: -10000,
+          opportunisticGraftThreshold: 1
+        }
+      }
+    })
+    const promises = psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 1))
+    const real = psubs.slice(0, 6)
+    const sybils = psubs.slice(6)
+
+    const connectPromises = real.map(
+      async (psub) => awaitEvents<Libp2pEvents>(psub.components.events, 'peer:connect', 3)
+    )
+    await connectSome(real, 5)
+    await Promise.all(connectPromises)
+    sybils.forEach((s) => {
+      (s.pubsub).handleReceivedRpc = async function () {
+        //
+      }
+    })
+
+    for (let i = 0; i < sybils.length; i++) {
+      for (let j = 0; j < real.length; j++) {
+        await connectPubsubNodes(sybils[i], real[j])
+      }
+    }
+
+    await Promise.all(promises)
+
+    const realPeerIdStrs = real.map((psub) => psub.components.peerId.toString())
+    const subscriptionPromises = real.map(async (psub) => {
+      const waitingPeerIdStrs = Array.from(psub.pubsub.getPeers().values())
+        .map((p) => p.toString())
+        .filter((peerId) => realPeerIdStrs.includes(peerId.toString()))
+      return checkReceivedSubscriptions(psub, waitingPeerIdStrs, topic)
+    })
+    psubs.forEach((ps) => { ps.pubsub.subscribe(topic) })
+    await Promise.all(subscriptionPromises)
+
+    for (let i = 0; i < 300; i++) {
+      const msg = uint8ArrayFromString(`${i} its not a flooooood ${i}`)
+      const owner = i % real.length
+      await psubs[owner].pubsub.publish(topic, msg)
+    }
+
+    // now wait for opgraft cycles
+    await Promise.all(psubs.map(async (ps) => awaitEvents(ps.pubsub, 'gossipsub:heartbeat', 7)))
+
+    // check the honest node meshes, they should have at least 3 honest peers each
+    const realPeerIds = real.map((r) => r.components.peerId.toString())
+
+    await pRetry(
+      async () => {
+        for (const r of real) {
+          const meshPeers = (r.pubsub).mesh.get(topic)
+
+          if (meshPeers == null) {
+            throw new Error('meshPeers was null')
+          }
+
+          let count = 0
+          realPeerIds.forEach((p) => {
+            if (meshPeers.has(p)) {
+              count++
+            }
+          })
+
+          if (count < 2) {
+            await delay(100)
+            throw new Error('Count was less than 3')
+          }
+        }
+      },
+      { retries: 10 }
+    )
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/floodsub.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/floodsub.spec.ts
new file mode 100644
index 0000000..9414247
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/floodsub.spec.ts
@@ -0,0 +1,298 @@
+import { FloodSub } from '@libp2p/floodsub'
+import { stop } from '@libp2p/interface'
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks'
+import { expect } from 'aegir/chai'
+import delay from 'delay'
+import { pEvent } from 'p-event'
+import pRetry from 'p-retry'
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'
+import { connectPubsubNodes, createComponents, type GossipSubAndComponents } from './utils/create-pubsub.js'
+import type { SubscriptionChangeData, Message } from '@libp2p/interface'
+
+describe('gossipsub fallbacks to floodsub', () => {
+  describe('basics', () => {
+    let nodeGs: GossipSubAndComponents
+    let nodeFs: GossipSubAndComponents
+
+    beforeEach(async () => {
+      mockNetwork.reset()
+
+      nodeGs = await createComponents({
+        init: {
+          fallbackToFloodsub: true
+        }
+      })
+      nodeFs = await createComponents({
+        pubsub: FloodSub
+      })
+    })
+
+    afterEach(async () => {
+      await stop(
+        ...[nodeGs, nodeFs].reduce<any[]>(
+          (acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)),
+          []
+        )
+      )
+      mockNetwork.reset()
+    })
+
+    it('Dial event happened from nodeGs to nodeFs', async () => {
+      await connectPubsubNodes(nodeGs, nodeFs)
+
+      await pRetry(() => {
+        // eslint-disable-next-line max-nested-callbacks
+        expect(nodeGs.pubsub.getPeers().map((s) => s.toString())).to.include(nodeFs.components.peerId.toString())
+        // eslint-disable-next-line max-nested-callbacks
+        expect(nodeFs.pubsub.getPeers().map((s) => s.toString())).to.include(nodeGs.components.peerId.toString())
+      })
+    })
+  })
+
+  describe.skip('should not be added if fallback disabled', () => {
+    let nodeGs: GossipSubAndComponents
+    let nodeFs: GossipSubAndComponents
+
+    beforeEach(async () => {
+      mockNetwork.reset()
+      nodeGs = await createComponents({
+        init: {
+          fallbackToFloodsub: false
+        }
+      })
+      nodeFs = await createComponents({
+        pubsub: FloodSub
+      })
+    })
+
+    afterEach(async () => {
+      await stop(
+        ...[nodeGs, nodeFs].reduce<any[]>(
+          (acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)),
+          []
+        )
+      )
+      mockNetwork.reset()
+    })
+
+    it('Dial event happened from nodeGs to nodeFs, but nodeGs does not support floodsub', async () => {
+      try {
+        await connectPubsubNodes(nodeGs, nodeFs)
+        expect.fail('Dial should not have succeed')
+      } catch (err) {
+        expect((err as { code: string }).code).to.be.equal('ERR_UNSUPPORTED_PROTOCOL')
+      }
+    })
+  })
+
+  describe('subscription functionality', () => {
+    let nodeGs: GossipSubAndComponents
+    let nodeFs: GossipSubAndComponents
+
+    before(async () => {
+      mockNetwork.reset()
+      nodeGs = await createComponents({
+        init: {
+          fallbackToFloodsub: true
+        }
+      })
+      nodeFs = await createComponents({
+        pubsub: FloodSub
+      })
+
+      await connectPubsubNodes(nodeGs, nodeFs)
+    })
+
+    afterEach(async () => {
+      await stop(
+        ...[nodeGs, nodeFs].reduce<any[]>((acc, curr) => {
+          acc.push(curr.pubsub, ...Object.entries(curr.components))
+
+          return acc
+        }, [])
+      )
+      mockNetwork.reset()
+    })
+
+    it('Subscribe to a topic', async function () {
+      this.timeout(10000)
+      const topic = 'Z'
+      nodeGs.pubsub.subscribe(topic)
+      nodeFs.pubsub.subscribe(topic)
+
+      // await subscription change
+      const [evt] = await Promise.all([
+        pEvent<'subscription-change', CustomEvent<SubscriptionChangeData>>(nodeGs.pubsub, 'subscription-change'),
+        pEvent<'subscription-change', CustomEvent<SubscriptionChangeData>>(nodeFs.pubsub, 'subscription-change')
+      ])
+      const { peerId: changedPeerId, subscriptions: changedSubs } = evt.detail
+
+      expect(nodeGs.pubsub.getTopics()).to.include(topic)
+      expect(nodeFs.pubsub.getTopics()).to.include(topic)
+      expect(nodeGs.pubsub.getPeers()).to.have.lengthOf(1)
+      expect(nodeFs.pubsub.getPeers()).to.have.lengthOf(1)
+      expect(nodeGs.pubsub.getSubscribers(topic).map((p) => p.toString())).to.include(
+        nodeFs.components.peerId.toString()
+      )
+      expect(nodeFs.pubsub.getSubscribers(topic).map((p) => p.toString())).to.include(
+        nodeGs.components.peerId.toString()
+      )
+
+      expect(nodeGs.pubsub.getPeers().map((p) => p.toString())).to.include(changedPeerId.toString())
+      expect(changedSubs).to.have.lengthOf(1)
+      expect(changedSubs[0].topic).to.equal(topic)
+      expect(changedSubs[0].subscribe).to.equal(true)
+    })
+  })
+
+  describe('publish functionality', () => {
+    let nodeGs: GossipSubAndComponents
+    let nodeFs: GossipSubAndComponents
+    const topic = 'Z'
+
+    beforeEach(async () => {
+      mockNetwork.reset()
+      nodeGs = await createComponents({
+        init: {
+          fallbackToFloodsub: true
+        }
+      })
+      nodeFs = await createComponents({
+        pubsub: FloodSub
+      })
+
+      await connectPubsubNodes(nodeGs, nodeFs)
+
+      nodeGs.pubsub.subscribe(topic)
+      nodeFs.pubsub.subscribe(topic)
+
+      // await subscription change
+      await Promise.all([pEvent(nodeGs.pubsub, 'subscription-change'), pEvent(nodeFs.pubsub, 'subscription-change')])
+    })
+
+    afterEach(async () => {
+      await stop(
+        ...[nodeGs, nodeFs].reduce<any[]>(
+          (acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)),
+          []
+        )
+      )
+      mockNetwork.reset()
+    })
+
+    const batchPublishOpts = [true, false]
+    for (const batchPublish of batchPublishOpts) {
+      // eslint-disable-next-line no-loop-func
+      it(`Publish to a topic - nodeGs - batchPublish: ${batchPublish}`, async () => {
+        const promise = pEvent<'message', CustomEvent<Message>>(nodeFs.pubsub, 'message')
+        const data = uint8ArrayFromString('hey')
+
+        await nodeGs.pubsub.publish(topic, data, { batchPublish })
+
+        const evt = await promise
+        if (evt.detail.type !== 'signed') {
+          throw new Error('unexpected message type')
+        }
+        expect(evt.detail.data).to.equalBytes(data)
+        expect(evt.detail.from.toString()).to.be.eql(nodeGs.components.peerId.toString())
+      })
+
+      // eslint-disable-next-line no-loop-func
+      it(`Publish to a topic - nodeFs - batchPublish: ${batchPublish}`, async () => {
+        const promise = pEvent<'message', CustomEvent<Message>>(nodeGs.pubsub, 'message')
+        const data = uint8ArrayFromString('banana')
+
+        await nodeFs.pubsub.publish(topic, data, { batchPublish })
+
+        const evt = await promise
+        if (evt.detail.type !== 'signed') {
+          throw new Error('unexpected message type')
+        }
+        expect(evt.detail.data).to.equalBytes(data)
+        expect(evt.detail.from.toString()).to.be.eql(nodeFs.components.peerId.toString())
+      })
+    }
+  })
+
+  describe('publish after unsubscribe', () => {
+    let nodeGs: GossipSubAndComponents
+    let nodeFs: GossipSubAndComponents
+    const topic = 'Z'
+
+    beforeEach(async () => {
+      mockNetwork.reset()
+      nodeGs = await createComponents({
+        init: {
+          fallbackToFloodsub: true
+        }
+      })
+      nodeFs = await createComponents({
+        pubsub: FloodSub
+      })
+
+      await connectPubsubNodes(nodeGs, nodeFs)
+
+      nodeGs.pubsub.subscribe(topic)
+      nodeFs.pubsub.subscribe(topic)
+
+      // await subscription change
+      await Promise.all([pEvent(nodeGs.pubsub, 'subscription-change'), pEvent(nodeFs.pubsub, 'subscription-change')])
+      // allow subscriptions to propagate to the other peer
+      await delay(10)
+    })
+
+    afterEach(async () => {
+      await stop(
+        ...[nodeGs, nodeFs].reduce<any[]>(
+          (acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)),
+          []
+        )
+      )
+      mockNetwork.reset()
+    })
+
+    it('Unsubscribe from a topic', async () => {
+      const promise = pEvent<'subscription-change', CustomEvent<SubscriptionChangeData>>(
+        nodeFs.pubsub,
+        'subscription-change'
+      )
+
+      nodeGs.pubsub.unsubscribe(topic)
+      expect(nodeGs.pubsub.getTopics()).to.be.empty()
+
+      const evt = await promise
+      const { peerId: changedPeerId, subscriptions: changedSubs } = evt.detail
+
+      expect(nodeFs.pubsub.getPeers()).to.have.lengthOf(1)
+      expect(nodeFs.pubsub.getSubscribers(topic)).to.be.empty()
+      expect(nodeFs.pubsub.getPeers().map((p) => p.toString())).to.include(changedPeerId.toString())
+      expect(changedSubs).to.have.lengthOf(1)
+      expect(changedSubs[0].topic).to.equal(topic)
+      expect(changedSubs[0].subscribe).to.equal(false)
+    })
+
+    it('Publish to a topic after unsubscribe', async () => {
+      nodeGs.pubsub.unsubscribe(topic)
+      await pEvent(nodeFs.pubsub, 'subscription-change')
+
+      const promise = new Promise<void>((resolve, reject) => {
+        nodeGs.pubsub.addEventListener('message', reject, {
+          once: true
+        })
+        setTimeout(() => {
+          nodeGs.pubsub.removeEventListener('message', reject)
+          resolve()
+        }, 100)
+      })
+
+      await nodeFs.pubsub.publish(topic, uint8ArrayFromString('banana'))
+      await nodeGs.pubsub.publish(topic, uint8ArrayFromString('banana'))
+
+      try {
+        await promise
+      } catch (e) {
+        expect.fail('message should not be received')
+      }
+    })
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/gossip.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/gossip.spec.ts
new file mode 100644
index 0000000..3d466bf
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/gossip.spec.ts
@@ -0,0 +1,302 @@
+import { generateKeyPair } from '@libp2p/crypto/keys'
+import { stop } from '@libp2p/interface'
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks'
+import { defaultLogger } from '@libp2p/logger'
+import { peerIdFromPrivateKey } from '@libp2p/peer-id'
+import { expect } from 'aegir/chai'
+import { pEvent } from 'p-event'
+import sinon, { type SinonStubbedInstance } from 'sinon'
+import { stubInterface } from 'ts-sinon'
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'
+import { GossipsubDhi } from '../src/constants.js'
+import { GossipSub } from '../src/index.js'
+import { connectAllPubSubNodes, createComponentsArray, type GossipSubAndComponents } from './utils/create-pubsub.js'
+import type { PeerStore } from '@libp2p/interface'
+import type { ConnectionManager, Registrar } from '@libp2p/interface-internal'
+
+describe('gossip', () => {
+  let nodes: GossipSubAndComponents[]
+
+  // Create pubsub nodes
+  beforeEach(async () => {
+    mockNetwork.reset()
+    nodes = await createComponentsArray({
+      number: GossipsubDhi + 2,
+      connected: false,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: GossipsubDhi + 3
+        },
+        maxInboundDataLength: 4000000,
+        allowPublishToZeroTopicPeers: false
+      }
+    })
+  })
+
+  afterEach(async () => {
+    await stop(...nodes.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+    mockNetwork.reset()
+  })
+
+  it('should send gossip to non-mesh peers in topic', async function () {
+    this.timeout(10e4)
+    const nodeA = nodes[0]
+    const topic = 'Z'
+
+    const subscriptionPromises = nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change'))
+    // add subscriptions to each node
+    nodes.forEach((n) => { n.pubsub.subscribe(topic) })
+
+    // every node connected to every other
+    await connectAllPubSubNodes(nodes)
+
+    // wait for subscriptions to be transmitted
+    await Promise.all(subscriptionPromises)
+
+    // await mesh rebalancing
+    await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')))
+
+    // set spy. NOTE: Forcing private property to be public
+    const nodeASpy = nodeA.pubsub as Partial<GossipSub> as SinonStubbedInstance<{
+      pushGossip: GossipSub['pushGossip']
+    }>
+    sinon.spy(nodeASpy, 'pushGossip')
+
+    await nodeA.pubsub.publish(topic, uint8ArrayFromString('hey'))
+
+    // gossip happens during the heartbeat
+    await pEvent(nodeA.pubsub, 'gossipsub:heartbeat')
+
+    const mesh = (nodeA.pubsub).mesh.get(topic)
+
+    if (mesh == null) {
+      throw new Error('No mesh for topic')
+    }
+
+    nodeASpy.pushGossip
+      .getCalls()
+      .map((call) => call.args[0])
+      .forEach((peerId) => {
+        expect(mesh).to.not.include(peerId)
+      })
+
+    // unset spy
+    nodeASpy.pushGossip.restore()
+  })
+
+  it('Should allow publishing to zero peers if flag is passed', async function () {
+    this.timeout(10e4)
+    const nodeA = nodes[0]
+    const topic = 'Z'
+
+    const publishResult = await nodeA.pubsub.publish(topic, uint8ArrayFromString('hey'), {
+      allowPublishToZeroTopicPeers: true
+    })
+
+    // gossip happens during the heartbeat
+    await pEvent(nodeA.pubsub, 'gossipsub:heartbeat')
+
+    // should have sent message to peerB
+    expect(publishResult.recipients).to.deep.equal([])
+  })
+
+  it('should tag peers', async function () {
+    this.timeout(10e4)
+    const nodeA = nodes[0]
+    const nodeB = nodes[1]
+    const topic = 'Z'
+
+    const twoNodes = [nodeA, nodeB]
+
+    const graftPromises = twoNodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:graft'))
+
+    // add subscriptions to each node
+    twoNodes.forEach((n) => { n.pubsub.subscribe(topic) })
+
+    // every node connected to every other
+    await connectAllPubSubNodes(twoNodes)
+
+    // await grafts
+    await Promise.all(graftPromises)
+
+    // await mesh rebalancing
+    await Promise.all(twoNodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')))
+
+    const peerInfoA = await nodeA.components.peerStore.get(nodeB.components.peerId).catch((e) => undefined)
+    const peerInfoB = await nodeB.components.peerStore.get(nodeA.components.peerId).catch((e) => undefined)
+    expect(peerInfoA?.tags.get(topic)?.value).to.equal(100)
+    expect(peerInfoB?.tags.get(topic)?.value).to.equal(100)
+  })
+
+  it('should remove the tags upon pruning', async function () {
+    this.timeout(10e4)
+    const nodeA = nodes[0]
+    const nodeB = nodes[1]
+    const topic = 'Z'
+
+    const twoNodes = [nodeA, nodeB]
+
+    const subscriptionPromises = nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change'))
+    // add subscriptions to each node
+    twoNodes.forEach((n) => { n.pubsub.subscribe(topic) })
+
+    // every node connected to every other
+    await connectAllPubSubNodes(nodes)
+
+    // await for subscriptions to be transmitted
+    await Promise.all(subscriptionPromises)
+
+    // await mesh rebalancing
+    await Promise.all(twoNodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')))
+
+    twoNodes.forEach((n) => { n.pubsub.unsubscribe(topic) })
+
+    // await for unsubscriptions to be transmitted
+    // await mesh rebalancing
+    await Promise.all(twoNodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')))
+
+    const peerInfoA = await nodeA.components.peerStore.get(nodeB.components.peerId).catch((e) => undefined)
+    const peerInfoB = await nodeB.components.peerStore.get(nodeA.components.peerId).catch((e) => undefined)
+    expect(peerInfoA?.tags.get(topic)).to.be.undefined()
+    expect(peerInfoB?.tags.get(topic)).to.be.undefined()
+  })
+
+  it('should reject incoming messages bigger than maxInboundDataLength limit', async function () {
+    this.timeout(10e4)
+    const nodeA = nodes[0]
+    const nodeB = nodes[1]
+
+    const twoNodes = [nodeA, nodeB]
+    const topic = 'Z'
+    const subscriptionPromises = twoNodes.map(async (n) => pEvent(n.pubsub, 'subscription-change'))
+    // add subscriptions to each node
+    twoNodes.forEach((n) => { n.pubsub.subscribe(topic) })
+
+    // every node connected to every other
+    await connectAllPubSubNodes(twoNodes)
+
+    // wait for subscriptions to be transmitted
+    await Promise.all(subscriptionPromises)
+
+    // await mesh rebalancing
+    await Promise.all(twoNodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')))
+
+    // set spy. NOTE: Forcing private property to be public
+    const nodeBSpy = nodeB.pubsub as Partial<GossipSub> as SinonStubbedInstance<{
+      handlePeerReadStreamError: GossipSub['handlePeerReadStreamError']
+    }>
+    sinon.spy(nodeBSpy, 'handlePeerReadStreamError')
+
+    // This should lead to handlePeerReadStreamError at nodeB
+    await nodeA.pubsub.publish(topic, new Uint8Array(5000000))
+    await pEvent(nodeA.pubsub, 'gossipsub:heartbeat')
+    const expectedError = nodeBSpy.handlePeerReadStreamError.getCalls()[0]?.args[0]
+    expect(expectedError !== undefined && (expectedError as unknown as { code: string }).code, 'ERR_MSG_DATA_TOO_LONG')
+
+    // unset spy
+    nodeBSpy.handlePeerReadStreamError.restore()
+  })
+
+  it('should send piggyback control into other sent messages', async function () {
+    this.timeout(10e4)
+    const nodeA = nodes[0]
+    const topic = 'Z'
+
+    const promises = nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change'))
+    // add subscriptions to each node
+    nodes.forEach((n) => { n.pubsub.subscribe(topic) })
+
+    // every node connected to every other
+    await connectAllPubSubNodes(nodes)
+
+    // wait for subscriptions to be transmitted
+    await Promise.all(promises)
+
+    // await nodeA mesh rebalancing
+    await pEvent(nodeA.pubsub, 'gossipsub:heartbeat')
+
+    const mesh = (nodeA.pubsub).mesh.get(topic)
+
+    if (mesh == null) {
+      throw new Error('No mesh for topic')
+    }
+
+    if (mesh.size === 0) {
+      throw new Error('Topic mesh was empty')
+    }
+
+    const peerB = Array.from(mesh)[0]
+
+    if (peerB == null) {
+      throw new Error('Could not get peer from mesh')
+    }
+
+    // should have peerB as a subscriber to the topic
+    expect(nodeA.pubsub.getSubscribers(topic).map((p) => p.toString())).to.include(
+      peerB,
+      "did not know about peerB's subscription to topic"
+    )
+
+    // should be able to send them messages
+    expect((nodeA.pubsub).streamsOutbound.has(peerB)).to.be.true(
+      'nodeA did not have connection open to peerB'
+    )
+
+    // set spy. NOTE: Forcing private property to be public
+    const nodeASpy = sinon.spy(nodeA.pubsub, 'piggybackControl')
+    // manually add control message to be sent to peerB
+    const graft = { ihave: [], iwant: [], graft: [{ topicID: topic }], prune: [] }
+    ;(nodeA.pubsub).control.set(peerB, graft)
+    ;(nodeA.pubsub).gossip.set(peerB, [])
+
+    const publishResult = await nodeA.pubsub.publish(topic, uint8ArrayFromString('hey'))
+
+    // should have sent message to peerB
+    expect(publishResult.recipients.map((p) => p.toString())).to.include(peerB, 'did not send pubsub message to peerB')
+
+    // wait until spy is called
+    const startTime = Date.now()
+    while (Date.now() - startTime < 5000) {
+      if (nodeASpy.callCount > 0) break
+    }
+
+    expect(nodeASpy.callCount).to.be.equal(1)
+    // expect control message to be sent alongside published message
+    const call = nodeASpy.getCalls()[0]
+    expect(call).to.have.deep.nested.property('args[1].control.graft', graft.graft)
+
+    // unset spy
+    nodeASpy.restore()
+  })
+
+  it('should allow configuring stream limits', async () => {
+    const maxInboundStreams = 7
+    const maxOutboundStreams = 5
+
+    const registrar = stubInterface<Registrar>()
+    const privateKey = await generateKeyPair('Ed25519')
+    const peerId = peerIdFromPrivateKey(privateKey)
+    const pubsub = new GossipSub(
+      {
+        privateKey,
+        peerId,
+        registrar,
+        peerStore: stubInterface<PeerStore>(),
+        connectionManager: stubInterface<ConnectionManager>(),
+        logger: defaultLogger()
+      },
+      {
+        maxInboundStreams,
+        maxOutboundStreams
+      }
+    )
+
+    await pubsub.start()
+
+    expect(registrar.register.called).to.be.true()
+    expect(registrar.handle.getCall(0)).to.have.nested.property('args[2].maxInboundStreams', maxInboundStreams)
+    expect(registrar.handle.getCall(0)).to.have.nested.property('args[2].maxOutboundStreams', maxOutboundStreams)
+
+    await pubsub.stop()
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/heartbeat.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/heartbeat.spec.ts
new file mode 100644
index 0000000..d6482ba
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/heartbeat.spec.ts
@@ -0,0 +1,37 @@
+import { stop } from '@libp2p/interface'
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks'
+import { expect } from 'aegir/chai'
+import { pEvent } from 'p-event'
+import { GossipsubHeartbeatInterval } from '../src/constants.js'
+import { createComponents, type GossipSubAndComponents } from './utils/create-pubsub.js'
+
+describe('heartbeat', () => {
+  let node: GossipSubAndComponents
+
+  before(async () => {
+    mockNetwork.reset()
+    node = await createComponents({
+      init: {
+        emitSelf: true
+      }
+    })
+  })
+
+  after(async () => {
+    await stop(node.pubsub, ...Object.entries(node.components))
+    mockNetwork.reset()
+  })
+
+  it('should occur with regularity defined by a constant', async function () {
+    this.timeout(GossipsubHeartbeatInterval * 5)
+
+    await pEvent(node.pubsub, 'gossipsub:heartbeat')
+    const t1 = Date.now()
+
+    await pEvent(node.pubsub, 'gossipsub:heartbeat')
+    const t2 = Date.now()
+
+    const safeFactor = 1.5
+    expect(t2 - t1).to.be.lt(GossipsubHeartbeatInterval * safeFactor)
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/mesh.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/mesh.spec.ts
new file mode 100644
index 0000000..42acb9a
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/mesh.spec.ts
@@ -0,0 +1,75 @@
+import { stop } from '@libp2p/interface'
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks'
+import { expect } from 'aegir/chai'
+import delay from 'delay'
+import { pEvent } from 'p-event'
+import { GossipsubDhi } from '../src/constants.js'
+import { connectAllPubSubNodes, createComponentsArray, type GossipSubAndComponents } from './utils/create-pubsub.js'
+
+describe('mesh overlay', () => {
+  let nodes: GossipSubAndComponents[]
+
+  // Create pubsub nodes
+  beforeEach(async () => {
+    mockNetwork.reset()
+    nodes = await createComponentsArray({
+      number: GossipsubDhi + 2,
+      connected: false,
+      init: {
+        scoreParams: {
+          IPColocationFactorThreshold: GossipsubDhi + 3
+        }
+      }
+    })
+  })
+
+  afterEach(async () => {
+    await stop(...nodes.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+    mockNetwork.reset()
+  })
+
+  it('should add mesh peers below threshold', async function () {
+    this.timeout(10e3)
+
+    // test against node0
+    const node0 = nodes[0]
+    const topic = 'Z'
+
+    // add subscriptions to each node
+    nodes.forEach((node) => { node.pubsub.subscribe(topic) })
+
+    // connect N (< GossipsubD) nodes to node0
+    const N = 4
+    await connectAllPubSubNodes(nodes.slice(0, N + 1))
+
+    await delay(50)
+    // await mesh rebalancing
+    await new Promise((resolve) => {
+      (node0.pubsub).addEventListener('gossipsub:heartbeat', resolve, {
+        once: true
+      })
+    }
+    )
+
+    const mesh = (node0.pubsub).mesh.get(topic)
+    expect(mesh).to.have.property('size', N)
+  })
+
+  it('should remove mesh peers once above threshold', async function () {
+    this.timeout(10e4)
+    // test against node0
+    const node0 = nodes[0]
+    const topic = 'Z'
+
+    // add subscriptions to each node
+    nodes.forEach((node) => { node.pubsub.subscribe(topic) })
+
+    await connectAllPubSubNodes(nodes)
+
+    // await mesh rebalancing
+    await pEvent(node0.pubsub, 'gossipsub:heartbeat')
+
+    const mesh = (node0.pubsub).mesh.get(topic)
+    expect(mesh).to.have.property('size').that.is.lte(GossipsubDhi)
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/message-cache.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/message-cache.spec.ts
new file mode 100644
index 0000000..e3f76d1
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/message-cache.spec.ts
@@ -0,0 +1,162 @@
+import * as utils from '@libp2p/pubsub/utils'
+import { expect } from 'aegir/chai'
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'
+import { MessageCache } from '../src/message-cache.js'
+import { messageIdToString } from '../src/utils/messageIdToString.js'
+import { getMsgId } from './utils/index.js'
+import type { RPC } from '../src/message/rpc.js'
+import type { MessageId } from '../src/types.js'
+
+const toMessageId = (msgId: Uint8Array): MessageId => {
+  return {
+    msgId,
+    msgIdStr: messageIdToString(msgId)
+  }
+}
+
+describe('Testing Message Cache Operations', () => {
+  const messageCache = new MessageCache(3, 5, messageIdToString)
+  const testMessages: RPC.Message[] = []
+  const topic = 'test'
+  const getGossipIDs = (mcache: MessageCache, topic: string): Uint8Array[] => {
+    const gossipIDsByTopic = mcache.getGossipIDs(new Set([topic]))
+    return gossipIDsByTopic.get(topic) ?? []
+  }
+
+  before(async () => {
+    const makeTestMessage = (n: number): RPC.Message => {
+      return {
+        from: new Uint8Array(0),
+        data: uint8ArrayFromString(n.toString()),
+        seqno: uint8ArrayFromString(utils.randomSeqno().toString(16).padStart(16, '0'), 'base16'),
+        topic
+      }
+    }
+
+    for (let i = 0; i < 60; i++) {
+      testMessages.push(makeTestMessage(i))
+    }
+
+    for (let i = 0; i < 10; i++) {
+      messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], true)
+    }
+  })
+
+  it('Should retrieve correct messages for each test message', () => {
+    for (let i = 0; i < 10; i++) {
+      const messageId = getMsgId(testMessages[i])
+      const message = messageCache.get(messageId)
+      expect(message).to.equal(testMessages[i])
+    }
+  })
+
+  it('Get GossipIDs', () => {
+    const gossipIDs = getGossipIDs(messageCache, topic)
+    expect(gossipIDs.length).to.equal(10)
+
+    for (let i = 0; i < 10; i++) {
+      const messageID = getMsgId(testMessages[i])
+      expect(messageID).to.deep.equal(gossipIDs[i])
+    }
+  })
+
+  it('Shift message cache', async () => {
+    messageCache.shift()
+    for (let i = 10; i < 20; i++) {
+      messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], true)
+    }
+
+    for (let i = 0; i < 20; i++) {
+      const messageID = getMsgId(testMessages[i])
+      const message = messageCache.get(messageID)
+      expect(message).to.equal(testMessages[i])
+    }
+
+    let gossipIDs = getGossipIDs(messageCache, topic)
+    expect(gossipIDs.length).to.equal(20)
+
+    for (let i = 0; i < 10; i++) {
+      const messageID = getMsgId(testMessages[i])
+      expect(messageID).to.deep.equal(gossipIDs[10 + i])
+    }
+
+    for (let i = 10; i < 20; i++) {
+      const messageID = getMsgId(testMessages[i])
+      expect(messageID).to.deep.equal(gossipIDs[i - 10])
+    }
+
+    messageCache.shift()
+    for (let i = 20; i < 30; i++) {
+      messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], true)
+    }
+
+    messageCache.shift()
+    for (let i = 30; i < 40; i++) {
+      messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], true)
+    }
+
+    messageCache.shift()
+    for (let i = 40; i < 50; i++) {
+      messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], true)
+    }
+
+    messageCache.shift()
+    for (let i = 50; i < 60; i++) {
+      messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], true)
+    }
+
+    expect(messageCache.msgs.size).to.equal(50)
+
+    for (let i = 0; i < 10; i++) {
+      const messageID = getMsgId(testMessages[i])
+      const message = messageCache.get(messageID)
+      expect(message).to.be.an('undefined')
+    }
+
+    for (let i = 10; i < 60; i++) {
+      const messageID = getMsgId(testMessages[i])
+      const message = messageCache.get(messageID)
+      expect(message).to.equal(testMessages[i])
+    }
+
+    gossipIDs = getGossipIDs(messageCache, topic)
+    expect(gossipIDs.length).to.equal(30)
+
+    for (let i = 0; i < 10; i++) {
+      const messageID = getMsgId(testMessages[50 + i])
+      expect(messageID).to.deep.equal(gossipIDs[i])
+    }
+
+    for (let i = 10; i < 20; i++) {
+      const messageID = getMsgId(testMessages[30 + i])
+      expect(messageID).to.deep.equal(gossipIDs[i])
+    }
+
+    for (let i = 20; i < 30; i++) {
+      const messageID = getMsgId(testMessages[10 + i])
+      expect(messageID).to.deep.equal(gossipIDs[i])
+    }
+  })
+
+  it('should not gossip not-validated message ids', () => {
+    let gossipIDs = getGossipIDs(messageCache, topic)
+    while (gossipIDs.length > 0) {
+      messageCache.shift()
+      gossipIDs = getGossipIDs(messageCache, topic)
+    }
+    expect(gossipIDs.length).to.be.equal(0)
+
+    for (let i = 10; i < 20; i++) {
+      // 5 last messages are not validated
+      const validated = i < 15
+      messageCache.put(toMessageId(getMsgId(testMessages[i])), testMessages[i], validated)
+    }
+
+    gossipIDs = getGossipIDs(messageCache, topic)
+    expect(gossipIDs.length).to.be.equal(5)
+    // only validate the new gossip ids
+    for (let i = 0; i < 5; i++) {
+      expect(gossipIDs[i]).to.deep.equal(getMsgId(testMessages[i + 10]), 'incorrect gossip message id ' + String(i))
+    }
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/peer-score-params.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/peer-score-params.spec.ts
new file mode 100644
index 0000000..0da8a4b
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/peer-score-params.spec.ts
@@ -0,0 +1,537 @@
+import { expect } from 'aegir/chai'
+import * as constants from '../src/constants.js'
+import {
+  createTopicScoreParams,
+  validateTopicScoreParams,
+  createPeerScoreParams,
+  validatePeerScoreParams
+} from '../src/score/index.js'
+
+describe('TopicScoreParams validation', () => {
+  it('should not throw on default TopicScoreParams', () => {
+    expect(() => { validateTopicScoreParams(createTopicScoreParams({})) }).to.not.throw()
+  })
+  it('should throw on invalid TopicScoreParams', () => {
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            topicWeight: -1
+          })
+        )
+      },
+      'topicWeight must be >= 0'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshWeight: -1,
+            timeInMeshQuantum: 1000
+          })
+        )
+      },
+      'timeInMeshWeight must be positive (or 0 to disable)'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshWeight: 1,
+            timeInMeshQuantum: -1
+          })
+        )
+      },
+      'timeInMeshQuantum must be positive'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshWeight: 1,
+            timeInMeshQuantum: 1000,
+            timeInMeshCap: -1
+          })
+        )
+      },
+      'timeInMeshCap must be positive'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            firstMessageDeliveriesWeight: -1
+          })
+        )
+      },
+      'firstMessageDeliveriesWeight must be positive (or 0 to disable)'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            firstMessageDeliveriesWeight: 1,
+            firstMessageDeliveriesDecay: -1
+          })
+        )
+      },
+      'firstMessageDeliveriesDecay must be between 0 and 1'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            firstMessageDeliveriesWeight: 1,
+            firstMessageDeliveriesDecay: 2
+          })
+        )
+      },
+      'firstMessageDeliveriesDecay must be between 0 and 1'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            firstMessageDeliveriesWeight: 1,
+            firstMessageDeliveriesDecay: 0.5,
+            firstMessageDeliveriesCap: -1
+          })
+        )
+      },
+      'firstMessageDeliveriesCap must be positive'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            meshMessageDeliveriesWeight: 1
+          })
+        )
+      },
+      'meshMessageDeliveriesWeight must be negative (or 0 to disable)'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            meshMessageDeliveriesWeight: -1,
+            meshMessageDeliveriesDecay: -1
+          })
+        )
+      },
+      'meshMessageDeliveriesDecay must be between 0 and 1'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            meshMessageDeliveriesWeight: -1,
+            meshMessageDeliveriesDecay: 2
+          })
+        )
+      },
+      'meshMessageDeliveriesDecay must be between 0 and 1'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            meshMessageDeliveriesWeight: -1,
+            meshMessageDeliveriesDecay: 0.5,
+            meshMessageDeliveriesCap: -1
+          })
+        )
+      },
+      'meshMessageDeliveriesCap must be positive'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            meshMessageDeliveriesWeight: -1,
+            meshMessageDeliveriesDecay: 5,
+            meshMessageDeliveriesThreshold: -3
+          })
+        )
+      },
+      'meshMessageDeliveriesDecay must be between 0 and 1'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            meshMessageDeliveriesWeight: -1,
+            meshMessageDeliveriesDecay: 0.5,
+            meshMessageDeliveriesThreshold: -3,
+            meshMessageDeliveriesWindow: -1
+          })
+        )
+      },
+      'meshMessageDeliveriesThreshold must be positive'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            meshMessageDeliveriesWeight: -1,
+            meshMessageDeliveriesDecay: 0.5,
+            meshMessageDeliveriesThreshold: 3,
+            meshMessageDeliveriesWindow: -1,
+            meshMessageDeliveriesActivation: 1
+          })
+        )
+      },
+      'meshMessageDeliveriesWindow must be non-negative'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            meshFailurePenaltyWeight: 1
+          })
+        )
+      },
+      'meshFailurePenaltyWeight must be negative'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            meshFailurePenaltyWeight: -1,
+            meshFailurePenaltyDecay: -1
+          })
+        )
+      },
+      'meshFailurePenaltyDecay must be between 0 and 1'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            meshFailurePenaltyWeight: -1,
+            meshFailurePenaltyDecay: 2
+          })
+        )
+      },
+      'meshFailurePenaltyDecay must be between 0 and 1'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            invalidMessageDeliveriesWeight: 1
+          })
+        )
+      },
+      'invalidMessageDeliveriesWeight must be negative'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            invalidMessageDeliveriesWeight: -1,
+            invalidMessageDeliveriesDecay: -1
+          })
+        )
+      },
+      'invalidMessageDeliveriesDecay must be between 0 and 1'
+    ).to.throw()
+    expect(
+      () => {
+        validateTopicScoreParams(
+          createTopicScoreParams({
+            timeInMeshQuantum: 1000,
+            invalidMessageDeliveriesWeight: -1,
+            invalidMessageDeliveriesDecay: 2
+          })
+        )
+      },
+      'invalidMessageDeliveriesDecay must be between 0 and 1'
+    ).to.throw()
+  })
+  it('should not throw on valid TopicScoreParams', () => {
+    expect(() => {
+      validateTopicScoreParams(
+        createTopicScoreParams({
+          topicWeight: 2,
+          timeInMeshWeight: 0.01,
+          timeInMeshQuantum: 1000,
+          timeInMeshCap: 10,
+          firstMessageDeliveriesWeight: 1,
+          firstMessageDeliveriesDecay: 0.5,
+          firstMessageDeliveriesCap: 10,
+          meshMessageDeliveriesWeight: -1,
+          meshMessageDeliveriesDecay: 0.5,
+          meshMessageDeliveriesCap: 10,
+          meshMessageDeliveriesThreshold: 5,
+          meshMessageDeliveriesWindow: 1,
+          meshMessageDeliveriesActivation: 1000,
+          meshFailurePenaltyWeight: -1,
+          meshFailurePenaltyDecay: 0.5,
+          invalidMessageDeliveriesWeight: -1,
+          invalidMessageDeliveriesDecay: 0.5
+        })
+      )
+    }
+    ).to.not.throw()
+  })
+})
+
+describe('PeerScoreParams validation', () => {
+  const appScore = (): number => 0
+
+  it('should throw on invalid PeerScoreParams', () => {
+    expect(
+      () => {
+        validatePeerScoreParams(
+          createPeerScoreParams({
+            topicScoreCap: -1,
+            appSpecificScore: appScore,
+            decayInterval: 1000,
+            decayToZero: 0.01
+          })
+        )
+      },
+      'topicScoreCap must be positive'
+    ).to.throw()
+    expect(
+      () => {
+        validatePeerScoreParams(
+          createPeerScoreParams({
+            topicScoreCap: 1,
+            decayInterval: 999,
+            decayToZero: 0.01
+          })
+        )
+      },
+      'decayInterval must be at least 1s'
+    ).to.throw()
+    expect(
+      () => {
+        validatePeerScoreParams(
+          createPeerScoreParams({
+            topicScoreCap: 1,
+            appSpecificScore: appScore,
+            decayInterval: 1000,
+            decayToZero: 0.01,
+            IPColocationFactorWeight: 1
+          })
+        )
+      },
+      'IPColocationFactorWeight should be negative'
+    ).to.throw()
+    expect(
+      () => {
+        validatePeerScoreParams(
+          createPeerScoreParams({
+            topicScoreCap: 1,
+            appSpecificScore: appScore,
+            decayInterval: 1000,
+            decayToZero: 0.01,
+            IPColocationFactorWeight: -1,
+            IPColocationFactorThreshold: -1
+          })
+        )
+      },
+      'IPColocationFactorThreshold should be at least 1'
+    ).to.throw()
+    /*
+    TODO: appears to be valid config?
+    expect(() =>
+      validatePeerScoreParams(
+        createPeerScoreParams({
+          topicScoreCap: 1,
+          appSpecificScore: appScore,
+          decayInterval: 1000,
+          decayToZero: 0.01,
+          IPColocationFactorWeight: -1,
+          IPColocationFactorThreshold: 0.99
+        })
+      ), "IPColocationFactorThreshold should be at least 1"
+    ).to.throw()
+    */
+    expect(
+      () => {
+        validatePeerScoreParams(
+          createPeerScoreParams({
+            topicScoreCap: 1,
+            appSpecificScore: appScore,
+            decayInterval: 1000,
+            decayToZero: -1,
+            IPColocationFactorWeight: -1,
+            IPColocationFactorThreshold: 1
+          })
+        )
+      },
+      'decayToZero must be between 0 and 1'
+    ).to.throw()
+    expect(
+      () => {
+        validatePeerScoreParams(
+          createPeerScoreParams({
+            topicScoreCap: 1,
+            appSpecificScore: appScore,
+            decayInterval: 1000,
+            decayToZero: 2,
+            IPColocationFactorWeight: -1,
+            IPColocationFactorThreshold: 1
+          })
+        )
+      },
+      'decayToZero must be between 0 and 1'
+    ).to.throw()
+    expect(() => {
+      validatePeerScoreParams(
+        createPeerScoreParams({
+          appSpecificScore: appScore,
+          decayInterval: 1000,
+          decayToZero: 0.01,
+          behaviourPenaltyWeight: 1
+        })
+      )
+    }
+    ).to.throw()
+    /*
+    TODO: appears to be valid config?
+    expect(() =>
+      validatePeerScoreParams(
+        createPeerScoreParams({
+          appSpecificScore: appScore,
+          decayInterval: 1000,
+          decayToZero: 0.01,
+          behaviourPenaltyWeight: -1
+        })
+      ), "behaviourPenaltyWeight MUST be negative (or zero to disable)"
+    ).to.throw()
+    */
+    expect(
+      () => {
+        validatePeerScoreParams(
+          createPeerScoreParams({
+            appSpecificScore: appScore,
+            decayInterval: 1000,
+            decayToZero: 0.01,
+            behaviourPenaltyWeight: -1,
+            behaviourPenaltyDecay: 2
+          })
+        )
+      },
+      'behaviourPenaltyDecay must be between 0 and 1'
+    ).to.throw()
+    expect(() => {
+      validatePeerScoreParams(
+        createPeerScoreParams({
+          topicScoreCap: 1,
+          appSpecificScore: appScore,
+          decayInterval: 1000,
+          decayToZero: 0.01,
+          IPColocationFactorWeight: -1,
+          IPColocationFactorThreshold: 1,
+          topics: {
+            test: {
+              topicWeight: -1,
+              timeInMeshWeight: 0.01,
+              timeInMeshQuantum: Number(constants.second),
+              timeInMeshCap: 10,
+              firstMessageDeliveriesWeight: 1,
+              firstMessageDeliveriesDecay: 0.5,
+              firstMessageDeliveriesCap: 10,
+              meshMessageDeliveriesWeight: -1,
+              meshMessageDeliveriesDecay: 0.5,
+              meshMessageDeliveriesCap: 10,
+              meshMessageDeliveriesThreshold: 5,
+              meshMessageDeliveriesWindow: 1,
+              meshMessageDeliveriesActivation: 1000,
+              meshFailurePenaltyWeight: -1,
+              meshFailurePenaltyDecay: 0.5,
+              invalidMessageDeliveriesWeight: -1,
+              invalidMessageDeliveriesDecay: 0.5
+            }
+          }
+        })
+      )
+    }
+    ).to.throw()
+  })
+  it('should not throw on valid PeerScoreParams', () => {
+    expect(() => {
+      validatePeerScoreParams(
+        createPeerScoreParams({
+          appSpecificScore: appScore,
+          decayInterval: 1000,
+          decayToZero: 0.01,
+          IPColocationFactorWeight: -1,
+          IPColocationFactorThreshold: 1,
+          behaviourPenaltyWeight: -1,
+          behaviourPenaltyDecay: 0.999
+        })
+      )
+    }
+    ).to.not.throw()
+    expect(() => {
+      validatePeerScoreParams(
+        createPeerScoreParams({
+          topicScoreCap: 1,
+          appSpecificScore: appScore,
+          decayInterval: 1000,
+          decayToZero: 0.01,
+          IPColocationFactorWeight: -1,
+          IPColocationFactorThreshold: 1,
+          behaviourPenaltyWeight: -1,
+          behaviourPenaltyDecay: 0.999
+        })
+      )
+    }
+    ).to.not.throw()
+    expect(() => {
+      validatePeerScoreParams(
+        createPeerScoreParams({
+          topicScoreCap: 1,
+          appSpecificScore: appScore,
+          decayInterval: Number(constants.second),
+          decayToZero: 0.01,
+          IPColocationFactorWeight: -1,
+          IPColocationFactorThreshold: 1,
+          topics: {
+            test: {
+              topicWeight: 1,
+              timeInMeshWeight: 0.01,
+              timeInMeshQuantum: 1000,
+              timeInMeshCap: 10,
+              firstMessageDeliveriesWeight: 1,
+              firstMessageDeliveriesDecay: 0.5,
+              firstMessageDeliveriesCap: 10,
+              meshMessageDeliveriesWeight: -1,
+              meshMessageDeliveriesDecay: 0.5,
+              meshMessageDeliveriesCap: 10,
+              meshMessageDeliveriesThreshold: 5,
+              meshMessageDeliveriesWindow: 1,
+              meshMessageDeliveriesActivation: 1000,
+              meshFailurePenaltyWeight: -1,
+              meshFailurePenaltyDecay: 0.5,
+              invalidMessageDeliveriesWeight: -1,
+              invalidMessageDeliveriesDecay: 0.5
+            }
+          }
+        })
+      )
+    }
+    ).to.not.throw()
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/peer-score-thresholds.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/peer-score-thresholds.spec.ts
new file mode 100644
index 0000000..4b0d7df
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/peer-score-thresholds.spec.ts
@@ -0,0 +1,93 @@
+import { expect } from 'aegir/chai'
+import { createPeerScoreThresholds, validatePeerScoreThresholds } from '../src/score/index.js'
+
+describe('PeerScoreThresholds validation', () => {
+  it('should throw on invalid PeerScoreThresholds', () => {
+    expect(
+      () => {
+        validatePeerScoreThresholds(
+          createPeerScoreThresholds({
+            gossipThreshold: 1
+          })
+        )
+      },
+      'gossipThreshold must be <= 0'
+    ).to.throw()
+    expect(
+      () => {
+        validatePeerScoreThresholds(
+          createPeerScoreThresholds({
+            publishThreshold: 1
+          })
+        )
+      },
+      'publishThreshold must be <= 0 and <= gossip threshold'
+    ).to.throw()
+    expect(
+      () => {
+        validatePeerScoreThresholds(
+          createPeerScoreThresholds({
+            gossipThreshold: -1,
+            publishThreshold: 0
+          })
+        )
+      },
+      'publishThreshold must be <= 0 and <= gossip threshold'
+    ).to.throw()
+    expect(
+      () => {
+        validatePeerScoreThresholds(
+          createPeerScoreThresholds({
+            graylistThreshold: 1
+          })
+        )
+      },
+      'graylistThreshold must be <= 0 and <= publish threshold'
+    ).to.throw()
+    expect(
+      () => {
+        validatePeerScoreThresholds(
+          createPeerScoreThresholds({
+            publishThreshold: -1,
+            graylistThreshold: -2
+          })
+        )
+      },
+      'graylistThreshold must be <= 0 and <= publish threshold'
+    ).to.throw()
+    expect(
+      () => {
+        validatePeerScoreThresholds(
+          createPeerScoreThresholds({
+            acceptPXThreshold: -1
+          })
+        )
+      },
+      'acceptPXThreshold must be >= 0'
+    ).to.throw()
+    expect(
+      () => {
+        validatePeerScoreThresholds(
+          createPeerScoreThresholds({
+            opportunisticGraftThreshold: -1
+          })
+        )
+      },
+      'opportunisticGraftThreshold must be >= 0'
+    ).to.throw()
+  })
+  it('should not throw on valid PeerScoreThresholds', () => {
+    expect(() => {
+      validatePeerScoreThresholds(
+        createPeerScoreThresholds({
+          gossipThreshold: -1,
+          publishThreshold: -2,
+          graylistThreshold: -3,
+          acceptPXThreshold: 1,
+          opportunisticGraftThreshold: 2
+        })
+      )
+    }
+    ).to.not.throw()
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/peer-score.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/peer-score.spec.ts
new file mode 100644
index 0000000..2234ff9
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/peer-score.spec.ts
@@ -0,0 +1,755 @@
+import { generateKeyPair } from '@libp2p/crypto/keys'
+import { defaultLogger } from '@libp2p/logger'
+import { peerIdFromPrivateKey } from '@libp2p/peer-id'
+import { expect } from 'aegir/chai'
+import delay from 'delay'
+import sinon from 'sinon'
+import { ScorePenalty } from '../src/metrics.js'
+import { PeerScore, createPeerScoreParams, createTopicScoreParams } from '../src/score/index.js'
+import { RejectReason } from '../src/types.js'
+import { getMsgIdStr, makeTestMessage } from './utils/index.js'
+import type { PeerScoreParams, TopicScoreParams } from '../src/score/peer-score-params.js'
+import type { PeerStats } from '../src/score/peer-stats.js'
+
+/** Placeholder for some ScorePenalty value, only used for metrics */
+const scorePenaltyAny = ScorePenalty.BrokenPromise
+
+describe('PeerScore', () => {
+  const logger = defaultLogger()
+
+  it('should score based on time in mesh', async () => {
+    // Create parameters with reasonable default values
+    const mytopic = 'mytopic'
+    const params = createPeerScoreParams({
+      topicScoreCap: 1000
+    })
+    const tparams = (params.topics[mytopic] = createTopicScoreParams({
+      topicWeight: 0.5,
+      timeInMeshWeight: 1,
+      timeInMeshQuantum: 1,
+      timeInMeshCap: 3600
+    }))
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    // Peer score should start at 0
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    ps.addPeer(peerA)
+
+    let aScore = ps.score(peerA)
+    expect(aScore, 'expected score to start at zero').to.equal(0)
+
+    // The time in mesh depends on how long the peer has been grafted
+    ps.graft(peerA, mytopic)
+    const elapsed = tparams.timeInMeshQuantum * 100
+    await delay(elapsed + 10)
+
+    ps.refreshScores()
+    aScore = ps.score(peerA)
+    expect(aScore).to.be.gte(((tparams.topicWeight * tparams.timeInMeshWeight) / tparams.timeInMeshQuantum) * elapsed)
+  })
+
+  it('should cap time in mesh score', async () => {
+    // Create parameters with reasonable default values
+    const mytopic = 'mytopic'
+    const params = createPeerScoreParams({})
+    const tparams = (params.topics[mytopic] = createTopicScoreParams({
+      topicWeight: 0.5,
+      timeInMeshWeight: 1,
+      timeInMeshQuantum: 1,
+      timeInMeshCap: 10,
+      invalidMessageDeliveriesDecay: 0.1
+    }))
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    // Peer score should start at 0
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    ps.addPeer(peerA)
+
+    let aScore = ps.score(peerA)
+    expect(aScore, 'expected score to start at zero').to.equal(0)
+
+    // The time in mesh depends on how long the peer has been grafted
+    ps.graft(peerA, mytopic)
+    const elapsed = tparams.timeInMeshQuantum * 40
+    await delay(elapsed)
+
+    ps.refreshScores()
+    aScore = ps.score(peerA)
+    expect(aScore).to.be.gt(tparams.topicWeight * tparams.timeInMeshWeight * tparams.timeInMeshCap * 0.5)
+    expect(aScore).to.be.lt(tparams.topicWeight * tparams.timeInMeshWeight * tparams.timeInMeshCap * 1.5)
+  })
+
+  it('should score first message deliveries', async () => {
+    // Create parameters with reasonable default values
+    const mytopic = 'mytopic'
+    const params = createPeerScoreParams({
+      topicScoreCap: 1000
+    })
+    const tparams = (params.topics[mytopic] = createTopicScoreParams({
+      topicWeight: 1,
+      firstMessageDeliveriesWeight: 1,
+      firstMessageDeliveriesDecay: 0.9,
+      firstMessageDeliveriesCap: 50000,
+      timeInMeshWeight: 0
+    }))
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    // Peer score should start at 0
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    ps.addPeer(peerA)
+    ps.graft(peerA, mytopic)
+
+    // deliver a bunch of messages from peer A
+    const nMessages = 100
+    for (let i = 0; i < nMessages; i++) {
+      const msg = makeTestMessage(i, mytopic)
+      ps.validateMessage(getMsgIdStr(msg))
+      ps.deliverMessage(peerA, getMsgIdStr(msg), msg.topic)
+    }
+
+    ps.refreshScores()
+    const aScore = ps.score(peerA)
+    expect(aScore).to.be.equal(
+      tparams.topicWeight * tparams.firstMessageDeliveriesWeight * nMessages * tparams.firstMessageDeliveriesDecay
+    )
+  })
+
+  it('should cap first message deliveries score', async () => {
+    // Create parameters with reasonable default values
+    const mytopic = 'mytopic'
+    const params = createPeerScoreParams({
+      topicScoreCap: 1000
+    })
+    const tparams = (params.topics[mytopic] = createTopicScoreParams({
+      topicWeight: 1,
+      firstMessageDeliveriesWeight: 1,
+      firstMessageDeliveriesDecay: 0.9,
+      invalidMessageDeliveriesDecay: 0.9,
+      firstMessageDeliveriesCap: 50,
+      timeInMeshWeight: 0
+    }))
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    // Peer score should start at 0
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    ps.addPeer(peerA)
+
+    let aScore = ps.score(peerA)
+    expect(aScore, 'expected score to start at zero').to.equal(0)
+
+    // The time in mesh depends on how long the peer has been grafted
+    ps.graft(peerA, mytopic)
+
+    // deliver a bunch of messages from peer A
+    const nMessages = 100
+    for (let i = 0; i < nMessages; i++) {
+      const msg = makeTestMessage(i, mytopic)
+      ps.validateMessage(getMsgIdStr(msg))
+      ps.deliverMessage(peerA, getMsgIdStr(msg), msg.topic)
+    }
+
+    ps.refreshScores()
+    aScore = ps.score(peerA)
+    expect(aScore).to.be.equal(
+      tparams.topicWeight *
+        tparams.firstMessageDeliveriesWeight *
+        tparams.firstMessageDeliveriesCap *
+        tparams.firstMessageDeliveriesDecay
+    )
+  })
+
+  it('should decay first message deliveries score', async () => {
+    // Create parameters with reasonable default values
+    const mytopic = 'mytopic'
+    const params = createPeerScoreParams({
+      topicScoreCap: 1000
+    })
+    const tparams = (params.topics[mytopic] = createTopicScoreParams({
+      topicWeight: 1,
+      firstMessageDeliveriesWeight: 1,
+      firstMessageDeliveriesDecay: 0.9, // decay 10% per decay interval
+      invalidMessageDeliveriesDecay: 0.9,
+      firstMessageDeliveriesCap: 50,
+      timeInMeshWeight: 0
+    }))
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    // Peer score should start at 0
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    ps.addPeer(peerA)
+
+    let aScore = ps.score(peerA)
+    expect(aScore, 'expected score to start at zero').to.equal(0)
+
+    // The time in mesh depends on how long the peer has been grafted
+    ps.graft(peerA, mytopic)
+
+    // deliver a bunch of messages from peer A
+    const nMessages = 100
+    for (let i = 0; i < nMessages; i++) {
+      const msg = makeTestMessage(i, mytopic)
+      ps.validateMessage(getMsgIdStr(msg))
+      ps.deliverMessage(peerA, getMsgIdStr(msg), msg.topic)
+    }
+
+    ps.refreshScores()
+    aScore = ps.score(peerA)
+    let expected =
+      tparams.topicWeight *
+      tparams.firstMessageDeliveriesWeight *
+      tparams.firstMessageDeliveriesCap *
+      tparams.firstMessageDeliveriesDecay
+    expect(aScore).to.be.equal(expected)
+
+    // refreshing the scores applies the decay param
+    const decayInterals = 10
+    for (let i = 0; i < decayInterals; i++) {
+      ps.refreshScores()
+      expected *= tparams.firstMessageDeliveriesDecay
+    }
+    aScore = ps.score(peerA)
+    expect(aScore).to.be.equal(expected)
+  })
+
+  it('should score mesh message deliveries', async function () {
+    this.timeout(10000)
+    // Create parameters with reasonable default values
+    const mytopic = 'mytopic'
+    const params = createPeerScoreParams({})
+    const tparams = (params.topics[mytopic] = createTopicScoreParams({
+      topicWeight: 1,
+      meshMessageDeliveriesWeight: -1,
+      meshMessageDeliveriesActivation: 1000,
+      meshMessageDeliveriesWindow: 10,
+      meshMessageDeliveriesThreshold: 20,
+      meshMessageDeliveriesCap: 100,
+      meshMessageDeliveriesDecay: 0.9,
+      invalidMessageDeliveriesDecay: 0.9,
+      firstMessageDeliveriesWeight: 0,
+      timeInMeshWeight: 0
+    }))
+    // peer A always delivers the message first
+    // peer B delivers next (within the delivery window)
+    // peer C delivers outside the delivery window
+    // we expect peers A and B to have a score of zero, since all other param weights are zero
+    // peer C should have a negative score
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const peerB = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const peerC = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const peers = [peerA, peerB, peerC]
+    // Peer score should start at 0
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    peers.forEach((p) => {
+      ps.addPeer(p)
+      ps.graft(p, mytopic)
+    })
+
+    // assert that nobody has been penalized yet for not delivering messages before activation time
+    ps.refreshScores()
+    peers.forEach((p) => {
+      const score = ps.score(p)
+      expect(score, 'expected no mesh delivery penalty before activation time').to.equal(0)
+    })
+    // wait for the activation time to kick in
+    await delay(tparams.meshMessageDeliveriesActivation)
+
+    // deliver a bunch of messages from peers
+    const nMessages = 100
+    for (let i = 0; i < nMessages; i++) {
+      const msg = makeTestMessage(i, mytopic)
+      ps.validateMessage(getMsgIdStr(msg))
+      ps.deliverMessage(peerA, getMsgIdStr(msg), msg.topic)
+
+      ps.duplicateMessage(peerB, getMsgIdStr(msg), msg.topic)
+
+      // deliver duplicate from peer C after the window
+      await delay(tparams.meshMessageDeliveriesWindow + 5)
+      ps.duplicateMessage(peerC, getMsgIdStr(msg), msg.topic)
+    }
+    ps.refreshScores()
+    const aScore = ps.score(peerA)
+    const bScore = ps.score(peerB)
+    const cScore = ps.score(peerC)
+    expect(aScore).to.be.gte(0)
+    expect(bScore).to.be.gte(0)
+
+    // the penalty is the difference between the threshold and the actual mesh deliveries, squared.
+    // since we didn't deliver anything, this is just the value of the threshold
+    const penalty = tparams.meshMessageDeliveriesThreshold * tparams.meshMessageDeliveriesThreshold
+    const expected = tparams.topicWeight * tparams.meshMessageDeliveriesWeight * penalty
+    expect(cScore).to.be.equal(expected)
+  })
+
+  it('should decay mesh message deliveries score', async function () {
+    this.timeout(10000)
+    // Create parameters with reasonable default values
+    const mytopic = 'mytopic'
+    const params = createPeerScoreParams({})
+    const tparams = (params.topics[mytopic] = createTopicScoreParams({
+      topicWeight: 1,
+      meshMessageDeliveriesWeight: -1,
+      meshMessageDeliveriesActivation: 1000,
+      meshMessageDeliveriesWindow: 10,
+      meshMessageDeliveriesThreshold: 20,
+      meshMessageDeliveriesCap: 100,
+      meshMessageDeliveriesDecay: 0.9,
+      invalidMessageDeliveriesDecay: 0.9,
+      firstMessageDeliveriesWeight: 0,
+      timeInMeshWeight: 0
+    }))
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    // Peer score should start at 0
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    ps.addPeer(peerA)
+    ps.graft(peerA, mytopic)
+
+    // wait for the activation time to kick in
+    await delay(tparams.meshMessageDeliveriesActivation + 10)
+
+    // deliver a bunch of messages from peer A
+    const nMessages = 40
+    for (let i = 0; i < nMessages; i++) {
+      const msg = makeTestMessage(i, mytopic)
+      ps.validateMessage(getMsgIdStr(msg))
+      ps.deliverMessage(peerA, getMsgIdStr(msg), msg.topic)
+    }
+    ps.refreshScores()
+    let aScore = ps.score(peerA)
+    expect(aScore).to.be.gte(0)
+
+    // we need to refresh enough times for the decay to bring us below the threshold
+    let decayedDeliveryCount = nMessages * tparams.meshMessageDeliveriesDecay
+    for (let i = 0; i < 20; i++) {
+      ps.refreshScores()
+      decayedDeliveryCount *= tparams.meshMessageDeliveriesDecay
+    }
+    aScore = ps.score(peerA)
+    // the penalty is the difference between the threshold and the (decayed) mesh deliveries, squared.
+    const deficit = tparams.meshMessageDeliveriesThreshold - decayedDeliveryCount
+    const penalty = deficit * deficit
+    const expected = tparams.topicWeight * tparams.meshMessageDeliveriesWeight * penalty
+    expect(aScore).to.be.equal(expected)
+  })
+
+  it('should score mesh message failures', async function () {
+    this.timeout(10000)
+    // Create parameters with reasonable default values
+    const mytopic = 'mytopic'
+    const params = createPeerScoreParams({})
+    // the mesh failure penalty is applied when a peer is pruned while their
+    // mesh deliveries are under the threshold.
+    // for this test, we set the mesh delivery threshold, but set
+    // meshMessageDeliveriesWeight to zero, so the only affect on the score
+    // is from the mesh failure penalty
+    const tparams = (params.topics[mytopic] = createTopicScoreParams({
+      topicWeight: 1,
+      meshFailurePenaltyWeight: -1,
+      meshFailurePenaltyDecay: 0.9,
+
+      meshMessageDeliveriesWeight: 0,
+      meshMessageDeliveriesActivation: 1000,
+      meshMessageDeliveriesWindow: 10,
+      meshMessageDeliveriesThreshold: 20,
+      meshMessageDeliveriesCap: 100,
+      meshMessageDeliveriesDecay: 0.9,
+
+      firstMessageDeliveriesWeight: 0,
+      timeInMeshWeight: 0
+    }))
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const peerB = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const peers = [peerA, peerB]
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    peers.forEach((p) => {
+      ps.addPeer(p)
+      ps.graft(p, mytopic)
+    })
+
+    // wait for the activation time to kick in
+    await delay(tparams.meshMessageDeliveriesActivation + 10)
+
+    // deliver a bunch of messages from peer A. peer B does nothing
+    const nMessages = 100
+    for (let i = 0; i < nMessages; i++) {
+      const msg = makeTestMessage(i, mytopic)
+      ps.validateMessage(getMsgIdStr(msg))
+      ps.deliverMessage(peerA, getMsgIdStr(msg), msg.topic)
+    }
+    // peers A and B should both have zero scores, since the failure penalty hasn't been applied yet
+    ps.refreshScores()
+    let aScore = ps.score(peerA)
+    let bScore = ps.score(peerB)
+    expect(aScore).to.be.equal(0)
+    expect(bScore).to.be.equal(0)
+
+    // prune peer B to apply the penalty
+    ps.prune(peerB, mytopic)
+    ps.refreshScores()
+    aScore = ps.score(peerA)
+    bScore = ps.score(peerB)
+    expect(aScore).to.be.equal(0)
+
+    // penalty calculation is the same as for meshMessageDeliveries, but multiplied by meshFailurePenaltyWeight
+    // instead of meshMessageDeliveriesWeight
+    const penalty = tparams.meshMessageDeliveriesThreshold * tparams.meshMessageDeliveriesThreshold
+    const expected = tparams.topicWeight * tparams.meshFailurePenaltyWeight * penalty * tparams.meshFailurePenaltyDecay
+    expect(bScore).to.be.equal(expected)
+  })
+
+  it('should score invalid message deliveries', async function () {
+    // Create parameters with reasonable default values
+    const mytopic = 'mytopic'
+    const params = createPeerScoreParams({})
+    const tparams = (params.topics[mytopic] = createTopicScoreParams({
+      topicWeight: 1,
+      invalidMessageDeliveriesWeight: -1,
+      invalidMessageDeliveriesDecay: 0.9,
+      timeInMeshWeight: 0
+    }))
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    ps.addPeer(peerA)
+    ps.graft(peerA, mytopic)
+
+    // deliver a bunch of messages from peer A
+    const nMessages = 100
+    for (let i = 0; i < nMessages; i++) {
+      const msg = makeTestMessage(i, mytopic)
+      ps.rejectMessage(peerA, getMsgIdStr(msg), msg.topic, RejectReason.Reject)
+    }
+    ps.refreshScores()
+    const aScore = ps.score(peerA)
+
+    const expected =
+      tparams.topicWeight *
+      tparams.invalidMessageDeliveriesWeight *
+      (nMessages * tparams.invalidMessageDeliveriesDecay) ** 2
+    expect(aScore).to.be.equal(expected)
+  })
+
+  it('should decay invalid message deliveries score', async function () {
+    // Create parameters with reasonable default values
+    const mytopic = 'mytopic'
+    const params = createPeerScoreParams({})
+    const tparams = (params.topics[mytopic] = createTopicScoreParams({
+      topicWeight: 1,
+      invalidMessageDeliveriesWeight: -1,
+      invalidMessageDeliveriesDecay: 0.9,
+      timeInMeshWeight: 0
+    }))
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    ps.addPeer(peerA)
+    ps.graft(peerA, mytopic)
+
+    // deliver a bunch of messages from peer A
+    const nMessages = 100
+    for (let i = 0; i < nMessages; i++) {
+      const msg = makeTestMessage(i, mytopic)
+      ps.rejectMessage(peerA, getMsgIdStr(msg), msg.topic, RejectReason.Reject)
+    }
+    ps.refreshScores()
+    let aScore = ps.score(peerA)
+
+    let expected =
+      tparams.topicWeight *
+      tparams.invalidMessageDeliveriesWeight *
+      (nMessages * tparams.invalidMessageDeliveriesDecay) ** 2
+    expect(aScore).to.be.equal(expected)
+
+    // refresh scores a few times to apply decay
+    for (let i = 0; i < 10; i++) {
+      ps.refreshScores()
+      expected *= tparams.invalidMessageDeliveriesDecay ** 2
+    }
+    aScore = ps.score(peerA)
+    expect(aScore).to.be.equal(expected)
+  })
+
+  it('should score invalid/ignored messages', async function () {
+    // this test adds coverage for the dark corners of message rejection
+    const mytopic = 'mytopic'
+    const params = createPeerScoreParams({})
+    params.topics[mytopic] = createTopicScoreParams({
+      topicWeight: 1,
+      invalidMessageDeliveriesWeight: -1,
+      invalidMessageDeliveriesDecay: 0.9,
+      timeInMeshQuantum: 1000
+    })
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const peerB = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    ps.addPeer(peerA)
+    ps.addPeer(peerB)
+
+    const msg = makeTestMessage(0, mytopic)
+
+    // insert a record
+    ps.validateMessage(getMsgIdStr(msg))
+
+    // this should have no effect in the score, and subsequent duplicate messages should have no effect either
+    ps.rejectMessage(peerA, getMsgIdStr(msg), msg.topic, RejectReason.Ignore)
+    ps.duplicateMessage(peerB, getMsgIdStr(msg), msg.topic)
+
+    let aScore = ps.score(peerA)
+    let bScore = ps.score(peerB)
+    let expected = 0
+    expect(aScore).to.equal(expected)
+    expect(bScore).to.equal(expected)
+
+    // now clear the delivery record
+    let record = ps.deliveryRecords.queue.peekFront()
+
+    if (record == null) {
+      throw new Error('No record found')
+    }
+
+    record.expire = Date.now()
+
+    await delay(5)
+    ps.deliveryRecords.gc()
+
+    // insert a new record in the message deliveries
+    ps.validateMessage(getMsgIdStr(msg))
+
+    // and reject the message to make sure duplicates are also penalized
+    ps.rejectMessage(peerA, getMsgIdStr(msg), msg.topic, RejectReason.Reject)
+    ps.duplicateMessage(peerB, getMsgIdStr(msg), msg.topic)
+
+    aScore = ps.score(peerA)
+    bScore = ps.score(peerB)
+    expected = -1
+    expect(aScore).to.equal(expected)
+    expect(bScore).to.equal(expected)
+
+    // now clear the delivery record again
+    record = ps.deliveryRecords.queue.peekFront()
+
+    if (record == null) {
+      throw new Error('No record found')
+    }
+
+    record.expire = Date.now()
+
+    await delay(5)
+    ps.deliveryRecords.gc()
+
+    // insert a new record in the message deliveries
+    ps.validateMessage(getMsgIdStr(msg))
+
+    // and reject the message after a duplicate has arrived
+    ps.duplicateMessage(peerB, getMsgIdStr(msg), msg.topic)
+    ps.rejectMessage(peerA, getMsgIdStr(msg), msg.topic, RejectReason.Reject)
+
+    aScore = ps.score(peerA)
+    bScore = ps.score(peerB)
+    expected = -4
+    expect(aScore).to.equal(expected)
+    expect(bScore).to.equal(expected)
+  })
+
+  it('should score w/ application score', async function () {
+    const mytopic = 'mytopic'
+    let appScoreValue = 0
+    const params = createPeerScoreParams({
+      appSpecificScore: () => appScoreValue,
+      appSpecificWeight: 0.5
+    })
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    ps.addPeer(peerA)
+    ps.graft(peerA, mytopic)
+
+    for (let i = -100; i < 100; i++) {
+      appScoreValue = i
+      ps.refreshScores()
+      const aScore = ps.score(peerA)
+      const expected = i * params.appSpecificWeight
+      expect(aScore).to.equal(expected)
+    }
+  })
+
+  it('should score w/ IP colocation', async function () {
+    const mytopic = 'mytopic'
+    const params = createPeerScoreParams({
+      IPColocationFactorThreshold: 1,
+      IPColocationFactorWeight: -1
+    })
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const peerB = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const peerC = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const peerD = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const peers = [peerA, peerB, peerC, peerD]
+
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    peers.forEach((p) => {
+      ps.addPeer(p)
+      ps.graft(p, mytopic)
+    })
+
+    const setIPsForPeer = (p: string, ips: string[]): void => {
+      for (const ip of ips) {
+        ps.addIP(p, ip)
+      }
+    }
+    // peerA should have no penalty, but B, C, and D should be penalized for sharing an IP
+    setIPsForPeer(peerA, ['1.2.3.4'])
+    setIPsForPeer(peerB, ['2.3.4.5'])
+    setIPsForPeer(peerC, ['2.3.4.5', '3.4.5.6'])
+    setIPsForPeer(peerD, ['2.3.4.5'])
+
+    ps.refreshScores()
+    const aScore = ps.score(peerA)
+    const bScore = ps.score(peerB)
+    const cScore = ps.score(peerC)
+    const dScore = ps.score(peerD)
+
+    expect(aScore).to.equal(0)
+
+    const nShared = 3
+    const ipSurplus = nShared - params.IPColocationFactorThreshold
+    const penalty = ipSurplus ** 2
+    const expected = params.IPColocationFactorWeight * penalty
+    expect(bScore).to.equal(expected)
+    expect(cScore).to.equal(expected)
+    expect(dScore).to.equal(expected)
+  })
+
+  it('should score w/ behavior penalty', async function () {
+    const params = createPeerScoreParams({
+      behaviourPenaltyWeight: -1,
+      behaviourPenaltyDecay: 0.99
+    })
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+
+    // add penalty on a non-existent peer
+    ps.addPenalty(peerA, 1, ScorePenalty.MessageDeficit)
+    let aScore = ps.score(peerA)
+    expect(aScore).to.equal(0)
+
+    // add the peer and test penalties
+    ps.addPeer(peerA)
+
+    aScore = ps.score(peerA)
+    expect(aScore).to.equal(0)
+
+    ps.addPenalty(peerA, 1, scorePenaltyAny)
+    aScore = ps.score(peerA)
+    expect(aScore).to.equal(-1)
+
+    ps.addPenalty(peerA, 1, scorePenaltyAny)
+    aScore = ps.score(peerA)
+    expect(aScore).to.equal(-4)
+
+    ps.refreshScores()
+
+    aScore = ps.score(peerA)
+    expect(aScore).to.equal(-3.9204)
+  })
+
+  it('should handle score retention', async function () {
+    const mytopic = 'mytopic'
+    const params = createPeerScoreParams({
+      appSpecificScore: () => -1000,
+      appSpecificWeight: 1,
+      retainScore: 800
+    })
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    ps.addPeer(peerA)
+    ps.graft(peerA, mytopic)
+    // score should equal -1000 (app-specific score)
+    const expected = -1000
+    ps.refreshScores()
+    let aScore = ps.score(peerA)
+    expect(aScore).to.equal(expected)
+
+    // disconnect & wait half of the retainScoreTime
+    // should still have negative score
+    ps.removePeer(peerA)
+    const _delay = params.retainScore / 2
+    await delay(_delay)
+    ps.refreshScores()
+    aScore = ps.score(peerA)
+    expect(aScore).to.equal(expected)
+
+    // wait remaining time (plus a little slop) and the score should reset to 0
+    await delay(_delay + 5)
+    ps.refreshScores()
+    aScore = ps.score(peerA)
+    expect(aScore).to.equal(0)
+  })
+})
+
+// TODO: https://github.com/ChainSafe/js-libp2p-gossipsub/issues/238
+describe.skip('PeerScore score cache', function () {
+  const peerA = '16Uiu2HAmMkH6ZLen2tbhiuNCTZLLvrZaDgufNdT5MPjtC9Hr9YNG'
+  const logger = defaultLogger()
+  let sandbox: sinon.SinonSandbox
+  let computeStoreStub: sinon.SinonStub<[string, PeerStats, PeerScoreParams, Map<string, Set<string>>], number>
+  const params = createPeerScoreParams({
+    appSpecificScore: () => -1000,
+    appSpecificWeight: 1,
+    retainScore: 800,
+    decayInterval: 1000,
+    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
+    topics: { a: { topicWeight: 10 } as TopicScoreParams }
+  })
+  let ps2: PeerScore
+
+  beforeEach(() => {
+    sandbox = sinon.createSandbox()
+    const now = Date.now()
+    sandbox.useFakeTimers(now)
+    computeStoreStub = sinon.stub<[string, PeerStats, PeerScoreParams, Map<string, Set<string>>], number>()
+
+    ps2 = new PeerScore(params, null, logger, {
+      scoreCacheValidityMs: 10,
+      computeScore: computeStoreStub
+    })
+  })
+
+  afterEach(() => {
+    sandbox.restore()
+  })
+
+  it('should compute first time', function () {
+    computeStoreStub.returns(10)
+    ps2.addPeer(peerA)
+    expect(computeStoreStub.calledOnce).to.be.false()
+    ps2.score(peerA)
+    expect(computeStoreStub.calledOnce).to.be.true()
+    // this time peerA score is cached
+    ps2.score(peerA)
+    expect(computeStoreStub.calledOnce).to.be.true()
+  })
+
+  const testCases = [
+    { name: 'decayInterval timeout', fun: () => sandbox.clock.tick(params.decayInterval) },
+    { name: 'refreshScores', fun: () => { ps2.refreshScores() } },
+    { name: 'addPenalty', fun: () => { ps2.addPenalty(peerA, 10, scorePenaltyAny) } },
+    { name: 'graft', fun: () => { ps2.graft(peerA, 'a') } },
+    { name: 'prune', fun: () => { ps2.prune(peerA, 'a') } },
+    { name: 'markInvalidMessageDelivery', fun: () => { ps2.markInvalidMessageDelivery(peerA, 'a') } },
+    { name: 'markFirstMessageDelivery', fun: () => { ps2.markFirstMessageDelivery(peerA, 'a') } },
+    { name: 'markDuplicateMessageDelivery', fun: () => { ps2.markDuplicateMessageDelivery(peerA, 'a') } },
+    { name: 'removeIPs', fun: () => { ps2.removeIP(peerA, '127.0.0.1') } }
+  ]
+
+  for (const { name, fun } of testCases) {
+    // eslint-disable-next-line no-loop-func
+    it(`should invalidate the cache after ${name}`, function () {
+      // eslint-disable-line no-loop-func
+      computeStoreStub.returns(10)
+      ps2.addPeer(peerA)
+      ps2.score(peerA)
+      expect(computeStoreStub.calledOnce).to.be.true()
+      // the score is cached
+      ps2.score(peerA)
+      expect(computeStoreStub.calledOnce).to.be.true()
+      // invalidate the cache
+      fun()
+      // should not use the cache
+      ps2.score(peerA)
+      expect(computeStoreStub.calledTwice).to.be.true()
+    })
+  }
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/scoreMetrics.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/scoreMetrics.spec.ts
new file mode 100644
index 0000000..4c9575e
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/scoreMetrics.spec.ts
@@ -0,0 +1,50 @@
+import { generateKeyPair } from '@libp2p/crypto/keys'
+import { defaultLogger } from '@libp2p/logger'
+import { peerIdFromPrivateKey } from '@libp2p/peer-id'
+import { expect } from 'aegir/chai'
+import { ScorePenalty } from '../src/metrics.js'
+import { createPeerScoreParams, createTopicScoreParams, PeerScore } from '../src/score/index.js'
+import { computeAllPeersScoreWeights } from '../src/score/scoreMetrics.js'
+
+describe('score / scoreMetrics', () => {
+  const logger = defaultLogger()
+
+  it('computeScoreWeights', async () => {
+    // Create parameters with reasonable default values
+    const topic = 'test_topic'
+
+    const params = createPeerScoreParams({
+      topicScoreCap: 1000
+    })
+    params.topics[topic] = createTopicScoreParams({
+      topicWeight: 0.5,
+      timeInMeshWeight: 1,
+      timeInMeshQuantum: 1,
+      timeInMeshCap: 3600
+    })
+
+    // Add Map for metrics
+    const topicStrToLabel = new Map<string, string>()
+    topicStrToLabel.set(topic, topic)
+
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    // Peer score should start at 0
+    const ps = new PeerScore(params, null, logger, { scoreCacheValidityMs: 0 })
+    ps.addPeer(peerA)
+
+    // Do some actions that penalize the peer
+    const msgId = 'aaaaaaaaaaaaaaaa'
+    ps.addPenalty(peerA, 1, ScorePenalty.BrokenPromise)
+    ps.validateMessage(msgId)
+    ps.deliverMessage(peerA, msgId, topic)
+
+    const sw = computeAllPeersScoreWeights([peerA], ps.peerStats, ps.params, ps.peerIPs, topicStrToLabel)
+
+    // Ensure score is the same
+    expect(sw.score).to.deep.equal([ps.score(peerA)], 'Score from metrics and actual score not equal')
+    expect(sw.byTopic.get(topic)).to.deep.equal(
+      { p1w: [0], p2w: [1], p3w: [0], p3bw: [0], p4w: [0] },
+      'Wrong score weights by topic'
+    )
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/signature-policy.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/signature-policy.spec.ts
new file mode 100644
index 0000000..91e64ac
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/signature-policy.spec.ts
@@ -0,0 +1,213 @@
+import { stop } from '@libp2p/interface'
+import { mockNetwork } from '@libp2p/interface-compliance-tests/mocks'
+import { expect } from 'aegir/chai'
+import { pEvent } from 'p-event'
+import {
+  connectAllPubSubNodes,
+  connectPubsubNodes,
+  createComponents,
+  createComponentsArray,
+  type GossipSubAndComponents
+} from './utils/create-pubsub.js'
+
+describe('signature policy', () => {
+  describe('strict-sign', () => {
+    const numNodes = 3
+    let nodes: GossipSubAndComponents[]
+
+    beforeEach(async () => {
+      mockNetwork.reset()
+      nodes = await createComponentsArray({
+        number: numNodes,
+        connected: false,
+        init: {
+          scoreParams: {
+            IPColocationFactorThreshold: 3
+          },
+          // crucial line
+          globalSignaturePolicy: 'StrictSign'
+        }
+      })
+    })
+
+    afterEach(async () => {
+      await stop(...nodes.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+      mockNetwork.reset()
+    })
+
+    it('should publish a message', async () => {
+      const topic = 'foo'
+
+      // add subscriptions to each node
+      nodes.forEach((n) => { n.pubsub.subscribe(topic) })
+
+      // connect all nodes
+      await connectAllPubSubNodes(nodes)
+
+      // wait for subscriptions to be transmitted
+      await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change')))
+
+      // await mesh rebalancing
+      await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')))
+
+      // publish a message on the topic
+      const result = await nodes[0].pubsub.publish(topic, new Uint8Array())
+      expect(result.recipients).to.length(numNodes - 1)
+    })
+
+    it('should forward a valid message', async () => {
+      const topic = 'foo'
+
+      // add subscriptions to each node
+      nodes.forEach((n) => { n.pubsub.subscribe(topic) })
+
+      // connect in a line
+      await Promise.all(Array.from({ length: numNodes - 1 }, async (_, i) => connectPubsubNodes(nodes[i], nodes[i + 1])))
+
+      // wait for subscriptions to be transmitted
+      await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change')))
+
+      // await mesh rebalancing
+      await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')))
+
+      // publish a message on the topic
+      const result = await nodes[0].pubsub.publish(topic, new Uint8Array())
+      expect(result.recipients).to.length(1)
+
+      // the last node should get the message
+      await pEvent(nodes[nodes.length - 1].pubsub, 'gossipsub:message')
+    })
+
+    it('should not forward an strict-no-sign message', async () => {
+      const topic = 'foo'
+
+      // add a no-sign peer to nodes
+      nodes.unshift(
+        await createComponents({
+          init: {
+            globalSignaturePolicy: 'StrictNoSign'
+          }
+        })
+      )
+
+      // add subscriptions to each node
+      nodes.forEach((n) => { n.pubsub.subscribe(topic) })
+
+      // connect in a line
+      await Promise.all(Array.from({ length: numNodes - 1 }, async (_, i) => connectPubsubNodes(nodes[i], nodes[i + 1])))
+
+      // await mesh rebalancing
+      await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')))
+
+      // publish a message on the topic
+      const result = await nodes[0].pubsub.publish(topic, new Uint8Array())
+      expect(result.recipients).to.length(1)
+
+      // the last node should NOT get the message
+      try {
+        await pEvent(nodes[nodes.length - 1].pubsub, 'gossipsub:message', { timeout: 200 })
+        expect.fail('no-sign message should not be emitted from strict-sign peer')
+      } catch (e) {}
+    })
+  })
+
+  describe('strict-no-sign', () => {
+    const numNodes = 3
+    let nodes: GossipSubAndComponents[]
+
+    beforeEach(async () => {
+      mockNetwork.reset()
+      nodes = await createComponentsArray({
+        number: numNodes,
+        connected: false,
+        init: {
+          scoreParams: {
+            IPColocationFactorThreshold: 3
+          },
+          // crucial line
+          globalSignaturePolicy: 'StrictNoSign'
+        }
+      })
+    })
+
+    afterEach(async () => {
+      await stop(...nodes.reduce<any[]>((acc, curr) => acc.concat(curr.pubsub, ...Object.entries(curr.components)), []))
+      mockNetwork.reset()
+    })
+
+    it('should publish a message', async () => {
+      const topic = 'foo'
+
+      // add subscriptions to each node
+      nodes.forEach((n) => { n.pubsub.subscribe(topic) })
+
+      // connect all nodes
+      await connectAllPubSubNodes(nodes)
+
+      // wait for subscriptions to be transmitted
+      await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change')))
+
+      // await mesh rebalancing
+      await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')))
+
+      // publish a message on the topic
+      const result = await nodes[0].pubsub.publish(topic, new Uint8Array())
+      expect(result.recipients).to.length(numNodes - 1)
+    })
+
+    it('should forward a valid message', async () => {
+      const topic = 'foo'
+
+      // add subscriptions to each node
+      nodes.forEach((n) => { n.pubsub.subscribe(topic) })
+
+      // connect in a line
+      await Promise.all(Array.from({ length: numNodes - 1 }, async (_, i) => connectPubsubNodes(nodes[i], nodes[i + 1])))
+
+      // wait for subscriptions to be transmitted
+      await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'subscription-change')))
+
+      // await mesh rebalancing
+      await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')))
+
+      // publish a message on the topic
+      const result = await nodes[0].pubsub.publish(topic, new Uint8Array())
+      expect(result.recipients).to.length(1)
+
+      // the last node should get the message
+      await pEvent(nodes[nodes.length - 1].pubsub, 'gossipsub:message')
+    })
+
+    it('should not forward an strict-sign message', async () => {
+      const topic = 'foo'
+
+      // add a no-sign peer to nodes
+      nodes.unshift(
+        await createComponents({
+          init: {
+            globalSignaturePolicy: 'StrictSign'
+          }
+        })
+      )
+
+      // add subscriptions to each node
+      nodes.forEach((n) => { n.pubsub.subscribe(topic) })
+
+      // connect in a line
+      await Promise.all(Array.from({ length: numNodes - 1 }, async (_, i) => connectPubsubNodes(nodes[i], nodes[i + 1])))
+
+      // await mesh rebalancing
+      await Promise.all(nodes.map(async (n) => pEvent(n.pubsub, 'gossipsub:heartbeat')))
+
+      // publish a message on the topic
+      const result = await nodes[0].pubsub.publish(topic, new Uint8Array())
+      expect(result.recipients).to.length(1)
+
+      // the last node should NOT get the message
+      try {
+        await pEvent(nodes[nodes.length - 1].pubsub, 'gossipsub:message', { timeout: 200 })
+        expect.fail('no-sign message should not be emitted from strict-sign peer')
+      } catch (e) {}
+    })
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/time-cache.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/time-cache.spec.ts
new file mode 100644
index 0000000..632d7d2
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/time-cache.spec.ts
@@ -0,0 +1,67 @@
+import { expect } from 'aegir/chai'
+import sinon from 'sinon'
+import { SimpleTimeCache } from '../src/utils/time-cache.js'
+
+describe('SimpleTimeCache', () => {
+  const validityMs = 1000
+  const timeCache = new SimpleTimeCache<void>({ validityMs })
+  const sandbox = sinon.createSandbox()
+
+  beforeEach(() => {
+    sandbox.useFakeTimers()
+  })
+
+  afterEach(() => {
+    sandbox.restore()
+  })
+
+  it('should delete items after 1sec', () => {
+    timeCache.put('aFirst')
+    timeCache.put('bFirst')
+    timeCache.put('cFirst')
+
+    expect(timeCache.has('aFirst')).to.be.true()
+    expect(timeCache.has('bFirst')).to.be.true()
+    expect(timeCache.has('cFirst')).to.be.true()
+
+    sandbox.clock.tick(validityMs + 1)
+
+    // https://github.com/ChainSafe/js-libp2p-gossipsub/issues/232#issuecomment-1109589919
+    timeCache.prune()
+
+    timeCache.put('aSecond')
+    timeCache.put('bSecond')
+    timeCache.put('cSecond')
+
+    expect(timeCache.has('aSecond')).to.be.true()
+    expect(timeCache.has('bSecond')).to.be.true()
+    expect(timeCache.has('cSecond')).to.be.true()
+    expect(timeCache.has('aFirst')).to.be.false()
+    expect(timeCache.has('bFirst')).to.be.false()
+    expect(timeCache.has('cFirst')).to.be.false()
+  })
+
+  it('Map insertion order', () => {
+    const key1 = 'key1'
+    const key2 = 'key2'
+    const key3 = 'key3'
+
+    const map = new Map<string, number>()
+    map.set(key1, Date.now())
+    map.set(key2, Date.now())
+    map.set(key3, Date.now())
+
+    expect(Array.from(map.keys())).deep.equals([key1, key2, key3], 'Map iterator order')
+
+    // Does not change key position
+    map.set(key2, Date.now())
+
+    expect(Array.from(map.keys())).deep.equals([key1, key2, key3], 'Map iterator order after re-set')
+
+    // Changes key position
+    map.delete(key2)
+    map.set(key2, Date.now())
+
+    expect(Array.from(map.keys())).deep.equals([key1, key3, key2], 'Map iterator order after delete set')
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/tracer.spec.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/tracer.spec.ts
new file mode 100644
index 0000000..a676936
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/tracer.spec.ts
@@ -0,0 +1,65 @@
+import { generateKeyPair } from '@libp2p/crypto/keys'
+import { peerIdFromPrivateKey } from '@libp2p/peer-id'
+import { expect } from 'aegir/chai'
+import delay from 'delay'
+import * as constants from '../src/constants.js'
+import { IWantTracer } from '../src/tracer.js'
+import { messageIdToString } from '../src/utils/messageIdToString.js'
+import { makeTestMessage, getMsgId, getMsgIdStr } from './utils/index.js'
+
+describe('IWantTracer', () => {
+  it('should track broken promises', async function () {
+    // tests that unfulfilled promises are tracked correctly
+    this.timeout(6000)
+    const t = new IWantTracer(constants.GossipsubIWantFollowupTime, messageIdToString, null)
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const peerB = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+
+    const msgIds: Uint8Array[] = []
+    for (let i = 0; i < 100; i++) {
+      const m = makeTestMessage(i, 'test_topic')
+      msgIds.push(getMsgId(m))
+    }
+
+    t.addPromise(peerA, msgIds)
+    t.addPromise(peerB, msgIds)
+
+    // no broken promises yet
+    let brokenPromises = t.getBrokenPromises()
+    expect(brokenPromises.size).to.be.equal(0)
+
+    // make promises break
+    await delay(constants.GossipsubIWantFollowupTime + 10)
+
+    brokenPromises = t.getBrokenPromises()
+    expect(brokenPromises.size).to.be.equal(2)
+    expect(brokenPromises.get(peerA)).to.be.equal(1)
+    expect(brokenPromises.get(peerB)).to.be.equal(1)
+  })
+  it('should track unbroken promises', async function () {
+    // like above, but this time we deliver messages to fullfil the promises
+    this.timeout(6000)
+    const t = new IWantTracer(constants.GossipsubIWantFollowupTime, messageIdToString, null)
+    const peerA = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+    const peerB = peerIdFromPrivateKey(await generateKeyPair('Ed25519')).toString()
+
+    const msgs = []
+    const msgIds = []
+    for (let i = 0; i < 100; i++) {
+      const m = makeTestMessage(i, 'test_topic')
+      msgs.push(m)
+      msgIds.push(getMsgId(m))
+    }
+
+    t.addPromise(peerA, msgIds)
+    t.addPromise(peerB, msgIds)
+
+    msgs.forEach((msg) => { t.deliverMessage(getMsgIdStr(msg)) })
+
+    await delay(constants.GossipsubIWantFollowupTime + 10)
+
+    // there should be no broken promises
+    const brokenPromises = t.getBrokenPromises()
+    expect(brokenPromises.size).to.be.equal(0)
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/unit/set.test.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/unit/set.test.ts
new file mode 100644
index 0000000..d19c9c1
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/unit/set.test.ts
@@ -0,0 +1,46 @@
+import { expect } from 'aegir/chai'
+import { removeFirstNItemsFromSet, removeItemsFromSet } from '../../src/utils/set.js'
+
+describe('Set util', function () {
+  describe('removeItemsFromSet', function () {
+    let s: Set<number>
+    this.beforeEach(() => {
+      s = new Set([1, 2, 3, 4, 5])
+    })
+
+    const testCases: Array<{ id: string, ineed: number, fn(item: number): boolean, result: Set<number> }> = [
+      { id: 'remove even numbers - need 0', ineed: 0, fn: (item) => item % 2 === 0, result: new Set([]) },
+      { id: 'remove even numbers - need 1', ineed: 1, fn: (item) => item % 2 === 0, result: new Set([2]) },
+      { id: 'remove even numbers - need 2', ineed: 2, fn: (item) => item % 2 === 0, result: new Set([2, 4]) },
+      { id: 'remove even numbers - need 10', ineed: 2, fn: (item) => item % 2 === 0, result: new Set([2, 4]) }
+    ]
+
+    for (const { id, ineed, fn, result } of testCases) {
+      // eslint-disable-next-line no-loop-func
+      it(id, () => {
+        expect(removeItemsFromSet(s, ineed, fn)).to.deep.equal(result)
+      })
+    }
+  })
+
+  describe('removeFirstNItemsFromSet', function () {
+    let s: Set<number>
+    this.beforeEach(() => {
+      s = new Set([1, 2, 3, 4, 5])
+    })
+
+    const testCases: Array<{ id: string, ineed: number, result: Set<number> }> = [
+      { id: 'remove first 0 item', ineed: 0, result: new Set([]) },
+      { id: 'remove first 1 item', ineed: 1, result: new Set([1]) },
+      { id: 'remove first 2 item', ineed: 2, result: new Set([1, 2]) },
+      { id: 'remove first 10 item', ineed: 10, result: new Set([1, 2, 3, 4, 5]) }
+    ]
+
+    for (const { id, ineed, result } of testCases) {
+      // eslint-disable-next-line no-loop-func
+      it(id, () => {
+        expect(removeFirstNItemsFromSet(s, ineed)).to.deep.equal(result)
+      })
+    }
+  })
+})
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/utils/create-pubsub.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/utils/create-pubsub.ts
new file mode 100644
index 0000000..fc7292d
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/utils/create-pubsub.ts
@@ -0,0 +1,136 @@
+import { setMaxListeners } from 'events'
+import { generateKeyPair } from '@libp2p/crypto/keys'
+import { TypedEventEmitter, start } from '@libp2p/interface'
+import { mockRegistrar, mockConnectionManager, mockNetwork } from '@libp2p/interface-compliance-tests/mocks'
+import { defaultLogger } from '@libp2p/logger'
+import { peerIdFromPrivateKey } from '@libp2p/peer-id'
+import { PersistentPeerStore } from '@libp2p/peer-store'
+import { MemoryDatastore } from 'datastore-core'
+import { stubInterface } from 'ts-sinon'
+import { GossipSub, type GossipSubComponents, type GossipsubOpts } from '../../src/index.js'
+import type { TypedEventTarget, Libp2pEvents, PubSub } from '@libp2p/interface'
+import type { ConnectionManager } from '@libp2p/interface-internal'
+
+export interface CreateComponentsOpts {
+  init?: Partial<GossipsubOpts>
+  pubsub?: { new (opts?: any): PubSub }
+}
+
+export interface GossipSubTestComponents extends GossipSubComponents {
+  events: TypedEventTarget<Libp2pEvents>
+}
+
+export interface GossipSubAndComponents {
+  pubsub: GossipSub
+  components: GossipSubTestComponents
+}
+
+export const createComponents = async (opts: CreateComponentsOpts): Promise<GossipSubAndComponents> => {
+  const Ctor = opts.pubsub ?? GossipSub
+  const privateKey = await generateKeyPair('Ed25519')
+  const peerId = peerIdFromPrivateKey(privateKey)
+
+  const events = new TypedEventEmitter<Libp2pEvents>()
+  const logger = defaultLogger()
+
+  const components: GossipSubTestComponents = {
+    privateKey,
+    peerId,
+    registrar: mockRegistrar(),
+    connectionManager: stubInterface<ConnectionManager>(),
+    peerStore: new PersistentPeerStore({
+      peerId,
+      datastore: new MemoryDatastore(),
+      events,
+      logger
+    }),
+    events,
+    logger
+  }
+  components.connectionManager = mockConnectionManager(components)
+
+  const pubsub = new Ctor(components, opts.init) as GossipSub
+
+  await start(...Object.entries(components), pubsub)
+
+  mockNetwork.addNode(components)
+
+  try {
+    // not available everywhere
+    setMaxListeners(Infinity, pubsub)
+  } catch {}
+
+  return { pubsub, components }
+}
+
+export const createComponentsArray = async (
+  opts: CreateComponentsOpts & { number: number, connected?: boolean } = { number: 1, connected: true }
+): Promise<GossipSubAndComponents[]> => {
+  const output = await Promise.all(
+    Array.from({ length: opts.number }).map(async (_, i) =>
+      createComponents({ ...opts, init: { ...opts.init, debugName: `libp2p:gossipsub:${i}` } })
+    )
+  )
+
+  if (opts.connected ?? false) {
+    await connectAllPubSubNodes(output)
+  }
+
+  return output
+}
+
+export const connectPubsubNodes = async (a: GossipSubAndComponents, b: GossipSubAndComponents): Promise<void> => {
+  const multicodecs = new Set<string>([...a.pubsub.multicodecs, ...b.pubsub.multicodecs])
+
+  const connection = await a.components.connectionManager.openConnection(b.components.peerId)
+
+  for (const multicodec of multicodecs) {
+    for (const topology of a.components.registrar.getTopologies(multicodec)) {
+      topology.onConnect?.(b.components.peerId, connection)
+    }
+  }
+}
+
+export const connectAllPubSubNodes = async (components: GossipSubAndComponents[]): Promise<void> => {
+  for (let i = 0; i < components.length; i++) {
+    for (let j = i + 1; j < components.length; j++) {
+      await connectPubsubNodes(components[i], components[j])
+    }
+  }
+}
+
+/**
+ * Connect some gossipsub nodes to others, ensure each has num peers
+ *
+ * @param {GossipSubAndComponents[]} gss
+ * @param {number} num - number of peers to connect
+ */
+export async function connectSome (gss: GossipSubAndComponents[], num: number): Promise<void> {
+  for (let i = 0; i < gss.length; i++) {
+    let count = 0
+    // merely do a Math.random() and check for duplicate may take a lot of time to run a test
+    // so we make an array of candidate peers
+    // initially, don't populate i as a candidate to connect: candidatePeers[i] = i + 1
+    const candidatePeers = Array.from({ length: gss.length - 1 }, (_, j) => (j >= i ? j + 1 : j))
+    while (count < num) {
+      const n = Math.floor(Math.random() * candidatePeers.length)
+      const peer = candidatePeers[n]
+      await connectPubsubNodes(gss[i], gss[peer])
+      // after connecting to a peer, update candidatePeers so that we don't connect to it again
+      for (let j = n; j < candidatePeers.length - 1; j++) {
+        candidatePeers[j] = candidatePeers[j + 1]
+      }
+      // remove the last item
+      candidatePeers.splice(candidatePeers.length - 1, 1)
+      count++
+    }
+  }
+}
+
+export async function sparseConnect (gss: GossipSubAndComponents[]): Promise<void> {
+  await connectSome(gss, 3)
+}
+
+export async function denseConnect (gss: GossipSubAndComponents[]): Promise<void> {
+  await connectSome(gss, Math.min(gss.length - 1, 10))
+}
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/utils/events.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/utils/events.ts
new file mode 100644
index 0000000..56a6753
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/utils/events.ts
@@ -0,0 +1,84 @@
+import { expect } from 'aegir/chai'
+import pWaitFor from 'p-wait-for'
+import type { GossipSubAndComponents } from './create-pubsub.js'
+import type { GossipsubEvents } from '../../src/index.js'
+import type { TypedEventTarget, SubscriptionChangeData } from '@libp2p/interface'
+
+export const checkReceivedSubscription = async (
+  node: GossipSubAndComponents,
+  peerIdStr: string,
+  topic: string,
+  peerIdx: number,
+  timeout = 1000
+): Promise<void> =>
+  new Promise<void>((resolve, reject) => {
+    const event = 'subscription-change'
+    const t = setTimeout(
+      () => { reject(new Error(`Not received subscriptions of psub ${peerIdx}, topic ${topic}`)) },
+      timeout
+    )
+    const cb = (evt: CustomEvent<SubscriptionChangeData>): void => {
+      const { peerId, subscriptions } = evt.detail
+
+      // console.log('@@@ in test received subscriptions from peer id', peerId.toString())
+      if (peerId.toString() === peerIdStr && subscriptions[0].topic === topic && subscriptions[0].subscribe) {
+        clearTimeout(t)
+        node.pubsub.removeEventListener(event, cb)
+        if (
+          Array.from(node.pubsub.getSubscribers(topic))
+            .map((p) => p.toString())
+            .includes(peerIdStr)
+        ) {
+          resolve()
+        } else {
+          reject(Error('topics should include the peerId'))
+        }
+      }
+    }
+    node.pubsub.addEventListener(event, cb)
+  })
+
+export const checkReceivedSubscriptions = async (
+  node: GossipSubAndComponents,
+  peerIdStrs: string[],
+  topic: string,
+  timeout = 5000
+): Promise<void> => {
+  const recvPeerIdStrs = peerIdStrs.filter((peerIdStr) => peerIdStr !== node.components.peerId.toString())
+  const promises = recvPeerIdStrs.map(
+    async (peerIdStr, idx) => checkReceivedSubscription(node, peerIdStr, topic, idx, timeout)
+  )
+  await Promise.all(promises)
+  for (const str of recvPeerIdStrs) {
+    expect(Array.from(node.pubsub.getSubscribers(topic)).map((p) => p.toString())).to.include(str)
+  }
+  await pWaitFor(() => {
+    return recvPeerIdStrs.every((peerIdStr) => {
+      return (node.pubsub).streamsOutbound.has(peerIdStr)
+    })
+  })
+}
+
+export const awaitEvents = async <Events extends Record<string, any> = GossipsubEvents>(
+  emitter: TypedEventTarget<Events>,
+  event: keyof Events,
+  number: number,
+  timeout = 30000
+): Promise<void> => {
+  return new Promise<void>((resolve, reject) => {
+    let counter = 0
+    const t = setTimeout(() => {
+      emitter.removeEventListener(event, cb)
+      reject(new Error(`${counter} of ${number} '${String(event)}' events received after ${timeout}ms`))
+    }, timeout)
+    const cb = (): void => {
+      counter++
+      if (counter >= number) {
+        clearTimeout(t)
+        emitter.removeEventListener(event, cb)
+        resolve()
+      }
+    }
+    emitter.addEventListener(event, cb)
+  })
+}
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/utils/index.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/utils/index.ts
new file mode 100644
index 0000000..47f7ab2
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/utils/index.ts
@@ -0,0 +1,26 @@
+import { generateKeyPair } from '@libp2p/crypto/keys'
+import { peerIdFromPrivateKey } from '@libp2p/peer-id'
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'
+import type { RPC } from '../../src/message/rpc.js'
+import type { TopicStr } from '../../src/types.js'
+import type { PeerId } from '@libp2p/interface'
+
+export * from './msgId.js'
+
+export const createPeerId = async (): Promise<PeerId> => {
+  const peerId = peerIdFromPrivateKey(await generateKeyPair('Ed25519'))
+
+  return peerId
+}
+
+let seq = 0n
+const defaultPeer = uint8ArrayFromString('12D3KooWBsYhazxNL7aeisdwttzc6DejNaM48889t5ifiS6tTrBf', 'base58btc')
+
+export function makeTestMessage (i: number, topic: TopicStr, from?: PeerId): RPC.Message {
+  return {
+    seqno: uint8ArrayFromString((seq++).toString(16).padStart(16, '0'), 'base16'),
+    data: Uint8Array.from([i]),
+    from: from?.toMultihash().bytes ?? defaultPeer,
+    topic
+  }
+}
diff --git a/node_modules/@chainsafe/libp2p-gossipsub/test/utils/msgId.ts b/node_modules/@chainsafe/libp2p-gossipsub/test/utils/msgId.ts
new file mode 100644
index 0000000..992f4a1
--- /dev/null
+++ b/node_modules/@chainsafe/libp2p-gossipsub/test/utils/msgId.ts
@@ -0,0 +1,19 @@
+import { digest } from '@chainsafe/as-sha256'
+import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'
+import { messageIdToString } from '../../src/utils/messageIdToString.js'
+import type { RPC } from '../../src/message/rpc.js'
+
+export const getMsgId = (msg: RPC.Message): Uint8Array => {
+  const from = msg.from != null ? msg.from : new Uint8Array(0)
+  const seqno = msg.seqno instanceof Uint8Array ? msg.seqno : uint8ArrayFromString(msg.seqno ?? '')
+  const result = new Uint8Array(from.length + seqno.length)
+  result.set(from, 0)
+  result.set(seqno, from.length)
+  return result
+}
+
+export const getMsgIdStr = (msg: RPC.Message): string => messageIdToString(getMsgId(msg))
+
+export const fastMsgIdFn = (msg: RPC.Message): string =>
+  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
+  msg.data != null ? messageIdToString(digest(msg.data)) : '0'
