name: Performance Test
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "**"

jobs:
  performance_test:
    name: Run performance tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ipfs/aegir/actions/cache-node-modules@master
        with:
          directories: |
            ./packages/perf/node_modules

      - name: Install playwright dependencies
        uses: ipfs/aegir/actions/cache-node-modules@master
      - run: npx playwright install-deps

      - name: Build perf
        working-directory: packages/perf
        run: (npm i && npm run build)

      - name: Run tests and capture console output
        working-directory: packages/perf
        run: |
          npm run test > test_output.txt
          echo '::set-output name=test_output::$(cat test_output.txt)'

      - name: Read previous performance data
        id: read_previous_data
        working-directory: packages/perf
        run: |
          previous_data=$(cat previousPerf.json)
          echo "::set-output name=previous_data::$previous_data"
          previous_download_bandwidth=$(echo "$previous_data" | jq -r '.previousDownloadBandwidth')
          previous_upload_bandwidth=$(echo "$previous_data" | jq -r '.previousUploadBandwidth')
          echo "::set-output name=previous_download_bandwidth::$previous_download_bandwidth"
          echo "::set-output name=previous_upload_bandwidth::$previous_upload_bandwidth"

      - name: Extract bandwidth from test output
        id: extract_bandwidth
        working-directory: packages/perf
        run: |
          test_output=$(cat test_output.txt)
          upload_bandwidth=$(echo "$test_output" | grep -o 'Upload bandwidth: [0-9]*')
          upload_bandwidth=${upload_bandwidth#*: }
          download_bandwidth=$(echo "$test_output" | grep -o 'Download bandwidth: [0-9]*')
          download_bandwidth=${download_bandwidth#*: }
          echo "::set-output name=upload_bandwidth::$upload_bandwidth"
          echo "::set-output name=download_bandwidth::$download_bandwidth"

      - name: Install bc for floating point arithmetic
        run: sudo apt-get update && sudo apt-get install -y bc

      - name: Compare bandwidths with previous data
        id: compare_bandwidths
        working-directory: packages/perf
        run: |
          current_upload_bandwidth=${{ steps.extract_bandwidth.outputs.upload_bandwidth }}
          current_download_bandwidth=${{ steps.extract_bandwidth.outputs.download_bandwidth }}
          previous_upload_bandwidth=${{ steps.read_previous_data.outputs.previous_upload_bandwidth }}
          previous_download_bandwidth=${{ steps.read_previous_data.outputs.previous_download_bandwidth }}
          if (( $(bc <<< "$current_upload_bandwidth <= 0.8 * $previous_upload_bandwidth") )) || (( $(bc <<< "$current_download_bandwidth <= 0.8 * $previous_download_bandwidth") )); then
            echo "::set-output name=bandwidth_comparison::fail"
          else
            echo "::set-output name=bandwidth_comparison::pass"
          fi

      - name: Save current performance data
        id: save_performance_data
        working-directory: packages/perf
        run: |
          current_upload_bandwidth=${{ steps.extract_bandwidth.outputs.upload_bandwidth }}
          current_download_bandwidth=${{ steps.extract_bandwidth.outputs.download_bandwidth }}
          echo "{\"previousDownloadBandwidth\": $current_download_bandwidth, \"previousUploadBandwidth\": $current_upload_bandwidth}" > previousPerf.json

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update performance data
          file_pattern: previousPerf.json
          branch: ${{ github.ref }}

      - name: Check CI job status
        run: |
          bandwidth_comparison=${{ steps.compare_bandwidths.outputs.bandwidth_comparison }}
          if [ "$bandwidth_comparison" == "fail" ]; then
            echo "Performance test failed: bandwidth descreased by more than 20%."
            exit 1
          else
            echo "Performance test passed."
          fi
